var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.8","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.295,1,3.255]],["body/controllers/AppController.html",[0,2.205,1,5.54,2,1.898,3,0.096,4,0.096,5,0.082,6,5.363,7,0.388,8,1.861,9,8.345,10,1.453,11,0.009,12,0.695,13,6.08,14,1.524,15,0.976,16,0.278,17,1.143,18,0.096,19,0.063,20,2.049,21,6.08,22,5.363,23,5.363,24,0.006,25,0.008,26,0.006]],["title/modules/AppModule.html",[27,1.295,28,3.255]],["body/modules/AppModule.html",[1,4.457,2,1.571,3,0.054,4,0.054,5,0.046,11,0.009,16,0.4,17,0.643,18,0.054,19,0.036,24,0.003,25,0.005,26,0.003,27,1.774,28,6.654,29,1.436,30,1.48,31,1.575,32,1.575,33,1.48,34,2.319,35,1.575,36,3.016,37,3.016,38,5.139,39,5.139,40,5.139,41,5.139,42,5.139,43,5.139,44,5.139,45,5.139,46,5.139,47,5.139,48,4.401,49,2.319,50,1.575,51,1.575,52,3.419,53,3.163,54,3.419,55,3.419,56,2.552,57,1.811,58,1.247,59,3.419,60,1.095,61,3.419,62,3.419,63,2.393,64,3.419,65,3.419,66,3.419,67,3.419,68,3.419,69,3.419,70,3.419,71,3.419,72,5.033,73,3.329,74,3.523,75,4.048,76,3.419,77,3.756,78,3.419,79,3.419,80,3.419,81,1.575,82,3.419,83,3.419,84,3.419]],["title/controllers/ArticleController.html",[0,1.295,85,3.255]],["body/controllers/ArticleController.html",[0,0.519,2,0.545,3,0.027,4,0.027,5,0.024,7,0.111,8,0.74,10,1.62,11,0.009,12,0.775,14,1.7,16,0.28,17,0.328,18,0.027,19,0.018,20,2.475,24,0.002,25,0.003,26,0.002,85,2.203,86,1.54,87,0.86,88,2.298,89,3.061,90,2.44,91,2.952,92,2.444,93,2.603,94,3.975,95,1.239,96,2.603,97,1.625,98,2.952,99,3.975,100,2.248,101,1.54,102,0.865,103,3.668,104,4.075,105,5.621,106,5.038,107,6.375,108,1.874,109,4.51,110,6.375,111,2.603,112,6.573,113,1.54,114,1.746,115,1.827,116,0.916,117,0.25,118,1.438,119,4.567,120,1.746,121,3.975,122,3.364,123,2.952,124,2.3,125,1.746,126,1.746,127,3.129,128,1.047,129,2.603,130,1.54,131,1.746,132,3.49,133,1.746,134,1.746,135,1.746,136,1.746,137,1.746,138,1.746,139,1.746,140,1.54,141,1.746,142,4.507,143,1.746,144,1.746,145,4.922,146,2.424,147,1.54,148,2.952,149,1.746,150,1.746,151,2.603,152,1.746,153,1.746,154,1.746,155,1.746,156,1.746,157,1.746,158,1.746,159,1.746,160,1.746,161,1.746,162,1.54,163,1.54,164,1.54,165,1.746,166,1.694,167,0.62,168,1.047,169,1.002,170,0.962,171,0.925,172,2.536,173,1.54,174,0.779,175,1.047,176,1.047,177,2.603,178,1.002,179,0.692,180,1.405,181,1.625,182,4.799,183,4.141,184,0.962,185,0.891,186,1.746,187,1.746,188,0.86,189,0.448,190,5.621,191,6.659,192,1.746,193,2.231,194,1.746,195,2.952,196,5.397,197,1.746,198,1.746,199,1.746,200,1.54,201,1.746,202,1.746,203,1.746,204,2.603,205,1.746,206,2.952,207,1.746,208,0.962,209,1.54,210,1.54,211,1.746,212,1.047,213,1.746,214,1.746,215,1.746,216,2.603,217,1.54,218,1.047,219,1.746,220,1.746,221,1.746,222,1.746,223,1.746,224,1.746,225,1.746,226,0.779,227,0.705,228,1.746,229,1.155,230,1.746,231,1.746,232,2.952,233,1.746,234,1.746,235,1.746,236,1.746,237,1.746]],["title/interfaces/ArticleData.html",[103,2.615,238,0.84]],["body/interfaces/ArticleData.html",[3,0.066,4,0.066,5,0.057,7,0.266,11,0.009,15,1.16,16,0.266,18,0.105,24,0.004,25,0.006,26,0.004,88,2.502,102,0.898,103,3.48,108,1.605,109,2.395,117,0.387,118,1.851,124,2.963,127,3.029,167,2.692,175,2.502,176,2.502,178,2.395,212,4.325,229,4.771,238,1.461,239,1.443,240,2.921,241,0.941,242,4.771,243,3.22,244,5.384,245,4.771,246,3.22,247,3.122,248,2.275,249,1.982,250,2.13,251,3.535,252,2.623,253,2.76,254,2.921]],["title/classes/ArticleEntity.html",[19,0.045,251,2.31]],["body/classes/ArticleEntity.html",[3,0.053,4,0.053,5,0.045,7,0.214,10,1.994,11,0.009,12,0.954,15,1.058,16,0.27,18,0.053,19,0.035,24,0.003,25,0.005,26,0.003,60,1.074,81,2.72,102,0.964,108,1.314,117,0.382,124,3.554,127,2.479,167,2.096,179,1.329,212,3.539,227,1.411,241,0.804,242,3.905,245,3.905,248,1.891,251,2.628,253,3.905,255,0.882,256,2.958,257,1.939,258,2.72,259,5.904,260,1.939,261,2.72,262,3.456,263,1.924,264,2.444,265,3.354,266,3.911,267,3.354,268,1.924,269,4.376,270,3.354,271,3.354,272,3.53,273,3.354,274,3.354,275,2.732,276,3.99,277,3.354,278,2.532,279,3.354,280,2.72,281,3.354,282,2.628,283,3.456,284,4.869,285,3.354,286,4.961,287,4.376,288,3.354,289,3.354,290,3.354,291,3.354,292,1.497,293,2.107,294,1.776,295,1.924,296,2.847,297,2.01,298,2.01,299,2.218,300,2.697,301,3.354,302,2.628,303,1.924,304,3.354,305,1.924,306,3.354]],["title/modules/ArticleModule.html",[27,1.295,38,3.053]],["body/modules/ArticleModule.html",[2,1.763,3,0.063,4,0.063,5,0.054,8,1.006,11,0.009,12,0.459,14,1.006,16,0.383,17,0.755,18,0.063,19,0.042,24,0.004,25,0.006,26,0.004,27,1.941,29,1.685,30,1.737,31,1.849,32,1.849,33,1.737,34,3.011,35,1.849,38,5.692,48,4.647,49,2.602,50,1.849,51,1.849,53,2.992,56,2.995,57,2.126,58,1.464,85,4.877,88,2.406,115,1.081,116,0.542,117,0.184,118,0.851,124,2.883,172,5.128,173,3.54,251,2.126,252,2.522,262,2.992,299,2.655,300,3.228,307,3.54,308,4.014,309,3.54,310,4.014,311,2.992,312,2.21,313,3.11,314,3.905,315,4.014,316,3.11,317,2.126,318,3.11,319,2.21,320,4.014,321,3.549,322,3.54,323,2.655,324,3.54,325,4.014,326,1.849,327,3.228,328,4.014,329,7.172,330,4.014,331,6.54,332,3.54,333,6.535,334,5.648,335,6.535,336,3.54,337,4.014,338,4.014,339,5.648]],["title/interfaces/ArticleRO.html",[176,2.615,238,0.84]],["body/interfaces/ArticleRO.html",[3,0.082,4,0.082,5,0.071,7,0.334,11,0.009,15,1.103,16,0.31,18,0.118,24,0.005,25,0.007,26,0.005,88,3.146,102,0.842,103,3.146,108,1.167,109,4.541,117,0.24,124,3.454,127,2.203,167,2.403,175,3.146,176,4.057,178,3.011,212,3.146,229,3.471,238,1.578,239,1.814,240,3.673,241,1.097,242,3.471,243,2.342,244,3.916,245,3.471,246,2.342,247,2.928,248,1.961,249,1.558,250,2.678,251,4.339,252,3.297,253,3.471,254,3.673]],["title/injectables/ArticleService.html",[172,2.885,340,1.175]],["body/injectables/ArticleService.html",[3,0.025,4,0.025,5,0.022,7,0.102,8,0.685,11,0.009,12,0.788,14,1.689,15,1.058,16,0.281,17,0.3,18,0.025,19,0.017,20,2.322,24,0.002,25,0.003,26,0.002,58,0.582,60,0.511,81,0.735,88,3.123,89,3.007,90,1.22,92,1.148,93,2.411,94,2.411,95,1.148,96,2.411,97,1.505,99,2.411,100,1.22,101,2.411,102,0.817,103,3.34,104,2.973,109,4.23,115,1.857,116,0.931,117,0.3,118,1.462,119,3.17,121,3.163,124,2.168,127,3.005,140,2.411,145,5.278,146,3.052,147,2.411,172,1.808,174,0.712,175,0.956,176,0.956,177,1.407,178,0.915,179,1.083,189,1.091,193,2.98,208,0.879,212,0.956,226,3.547,227,1.404,229,1.055,242,3.16,251,1.448,252,1.003,253,1.055,254,3.344,262,0.845,278,2.168,299,1.055,300,1.283,321,1.003,322,1.407,340,0.736,341,0.67,342,1.283,343,2.733,344,2.733,345,2.733,346,1.347,347,1.596,348,3.795,349,3.586,350,2.884,351,3.163,352,1.596,353,2.733,354,2.733,355,1.596,356,1.596,357,2.733,358,1.596,359,2.733,360,1.596,361,2.733,362,1.596,363,1.596,364,1.596,365,2.733,366,1.596,367,2.733,368,1.596,369,2.733,370,1.596,371,1.596,372,1.596,373,2.733,374,1.596,375,0.879,376,0.956,377,0.956,378,1.407,379,1.596,380,2.168,381,1.596,382,1.283,383,1.407,384,2.411,385,2.733,386,2.733,387,1.596,388,1.596,389,2.676,390,3.163,391,1.596,392,1.596,393,2.411,394,1.596,395,2.733,396,1.596,397,1.596,398,5.21,399,1.596,400,1.596,401,2.733,402,2.733,403,2.733,404,2.733,405,2.733,406,2.733,407,2.733,408,2.733,409,1.407,410,1.596,411,1.283,412,1.596,413,1.596,414,1.596,415,1.596,416,1.596,417,1.596,418,4.777,419,1.301,420,1.596,421,1.596,422,1.596,423,1.596,424,4.248,425,1.596,426,4.248,427,1.596,428,1.596,429,1.596,430,1.596,431,1.596,432,1.596,433,2.411,434,1.596,435,2.733,436,2.733,437,2.733,438,1.596,439,1.596,440,1.596,441,2.411,442,1.596,443,1.596,444,1.596,445,1.596,446,1.596,447,1.596,448,1.596,449,1.596,450,2.733,451,1.407,452,1.596,453,1.596,454,1.596,455,0.956,456,1.596,457,0.956,458,1.596,459,1.596,460,1.596,461,1.596,462,1.596,463,1.596,464,1.596,465,1.596]],["title/interfaces/ArticlesRO.html",[175,2.615,238,0.84]],["body/interfaces/ArticlesRO.html",[3,0.081,4,0.081,5,0.07,7,0.327,11,0.009,15,1.096,16,0.305,18,0.116,24,0.005,25,0.007,26,0.005,88,4.703,102,0.976,103,3.074,108,1.141,109,2.942,117,0.305,124,3.403,127,2.153,167,2.367,175,3.997,176,3.074,178,2.942,212,3.074,229,3.391,238,1.566,239,1.773,240,3.589,241,1.081,242,3.391,243,2.288,244,3.827,245,3.391,246,2.288,247,2.885,248,1.932,249,1.523,250,2.617,251,4.307,252,3.222,253,3.391,254,5.491]],["title/injectables/AuthMiddleware.html",[323,2.885,340,1.175]],["body/injectables/AuthMiddleware.html",[3,0.063,4,0.063,5,0.054,7,0.254,8,1.408,11,0.009,12,0.642,14,0.998,16,0.364,17,0.749,18,0.063,19,0.041,24,0.004,25,0.006,26,0.004,73,2.634,74,5.563,89,2.373,115,1.513,116,0.759,117,0.257,118,1.191,170,3.892,171,2.11,179,2.226,188,1.962,189,1.023,193,1.452,226,3.451,323,3.716,326,1.835,340,1.513,341,1.672,346,1.962,380,2.033,389,4.193,419,2.675,466,3.513,467,5.618,468,3.983,469,4.859,470,3.983,471,5.618,472,6.508,473,7.068,474,7.068,475,7.068,476,3.983,477,3.513,478,1.778,479,1.778,480,5.618,481,2.193,482,3.983,483,3.983,484,3.513,485,3.716,486,3.204,487,3.204,488,7.068,489,3.513,490,4.955,491,2.503,492,4.857,493,2.973,494,3.513,495,3.983,496,3.983,497,3.983,498,3.983,499,3.204,500,3.513,501,3.983,502,3.983,503,3.983,504,2.867,505,3.983,506,2.285,507,5.618,508,3.513,509,3.983,510,3.983,511,3.983]],["title/classes/BaseController.html",[19,0.045,512,3.508]],["body/classes/BaseController.html",[3,0.084,4,0.084,5,0.072,7,0.34,8,1.715,11,0.009,12,0.782,14,1.338,16,0.313,18,0.084,19,0.055,20,2.305,24,0.005,25,0.007,26,0.005,73,3.53,74,5.897,115,1.843,116,0.924,117,0.244,118,1.451,188,2.629,226,3.37,255,1.403,346,2.629,389,3.983,485,3.53,486,4.292,491,3.353,492,5.106,493,3.983,499,4.292,500,4.707,512,5.503,513,4.707,514,6.66,515,6.841,516,4.707,517,5.337,518,6.841,519,5.337,520,6.841,521,3.062,522,5.337,523,5.337]],["title/classes/Comment.html",[19,0.045,124,2.226]],["body/classes/Comment.html",[3,0.084,4,0.084,5,0.073,7,0.341,10,1.807,11,0.009,12,0.864,15,0.902,16,0.314,18,0.084,19,0.056,24,0.005,25,0.007,26,0.005,60,1.714,102,0.853,109,4.575,117,0.346,124,3.499,167,2.685,227,1.807,241,1.111,251,4.224,252,3.365,255,1.408,263,3.072,264,2.638,272,3.375,280,3.485,292,3.06,294,2.836,303,3.072,441,4.723,524,4.723,525,5.355,526,5.355,527,5.355]],["title/controllers/CommentController.html",[0,1.295,528,3.255]],["body/controllers/CommentController.html",[0,1.957,2,2.057,3,0.104,4,0.104,5,0.089,11,0.009,16,0.302,17,1.239,18,0.104,19,0.068,24,0.007,25,0.008,26,0.007,87,3.247,124,3.364,528,5.815,529,5.813,530,6.591]],["title/modules/CommentModule.html",[27,1.295,531,3.508]],["body/modules/CommentModule.html",[2,2.385,3,0.1,4,0.1,5,0.086,11,0.009,16,0.35,17,1.199,18,0.1,19,0.066,24,0.006,25,0.008,26,0.006,27,2.269,29,2.677,528,6.105,531,6.145,532,6.377,533,6.377]],["title/injectables/CommentService.html",[340,1.175,534,3.508]],["body/injectables/CommentService.html",[3,0.104,4,0.104,5,0.09,11,0.009,16,0.304,17,1.25,18,0.104,19,0.069,24,0.007,25,0.008,26,0.007,340,2.109,341,2.791,534,6.298,535,5.863]],["title/interfaces/CommentsRO.html",[178,2.503,238,0.84]],["body/interfaces/CommentsRO.html",[3,0.082,4,0.082,5,0.071,7,0.334,11,0.009,15,1.103,16,0.31,18,0.118,24,0.005,25,0.007,26,0.005,88,3.146,102,0.842,103,3.146,108,1.167,109,3.011,117,0.24,124,4.039,127,2.203,167,2.403,175,3.146,176,3.146,178,3.883,212,3.146,229,3.471,238,1.578,239,1.814,240,3.673,241,1.097,242,3.471,243,2.342,244,3.916,245,3.471,246,2.342,247,2.928,248,1.961,249,1.558,250,2.678,251,3.968,252,3.297,253,5.234,254,3.673]],["title/controllers/CorporationController.html",[0,1.295,63,3.053]],["body/controllers/CorporationController.html",[0,0.896,2,0.942,3,0.047,4,0.047,5,0.041,7,0.192,8,1.149,10,1.479,11,0.009,12,0.707,14,1.552,15,0.397,16,0.352,17,0.567,18,0.047,19,0.031,20,2.361,24,0.003,25,0.005,26,0.003,63,3.209,87,1.487,89,3.011,90,2.763,92,2.795,95,2.599,100,2.763,105,4.889,107,6.182,108,1.797,110,6.182,111,2.662,112,6.182,113,2.662,115,1.493,116,0.749,117,0.21,118,1.176,127,1.267,128,1.809,129,2.662,130,2.662,132,3.711,145,2.428,146,2.453,151,2.662,162,2.662,163,2.662,164,2.662,166,2.63,167,1.072,168,1.809,169,1.732,170,1.662,171,1.599,174,1.347,178,1.732,179,1.196,180,2.428,181,2.525,182,4.577,183,3.89,184,1.662,185,1.541,188,1.487,189,0.775,190,4.889,191,6.182,193,2.021,196,4.889,200,2.662,204,2.662,208,1.662,209,2.662,210,2.662,216,2.662,217,2.662,218,1.809,536,2.662,537,3.018,538,3.018,539,5.099,540,5.543,541,4.83,542,3.018,543,4.404,544,3.018,545,3.018,546,3.018,547,3.666,548,2.662,549,1.996,550,4.044,551,1.897,552,2.428,553,3.018,554,3.018,555,3.018,556,3.018,557,1.599,558,3.018,559,3.018,560,3.018,561,3.018,562,3.018,563,3.018,564,3.018,565,3.018]],["title/interfaces/CorporationData.html",[238,0.84,543,2.741]],["body/interfaces/CorporationData.html",[3,0.074,4,0.074,5,0.064,7,0.299,11,0.009,15,1.125,18,0.099,24,0.005,25,0.006,26,0.005,102,1.064,108,1.686,116,1.024,117,0.391,118,1.861,127,3.183,238,1.212,239,1.625,241,1.02,243,3.383,246,3.383,248,2.357,249,2.107,257,2.489,260,2.489,541,2.952,543,4.459,549,3.107,566,3.779,567,2.691,568,4.174]],["title/classes/CorporationEntity.html",[19,0.045,551,2.741]],["body/classes/CorporationEntity.html",[3,0.06,4,0.06,5,0.052,7,0.243,10,2.003,11,0.009,12,0.958,15,1.002,16,0.249,18,0.06,19,0.04,24,0.004,25,0.006,26,0.004,60,1.219,81,2.508,102,0.998,108,1.413,116,0.858,117,0.384,127,2.666,227,1.517,241,0.882,248,2.007,249,1.616,255,1.002,257,2.085,258,2.926,260,2.085,261,2.926,264,1.877,266,3.263,268,2.186,272,3.812,275,2.997,280,2.926,282,2.018,283,2.883,284,4.062,292,1.7,293,2.394,294,2.018,295,2.186,296,2.186,297,2.283,298,2.283,302,2.018,305,2.186,551,3.42,567,2.254,568,3.497,569,3.36,570,5.108,571,3.263,572,3.809,573,3.809,574,3.809,575,3.809,576,3.809,577,3.809,578,3.809,579,4.153,580,3.809,581,3.809,582,3.809,583,3.809,584,3.36,585,3.809,586,2.666,587,3.809]],["title/modules/CorporationModule.html",[27,1.295,39,3.053]],["body/modules/CorporationModule.html",[2,2.029,3,0.078,4,0.078,5,0.067,8,1.237,11,0.009,12,0.564,14,1.237,16,0.368,17,0.928,18,0.078,19,0.051,24,0.005,25,0.007,26,0.005,27,2.16,29,2.072,30,2.135,31,2.273,32,2.273,33,2.135,34,3.35,35,2.995,39,5.773,49,2.995,50,2.273,51,2.273,53,2.613,57,2.613,58,1.799,63,5.09,115,1.329,116,0.667,117,0.226,118,1.046,311,3.444,312,2.717,313,3.58,314,4.256,316,2.717,317,2.613,318,3.58,319,2.717,326,2.273,547,5.455,548,4.352,551,3.1,552,3.969,588,4.352,589,4.352,590,4.934,591,4.934,592,4.934,593,4.934]],["title/interfaces/CorporationRO.html",[238,0.84,549,2.885]],["body/interfaces/CorporationRO.html",[3,0.093,4,0.093,5,0.08,7,0.376,11,0.009,15,1.04,18,0.114,24,0.006,25,0.007,26,0.006,102,0.984,108,1.312,116,0.797,117,0.27,127,2.476,238,1.403,239,2.039,241,1.181,243,2.632,246,2.632,248,2.111,249,1.752,257,1.937,260,1.937,541,5.188,543,5.188,549,4.819,566,4.744,567,2.094,568,3.248]],["title/injectables/CorporationService.html",[340,1.175,547,2.885]],["body/injectables/CorporationService.html",[3,0.041,4,0.041,5,0.035,7,0.166,8,1.024,11,0.009,12,0.817,14,1.729,16,0.336,17,0.768,18,0.041,19,0.042,20,2.408,24,0.003,25,0.004,26,0.003,58,0.948,60,0.832,89,3.026,90,2.251,92,1.715,95,2.401,97,2.249,100,1.823,102,0.915,108,1.272,115,1.859,116,1.036,117,0.316,118,1.463,127,1.715,146,3.089,174,3.079,189,0.667,193,2.606,208,1.431,226,3.189,227,1.649,278,1.326,340,1.1,341,1.091,346,2.012,348,3.148,375,1.431,376,1.558,377,1.558,380,2.918,419,2.722,455,1.558,457,1.558,478,1.16,479,1.16,481,1.431,504,2.084,506,1.491,521,2.343,539,5.265,541,4.727,547,2.701,549,3.337,550,2.292,551,3.905,552,2.09,568,3.148,594,2.292,595,4.084,596,2.566,597,2.599,598,2.599,599,4.084,600,4.084,601,2.599,602,2.566,603,2.599,604,2.701,605,2.599,606,2.599,607,2.566,608,2.599,609,1.633,610,2.599,611,2.084,612,2.599,613,1.558,614,0.948,615,2.599,616,2.599,617,1.719,618,2.599,619,1.633,620,1.633,621,1.633,622,2.599,623,2.599,624,2.599,625,2.599,626,2.343,627,2.599,628,1.558,629,2.566,630,1.633,631,1.633,632,1.558,633,1.558,634,1.431,635,1.558,636,1.491,637,1.491,638,2.599,639,2.599,640,2.599,641,4.084,642,2.599,643,2.599,644,1.558,645,1.558,646,2.599,647,2.599,648,2.599,649,2.599,650,2.599,651,2.599]],["title/classes/CreateArticleDto.html",[19,0.045,104,3.053]],["body/classes/CreateArticleDto.html",[3,0.086,4,0.086,5,0.074,7,0.348,11,0.009,12,0.918,15,1.147,18,0.086,19,0.057,24,0.006,25,0.007,26,0.006,104,4.863,108,1.699,117,0.368,167,2.711,189,2.303,212,4.578,241,1.126,245,5.051,255,1.438,652,6.672,653,4.822,654,5.467,655,5.467,656,5.467,657,5.467]],["title/classes/CreateCommentDto.html",[19,0.045,122,3.255]],["body/classes/CreateCommentDto.html",[3,0.099,4,0.099,5,0.086,7,0.403,11,0.009,12,0.723,15,1,18,0.099,19,0.066,24,0.006,25,0.008,26,0.006,117,0.29,122,5.674,167,2.894,189,2.093,241,1.232,255,1.663,652,6.115,658,5.579,659,6.325]],["title/classes/CreateCorporationDto.html",[19,0.045,539,3.053]],["body/classes/CreateCorporationDto.html",[3,0.083,4,0.083,5,0.072,7,0.337,10,1.262,11,0.009,12,0.907,15,1.043,16,0.242,18,0.083,19,0.071,24,0.005,25,0.007,26,0.005,102,0.987,108,1.672,116,1.015,117,0.363,189,2.293,227,1.796,241,1.102,255,1.389,539,4.758,568,4.138,614,1.926,660,7.24,661,4.66,662,5.283,663,5.283,664,5.283,665,3.702,666,5.283]],["title/classes/CreateErrorLogDto.html",[19,0.045,667,3.508]],["body/classes/CreateErrorLogDto.html",[3,0.08,4,0.08,5,0.069,7,0.326,10,1.768,11,0.009,12,0.895,15,0.875,16,0.234,18,0.08,19,0.069,24,0.005,25,0.007,26,0.005,102,1.036,108,1.646,117,0.359,189,2.282,241,1.078,255,1.344,614,1.864,665,3.644,667,5.351,668,7.165,669,4.508,670,6.524,671,6.524,672,6.524,673,5.111,674,8.124,675,5.111,676,5.111,677,5.111,678,5.111]],["title/classes/CreateGroupDto.html",[19,0.045,679,3.053]],["body/classes/CreateGroupDto.html",[3,0.088,4,0.088,5,0.076,7,0.356,10,1.334,11,0.009,12,0.805,15,1.065,16,0.322,18,0.088,19,0.073,24,0.006,25,0.007,26,0.006,102,0.876,108,1.566,116,1.128,117,0.322,185,2.85,189,2.188,227,1.843,241,1.141,255,1.468,614,2.036,665,3.468,679,4.928,680,6.802,681,4.925,682,5.583,683,5.583,684,5.583,685,5.583,686,5.583]],["title/classes/CreateListDto.html",[19,0.045,687,3.053]],["body/classes/CreateListDto.html",[3,0.086,4,0.086,5,0.074,7,0.347,10,1.656,11,0.009,12,0.871,15,1.055,16,0.249,18,0.086,19,0.072,24,0.006,25,0.007,26,0.006,102,0.863,108,1.696,116,1.03,117,0.349,189,2.258,227,1.822,241,1.124,255,1.433,614,1.986,665,4.082,687,4.852,688,6.455,689,4.805,690,5.448,691,5.448,692,5.448]],["title/classes/CreateListEntryDto.html",[19,0.045,693,3.508]],["body/classes/CreateListEntryDto.html",[3,0.081,4,0.081,5,0.07,7,0.328,10,1.773,11,0.009,12,0.898,15,1.097,16,0.235,18,0.081,19,0.069,24,0.005,25,0.007,26,0.005,102,0.832,116,1.003,117,0.36,189,2.284,227,1.773,241,1.083,255,1.353,614,1.876,665,4.184,688,6.548,693,5.374,694,4.537,695,7.42,696,4.908,697,5.144,698,5.144,699,5.144,700,5.144]],["title/classes/CreateMenuDto.html",[19,0.045,701,3.053]],["body/classes/CreateMenuDto.html",[3,0.083,4,0.083,5,0.072,7,0.338,10,1.799,11,0.009,12,0.908,15,1.106,16,0.243,18,0.083,19,0.071,24,0.005,25,0.007,26,0.005,102,0.848,108,1.674,116,1.017,117,0.364,189,1.932,227,1.799,241,1.104,255,1.394,614,1.933,665,4.214,701,4.768,702,6.133,703,4.675,704,5.617,705,5.301,706,5.301,707,5.301,708,5.301]],["title/classes/CreateMenuEntryDto.html",[19,0.045,709,3.508]],["body/classes/CreateMenuEntryDto.html",[3,0.082,4,0.082,5,0.07,7,0.331,10,1.782,11,0.009,12,0.901,15,1.1,16,0.238,18,0.082,19,0.07,24,0.005,25,0.007,26,0.005,102,0.837,117,0.361,189,2.239,227,1.782,241,1.09,255,1.366,614,1.894,665,4.194,702,6.094,709,5.409,710,4.582,711,4.469,712,4.685,713,4.469,714,5.195,715,5.195,716,5.195,717,5.195]],["title/classes/CreateMenuEntryPointDto.html",[19,0.045,718,3.508]],["body/classes/CreateMenuEntryPointDto.html",[3,0.077,4,0.077,5,0.066,7,0.311,10,1.838,11,0.009,12,0.914,15,1.011,16,0.223,18,0.077,19,0.067,24,0.005,25,0.007,26,0.005,102,1.023,117,0.366,189,2.3,227,1.727,241,1.045,255,1.281,614,1.777,665,4.243,702,6.134,711,4.332,713,4.332,718,5.186,719,4.298,720,7.227,721,7.227,722,4.873,723,4.873,724,4.873,725,4.873,726,4.873]],["title/classes/CreateRoleAppDto.html",[19,0.045,727,3.508]],["body/classes/CreateRoleAppDto.html",[3,0.081,4,0.081,5,0.07,7,0.327,10,1.77,11,0.009,12,0.896,15,1.096,16,0.235,18,0.081,19,0.069,24,0.005,25,0.007,26,0.005,102,0.83,108,1.648,116,1.001,117,0.359,189,2.283,227,1.77,241,1.081,255,1.348,614,1.87,665,4.181,704,5.529,727,5.363,728,6.541,729,4.523,730,5.127,731,5.127,732,5.127,733,5.127,734,5.127]],["title/classes/CreateRoleDto.html",[19,0.045,735,3.053]],["body/classes/CreateRoleDto.html",[3,0.086,4,0.086,5,0.074,7,0.347,10,1.656,11,0.009,12,0.871,15,1.055,16,0.249,18,0.086,19,0.072,24,0.006,25,0.007,26,0.006,102,0.863,108,1.696,116,1.03,117,0.349,189,2.258,227,1.822,241,1.124,255,1.433,614,1.986,665,4.082,728,6.455,735,4.852,736,4.805,737,5.448,738,5.448,739,5.448]],["title/classes/CreateSiteDto.html",[19,0.045,740,3.053]],["body/classes/CreateSiteDto.html",[3,0.08,4,0.08,5,0.069,7,0.326,10,1.768,11,0.009,12,0.895,15,1.03,16,0.234,18,0.08,19,0.069,24,0.005,25,0.007,26,0.005,102,1.011,108,1.646,116,0.999,117,0.359,189,2.232,227,1.768,241,1.078,255,1.344,278,2.609,568,4.314,614,1.864,665,4.178,740,4.657,741,7.165,742,4.508,743,5.111,744,5.111,745,5.111,746,5.111]],["title/classes/CreateUserDto.html",[19,0.045,747,3.053]],["body/classes/CreateUserDto.html",[3,0.084,4,0.084,5,0.073,7,0.342,10,1.81,11,0.009,12,0.866,15,1.11,16,0.246,18,0.084,19,0.071,24,0.005,25,0.007,26,0.005,117,0.347,189,2.253,241,1.114,255,1.413,557,4.012,614,1.959,665,4.227,747,4.81,748,7.042,749,4.01,750,5.303,751,3.866,752,4.739,753,5.373,754,4.739]],["title/injectables/DatabaseConfig.html",[77,3.255,340,1.175]],["body/injectables/DatabaseConfig.html",[3,0.088,4,0.088,5,0.076,7,0.357,8,1.769,11,0.009,12,0.806,14,1.404,16,0.354,17,1.053,18,0.088,19,0.058,20,1.888,24,0.006,25,0.007,26,0.006,58,2.043,73,3.706,74,5.972,77,5.266,115,1.509,116,0.757,117,0.256,118,1.188,188,2.76,326,2.582,340,1.901,341,2.353,346,2.76,516,4.942,755,4.942,756,8.108,757,5.603,758,5.603,759,7.056,760,5.603]],["title/classes/ErrorLogEntity.html",[19,0.045,761,3.508]],["body/classes/ErrorLogEntity.html",[3,0.066,4,0.066,5,0.057,7,0.267,10,1.994,11,0.009,12,0.953,15,1.033,16,0.192,18,0.066,19,0.043,24,0.004,25,0.006,26,0.004,60,1.34,81,3.328,102,1.023,108,1.487,117,0.382,227,1.597,241,0.943,248,2.093,255,1.1,257,2.194,258,3.079,260,2.194,261,3.079,272,3.81,275,3.202,280,3.079,282,3.08,283,3.54,292,1.868,302,2.216,670,5.895,671,5.895,672,5.895,761,4.677,762,3.691,763,4.185,764,4.185,765,4.185,766,5.809,767,4.185,768,5.815,769,4.185,770,4.185,771,4.185,772,4.185,773,4.185,774,4.185,775,4.185]],["title/controllers/ErrorlogController.html",[0,1.295,776,3.508]],["body/controllers/ErrorlogController.html",[0,1.957,2,2.057,3,0.104,4,0.104,5,0.089,11,0.009,16,0.302,17,1.239,18,0.104,19,0.068,24,0.007,25,0.008,26,0.007,87,3.247,776,6.267,777,5.813,778,6.591,779,6.591]],["title/modules/ErrorlogModule.html",[27,1.295,40,3.053]],["body/modules/ErrorlogModule.html",[3,0.092,4,0.092,5,0.08,11,0.009,16,0.333,17,1.105,18,0.092,19,0.061,24,0.006,25,0.007,26,0.006,27,2.344,29,2.467,30,2.543,31,2.707,32,2.707,33,2.543,34,3.636,35,2.707,40,6.043,49,3.349,50,2.707,51,2.707,780,5.183,781,5.183,782,6.043,783,5.876,784,5.876]],["title/injectables/ErrorlogService.html",[340,1.175,782,3.053]],["body/injectables/ErrorlogService.html",[3,0.104,4,0.104,5,0.09,11,0.009,16,0.304,17,1.25,18,0.104,19,0.069,24,0.007,25,0.008,26,0.007,340,2.109,341,2.791,782,5.481,785,5.863]],["title/classes/FollowsEntity.html",[19,0.045,321,2.741]],["body/classes/FollowsEntity.html",[3,0.088,4,0.088,5,0.076,7,0.356,10,1.843,11,0.009,12,0.881,16,0.256,18,0.088,19,0.058,24,0.006,25,0.007,26,0.006,60,1.787,102,1.061,117,0.353,227,1.843,241,1.141,255,1.468,272,3.726,280,3.553,292,2.492,321,4.424,411,6.203,786,4.925,787,6.802,788,5.583,789,5.583,790,5.583,791,5.583]],["title/controllers/GroupController.html",[0,1.295,792,3.255]],["body/controllers/GroupController.html",[0,1.011,2,1.063,3,0.053,4,0.053,5,0.046,7,0.217,8,1.257,10,1.674,11,0.009,12,0.801,14,1.756,16,0.37,17,0.64,18,0.053,19,0.035,20,2.361,24,0.003,25,0.005,26,0.003,87,1.677,89,3.102,90,2.239,92,2.501,95,2.76,100,2.239,102,0.912,115,1.771,116,0.888,117,0.273,118,1.394,128,2.041,132,3.007,146,2.604,166,1.953,167,1.209,168,2.041,169,1.953,170,1.875,171,1.803,174,1.519,179,1.349,181,2.762,182,2.139,183,2.139,184,1.875,185,1.738,188,1.677,189,0.874,193,2.397,218,2.041,227,1.571,478,1.519,479,1.519,611,1.738,679,5.732,792,3.744,793,3.003,794,2.383,795,3.744,796,3.405,797,3.405,798,3.405,799,5.131,800,5.016,801,3.405,802,3.405,803,3.405,804,2.541,805,5.016,806,3.405,807,5.016,808,3.405,809,2.252,810,3.94,811,3.003,812,2.252,813,3.003,814,2.139,815,2.738,816,2.252,817,2.878,818,2.252,819,3.405,820,3.405,821,3.405,822,5.016,823,3.405,824,2.541,825,3.405,826,2.383,827,3.405,828,3.405,829,2.252,830,3.405,831,3.405,832,3.405,833,3.405]],["title/interfaces/GroupData.html",[238,0.84,799,3.053]],["body/interfaces/GroupData.html",[3,0.079,4,0.079,5,0.068,7,0.319,11,0.009,15,1.088,18,0.103,24,0.005,25,0.007,26,0.005,102,1.03,108,1.728,116,1.049,117,0.386,118,1.853,238,1.263,239,1.728,241,1.063,243,3.466,246,3.466,248,2.398,249,2.173,257,2.55,260,2.55,567,2.758,794,3.498,799,5.121,812,3.305,834,4.019]],["title/classes/GroupEntity.html",[19,0.045,814,2.741]],["body/classes/GroupEntity.html",[3,0.064,4,0.064,5,0.055,7,0.26,10,1.982,11,0.009,12,0.948,15,0.939,16,0.261,18,0.064,19,0.042,24,0.004,25,0.006,26,0.004,60,1.305,81,2.631,102,0.97,108,1.466,116,0.89,117,0.38,227,1.575,241,0.925,248,2.069,249,1.696,255,1.072,257,2.164,258,3.036,260,2.164,261,3.036,263,2.339,264,2.008,272,3.791,275,3.144,276,3.279,280,3.036,282,2.159,283,3.024,284,4.261,292,1.819,294,2.159,302,2.159,303,2.339,567,2.34,571,3.423,696,2.696,814,3.588,835,3.595,836,4.28,837,4.076,838,4.076,839,4.076,840,4.076,841,4.076,842,4.076,843,3.932,844,4.076,845,4.076,846,4.076,847,3.279,848,4.076,849,4.076]],["title/modules/GroupModule.html",[27,1.295,41,3.053]],["body/modules/GroupModule.html",[2,2.029,3,0.078,4,0.078,5,0.067,8,1.237,11,0.009,12,0.564,14,1.237,16,0.368,17,0.928,18,0.078,19,0.051,24,0.005,25,0.007,26,0.005,27,2.16,29,2.072,30,2.135,31,2.273,32,2.273,33,2.135,34,3.35,35,2.995,41,5.773,49,2.995,50,2.273,51,2.273,53,2.613,57,2.613,58,1.799,115,1.329,116,0.667,117,0.226,118,1.046,311,3.444,312,2.717,313,3.58,314,4.256,316,2.717,317,2.613,318,3.58,319,2.717,326,2.273,792,5.427,810,5.455,811,4.352,814,3.1,815,3.969,850,4.352,851,4.352,852,4.934,853,4.934,854,4.934,855,4.934]],["title/interfaces/GroupRO.html",[238,0.84,812,2.885]],["body/interfaces/GroupRO.html",[3,0.094,4,0.094,5,0.081,7,0.382,11,0.009,15,0.967,18,0.116,24,0.006,25,0.007,26,0.006,102,0.915,108,1.332,116,0.809,117,0.274,238,1.417,239,2.07,241,1.192,243,2.672,246,2.672,248,2.131,249,1.778,257,1.966,260,1.966,567,2.126,794,5.81,799,5.81,812,4.864,834,4.816]],["title/injectables/GroupService.html",[340,1.175,810,2.885]],["body/injectables/GroupService.html",[3,0.042,4,0.042,5,0.036,7,0.17,8,1.043,11,0.009,12,0.823,14,1.745,16,0.339,17,0.782,18,0.042,19,0.043,20,2.427,24,0.003,25,0.004,26,0.003,58,0.97,60,0.852,89,3.039,90,2.286,92,1.747,95,2.432,97,2.291,100,1.856,102,0.922,108,0.925,115,1.875,116,1.043,117,0.319,118,1.476,146,3.107,174,3.107,189,0.683,193,2.627,208,1.465,226,3.215,227,1.663,278,1.358,340,1.121,341,1.117,346,2.049,348,3.189,375,1.465,376,1.595,377,1.595,380,2.956,419,2.757,455,1.595,457,1.595,478,1.187,479,1.187,481,1.465,504,2.123,506,1.527,521,2.387,596,2.614,602,2.614,604,2.751,607,2.614,609,1.672,611,2.123,613,1.595,614,0.97,617,1.76,619,1.672,620,1.672,621,1.672,626,2.387,628,1.595,629,2.614,630,1.672,631,1.672,632,1.595,633,1.595,634,1.465,635,1.595,636,1.527,637,1.527,644,1.595,645,1.595,679,5.301,794,5.301,810,2.751,812,3.387,813,2.347,814,3.949,815,2.14,856,2.347,857,4.159,858,2.66,859,2.66,860,4.159,861,4.159,862,2.66,863,2.66,864,2.66,865,2.66,866,2.66,867,2.66,868,2.66,869,2.66,870,2.66,871,2.66,872,2.66,873,2.66,874,2.66,875,2.66,876,2.66,877,2.66,878,4.159,879,2.66,880,2.66,881,2.66,882,2.66,883,2.66,884,2.66]],["title/controllers/ListController.html",[0,1.295,885,3.255]],["body/controllers/ListController.html",[0,0.988,2,1.038,3,0.052,4,0.052,5,0.045,7,0.212,8,1.236,10,1.658,11,0.009,12,0.793,14,1.739,16,0.373,17,0.625,18,0.052,19,0.035,20,2.449,24,0.003,25,0.005,26,0.003,87,1.638,89,3.111,90,2.2,92,2.467,95,2.728,100,2.2,102,0.905,115,1.75,116,0.878,117,0.269,118,1.378,127,1.396,128,1.993,132,2.955,146,2.749,166,1.908,167,1.181,168,1.993,169,1.908,170,1.831,171,1.761,174,1.484,179,1.317,181,2.715,182,2.089,183,2.089,184,1.831,185,1.697,188,1.638,189,0.854,193,2.53,218,1.993,227,1.553,478,1.484,479,1.484,611,1.697,687,5.266,795,3.679,804,2.482,809,2.199,816,2.199,817,2.829,818,2.199,824,2.482,826,2.328,829,2.199,885,3.679,886,2.933,887,3.325,888,3.325,889,4.93,890,3.325,891,4.567,892,4.93,893,3.325,894,3.325,895,4.93,896,3.325,897,4.93,898,3.325,899,3.886,900,2.933,901,1.993,902,4.348,903,1.993,904,1.761,905,1.993,906,3.325,907,3.325,908,3.325,909,3.325,910,3.325,911,3.325,912,3.325,913,3.325,914,3.325,915,3.325,916,3.325,917,3.325]],["title/interfaces/ListData.html",[238,0.84,891,2.741]],["body/interfaces/ListData.html",[3,0.073,4,0.073,5,0.063,7,0.297,11,0.009,15,1.09,16,0.286,18,0.111,24,0.005,25,0.006,26,0.005,102,1.01,108,1.68,116,1.02,117,0.379,118,1.829,167,1.653,238,1.455,239,1.61,241,1.014,243,3.371,246,3.371,247,2.015,248,2.351,249,2.098,250,2.377,257,2.48,260,2.48,567,2.681,891,4.439,901,2.791,903,2.791,904,2.466,905,2.791,918,3.259,919,3.931,920,3.08,921,3.08]],["title/classes/ListEntity.html",[19,0.045,904,2.31]],["body/classes/ListEntity.html",[3,0.063,4,0.063,5,0.055,7,0.257,10,1.978,11,0.009,12,0.946,15,0.935,16,0.259,18,0.063,19,0.042,24,0.004,25,0.006,26,0.004,60,1.291,81,3.275,102,0.966,108,1.458,116,0.885,117,0.379,227,1.566,241,0.919,248,2.06,249,1.683,255,1.061,257,2.152,258,3.019,260,2.152,261,3.019,264,1.987,266,3.398,268,2.315,269,5,272,3.693,275,3.121,280,3.019,282,2.137,283,3.002,292,1.8,295,2.315,296,2.315,297,2.418,298,2.418,302,2.137,305,2.315,389,4.23,567,2.327,904,3.002,919,2.535,921,4.334,922,3.558,923,4.034,924,4.034,925,4.034,926,4.034,927,4.034,928,5.305,929,4.034,930,3.749,931,4.034,932,4.034,933,4.034,934,4.034,935,4.034,936,4.034,937,4.034]],["title/interfaces/ListEntry.html",[238,0.84,919,2.741]],["body/interfaces/ListEntry.html",[3,0.087,4,0.087,5,0.075,7,0.351,11,0.009,15,1.093,16,0.319,18,0.12,24,0.006,25,0.007,26,0.006,102,0.868,108,1.225,116,0.744,117,0.252,167,2.86,238,1.552,239,1.904,241,1.131,243,2.457,246,2.457,247,2.382,248,2.022,249,1.635,250,2.81,257,1.808,260,1.808,567,1.954,891,4.385,901,3.3,903,3.3,904,2.916,905,3.3,918,3.853,919,4.814,920,3.641,921,3.641]],["title/classes/ListEntryEntity.html",[19,0.045,928,3.255]],["body/classes/ListEntryEntity.html",[3,0.075,4,0.075,5,0.065,7,0.306,10,1.902,11,0.009,12,0.909,15,1.076,16,0.292,18,0.075,19,0.05,24,0.005,25,0.006,26,0.005,60,1.536,81,2.941,102,0.794,108,1.595,116,0.969,117,0.364,227,1.714,241,1.035,255,1.262,263,2.753,264,2.364,272,3.201,275,3.515,280,3.304,282,2.542,283,3.381,292,2.142,294,2.542,302,2.542,303,2.753,696,4.743,904,4.049,905,2.877,920,5.056,928,4.763,930,4.221,938,4.232,939,4.798,940,4.798,941,4.798,942,4.798,943,4.798,944,4.798,945,4.232]],["title/interfaces/ListEntryRO.html",[238,0.84,903,2.615]],["body/interfaces/ListEntryRO.html",[3,0.087,4,0.087,5,0.075,7,0.351,11,0.009,15,1.008,16,0.319,18,0.12,24,0.006,25,0.007,26,0.006,102,0.868,108,1.225,116,0.744,117,0.252,167,1.954,238,1.552,239,1.904,241,1.131,243,2.457,246,2.457,247,2.382,248,2.022,249,1.635,250,2.81,257,1.808,260,1.808,567,1.954,891,4.385,901,3.3,903,4.183,904,2.916,905,3.3,918,3.853,919,5.062,920,3.641,921,5.328]],["title/modules/ListModule.html",[27,1.295,42,3.053]],["body/modules/ListModule.html",[2,2.029,3,0.078,4,0.078,5,0.067,8,1.237,11,0.009,12,0.564,14,1.237,16,0.368,17,0.928,18,0.078,19,0.051,24,0.005,25,0.007,26,0.005,27,2.16,29,2.072,30,2.135,31,2.273,32,2.273,33,2.135,34,3.35,35,2.995,42,5.773,49,2.995,50,2.273,51,2.273,53,2.613,57,2.613,58,1.799,115,1.329,116,0.667,117,0.226,118,1.046,311,3.444,312,2.717,313,3.58,314,4.256,316,2.717,317,2.613,318,3.58,319,2.717,326,2.273,885,5.427,899,5.455,900,4.352,904,2.613,905,2.958,946,4.352,947,4.352,948,4.934,949,4.934,950,4.934,951,4.934]],["title/interfaces/ListRO.html",[238,0.84,901,2.615]],["body/interfaces/ListRO.html",[3,0.087,4,0.087,5,0.075,7,0.351,11,0.009,15,1.008,16,0.319,18,0.12,24,0.006,25,0.007,26,0.006,102,0.868,108,1.225,116,0.744,117,0.252,167,1.954,238,1.552,239,1.904,241,1.131,243,2.457,246,2.457,247,2.382,248,2.022,249,1.635,250,2.81,257,1.808,260,1.808,567,1.954,891,5.062,901,4.183,903,3.3,904,2.916,905,3.3,918,3.853,919,4.385,920,5.328,921,3.641]],["title/injectables/ListService.html",[340,1.175,899,2.885]],["body/injectables/ListService.html",[3,0.04,4,0.04,5,0.035,7,0.163,8,1.012,11,0.009,12,0.812,14,1.72,15,0.337,16,0.335,17,0.759,18,0.04,19,0.042,20,2.465,24,0.003,25,0.004,26,0.003,58,0.934,60,0.82,89,3.039,90,2.23,92,1.695,95,2.381,97,2.223,100,1.802,102,0.911,108,1.262,109,1.469,115,1.848,116,1.032,117,0.314,118,1.455,146,3.121,174,3.062,189,0.657,193,2.668,208,1.41,226,3.265,227,1.64,278,1.307,340,1.087,341,1.075,346,1.989,348,3.123,375,1.41,376,1.535,377,1.535,380,2.894,419,2.7,455,1.535,457,1.535,478,1.143,479,1.143,481,1.41,504,2.06,506,1.469,521,2.316,596,2.536,602,2.536,604,2.67,607,2.536,609,1.609,611,2.06,613,1.535,614,0.934,617,1.694,619,1.609,620,1.609,621,1.609,626,2.316,628,1.535,629,2.536,630,1.609,631,1.609,632,1.535,633,1.535,634,1.41,635,1.535,636,1.469,637,1.469,644,1.535,645,1.535,687,5.243,899,2.67,901,2.995,902,2.259,903,1.535,904,3.268,905,1.535,920,4.954,921,1.694,945,2.259,952,2.259,953,4.037,954,2.561,955,2.561,956,4.037,957,4.037,958,2.561,959,2.561,960,2.561,961,2.561,962,2.561,963,2.561,964,2.561,965,2.561,966,2.561,967,2.561,968,2.561,969,2.561,970,2.561,971,2.561,972,2.561,973,2.561,974,2.561,975,4.037,976,2.561,977,2.561,978,2.561,979,2.561,980,2.561,981,2.561,982,2.561,983,2.561]],["title/classes/LoginUserDto.html",[19,0.045,984,3.053]],["body/classes/LoginUserDto.html",[3,0.09,4,0.09,5,0.077,7,0.364,10,1.705,11,0.009,12,0.815,15,1.073,16,0.261,18,0.09,19,0.074,24,0.006,25,0.007,26,0.006,117,0.327,189,2.2,241,1.157,255,1.5,557,4.125,614,2.08,665,4.139,749,4.258,750,5.452,752,5.032,754,5.032,984,4.995,985,6.869]],["title/interfaces/MenuAppData.html",[238,0.84,986,2.885]],["body/interfaces/MenuAppData.html",[3,0.07,4,0.07,5,0.061,7,0.285,11,0.009,15,1.126,16,0.317,18,0.109,24,0.005,25,0.006,26,0.005,102,0.998,117,0.382,118,1.815,167,1.587,238,1.431,239,1.546,241,0.986,247,1.935,248,2.323,249,2.055,250,2.282,257,2.439,258,3.422,260,2.439,261,3.422,567,2.637,711,4.452,712,4.667,713,4.452,986,4.576,987,3.129,988,2.282,989,2.68,990,3.351,991,2.957,992,2.957,993,2.68,994,2.809,995,2.809,996,3.129]],["title/classes/MenuAppEntity.html",[19,0.045,988,2.226]],["body/classes/MenuAppEntity.html",[3,0.058,4,0.058,5,0.05,7,0.235,10,1.991,11,0.009,12,0.952,15,0.992,16,0.286,18,0.058,19,0.038,24,0.004,25,0.005,26,0.004,60,1.182,81,2.452,102,0.939,108,1.388,116,0.843,117,0.381,227,1.491,241,0.863,248,1.979,249,1.581,255,0.971,257,2.049,258,2.875,260,2.049,261,2.875,264,1.819,266,3.191,268,2.119,272,3.617,275,2.931,280,2.875,282,2.819,283,3.617,292,1.648,293,2.32,294,1.956,295,2.119,296,2.119,297,2.214,298,2.214,302,2.819,305,2.119,567,2.216,571,3.191,704,4.658,766,4.281,930,3.52,988,2.717,990,3.761,991,2.442,994,2.32,996,4.368,997,3.257,998,5.02,999,3.693,1000,3.693,1001,3.693,1002,3.693,1003,3.693,1004,3.693,1005,3.693,1006,3.693,1007,4.517,1008,3.257,1009,3.693,1010,3.693,1011,3.693,1012,3.257,1013,3.693,1014,3.693,1015,3.257]],["title/interfaces/MenuAppEntry.html",[238,0.84,992,2.885]],["body/interfaces/MenuAppEntry.html",[3,0.084,4,0.084,5,0.073,7,0.342,11,0.009,15,1.11,16,0.347,18,0.119,24,0.005,25,0.007,26,0.005,102,0.855,117,0.246,167,2.835,238,1.538,239,1.858,241,1.114,247,2.325,248,1.991,249,1.596,250,2.742,257,1.764,258,2.476,260,1.764,261,2.476,567,1.908,711,3.221,712,3.376,713,3.221,986,4.545,987,3.761,988,2.742,989,3.221,990,3.784,991,3.554,992,4.545,993,3.221,994,3.376,995,3.376,996,3.761]],["title/controllers/MenuController.html",[0,1.295,1016,3.255]],["body/controllers/MenuController.html",[0,0.977,2,1.027,3,0.052,4,0.052,5,0.045,7,0.21,8,1.226,10,1.651,11,0.009,12,0.789,14,1.732,16,0.377,17,0.619,18,0.052,19,0.034,20,2.439,24,0.003,25,0.005,26,0.003,87,1.621,89,3.106,90,2.183,92,2.452,95,2.714,100,2.183,102,0.901,115,1.741,116,0.873,117,0.267,118,1.371,127,1.382,128,1.972,132,2.932,146,2.737,166,1.888,167,1.168,168,1.972,169,1.888,170,1.812,171,1.743,174,1.469,179,1.304,181,2.694,182,2.068,183,2.068,184,1.812,185,1.679,188,1.621,189,0.845,193,2.519,218,1.972,227,1.545,478,1.469,479,1.469,611,1.679,701,5.248,809,2.176,816,2.176,817,2.807,818,2.176,826,2.303,829,2.176,988,1.679,989,1.972,990,1.812,991,2.176,993,1.972,995,2.068,1016,3.651,1017,2.902,1018,3.29,1019,4.891,1020,3.29,1021,4.891,1022,3.29,1023,7.24,1024,4.891,1025,3.29,1026,3.29,1027,3.29,1028,4.891,1029,3.29,1030,4.891,1031,3.29,1032,3.862,1033,2.902,1034,4.315,1035,3.29,1036,3.29,1037,3.29,1038,3.29,1039,3.29,1040,3.29,1041,3.29,1042,3.29,1043,3.29,1044,3.29,1045,3.29,1046,3.29,1047,3.29]],["title/classes/MenuEntryEntity.html",[19,0.045,990,2.402]],["body/classes/MenuEntryEntity.html",[3,0.052,4,0.052,5,0.045,7,0.21,10,2.006,11,0.009,12,0.959,15,1.083,16,0.268,18,0.052,19,0.034,24,0.003,25,0.005,26,0.003,60,1.055,81,2.257,102,0.902,108,1.3,117,0.384,227,1.397,241,0.794,248,1.875,249,1.455,255,0.867,257,1.919,258,2.693,260,1.919,261,2.693,263,1.892,264,2.414,266,2.937,268,1.892,272,3.514,275,2.698,280,2.693,282,3.096,283,3.838,292,1.472,293,2.072,294,1.746,295,1.892,296,1.892,297,1.977,298,1.977,302,3.096,303,1.892,305,1.892,567,2.075,571,2.937,711,3.504,712,3.673,713,3.504,766,3.941,930,4.28,988,3.303,989,1.977,990,2.698,1048,2.908,1049,5.846,1050,5.708,1051,5.846,1052,5.846,1053,3.297,1054,3.297,1055,3.297,1056,3.297,1057,3.297,1058,5.846,1059,3.297,1060,3.297,1061,3.297,1062,3.297,1063,4.53,1064,3.297,1065,3.297,1066,3.297,1067,3.297,1068,5.846,1069,3.297,1070,2.908,1071,3.297,1072,3.297,1073,2.908,1074,3.297]],["title/interfaces/MenuEntryRO.html",[238,0.84,995,2.741]],["body/interfaces/MenuEntryRO.html",[3,0.084,4,0.084,5,0.073,7,0.342,11,0.009,15,1.05,16,0.347,18,0.119,24,0.005,25,0.007,26,0.005,102,0.855,117,0.246,167,1.908,238,1.538,239,1.858,241,1.114,247,2.325,248,1.991,249,1.596,250,2.742,257,1.764,258,2.476,260,1.764,261,2.476,567,1.908,711,3.221,712,3.376,713,3.221,986,4.545,987,3.761,988,2.742,989,3.221,990,4.397,991,3.554,992,3.554,993,3.221,994,3.376,995,4.318,996,5.589]],["title/modules/MenuModule.html",[27,1.295,43,3.053]],["body/modules/MenuModule.html",[2,2.029,3,0.078,4,0.078,5,0.067,8,1.237,11,0.009,12,0.564,14,1.237,16,0.368,17,0.928,18,0.078,19,0.051,24,0.005,25,0.007,26,0.005,27,2.16,29,2.072,30,2.135,31,2.273,32,2.273,33,2.135,34,3.35,35,2.995,43,5.773,49,2.995,50,2.273,51,2.273,53,2.613,57,2.613,58,1.799,115,1.329,116,0.667,117,0.226,118,1.046,311,3.444,312,2.717,313,3.58,314,4.256,316,2.717,317,2.613,318,3.58,319,2.717,326,2.273,988,2.518,989,2.958,1016,5.427,1032,5.455,1033,4.352,1075,4.352,1076,4.352,1077,4.934,1078,4.934,1079,4.934,1080,4.934]],["title/interfaces/MenuRO.html",[238,0.84,993,2.615]],["body/interfaces/MenuRO.html",[3,0.084,4,0.084,5,0.073,7,0.342,11,0.009,15,1.05,16,0.347,18,0.119,24,0.005,25,0.007,26,0.005,102,0.855,117,0.246,167,1.908,238,1.538,239,1.858,241,1.114,247,2.325,248,1.991,249,1.596,250,2.742,257,1.764,258,2.476,260,1.764,261,2.476,567,1.908,711,3.221,712,3.376,713,3.221,986,5.281,987,3.761,988,2.742,989,3.221,990,3.784,991,3.554,992,3.554,993,4.119,994,5.017,995,3.376,996,3.761]],["title/injectables/MenuService.html",[340,1.175,1032,2.885]],["body/injectables/MenuService.html",[3,0.041,4,0.041,5,0.035,7,0.166,8,1.028,11,0.009,12,0.818,14,1.733,16,0.337,17,0.771,18,0.041,19,0.043,20,2.412,24,0.003,25,0.004,26,0.003,58,0.952,60,0.836,89,3.029,90,2.259,92,1.721,95,2.407,97,2.258,100,1.83,102,0.916,108,0.912,115,1.862,116,0.995,117,0.316,118,1.466,146,3.092,174,3.085,189,0.671,193,2.61,208,1.438,226,3.195,227,1.652,278,1.333,340,1.104,341,1.097,346,2.02,348,3.157,375,1.438,376,1.566,377,1.566,380,2.926,419,2.73,455,1.566,457,1.566,478,1.166,479,1.166,481,1.438,504,2.093,506,1.499,521,2.352,596,2.576,602,2.576,604,2.712,607,2.576,609,1.641,611,2.093,613,1.566,614,0.952,617,1.727,619,1.641,620,1.641,621,1.641,626,2.352,628,1.566,629,2.576,630,1.641,631,1.641,632,1.566,633,1.566,634,1.438,635,1.566,636,1.499,637,1.499,644,1.566,645,1.566,701,5.273,704,3.06,711,2.458,712,2.576,713,2.458,988,3.179,989,1.566,993,3.034,994,4.733,1032,2.712,1034,2.304,1081,2.304,1082,4.1,1083,2.612,1084,2.612,1085,4.1,1086,4.1,1087,2.612,1088,2.612,1089,2.612,1090,2.612,1091,2.612,1092,2.612,1093,2.612,1094,2.612,1095,2.612,1096,2.612,1097,2.612,1098,2.612,1099,2.612,1100,2.612,1101,2.612,1102,2.612,1103,2.612,1104,2.612,1105,4.1,1106,2.612,1107,2.612,1108,2.612,1109,2.612,1110,2.612,1111,2.612,1112,2.612]],["title/classes/MyLogger.html",[19,0.045,1113,3.508]],["body/classes/MyLogger.html",[3,0.068,4,0.068,5,0.058,7,0.275,8,1.488,11,0.009,12,0.877,14,1.923,15,1.174,16,0.197,17,0.811,18,0.068,19,0.045,24,0.004,25,0.006,26,0.004,115,2.067,116,1.037,117,0.351,118,1.627,255,1.134,317,4.063,326,2.735,1113,4.775,1114,3.803,1115,6.789,1116,5.936,1117,5.936,1118,5.936,1119,5.936,1120,5.936,1121,5.936,1122,4.311,1123,7.671,1124,5.936,1125,6.789,1126,4.311,1127,5.936,1128,4.311,1129,5.936,1130,4.311,1131,5.936,1132,4.311,1133,7.671]],["title/controllers/ProfileController.html",[0,1.295,1134,3.255]],["body/controllers/ProfileController.html",[0,1.171,2,1.231,3,0.062,4,0.062,5,0.053,7,0.251,8,1.398,10,1.547,11,0.009,12,0.74,14,1.622,15,1.121,16,0.353,17,0.741,18,0.062,19,0.041,20,2.18,24,0.004,25,0.006,26,0.004,87,1.943,89,3.002,92,1.656,102,0.959,115,1.744,116,0.874,117,0.296,118,1.373,119,5.251,146,3.054,166,2.262,169,2.262,170,2.171,171,2.088,179,1.562,180,3.172,181,3.072,184,2.171,185,2.013,188,1.943,189,1.012,193,2.36,557,2.954,751,4.35,1134,4.163,1135,3.478,1136,3.943,1137,4.92,1138,5.578,1139,4.92,1140,3.943,1141,5.578,1142,3.943,1143,3.943,1144,5.578,1145,3.943,1146,3.943,1147,5.578,1148,3.943,1149,4.281,1150,3.478,1151,2.608,1152,3.478,1153,3.943,1154,3.943,1155,3.943,1156,6.472,1157,3.943,1158,3.943,1159,3.943,1160,3.943,1161,3.943]],["title/interfaces/ProfileData.html",[238,0.84,1162,3.053]],["body/interfaces/ProfileData.html",[3,0.088,4,0.088,5,0.076,7,0.356,11,0.009,15,1.162,18,0.111,24,0.006,25,0.007,26,0.006,117,0.371,118,1.717,238,1.356,239,1.931,241,1.141,249,2.29,751,4.133,1151,3.693,1162,5.398,1163,4.491,1164,4.646,1165,6.513,1166,4.646,1167,4.491]],["title/modules/ProfileModule.html",[27,1.295,44,3.053]],["body/modules/ProfileModule.html",[2,1.926,3,0.072,4,0.072,5,0.062,8,1.143,11,0.009,12,0.521,14,1.143,16,0.384,17,0.858,18,0.072,19,0.047,24,0.005,25,0.006,26,0.005,27,2.076,29,1.915,30,1.974,31,2.102,32,2.102,33,1.974,34,3.221,35,2.842,44,5.87,48,4.834,49,2.842,50,2.102,51,2.102,53,3.268,56,3.404,57,2.416,58,1.663,115,1.229,116,0.616,117,0.209,118,0.967,262,2.416,299,3.017,311,3.268,312,2.512,313,3.397,314,4.124,316,3.397,317,2.416,318,3.397,319,2.512,321,3.877,323,3.017,324,4.023,326,2.102,327,3.669,331,3.669,1134,5.217,1149,5.334,1150,4.023,1168,4.023,1169,4.562,1170,4.023,1171,4.562,1172,4.562,1173,4.562,1174,4.023,1175,4.023,1176,4.023,1177,4.562,1178,4.562]],["title/interfaces/ProfileRO.html",[238,0.84,1151,2.885]],["body/interfaces/ProfileRO.html",[3,0.096,4,0.096,5,0.083,7,0.391,11,0.009,15,1.057,18,0.117,24,0.006,25,0.008,26,0.006,117,0.28,238,1.437,239,2.119,241,1.209,249,1.82,751,3.128,1151,4.933,1162,5.857,1163,4.929,1164,3.516,1165,4.929,1166,3.516,1167,6.73]],["title/injectables/ProfileService.html",[340,1.175,1149,2.885]],["body/injectables/ProfileService.html",[3,0.041,4,0.041,5,0.035,7,0.165,8,1.02,11,0.009,12,0.752,14,1.554,15,1.024,16,0.327,17,0.486,18,0.041,19,0.027,20,2.218,24,0.003,25,0.004,26,0.003,58,0.943,60,0.828,81,1.191,89,2.947,92,1.708,95,2.394,97,2.24,102,0.819,115,1.67,116,0.838,117,0.284,118,1.315,146,2.976,179,1.992,189,1.044,193,2.739,226,3.275,227,1.202,262,1.37,299,1.71,321,2.556,340,1.096,341,1.086,346,2.004,348,3.792,350,3.272,351,4.435,375,1.424,380,2.076,382,2.08,383,2.281,393,3.588,409,3.588,411,4.987,419,2.952,451,2.281,478,1.154,479,1.154,481,1.424,504,2.91,557,1.37,571,1.55,637,3.271,751,4.081,787,5.806,1137,3.588,1139,3.588,1149,2.691,1151,1.71,1152,2.281,1162,3.991,1164,2.885,1165,3.272,1166,2.885,1167,5.539,1174,2.281,1179,2.281,1180,4.068,1181,2.281,1182,2.586,1183,2.586,1184,4.068,1185,5.701,1186,2.586,1187,2.586,1188,2.586,1189,4.068,1190,5.701,1191,2.586,1192,4.068,1193,2.586,1194,5.701,1195,4.068,1196,2.586,1197,2.586,1198,2.281,1199,2.586,1200,2.281,1201,2.586,1202,2.586,1203,2.586,1204,2.586,1205,2.586,1206,2.586,1207,5.028,1208,4.068,1209,2.586,1210,2.586,1211,2.586,1212,4.068,1213,4.068,1214,2.586,1215,2.281,1216,2.586,1217,2.586,1218,4.068,1219,4.068,1220,5.701,1221,2.586,1222,2.586,1223,2.586,1224,4.068,1225,4.068,1226,4.068,1227,4.068,1228,2.586]],["title/controllers/RoleController.html",[0,1.295,1229,3.255]],["body/controllers/RoleController.html",[0,1.029,2,1.081,3,0.054,4,0.054,5,0.047,7,0.221,8,1.274,10,1.686,11,0.009,12,0.806,14,1.769,16,0.371,17,0.651,18,0.054,19,0.036,20,2.378,24,0.004,25,0.005,26,0.004,87,1.707,89,3.111,90,2.268,92,2.527,95,2.783,100,2.268,102,0.918,115,1.786,116,0.896,117,0.275,118,1.406,128,2.077,132,3.046,146,2.626,166,1.988,167,1.23,168,2.077,169,1.988,170,1.908,171,1.835,174,1.546,179,1.373,181,2.798,182,2.177,183,2.177,184,1.908,185,1.768,188,1.707,189,0.889,193,2.417,218,2.077,227,1.584,478,1.546,479,1.546,611,1.768,735,5.335,795,3.792,804,2.586,809,2.292,816,2.292,817,2.916,818,2.292,824,2.586,826,2.425,829,2.292,843,1.908,1229,3.792,1230,3.056,1231,2.586,1232,3.465,1233,5.081,1234,3.465,1235,5.163,1236,5.081,1237,3.465,1238,3.465,1239,5.081,1240,3.465,1241,5.081,1242,3.465,1243,3.98,1244,3.056,1245,2.292,1246,3.056,1247,2.586,1248,3.465,1249,3.465,1250,3.465,1251,3.465,1252,3.465,1253,3.465,1254,3.465,1255,3.465,1256,3.465]],["title/interfaces/RoleData.html",[238,0.84,1235,3.053]],["body/interfaces/RoleData.html",[3,0.079,4,0.079,5,0.068,7,0.319,11,0.009,15,1.088,18,0.103,24,0.005,25,0.007,26,0.005,102,1.03,108,1.728,116,1.049,117,0.386,118,1.853,238,1.263,239,1.728,241,1.063,243,3.466,246,3.466,248,2.398,249,2.173,257,2.55,260,2.55,567,2.758,836,2.995,1235,5.121,1245,3.305,1257,4.019]],["title/classes/RoleEntity.html",[19,0.045,843,2.402]],["body/classes/RoleEntity.html",[3,0.05,4,0.05,5,0.044,7,0.205,10,1.956,11,0.009,12,0.935,15,0.84,16,0.313,18,0.05,19,0.033,24,0.003,25,0.005,26,0.003,60,1.027,81,2.212,102,0.893,108,1.28,116,0.777,117,0.375,179,2.708,227,1.375,241,0.778,248,1.85,249,1.426,255,0.844,257,1.889,258,2.651,260,1.889,261,2.651,262,3.382,263,2.755,264,3.146,266,2.878,268,2.755,272,3.489,275,2.644,280,2.651,282,1.7,283,2.543,292,1.433,293,2.017,294,1.7,295,1.842,296,1.842,297,1.924,298,1.924,299,2.123,302,1.7,303,2.755,305,2.755,567,2.042,570,2.582,571,2.878,579,3.828,584,2.831,586,5.205,634,1.767,794,2.247,814,4.012,836,3.449,843,2.644,930,3.176,994,2.017,998,2.582,1007,4.223,1231,3.584,1258,2.831,1259,6.385,1260,5.753,1261,3.21,1262,3.21,1263,3.21,1264,3.21,1265,3.21,1266,3.21,1267,3.21,1268,3.21,1269,3.21,1270,3.21,1271,3.21,1272,3.21,1273,3.21,1274,3.21,1275,3.21,1276,4.802,1277,4.802,1278,3.21,1279,3.21,1280,3.21,1281,3.21,1282,3.21,1283,3.21,1284,3.21,1285,3.21,1286,3.21,1287,3.21,1288,3.21,1289,3.21,1290,3.21,1291,3.21]],["title/classes/RoleMenuAppEntity.html",[19,0.045,1007,2.885]],["body/classes/RoleMenuAppEntity.html",[3,0.071,4,0.071,5,0.062,7,0.29,10,1.868,11,0.009,12,0.893,16,0.342,18,0.071,19,0.047,24,0.005,25,0.006,26,0.005,60,1.456,102,0.973,117,0.358,227,1.668,241,0.998,255,1.196,263,2.61,264,3.033,268,2.61,272,3.339,280,3.216,292,2.03,293,2.858,294,2.409,295,2.61,296,2.61,297,2.727,298,2.727,303,2.61,305,2.61,836,4.484,843,4.119,988,3.818,1007,4.072,1008,4.012,1015,4.012,1050,6.157,1063,5.236,1070,4.012,1073,4.012,1247,3.394,1292,4.012,1293,6.98,1294,6.98,1295,4.548,1296,4.548,1297,4.548,1298,4.548,1299,4.548,1300,4.548,1301,4.548,1302,4.548,1303,4.548,1304,4.548]],["title/classes/RoleMenuEntryEntity.html",[19,0.045,1063,3.053]],["body/classes/RoleMenuEntryEntity.html",[3,0.073,4,0.073,5,0.063,7,0.296,10,1.803,11,0.009,12,0.862,16,0.323,18,0.073,19,0.048,24,0.005,25,0.006,26,0.005,60,1.486,81,2.876,102,0.939,116,0.844,117,0.345,241,1.012,255,1.221,263,3.582,264,3.076,272,2.072,292,2.072,294,2.459,296,4.047,303,3.582,990,4.154,998,6.067,1007,4.989,1012,4.095,1063,4.37,1305,4.095,1306,7.543,1307,7.871,1308,7.871,1309,7.543,1310,6.243,1311,4.642,1312,7.871,1313,4.642,1314,4.642,1315,4.642,1316,4.642,1317,4.642,1318,4.642,1319,4.642]],["title/modules/RoleModule.html",[27,1.295,45,3.053]],["body/modules/RoleModule.html",[2,2.029,3,0.078,4,0.078,5,0.067,8,1.237,11,0.009,12,0.564,14,1.237,16,0.368,17,0.928,18,0.078,19,0.051,24,0.005,25,0.007,26,0.005,27,2.16,29,2.072,30,2.135,31,2.273,32,2.273,33,2.135,34,3.35,35,2.995,45,5.773,49,2.995,50,2.273,51,2.273,53,2.613,57,2.613,58,1.799,115,1.329,116,0.667,117,0.226,118,1.046,311,3.444,312,2.717,313,3.58,314,4.256,316,2.717,317,2.613,318,3.58,319,2.717,326,2.273,843,2.717,1229,5.427,1243,5.455,1244,4.352,1247,3.682,1320,4.352,1321,4.352,1322,4.934,1323,4.934,1324,4.934,1325,4.934]],["title/interfaces/RoleRO.html",[238,0.84,1245,2.885]],["body/interfaces/RoleRO.html",[3,0.094,4,0.094,5,0.081,7,0.382,11,0.009,15,0.967,18,0.116,24,0.006,25,0.007,26,0.006,102,0.915,108,1.332,116,0.809,117,0.274,238,1.417,239,2.07,241,1.192,243,2.672,246,2.672,248,2.131,249,1.778,257,1.966,260,1.966,567,2.126,836,4.976,1235,5.81,1245,4.864,1257,4.816]],["title/injectables/RoleService.html",[340,1.175,1243,2.885]],["body/injectables/RoleService.html",[3,0.042,4,0.042,5,0.036,7,0.168,8,1.037,11,0.009,12,0.821,14,1.74,16,0.338,17,0.778,18,0.042,19,0.043,20,2.421,24,0.003,25,0.004,26,0.003,58,0.964,60,0.846,89,3.035,90,2.276,92,1.737,95,2.423,97,2.278,100,1.847,102,0.92,108,1.284,115,1.87,116,1.041,117,0.318,118,1.473,146,3.101,174,3.099,189,0.678,193,2.621,208,1.455,226,3.208,227,1.659,278,1.349,340,1.115,341,1.11,346,2.038,348,3.177,375,1.455,376,1.584,377,1.584,380,2.945,419,2.747,455,1.584,457,1.584,478,1.179,479,1.179,481,1.455,504,2.112,506,1.516,521,2.374,596,2.6,602,2.6,604,2.737,607,2.6,609,1.661,611,2.112,613,1.584,614,0.964,617,1.748,619,1.661,620,1.661,621,1.661,626,2.374,628,1.584,629,2.6,630,1.661,631,1.661,632,1.584,633,1.584,634,1.455,635,1.584,636,1.516,637,1.516,644,1.584,645,1.584,735,5.291,836,4.531,843,3.449,1243,2.737,1245,3.373,1246,2.331,1247,1.972,1326,2.331,1327,4.138,1328,2.643,1329,2.643,1330,4.138,1331,4.138,1332,2.643,1333,2.643,1334,2.643,1335,2.643,1336,2.643,1337,2.643,1338,2.643,1339,2.643,1340,2.643,1341,2.643,1342,2.643,1343,2.643,1344,2.643,1345,2.643,1346,2.643,1347,2.643,1348,2.643,1349,4.138,1350,2.643,1351,2.643,1352,2.643,1353,2.643,1354,2.643,1355,2.643]],["title/controllers/SiteController.html",[0,1.295,1356,3.255]],["body/controllers/SiteController.html",[0,1.029,2,1.081,3,0.054,4,0.054,5,0.047,7,0.221,8,1.274,10,1.686,11,0.009,12,0.806,14,1.769,16,0.371,17,0.651,18,0.054,19,0.036,20,2.378,24,0.004,25,0.005,26,0.004,87,1.707,89,3.111,90,2.268,92,2.527,95,2.783,100,2.268,102,0.918,115,1.786,116,0.896,117,0.275,118,1.406,128,2.077,132,3.046,146,2.626,166,1.988,167,1.23,168,2.077,169,1.988,170,1.908,171,1.835,174,1.546,179,1.373,181,2.798,182,2.177,183,2.177,184,1.908,185,1.768,188,1.707,189,0.889,193,2.417,218,2.077,227,1.584,478,1.546,479,1.546,570,2.787,579,2.077,611,1.768,740,5.335,795,3.792,804,2.586,809,2.292,816,2.292,817,2.916,818,2.292,824,2.586,826,2.425,829,2.292,1356,3.792,1357,3.056,1358,3.465,1359,5.081,1360,3.465,1361,5.163,1362,5.081,1363,3.465,1364,3.465,1365,5.081,1366,3.465,1367,5.081,1368,3.465,1369,3.98,1370,3.056,1371,2.292,1372,3.056,1373,2.787,1374,3.465,1375,3.465,1376,3.465,1377,3.465,1378,3.465,1379,3.465,1380,3.465,1381,3.465,1382,3.465]],["title/interfaces/SiteData.html",[238,0.84,1361,3.053]],["body/interfaces/SiteData.html",[3,0.072,4,0.072,5,0.062,7,0.293,11,0.009,15,1.063,16,0.211,18,0.098,24,0.005,25,0.006,26,0.005,102,1.06,108,1.672,116,1.016,117,0.39,118,1.877,238,1.195,239,1.591,241,1.006,243,3.354,246,3.354,248,2.343,249,2.085,257,2.468,260,2.468,541,4.723,543,4.723,567,2.668,568,4.139,586,3.221,1361,4.915,1371,3.044,1383,3.701,1384,4.059]],["title/classes/SiteEntity.html",[19,0.045,579,2.615]],["body/classes/SiteEntity.html",[3,0.056,4,0.056,5,0.049,7,0.228,10,2,11,0.009,12,0.956,15,0.982,16,0.281,18,0.056,19,0.037,24,0.004,25,0.005,26,0.004,60,1.147,81,3.103,102,0.982,108,1.365,116,0.829,117,0.383,127,2.576,227,1.466,241,0.844,248,1.952,249,1.547,255,0.942,257,2.014,258,2.827,260,2.014,261,2.827,263,2.056,264,2.566,266,3.122,268,2.056,272,3.695,275,3.709,280,2.827,282,1.898,283,2.758,284,3.887,292,1.599,293,2.252,294,1.898,295,2.056,296,2.056,297,2.148,298,2.148,302,1.898,303,2.056,305,2.056,541,4.232,551,4.232,567,2.178,568,3.378,571,3.122,579,3.122,836,2.148,843,3.709,847,2.882,1231,4.579,1385,3.161,1386,3.583,1387,3.583,1388,3.583,1389,3.583,1390,3.583,1391,3.583,1392,3.583,1393,3.583,1394,3.583,1395,3.583,1396,3.583,1397,3.583,1398,3.583,1399,3.583,1400,3.583,1401,3.583]],["title/modules/SiteModule.html",[27,1.295,46,3.053]],["body/modules/SiteModule.html",[2,2.029,3,0.078,4,0.078,5,0.067,8,1.237,11,0.009,12,0.564,14,1.237,16,0.368,17,0.928,18,0.078,19,0.051,24,0.005,25,0.007,26,0.005,27,2.16,29,2.072,30,2.135,31,2.273,32,2.273,33,2.135,34,3.35,35,2.995,46,5.773,49,2.995,50,2.273,51,2.273,53,2.613,57,2.613,58,1.799,115,1.329,116,0.667,117,0.226,118,1.046,311,3.444,312,2.717,313,3.58,314,4.256,316,2.717,317,2.613,318,3.58,319,2.717,326,2.273,579,2.958,1356,5.427,1369,5.455,1370,4.352,1373,3.969,1402,4.352,1403,4.352,1404,4.934,1405,4.934,1406,4.934,1407,4.934]],["title/interfaces/SiteRO.html",[238,0.84,1371,2.885]],["body/interfaces/SiteRO.html",[3,0.091,4,0.091,5,0.078,7,0.369,11,0.009,15,0.947,16,0.265,18,0.113,24,0.006,25,0.007,26,0.006,102,0.976,108,1.288,116,0.782,117,0.265,238,1.387,239,2.002,241,1.167,243,2.584,246,2.584,248,2.087,249,1.719,257,1.901,260,1.901,541,3.638,543,4.526,567,2.055,568,3.188,586,5.742,1361,5.742,1371,4.764,1383,4.656,1384,5.106]],["title/injectables/SiteService.html",[340,1.175,1369,2.885]],["body/injectables/SiteService.html",[3,0.041,4,0.041,5,0.035,7,0.166,8,1.028,11,0.009,12,0.818,14,1.733,16,0.337,17,0.771,18,0.041,19,0.043,20,2.412,24,0.003,25,0.004,26,0.003,58,0.952,60,0.836,89,3.029,90,2.259,92,1.721,95,2.407,97,2.258,100,1.83,102,0.916,108,1.275,115,1.862,116,1.038,117,0.316,118,1.466,146,3.092,174,3.085,189,0.671,193,2.61,208,1.438,226,3.195,227,1.652,278,1.333,340,1.104,341,1.097,346,2.02,348,3.157,375,1.438,376,1.566,377,1.566,380,2.926,419,2.73,455,1.566,457,1.566,478,1.166,479,1.166,481,1.438,504,2.093,506,1.499,521,2.352,568,3.157,579,3.734,586,5.273,596,2.576,602,2.576,604,2.712,607,2.576,609,1.641,611,2.093,613,1.566,614,0.952,617,1.727,619,1.641,620,1.641,621,1.641,626,2.352,628,1.566,629,2.576,630,1.641,631,1.641,632,1.566,633,1.566,634,1.438,635,1.566,636,1.499,637,1.499,644,1.566,645,1.566,740,5.273,1369,2.712,1371,3.347,1372,2.304,1373,2.101,1408,2.304,1409,4.1,1410,2.612,1411,2.612,1412,4.1,1413,4.1,1414,2.612,1415,2.612,1416,2.612,1417,2.612,1418,2.612,1419,2.612,1420,2.612,1421,2.612,1422,2.612,1423,2.612,1424,2.612,1425,2.612,1426,2.612,1427,2.612,1428,2.612,1429,2.612,1430,2.612,1431,2.612,1432,4.1,1433,2.612,1434,2.612,1435,2.612,1436,2.612,1437,2.612,1438,2.612,1439,2.612]],["title/controllers/SqldirectController.html",[0,1.295,1440,3.255]],["body/controllers/SqldirectController.html",[0,1.957,2,2.057,3,0.104,4,0.104,5,0.089,11,0.009,16,0.302,17,1.239,18,0.104,19,0.068,24,0.007,25,0.008,26,0.007,87,3.247,1440,5.815,1441,5.813,1442,6.591,1443,6.591]],["title/modules/SqldirectModule.html",[27,1.295,1444,3.255]],["body/modules/SqldirectModule.html",[2,2.223,3,0.089,4,0.089,5,0.077,11,0.009,16,0.356,17,1.069,18,0.089,19,0.059,24,0.006,25,0.007,26,0.006,27,2.309,29,2.387,30,2.46,31,2.619,32,2.619,33,2.46,34,3.582,35,2.619,49,3.281,50,2.619,51,2.619,1440,5.803,1444,6.391,1445,5.014,1446,5.014,1447,5.994,1448,5.684,1449,5.684,1450,5.684]],["title/injectables/SqldirectService.html",[340,1.175,1447,3.053]],["body/injectables/SqldirectService.html",[3,0.104,4,0.104,5,0.09,11,0.009,16,0.304,17,1.25,18,0.104,19,0.069,24,0.007,25,0.008,26,0.007,340,2.109,341,2.791,1447,5.481,1451,5.863]],["title/controllers/TagController.html",[0,1.295,1452,3.255]],["body/controllers/TagController.html",[0,1.641,2,1.724,3,0.087,4,0.087,5,0.075,7,0.352,8,1.753,10,1.32,11,0.009,12,0.631,14,1.385,16,0.369,17,1.039,18,0.087,19,0.057,20,1.861,24,0.006,25,0.007,26,0.006,87,2.721,89,2.798,95,3.387,146,2.771,181,3.851,184,3.042,185,2.82,188,2.721,189,1.418,193,2.014,1452,5.219,1453,4.873,1454,5.524,1455,5.524,1456,3.654,1457,4.443,1458,5.076,1459,4.873,1460,5.524,1461,5.524,1462,5.524]],["title/classes/TagEntity.html",[19,0.045,1456,2.885]],["body/classes/TagEntity.html",[3,0.076,4,0.076,5,0.065,7,0.307,10,1.957,11,0.009,12,0.936,15,0.841,16,0.22,18,0.076,19,0.05,24,0.005,25,0.006,26,0.005,60,1.541,102,1.019,117,0.375,227,1.716,241,1.037,248,2.218,255,1.266,257,2.358,258,3.309,260,2.358,261,3.309,272,3.835,280,3.309,282,2.549,283,3.387,292,2.148,302,2.549,390,6.335,930,4.23,1456,4.23,1463,4.245,1464,4.813,1465,4.813,1466,4.813,1467,4.813,1468,4.813,1469,4.813,1470,4.813]],["title/modules/TagModule.html",[27,1.295,47,3.053]],["body/modules/TagModule.html",[2,1.968,3,0.074,4,0.074,5,0.064,8,1.181,11,0.009,12,0.538,14,1.181,16,0.373,17,0.886,18,0.074,19,0.049,24,0.005,25,0.006,26,0.005,27,2.111,29,1.979,30,2.039,31,2.171,32,2.171,33,2.039,34,3.274,35,2.905,47,5.914,48,4.88,49,2.905,50,2.171,51,2.171,53,3.34,56,3.517,57,2.496,58,1.718,115,1.269,116,0.637,117,0.216,118,0.999,311,3.34,312,2.595,313,3.472,314,4.179,316,2.595,317,2.496,318,3.472,319,2.595,326,2.171,1452,5.304,1456,3.117,1457,3.79,1458,5.385,1459,4.156,1471,4.156,1472,4.712,1473,4.156,1474,4.712,1475,4.712,1476,4.712,1477,4.712]],["title/injectables/TagService.html",[340,1.175,1458,2.885]],["body/injectables/TagService.html",[3,0.084,4,0.084,5,0.073,7,0.342,8,1.722,11,0.009,12,0.785,14,1.347,16,0.365,17,1.01,18,0.084,19,0.056,20,1.81,24,0.005,25,0.007,26,0.005,58,1.959,60,1.72,89,2.762,95,3.352,115,1.447,116,0.726,117,0.246,118,1.14,146,2.722,189,1.379,193,1.959,340,1.851,341,2.256,346,3.385,348,4.397,375,2.959,380,2.742,1456,3.554,1457,4.322,1458,4.545,1478,4.739,1479,5.373,1480,5.373,1481,6.871,1482,5.373,1483,5.373,1484,5.373]],["title/classes/ToIntegerPipe.html",[19,0.045,1485,3.508]],["body/classes/ToIntegerPipe.html",[3,0.085,4,0.085,5,0.074,7,0.346,8,1.734,11,0.009,12,0.62,14,1.361,15,1.001,16,0.248,17,1.021,18,0.085,19,0.056,20,1.829,24,0.006,25,0.007,26,0.006,102,0.947,115,1.462,116,0.734,117,0.248,118,1.151,226,2.423,255,1.428,326,3.187,419,2.585,504,2.771,636,3.115,696,4.575,1485,5.563,1486,6.101,1487,4.788,1488,6.714,1489,6.101,1490,6.101,1491,6.123,1492,7.069,1493,5.429,1494,6.101,1495,6.917,1496,5.429,1497,5.429,1498,5.429]],["title/classes/UpdateUserDto.html",[19,0.045,1499,3.053]],["body/classes/UpdateUserDto.html",[3,0.086,4,0.086,5,0.074,7,0.348,11,0.009,12,0.918,15,1.147,18,0.086,19,0.057,24,0.006,25,0.007,26,0.006,117,0.368,189,2.303,241,1.126,255,1.438,557,4.045,749,4.08,751,3.898,1164,4.382,1166,4.382,1499,4.863,1500,7.317,1501,5.467,1502,5.467,1503,5.467,1504,5.467]],["title/controllers/UserController.html",[0,1.295,1505,3.255]],["body/controllers/UserController.html",[0,1.409,2,0.986,3,0.05,4,0.05,5,0.043,7,0.201,8,1.189,10,1.622,11,0.009,12,0.776,14,1.702,15,0.749,16,0.356,17,0.594,18,0.05,19,0.033,20,2.287,24,0.003,25,0.005,26,0.003,89,3.062,90,2.117,92,2.392,100,2.117,102,0.709,115,1.829,116,0.917,117,0.29,118,1.44,119,3.54,128,1.893,132,2.844,146,2.509,166,1.812,167,1.121,168,1.893,169,1.812,170,1.739,171,1.673,174,1.409,179,2.509,181,2.612,184,1.739,185,1.612,188,1.556,189,0.811,193,2.476,218,1.893,226,3.03,247,3.086,419,1.504,469,3.58,478,1.409,479,1.409,487,2.54,491,2.981,504,1.612,506,1.812,557,3.355,626,1.812,644,1.893,645,1.893,747,4.434,751,2.421,809,2.089,816,2.089,817,3.269,818,2.089,829,4.189,984,4.991,1164,2.722,1166,2.722,1499,4.434,1505,3.54,1506,2.786,1507,4.744,1508,4.744,1509,3.158,1510,3.158,1511,3.158,1512,4.744,1513,3.158,1514,3.158,1515,4.744,1516,3.158,1517,3.158,1518,3.158,1519,3.158,1520,3.158,1521,4.744,1522,3.158,1523,2.089,1524,2.786,1525,3.158,1526,3.158,1527,3.158,1528,3.158,1529,3.158,1530,3.158,1531,3.158,1532,3.158,1533,3.158,1534,3.158,1535,3.158,1536,3.158,1537,5.697,1538,3.158,1539,3.158]],["title/interfaces/UserData.html",[238,0.84,247,1.887]],["body/interfaces/UserData.html",[3,0.086,4,0.086,5,0.074,7,0.347,11,0.009,15,1.193,18,0.109,24,0.006,25,0.007,26,0.006,117,0.379,118,1.47,179,2.158,238,1.335,239,1.884,241,1.124,247,3.299,491,5.043,557,4.251,751,4.096,1164,4.605,1166,4.605,1523,3.603,1540,4.382]],["title/classes/UserEntity.html",[19,0.045,262,2.31]],["body/classes/UserEntity.html",[3,0.05,4,0.05,5,0.043,7,0.204,8,1.2,10,2.011,11,0.009,12,0.962,14,0.801,15,1.046,16,0.312,18,0.05,19,0.05,24,0.003,25,0.005,26,0.003,60,1.023,88,3.44,89,2.093,102,0.892,109,1.834,117,0.382,193,1.166,227,1.371,241,0.776,248,1.847,249,1.422,251,3.934,255,0.841,257,1.884,258,2.644,260,1.884,261,2.644,262,2.536,264,2.358,266,4.294,268,2.747,272,3.725,280,2.644,292,1.427,295,1.834,305,2.747,557,3.04,567,2.037,614,1.166,750,4.017,751,2.929,836,1.916,843,3.509,847,2.571,1164,3.293,1166,3.293,1231,4.283,1541,2.82,1542,5.739,1543,6.372,1544,3.197,1545,3.197,1546,3.197,1547,3.197,1548,3.197,1549,3.197,1550,3.197,1551,3.197,1552,3.197,1553,3.197,1554,3.197,1555,3.197,1556,3.197,1557,3.197,1558,3.197,1559,3.197,1560,5.739,1561,3.197,1562,4.787,1563,3.197,1564,4.787,1565,3.851,1566,3.197,1567,3.197,1568,3.197,1569,3.197,1570,3.197,1571,3.197,1572,3.197]],["title/modules/UserModule.html",[27,1.295,48,2.615]],["body/modules/UserModule.html",[2,1.933,3,0.072,4,0.072,5,0.062,8,1.15,11,0.009,12,0.524,14,1.15,16,0.37,17,0.863,18,0.072,19,0.048,24,0.005,25,0.006,26,0.005,27,2.082,29,1.927,30,1.985,31,2.114,32,2.114,33,1.985,34,3.231,35,3.231,48,4.95,49,2.854,50,2.114,51,2.114,53,2.43,57,2.43,58,1.673,115,1.236,116,0.62,117,0.21,118,0.973,179,2.454,262,2.43,311,3.281,312,2.527,313,3.411,314,4.134,316,3.411,317,2.43,318,3.411,319,2.527,323,3.035,326,2.114,327,3.69,329,4.047,331,4.982,332,4.047,336,4.047,469,5.494,487,3.69,1175,4.047,1176,4.047,1505,5.233,1573,4.047,1574,4.047,1575,4.047,1576,4.588,1577,4.588,1578,4.588,1579,4.047,1580,4.047]],["title/interfaces/UserRO.html",[238,0.84,1523,2.885]],["body/interfaces/UserRO.html",[3,0.096,4,0.096,5,0.082,7,0.388,11,0.009,15,1.125,18,0.117,24,0.006,25,0.008,26,0.006,117,0.278,179,3.306,238,1.43,239,2.103,241,1.203,247,3.611,491,3.821,557,3.221,751,3.104,1164,3.489,1166,3.489,1523,4.91,1540,4.891]],["title/injectables/UserService.html",[340,1.175,469,2.741]],["body/injectables/UserService.html",[3,0.032,4,0.032,5,0.028,7,0.131,8,0.846,11,0.009,12,0.798,14,1.7,15,0.78,16,0.335,17,0.635,18,0.032,19,0.035,20,2.411,24,0.002,25,0.003,26,0.002,58,0.748,60,0.657,73,1.357,74,4.386,89,2.961,90,1.92,92,2.094,95,2.094,97,1.86,100,1.507,102,0.738,115,1.827,116,0.916,117,0.3,118,1.438,146,2.995,174,2.797,179,2.995,189,0.527,193,2.665,208,1.13,226,3.374,227,1.317,248,0.595,262,2.919,278,1.047,311,2.279,340,0.91,341,0.862,346,1.664,348,2.746,350,2.716,375,1.13,376,1.23,377,1.23,380,2.813,382,1.651,384,1.81,419,2.984,433,2.979,455,1.23,457,1.23,469,2.122,478,0.916,479,0.916,481,1.13,485,1.357,491,2.122,492,3.211,493,1.532,504,2.196,506,1.177,521,1.938,557,3.942,596,2.122,602,2.122,607,2.122,609,1.289,611,1.724,613,1.23,614,0.748,619,1.289,620,1.289,621,1.289,626,2.861,628,1.23,629,2.122,630,1.289,631,1.289,632,2.024,633,2.024,634,1.86,635,2.024,636,1.938,637,1.938,644,1.23,645,1.23,747,3.49,750,3.49,751,3.565,984,3.49,1164,1.938,1166,1.938,1181,1.81,1198,1.81,1200,2.979,1215,2.979,1499,3.49,1523,2.846,1524,1.81,1565,2.716,1579,1.81,1581,1.651,1582,3.377,1583,3.377,1584,3.377,1585,2.052,1586,3.377,1587,2.052,1588,2.052,1589,3.377,1590,2.052,1591,2.052,1592,3.377,1593,2.052,1594,2.052,1595,2.052,1596,3.377,1597,2.052,1598,2.052,1599,1.81,1600,2.052,1601,2.052,1602,2.052,1603,2.052,1604,2.052,1605,2.052,1606,2.052,1607,2.052,1608,2.052,1609,2.052,1610,2.052,1611,2.052,1612,2.052,1613,2.052,1614,2.052,1615,2.052,1616,2.052,1617,2.052,1618,2.052,1619,2.052,1620,2.052,1621,2.052,1622,3.377,1623,2.052,1624,3.377,1625,2.052,1626,2.052,1627,2.052,1628,2.052,1629,3.377,1630,3.377,1631,2.052,1632,2.052,1633,2.052,1634,2.052,1635,2.052]],["title/injectables/ValidationPipe.html",[340,1.175,817,2.503]],["body/injectables/ValidationPipe.html",[3,0.06,4,0.06,5,0.052,7,0.244,8,1.369,11,0.009,12,0.728,14,1.596,15,0.503,16,0.318,17,0.72,18,0.06,19,0.066,20,2.339,24,0.006,25,0.006,26,0.004,89,2.322,102,0.476,115,1.715,116,0.86,117,0.25,118,1.35,193,1.396,226,3.276,249,1.891,278,1.954,287,3.376,326,1.764,340,1.471,341,1.607,380,3.896,419,2.6,478,1.708,479,1.708,481,2.108,504,2.788,613,2.295,614,1.396,626,3.653,628,2.295,632,2.295,633,2.295,634,3.007,635,2.295,636,2.196,637,2.196,696,4.856,817,3.134,1488,4.817,1489,4.817,1490,4.817,1491,5.585,1492,6.124,1494,3.376,1636,3.376,1637,5.461,1638,5.461,1639,5.461,1640,3.828,1641,5.461,1642,3.828,1643,6.943,1644,3.828,1645,3.828,1646,3.376,1647,3.828,1648,3.828,1649,3.828,1650,5.461,1651,3.828,1652,3.828,1653,3.828,1654,3.828,1655,3.828,1656,3.828,1657,3.828,1658,3.828,1659,3.828,1660,3.828,1661,3.828,1662,3.828]],["title/controllers/ViewController.html",[0,1.295,1663,3.508]],["body/controllers/ViewController.html",[0,1.957,2,2.057,3,0.104,4,0.104,5,0.089,11,0.009,16,0.302,17,1.239,18,0.104,19,0.068,24,0.007,25,0.008,26,0.007,87,3.247,1663,6.267,1664,5.813,1665,6.591,1666,6.591]],["title/modules/ViewModule.html",[27,1.295,1667,3.255]],["body/modules/ViewModule.html",[3,0.092,4,0.092,5,0.08,11,0.009,16,0.333,17,1.105,18,0.092,19,0.061,24,0.006,25,0.007,26,0.006,27,2.344,29,2.467,30,2.543,31,2.707,32,2.707,33,2.543,34,3.636,35,2.707,49,3.349,50,2.707,51,2.707,1667,6.443,1668,5.183,1669,5.183,1670,6.043,1671,5.876,1672,5.876]],["title/injectables/ViewService.html",[340,1.175,1670,3.053]],["body/injectables/ViewService.html",[3,0.104,4,0.104,5,0.09,11,0.009,16,0.304,17,1.25,18,0.104,19,0.069,24,0.007,25,0.008,26,0.007,340,2.109,341,2.791,1670,5.481,1673,5.863]],["title/coverage.html",[1674,5.278]],["body/coverage.html",[0,2.231,1,1.415,5,0.026,6,1.672,11,0.009,19,0.089,24,0.002,25,0.003,26,0.002,33,0.82,63,1.327,75,1.525,77,1.415,85,1.415,86,1.672,103,1.137,104,1.327,117,0.087,122,1.415,124,1.614,127,0.796,172,1.254,175,1.137,176,1.137,178,1.088,179,0.751,238,1.581,240,3.695,247,0.82,251,1.004,256,1.672,262,1.004,278,4.669,321,1.191,323,1.254,340,2.075,342,2.544,419,0.903,466,1.672,469,1.191,485,1.254,512,1.525,513,1.672,524,1.672,528,1.415,529,1.672,534,1.525,535,1.672,536,1.672,539,1.327,543,1.191,547,1.254,549,1.254,551,1.191,566,2.544,569,1.672,579,1.137,594,1.672,652,2.544,653,1.672,658,1.672,660,1.672,661,1.672,667,1.525,668,1.672,669,1.672,679,1.327,680,1.672,681,1.672,687,1.327,688,2.544,689,1.672,693,1.525,694,1.672,701,1.327,702,3.037,703,1.672,709,1.525,710,1.672,718,1.525,719,1.672,727,1.525,728,2.544,729,1.672,735,1.327,736,1.672,740,1.327,741,1.672,742,1.672,747,1.327,748,1.672,749,3.037,755,1.672,761,1.525,762,1.672,776,1.525,777,1.672,782,1.327,785,1.672,786,1.672,792,1.415,793,1.672,799,1.327,810,1.254,812,1.254,814,1.191,817,1.088,834,2.544,835,1.672,843,1.044,856,1.672,885,1.415,886,1.672,891,1.191,899,1.254,901,1.137,903,1.137,904,1.004,918,3.324,919,1.191,922,1.672,928,1.415,938,1.672,952,1.672,984,1.327,985,1.672,986,1.254,987,3.324,988,0.968,990,1.044,992,1.254,993,1.137,995,1.191,997,1.672,1007,1.254,1016,1.415,1017,1.672,1032,1.254,1048,1.672,1063,1.327,1081,1.672,1113,1.525,1114,1.672,1134,1.415,1135,1.672,1149,1.254,1151,1.254,1162,1.327,1163,2.544,1179,1.672,1229,1.415,1230,1.672,1235,1.327,1243,1.254,1245,1.254,1257,2.544,1258,1.672,1292,1.672,1305,1.672,1326,1.672,1356,1.415,1357,1.672,1361,1.327,1369,1.254,1371,1.254,1383,2.544,1385,1.672,1408,1.672,1440,1.415,1441,1.672,1447,1.327,1451,1.672,1452,1.415,1453,1.672,1456,1.254,1458,1.254,1463,1.672,1478,1.672,1485,1.525,1486,1.672,1487,1.672,1499,1.327,1500,1.672,1505,1.415,1506,1.672,1523,1.254,1540,2.544,1541,1.672,1581,2.544,1636,1.672,1663,1.525,1664,1.672,1670,1.327,1673,1.672,1674,1.672,1675,1.896,1676,1.896,1677,1.896,1678,7.862,1679,4.069,1680,3.163,1681,3.163,1682,6.049,1683,4.749,1684,7.275,1685,6.049,1686,7.135,1687,1.672,1688,5.278,1689,6.049,1690,6.975,1691,4.069,1692,1.672,1693,1.896,1694,1.896,1695,3.163,1696,3.163,1697,1.672,1698,1.896,1699,1.896,1700,1.896]],["title/dependencies.html",[30,2.274,1701,3.627]],["body/dependencies.html",[11,0.009,17,0.97,19,0.07,24,0.005,25,0.007,26,0.005,30,2.233,58,1.882,60,1.652,73,3.414,127,2.167,171,3.546,185,2.634,484,4.552,485,3.414,486,4.151,614,1.882,1491,4.151,1565,4.151,1646,4.552,1702,8.149,1703,5.161,1704,5.161,1705,5.161,1706,5.161,1707,5.161,1708,5.161,1709,5.161,1710,5.161,1711,5.161,1712,5.161,1713,5.161,1714,5.161,1715,6.695,1716,5.161,1717,5.161,1718,6.695,1719,5.161,1720,5.161,1721,5.161,1722,4.552,1723,5.161,1724,5.161,1725,5.161,1726,5.161,1727,5.161,1728,5.161,1729,5.161,1730,5.161,1731,5.161,1732,5.161,1733,5.161,1734,5.161,1735,5.161,1736,5.161]],["title/miscellaneous/functions.html",[1737,2.707,1738,4.635]],["body/miscellaneous/functions.html",[7,0.439,11,0.008,24,0.007,25,0.008,26,0.007,33,3.654,1692,6.068,1737,5.134,1738,6.068,1739,6.879]],["title/index.html",[7,0.231,1740,3.627,1741,3.627]],["body/index.html",[11,0.008,22,6.095,23,6.095,24,0.007,25,0.008,26,0.007,1742,6.095,1743,7.065,1744,6.91,1745,6.91]],["title/modules.html",[29,2.513]],["body/modules.html",[11,0.007,24,0.005,25,0.007,26,0.005,28,3.969,29,2.233,38,3.723,39,3.723,40,3.723,41,3.723,42,3.723,43,3.723,44,3.723,45,3.723,46,3.723,47,3.723,48,3.188,531,4.278,1444,3.969,1667,3.969,1746,9.018,1747,9.018,1748,9.018,1749,9.05,1750,5.318,1751,5.318]],["title/overview.html",[1752,5.278]],["body/overview.html",[2,1.116,11,0.009,24,0.004,25,0.005,26,0.004,27,1.062,28,6.649,29,1.501,30,1.547,31,1.647,32,1.647,33,1.547,34,1.647,35,1.647,36,3.153,37,3.153,38,5.388,39,5.003,40,5.003,41,5.003,42,5.003,43,5.003,44,5.388,45,5.003,46,5.003,47,5.388,48,4.82,49,2.395,50,1.647,51,1.647,172,4.052,239,1.236,255,0.94,307,3.153,309,3.153,341,1.501,469,4.836,547,4.052,588,3.153,589,3.153,780,3.153,781,3.153,782,4.289,810,4.052,850,3.153,851,3.153,899,4.052,946,3.153,947,3.153,1032,4.052,1075,3.153,1076,3.153,1149,4.052,1168,3.153,1170,3.153,1243,4.052,1320,3.153,1321,3.153,1369,4.052,1402,3.153,1403,3.153,1444,5.021,1445,3.153,1446,3.153,1447,4.289,1458,4.052,1471,3.153,1473,3.153,1573,3.153,1574,3.153,1575,3.153,1667,5.021,1668,3.153,1669,3.153,1670,4.289,1752,3.153,1753,5.199,1754,3.575,1755,3.575,1756,3.575]],["title/miscellaneous/variables.html",[1737,2.707,1757,4.635]],["body/miscellaneous/variables.html",[7,0.287,11,0.009,20,2.058,24,0.005,25,0.006,26,0.005,75,4.914,81,2.072,117,0.206,118,0.954,127,2.565,179,2.95,226,3.323,276,5.988,342,3.617,378,3.966,477,3.966,485,4.59,489,5.389,490,3.966,491,3.839,492,4.56,493,3.356,494,3.966,499,3.617,508,5.389,514,5.389,521,2.58,571,2.695,634,3.364,696,4.924,750,3.147,751,2.295,1580,3.966,1581,3.617,1599,3.966,1687,3.966,1697,3.966,1722,3.966,1737,3.356,1742,3.966,1743,3.966,1757,3.966,1758,4.496,1759,4.496,1760,4.496,1761,4.496,1762,4.496,1763,4.496,1764,4.496,1765,4.496,1766,6.109,1767,4.496,1768,6.109,1769,4.496,1770,4.496,1771,4.496,1772,4.496,1773,4.496,1774,4.496,1775,4.496,1776,4.496,1777,4.496,1778,4.496,1779,6.109,1780,4.496,1781,4.496,1782,4.496,1783,4.496,1784,4.496,1785,4.496,1786,4.496,1787,4.496,1788,4.496,1789,4.496]]],"invertedIndex":[["",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/ArticleController.html":{},"interfaces/ArticleData.html":{},"classes/ArticleEntity.html":{},"modules/ArticleModule.html":{},"interfaces/ArticleRO.html":{},"injectables/ArticleService.html":{},"interfaces/ArticlesRO.html":{},"injectables/AuthMiddleware.html":{},"classes/BaseController.html":{},"classes/Comment.html":{},"controllers/CommentController.html":{},"modules/CommentModule.html":{},"injectables/CommentService.html":{},"interfaces/CommentsRO.html":{},"controllers/CorporationController.html":{},"interfaces/CorporationData.html":{},"classes/CorporationEntity.html":{},"modules/CorporationModule.html":{},"interfaces/CorporationRO.html":{},"injectables/CorporationService.html":{},"classes/CreateArticleDto.html":{},"classes/CreateCommentDto.html":{},"classes/CreateCorporationDto.html":{},"classes/CreateErrorLogDto.html":{},"classes/CreateGroupDto.html":{},"classes/CreateListDto.html":{},"classes/CreateListEntryDto.html":{},"classes/CreateMenuDto.html":{},"classes/CreateMenuEntryDto.html":{},"classes/CreateMenuEntryPointDto.html":{},"classes/CreateRoleAppDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSiteDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabaseConfig.html":{},"classes/ErrorLogEntity.html":{},"controllers/ErrorlogController.html":{},"modules/ErrorlogModule.html":{},"injectables/ErrorlogService.html":{},"classes/FollowsEntity.html":{},"controllers/GroupController.html":{},"interfaces/GroupData.html":{},"classes/GroupEntity.html":{},"modules/GroupModule.html":{},"interfaces/GroupRO.html":{},"injectables/GroupService.html":{},"controllers/ListController.html":{},"interfaces/ListData.html":{},"classes/ListEntity.html":{},"interfaces/ListEntry.html":{},"classes/ListEntryEntity.html":{},"interfaces/ListEntryRO.html":{},"modules/ListModule.html":{},"interfaces/ListRO.html":{},"injectables/ListService.html":{},"classes/LoginUserDto.html":{},"interfaces/MenuAppData.html":{},"classes/MenuAppEntity.html":{},"interfaces/MenuAppEntry.html":{},"controllers/MenuController.html":{},"classes/MenuEntryEntity.html":{},"interfaces/MenuEntryRO.html":{},"modules/MenuModule.html":{},"interfaces/MenuRO.html":{},"injectables/MenuService.html":{},"classes/MyLogger.html":{},"controllers/ProfileController.html":{},"interfaces/ProfileData.html":{},"modules/ProfileModule.html":{},"interfaces/ProfileRO.html":{},"injectables/ProfileService.html":{},"controllers/RoleController.html":{},"interfaces/RoleData.html":{},"classes/RoleEntity.html":{},"classes/RoleMenuAppEntity.html":{},"classes/RoleMenuEntryEntity.html":{},"modules/RoleModule.html":{},"interfaces/RoleRO.html":{},"injectables/RoleService.html":{},"controllers/SiteController.html":{},"interfaces/SiteData.html":{},"classes/SiteEntity.html":{},"modules/SiteModule.html":{},"interfaces/SiteRO.html":{},"injectables/SiteService.html":{},"controllers/SqldirectController.html":{},"modules/SqldirectModule.html":{},"injectables/SqldirectService.html":{},"controllers/TagController.html":{},"classes/TagEntity.html":{},"modules/TagModule.html":{},"injectables/TagService.html":{},"classes/ToIntegerPipe.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"interfaces/UserData.html":{},"classes/UserEntity.html":{},"modules/UserModule.html":{},"interfaces/UserRO.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{},"controllers/ViewController.html":{},"modules/ViewModule.html":{},"injectables/ViewService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":278,"title":{},"body":{"classes/ArticleEntity.html":{},"injectables/ArticleService.html":{},"injectables/CorporationService.html":{},"classes/CreateSiteDto.html":{},"injectables/GroupService.html":{},"injectables/ListService.html":{},"injectables/MenuService.html":{},"injectables/RoleService.html":{},"injectables/SiteService.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{},"coverage.html":{}}}],["0).tostring(36",{"_index":465,"title":{},"body":{"injectables/ArticleService.html":{}}}],["0.1.13",{"_index":1725,"title":{},"body":{"dependencies.html":{}}}],["0.12.2",{"_index":1714,"title":{},"body":{"dependencies.html":{}}}],["0.2.25",{"_index":1734,"title":{},"body":{"dependencies.html":{}}}],["0.2.3",{"_index":1713,"title":{},"body":{"dependencies.html":{}}}],["0.26.2",{"_index":1712,"title":{},"body":{"dependencies.html":{}}}],["0.5.0",{"_index":1703,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1684,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":1688,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":1681,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":1679,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":1696,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":1680,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":1694,"title":{},"body":{"coverage.html":{}}}],["0/16",{"_index":1698,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1678,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1682,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1685,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1686,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1690,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1695,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1691,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1689,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":389,"title":{},"body":{"injectables/ArticleService.html":{},"injectables/AuthMiddleware.html":{},"classes/BaseController.html":{},"classes/ListEntity.html":{}}}],["1.0.1",{"_index":1716,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":766,"title":{},"body":{"classes/ErrorLogEntity.html":{},"classes/MenuAppEntity.html":{},"classes/MenuEntryEntity.html":{}}}],["100",{"_index":284,"title":{},"body":{"classes/ArticleEntity.html":{},"classes/CorporationEntity.html":{},"classes/GroupEntity.html":{},"classes/SiteEntity.html":{}}}],["1000",{"_index":1632,"title":{},"body":{"injectables/UserService.html":{}}}],["15",{"_index":1753,"title":{},"body":{"overview.html":{}}}],["17",{"_index":1754,"title":{},"body":{"overview.html":{}}}],["200",{"_index":142,"title":{},"body":{"controllers/ArticleController.html":{}}}],["201",{"_index":107,"title":{},"body":{"controllers/ArticleController.html":{},"controllers/CorporationController.html":{}}}],["25",{"_index":1756,"title":{},"body":{"overview.html":{}}}],["3.0.2",{"_index":1727,"title":{},"body":{"dependencies.html":{}}}],["3.2.0",{"_index":1730,"title":{},"body":{"dependencies.html":{}}}],["3.9.3",{"_index":1736,"title":{},"body":{"dependencies.html":{}}}],["3000",{"_index":1764,"title":{},"body":{"miscellaneous/variables.html":{}}}],["35",{"_index":1755,"title":{},"body":{"overview.html":{}}}],["4.0.0",{"_index":1718,"title":{},"body":{"dependencies.html":{}}}],["4.1.4",{"_index":1733,"title":{},"body":{"dependencies.html":{}}}],["4.5.8",{"_index":1707,"title":{},"body":{"dependencies.html":{}}}],["401",{"_index":645,"title":{},"body":{"injectables/CorporationService.html":{},"injectables/GroupService.html":{},"injectables/ListService.html":{},"injectables/MenuService.html":{},"injectables/RoleService.html":{},"injectables/SiteService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["403",{"_index":112,"title":{},"body":{"controllers/ArticleController.html":{},"controllers/CorporationController.html":{}}}],["50",{"_index":930,"title":{},"body":{"classes/ListEntity.html":{},"classes/ListEntryEntity.html":{},"classes/MenuAppEntity.html":{},"classes/MenuEntryEntity.html":{},"classes/RoleEntity.html":{},"classes/TagEntity.html":{}}}],["6",{"_index":464,"title":{},"body":{"injectables/ArticleService.html":{}}}],["6.2.0",{"_index":1723,"title":{},"body":{"dependencies.html":{}}}],["6.5.5",{"_index":1729,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":1627,"title":{},"body":{"injectables/UserService.html":{}}}],["7.1.0",{"_index":1708,"title":{},"body":{"dependencies.html":{}}}],["7.1.1",{"_index":1702,"title":{},"body":{"dependencies.html":{}}}],["8.2.0",{"_index":1720,"title":{},"body":{"dependencies.html":{}}}],["8.5.0",{"_index":1711,"title":{},"body":{"dependencies.html":{}}}],["8.5.1",{"_index":1721,"title":{},"body":{"dependencies.html":{}}}],["_article.id",{"_index":436,"title":{},"body":{"injectables/ArticleService.html":{}}}],["_comment.id",{"_index":428,"title":{},"body":{"injectables/ArticleService.html":{}}}],["_errors",{"_index":629,"title":{},"body":{"injectables/CorporationService.html":{},"injectables/GroupService.html":{},"injectables/ListService.html":{},"injectables/MenuService.html":{},"injectables/RoleService.html":{},"injectables/SiteService.html":{},"injectables/UserService.html":{}}}],["_follows",{"_index":409,"title":{},"body":{"injectables/ArticleService.html":{},"injectables/ProfileService.html":{}}}],["_follows.length",{"_index":413,"title":{},"body":{"injectables/ArticleService.html":{}}}],["_follows.map(el",{"_index":414,"title":{},"body":{"injectables/ArticleService.html":{}}}],["_profile",{"_index":1202,"title":{},"body":{"injectables/ProfileService.html":{}}}],["_profile.bio",{"_index":1205,"title":{},"body":{"injectables/ProfileService.html":{}}}],["_profile.id",{"_index":1209,"title":{},"body":{"injectables/ProfileService.html":{}}}],["_profile.image",{"_index":1206,"title":{},"body":{"injectables/ProfileService.html":{}}}],["_profile.username",{"_index":1204,"title":{},"body":{"injectables/ProfileService.html":{}}}],["_user",{"_index":1537,"title":{},"body":{"controllers/UserController.html":{}}}],["abbreviation",{"_index":704,"title":{},"body":{"classes/CreateMenuDto.html":{},"classes/CreateRoleAppDto.html":{},"classes/MenuAppEntity.html":{},"injectables/MenuService.html":{}}}],["access",{"_index":1284,"title":{},"body":{"classes/RoleEntity.html":{}}}],["accessed",{"_index":1290,"title":{},"body":{"classes/RoleEntity.html":{}}}],["action",{"_index":1049,"title":{},"body":{"classes/MenuEntryEntity.html":{}}}],["active",{"_index":567,"title":{},"body":{"interfaces/CorporationData.html":{},"classes/CorporationEntity.html":{},"interfaces/CorporationRO.html":{},"interfaces/GroupData.html":{},"classes/GroupEntity.html":{},"interfaces/GroupRO.html":{},"interfaces/ListData.html":{},"classes/ListEntity.html":{},"interfaces/ListEntry.html":{},"interfaces/ListEntryRO.html":{},"interfaces/ListRO.html":{},"interfaces/MenuAppData.html":{},"classes/MenuAppEntity.html":{},"interfaces/MenuAppEntry.html":{},"classes/MenuEntryEntity.html":{},"interfaces/MenuEntryRO.html":{},"interfaces/MenuRO.html":{},"interfaces/RoleData.html":{},"classes/RoleEntity.html":{},"interfaces/RoleRO.html":{},"interfaces/SiteData.html":{},"classes/SiteEntity.html":{},"interfaces/SiteRO.html":{},"classes/UserEntity.html":{}}}],["addcomment",{"_index":343,"title":{},"body":{"injectables/ArticleService.html":{}}}],["addcomment(slug",{"_index":354,"title":{},"body":{"injectables/ArticleService.html":{}}}],["admin",{"_index":1743,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["afterupdate",{"_index":297,"title":{},"body":{"classes/ArticleEntity.html":{},"classes/CorporationEntity.html":{},"classes/ListEntity.html":{},"classes/MenuAppEntity.html":{},"classes/MenuEntryEntity.html":{},"classes/RoleEntity.html":{},"classes/RoleMenuAppEntity.html":{},"classes/SiteEntity.html":{}}}],["api",{"_index":23,"title":{},"body":{"controllers/AppController.html":{},"index.html":{}}}],["apibearerauth",{"_index":181,"title":{},"body":{"controllers/ArticleController.html":{},"controllers/CorporationController.html":{},"controllers/GroupController.html":{},"controllers/ListController.html":{},"controllers/MenuController.html":{},"controllers/ProfileController.html":{},"controllers/RoleController.html":{},"controllers/SiteController.html":{},"controllers/TagController.html":{},"controllers/UserController.html":{}}}],["apibody",{"_index":819,"title":{},"body":{"controllers/GroupController.html":{}}}],["apibody({type",{"_index":822,"title":{},"body":{"controllers/GroupController.html":{}}}],["apioperation",{"_index":183,"title":{},"body":{"controllers/ArticleController.html":{},"controllers/CorporationController.html":{},"controllers/GroupController.html":{},"controllers/ListController.html":{},"controllers/MenuController.html":{},"controllers/RoleController.html":{},"controllers/SiteController.html":{}}}],["apioperation({summary",{"_index":105,"title":{},"body":{"controllers/ArticleController.html":{},"controllers/CorporationController.html":{}}}],["apiproperty",{"_index":685,"title":{},"body":{"classes/CreateGroupDto.html":{}}}],["apiproperty({type",{"_index":686,"title":{},"body":{"classes/CreateGroupDto.html":{}}}],["apiresponse",{"_index":182,"title":{},"body":{"controllers/ArticleController.html":{},"controllers/CorporationController.html":{},"controllers/GroupController.html":{},"controllers/ListController.html":{},"controllers/MenuController.html":{},"controllers/RoleController.html":{},"controllers/SiteController.html":{}}}],["apitags",{"_index":184,"title":{},"body":{"controllers/ArticleController.html":{},"controllers/CorporationController.html":{},"controllers/GroupController.html":{},"controllers/ListController.html":{},"controllers/MenuController.html":{},"controllers/ProfileController.html":{},"controllers/RoleController.html":{},"controllers/SiteController.html":{},"controllers/TagController.html":{},"controllers/UserController.html":{}}}],["apitags('articles",{"_index":186,"title":{},"body":{"controllers/ArticleController.html":{}}}],["apitags('corporations",{"_index":553,"title":{},"body":{"controllers/CorporationController.html":{}}}],["apitags('groups",{"_index":820,"title":{},"body":{"controllers/GroupController.html":{}}}],["apitags('lists",{"_index":906,"title":{},"body":{"controllers/ListController.html":{}}}],["apitags('menus",{"_index":1035,"title":{},"body":{"controllers/MenuController.html":{}}}],["apitags('profiles",{"_index":1153,"title":{},"body":{"controllers/ProfileController.html":{}}}],["apitags('roles",{"_index":1248,"title":{},"body":{"controllers/RoleController.html":{}}}],["apitags('sites",{"_index":1374,"title":{},"body":{"controllers/SiteController.html":{}}}],["apitags('tags",{"_index":1460,"title":{},"body":{"controllers/TagController.html":{}}}],["apitags('user",{"_index":1525,"title":{},"body":{"controllers/UserController.html":{}}}],["app",{"_index":1289,"title":{},"body":{"classes/RoleEntity.html":{}}}],["app.controller",{"_index":54,"title":{},"body":{"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["appid",{"_index":711,"title":{},"body":{"classes/CreateMenuEntryDto.html":{},"classes/CreateMenuEntryPointDto.html":{},"interfaces/MenuAppData.html":{},"interfaces/MenuAppEntry.html":{},"classes/MenuEntryEntity.html":{},"interfaces/MenuEntryRO.html":{},"interfaces/MenuRO.html":{},"injectables/MenuService.html":{}}}],["apply(authmiddleware",{"_index":327,"title":{},"body":{"modules/ArticleModule.html":{},"modules/ProfileModule.html":{},"modules/UserModule.html":{}}}],["appmodule",{"_index":28,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["argon2",{"_index":1565,"title":{},"body":{"classes/UserEntity.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["argon2.hash(this.password",{"_index":1569,"title":{},"body":{"classes/UserEntity.html":{}}}],["argon2.verify(user.password",{"_index":1602,"title":{},"body":{"injectables/UserService.html":{}}}],["argumentmetadata",{"_index":1492,"title":{},"body":{"classes/ToIntegerPipe.html":{},"injectables/ValidationPipe.html":{}}}],["array",{"_index":287,"title":{},"body":{"classes/ArticleEntity.html":{},"injectables/ValidationPipe.html":{}}}],["array.isarray(_follows",{"_index":412,"title":{},"body":{"injectables/ArticleService.html":{}}}],["article",{"_index":109,"title":{},"body":{"controllers/ArticleController.html":{},"interfaces/ArticleData.html":{},"interfaces/ArticleRO.html":{},"injectables/ArticleService.html":{},"interfaces/ArticlesRO.html":{},"classes/Comment.html":{},"interfaces/CommentsRO.html":{},"injectables/ListService.html":{},"classes/UserEntity.html":{}}}],["article'})@apiresponse({status",{"_index":106,"title":{},"body":{"controllers/ArticleController.html":{}}}],["article.author",{"_index":1571,"title":{},"body":{"classes/UserEntity.html":{}}}],["article.comments",{"_index":441,"title":{},"body":{"injectables/ArticleService.html":{},"classes/Comment.html":{}}}],["article.comments.findindex(_comment",{"_index":427,"title":{},"body":{"injectables/ArticleService.html":{}}}],["article.comments.push(comment",{"_index":422,"title":{},"body":{"injectables/ArticleService.html":{}}}],["article.comments.splice(deleteindex",{"_index":431,"title":{},"body":{"injectables/ArticleService.html":{}}}],["article.controller",{"_index":320,"title":{},"body":{"modules/ArticleModule.html":{}}}],["article.description",{"_index":444,"title":{},"body":{"injectables/ArticleService.html":{}}}],["article.dto.ts",{"_index":653,"title":{},"body":{"classes/CreateArticleDto.html":{},"coverage.html":{}}}],["article.dto.ts:2",{"_index":657,"title":{},"body":{"classes/CreateArticleDto.html":{}}}],["article.dto.ts:3",{"_index":655,"title":{},"body":{"classes/CreateArticleDto.html":{}}}],["article.dto.ts:4",{"_index":654,"title":{},"body":{"classes/CreateArticleDto.html":{}}}],["article.dto.ts:5",{"_index":656,"title":{},"body":{"classes/CreateArticleDto.html":{}}}],["article.entity",{"_index":252,"title":{},"body":{"interfaces/ArticleData.html":{},"modules/ArticleModule.html":{},"interfaces/ArticleRO.html":{},"injectables/ArticleService.html":{},"interfaces/ArticlesRO.html":{},"classes/Comment.html":{},"interfaces/CommentsRO.html":{}}}],["article.favoritecount",{"_index":439,"title":{},"body":{"injectables/ArticleService.html":{}}}],["article.id",{"_index":437,"title":{},"body":{"injectables/ArticleService.html":{}}}],["article.interface",{"_index":177,"title":{},"body":{"controllers/ArticleController.html":{},"injectables/ArticleService.html":{}}}],["article.service",{"_index":173,"title":{},"body":{"controllers/ArticleController.html":{},"modules/ArticleModule.html":{}}}],["article.slug",{"_index":446,"title":{},"body":{"injectables/ArticleService.html":{}}}],["article.taglist",{"_index":448,"title":{},"body":{"injectables/ArticleService.html":{}}}],["article.title",{"_index":442,"title":{},"body":{"injectables/ArticleService.html":{}}}],["article/article.entity",{"_index":1566,"title":{},"body":{"classes/UserEntity.html":{}}}],["article/article.module",{"_index":55,"title":{},"body":{"modules/AppModule.html":{}}}],["articlecontroller",{"_index":85,"title":{"controllers/ArticleController.html":{}},"body":{"controllers/ArticleController.html":{},"modules/ArticleModule.html":{},"coverage.html":{}}}],["articledata",{"_index":103,"title":{"interfaces/ArticleData.html":{}},"body":{"controllers/ArticleController.html":{},"interfaces/ArticleData.html":{},"interfaces/ArticleRO.html":{},"injectables/ArticleService.html":{},"interfaces/ArticlesRO.html":{},"interfaces/CommentsRO.html":{},"coverage.html":{}}}],["articledata.description",{"_index":445,"title":{},"body":{"injectables/ArticleService.html":{}}}],["articledata.taglist",{"_index":449,"title":{},"body":{"injectables/ArticleService.html":{}}}],["articledata.title",{"_index":443,"title":{},"body":{"injectables/ArticleService.html":{}}}],["articleentity",{"_index":251,"title":{"classes/ArticleEntity.html":{}},"body":{"interfaces/ArticleData.html":{},"classes/ArticleEntity.html":{},"modules/ArticleModule.html":{},"interfaces/ArticleRO.html":{},"injectables/ArticleService.html":{},"interfaces/ArticlesRO.html":{},"classes/Comment.html":{},"interfaces/CommentsRO.html":{},"classes/UserEntity.html":{},"coverage.html":{}}}],["articlemodule",{"_index":38,"title":{"modules/ArticleModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ArticleModule.html":{},"modules.html":{},"overview.html":{}}}],["articlerepository",{"_index":353,"title":{},"body":{"injectables/ArticleService.html":{}}}],["articlero",{"_index":176,"title":{"interfaces/ArticleRO.html":{}},"body":{"controllers/ArticleController.html":{},"interfaces/ArticleData.html":{},"interfaces/ArticleRO.html":{},"injectables/ArticleService.html":{},"interfaces/ArticlesRO.html":{},"interfaces/CommentsRO.html":{},"coverage.html":{}}}],["articles",{"_index":88,"title":{},"body":{"controllers/ArticleController.html":{},"interfaces/ArticleData.html":{},"modules/ArticleModule.html":{},"interfaces/ArticleRO.html":{},"injectables/ArticleService.html":{},"interfaces/ArticlesRO.html":{},"interfaces/CommentsRO.html":{},"classes/UserEntity.html":{}}}],["articles'})@apiresponse({status",{"_index":141,"title":{},"body":{"controllers/ArticleController.html":{}}}],["articles.'})@get",{"_index":143,"title":{},"body":{"controllers/ArticleController.html":{}}}],["articles/:slug",{"_index":334,"title":{},"body":{"modules/ArticleModule.html":{}}}],["articles/:slug/comments",{"_index":337,"title":{},"body":{"modules/ArticleModule.html":{}}}],["articles/:slug/comments/:id",{"_index":338,"title":{},"body":{"modules/ArticleModule.html":{}}}],["articles/:slug/favorite",{"_index":339,"title":{},"body":{"modules/ArticleModule.html":{}}}],["articles/feed",{"_index":330,"title":{},"body":{"modules/ArticleModule.html":{}}}],["articlescount",{"_index":254,"title":{},"body":{"interfaces/ArticleData.html":{},"interfaces/ArticleRO.html":{},"injectables/ArticleService.html":{},"interfaces/ArticlesRO.html":{},"interfaces/CommentsRO.html":{}}}],["articleservice",{"_index":172,"title":{"injectables/ArticleService.html":{}},"body":{"controllers/ArticleController.html":{},"modules/ArticleModule.html":{},"injectables/ArticleService.html":{},"coverage.html":{},"overview.html":{}}}],["articlesro",{"_index":175,"title":{"interfaces/ArticlesRO.html":{}},"body":{"controllers/ArticleController.html":{},"interfaces/ArticleData.html":{},"interfaces/ArticleRO.html":{},"injectables/ArticleService.html":{},"interfaces/ArticlesRO.html":{},"interfaces/CommentsRO.html":{},"coverage.html":{}}}],["async",{"_index":89,"title":{},"body":{"controllers/ArticleController.html":{},"injectables/ArticleService.html":{},"injectables/AuthMiddleware.html":{},"controllers/CorporationController.html":{},"injectables/CorporationService.html":{},"controllers/GroupController.html":{},"injectables/GroupService.html":{},"controllers/ListController.html":{},"injectables/ListService.html":{},"controllers/MenuController.html":{},"injectables/MenuService.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"controllers/RoleController.html":{},"injectables/RoleService.html":{},"controllers/SiteController.html":{},"injectables/SiteService.html":{},"controllers/TagController.html":{},"injectables/TagService.html":{},"controllers/UserController.html":{},"classes/UserEntity.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{}}}],["auth",{"_index":1785,"title":{},"body":{"miscellaneous/variables.html":{}}}],["auth.middleware",{"_index":1580,"title":{},"body":{"modules/UserModule.html":{},"miscellaneous/variables.html":{}}}],["authheaders",{"_index":488,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["authmiddleware",{"_index":323,"title":{"injectables/AuthMiddleware.html":{}},"body":{"modules/ArticleModule.html":{},"injectables/AuthMiddleware.html":{},"modules/ProfileModule.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["author",{"_index":242,"title":{},"body":{"interfaces/ArticleData.html":{},"classes/ArticleEntity.html":{},"interfaces/ArticleRO.html":{},"injectables/ArticleService.html":{},"interfaces/ArticlesRO.html":{},"interfaces/CommentsRO.html":{}}}],["author.articles.push(article",{"_index":453,"title":{},"body":{"injectables/ArticleService.html":{}}}],["author.favorites.map(el",{"_index":399,"title":{},"body":{"injectables/ArticleService.html":{}}}],["author.id",{"_index":396,"title":{},"body":{"injectables/ArticleService.html":{}}}],["authorization",{"_index":520,"title":{},"body":{"classes/BaseController.html":{}}}],["authorization.split",{"_index":522,"title":{},"body":{"classes/BaseController.html":{}}}],["authorized",{"_index":511,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["available",{"_index":1751,"title":{},"body":{"modules.html":{}}}],["await",{"_index":193,"title":{},"body":{"controllers/ArticleController.html":{},"injectables/ArticleService.html":{},"injectables/AuthMiddleware.html":{},"controllers/CorporationController.html":{},"injectables/CorporationService.html":{},"controllers/GroupController.html":{},"injectables/GroupService.html":{},"controllers/ListController.html":{},"injectables/ListService.html":{},"controllers/MenuController.html":{},"injectables/MenuService.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"controllers/RoleController.html":{},"injectables/RoleService.html":{},"controllers/SiteController.html":{},"injectables/SiteService.html":{},"controllers/TagController.html":{},"injectables/TagService.html":{},"controllers/UserController.html":{},"classes/UserEntity.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{}}}],["badrequestexception",{"_index":1494,"title":{},"body":{"classes/ToIntegerPipe.html":{},"injectables/ValidationPipe.html":{}}}],["badrequestexception('no",{"_index":1647,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["basecontroller",{"_index":512,"title":{"classes/BaseController.html":{}},"body":{"classes/BaseController.html":{},"coverage.html":{}}}],["beforeinsert",{"_index":1560,"title":{},"body":{"classes/UserEntity.html":{}}}],["beforeupdate",{"_index":298,"title":{},"body":{"classes/ArticleEntity.html":{},"classes/CorporationEntity.html":{},"classes/ListEntity.html":{},"classes/MenuAppEntity.html":{},"classes/MenuEntryEntity.html":{},"classes/RoleEntity.html":{},"classes/RoleMenuAppEntity.html":{},"classes/SiteEntity.html":{}}}],["belongs",{"_index":1280,"title":{},"body":{"classes/RoleEntity.html":{}}}],["bio",{"_index":1164,"title":{},"body":{"interfaces/ProfileData.html":{},"interfaces/ProfileRO.html":{},"injectables/ProfileService.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"interfaces/UserData.html":{},"classes/UserEntity.html":{},"interfaces/UserRO.html":{},"injectables/UserService.html":{}}}],["body",{"_index":167,"title":{},"body":{"controllers/ArticleController.html":{},"interfaces/ArticleData.html":{},"classes/ArticleEntity.html":{},"interfaces/ArticleRO.html":{},"interfaces/ArticlesRO.html":{},"classes/Comment.html":{},"interfaces/CommentsRO.html":{},"controllers/CorporationController.html":{},"classes/CreateArticleDto.html":{},"classes/CreateCommentDto.html":{},"controllers/GroupController.html":{},"controllers/ListController.html":{},"interfaces/ListData.html":{},"interfaces/ListEntry.html":{},"interfaces/ListEntryRO.html":{},"interfaces/ListRO.html":{},"interfaces/MenuAppData.html":{},"interfaces/MenuAppEntry.html":{},"controllers/MenuController.html":{},"interfaces/MenuEntryRO.html":{},"interfaces/MenuRO.html":{},"controllers/RoleController.html":{},"controllers/SiteController.html":{},"controllers/UserController.html":{}}}],["body('article",{"_index":206,"title":{},"body":{"controllers/ArticleController.html":{}}}],["body('comment",{"_index":222,"title":{},"body":{"controllers/ArticleController.html":{}}}],["body('corporation",{"_index":563,"title":{},"body":{"controllers/CorporationController.html":{}}}],["body('group",{"_index":827,"title":{},"body":{"controllers/GroupController.html":{}}}],["body('list",{"_index":910,"title":{},"body":{"controllers/ListController.html":{}}}],["body('menu",{"_index":1040,"title":{},"body":{"controllers/MenuController.html":{}}}],["body('role",{"_index":1252,"title":{},"body":{"controllers/RoleController.html":{}}}],["body('site",{"_index":1378,"title":{},"body":{"controllers/SiteController.html":{}}}],["body('user",{"_index":1529,"title":{},"body":{"controllers/UserController.html":{}}}],["boolean",{"_index":249,"title":{},"body":{"interfaces/ArticleData.html":{},"interfaces/ArticleRO.html":{},"interfaces/ArticlesRO.html":{},"interfaces/CommentsRO.html":{},"interfaces/CorporationData.html":{},"classes/CorporationEntity.html":{},"interfaces/CorporationRO.html":{},"interfaces/GroupData.html":{},"classes/GroupEntity.html":{},"interfaces/GroupRO.html":{},"interfaces/ListData.html":{},"classes/ListEntity.html":{},"interfaces/ListEntry.html":{},"interfaces/ListEntryRO.html":{},"interfaces/ListRO.html":{},"interfaces/MenuAppData.html":{},"classes/MenuAppEntity.html":{},"interfaces/MenuAppEntry.html":{},"classes/MenuEntryEntity.html":{},"interfaces/MenuEntryRO.html":{},"interfaces/MenuRO.html":{},"interfaces/ProfileData.html":{},"interfaces/ProfileRO.html":{},"interfaces/RoleData.html":{},"classes/RoleEntity.html":{},"interfaces/RoleRO.html":{},"interfaces/SiteData.html":{},"classes/SiteEntity.html":{},"interfaces/SiteRO.html":{},"classes/UserEntity.html":{},"injectables/ValidationPipe.html":{}}}],["bootstrap",{"_index":33,"title":{},"body":{"modules/AppModule.html":{},"modules/ArticleModule.html":{},"modules/CorporationModule.html":{},"modules/ErrorlogModule.html":{},"modules/GroupModule.html":{},"modules/ListModule.html":{},"modules/MenuModule.html":{},"modules/ProfileModule.html":{},"modules/RoleModule.html":{},"modules/SiteModule.html":{},"modules/SqldirectModule.html":{},"modules/TagModule.html":{},"modules/UserModule.html":{},"modules/ViewModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":1749,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1746,"title":{},"body":{"modules.html":{}}}],["buildcorporationro",{"_index":595,"title":{},"body":{"injectables/CorporationService.html":{}}}],["buildcorporationro(corporation",{"_index":600,"title":{},"body":{"injectables/CorporationService.html":{}}}],["builderror",{"_index":1637,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["builderror(errors",{"_index":1639,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["buildgroupro",{"_index":857,"title":{},"body":{"injectables/GroupService.html":{}}}],["buildgroupro(group",{"_index":861,"title":{},"body":{"injectables/GroupService.html":{}}}],["buildlistro",{"_index":953,"title":{},"body":{"injectables/ListService.html":{}}}],["buildlistro(list",{"_index":957,"title":{},"body":{"injectables/ListService.html":{}}}],["buildmenuro",{"_index":1082,"title":{},"body":{"injectables/MenuService.html":{}}}],["buildmenuro(menu",{"_index":1086,"title":{},"body":{"injectables/MenuService.html":{}}}],["buildrolero",{"_index":1327,"title":{},"body":{"injectables/RoleService.html":{}}}],["buildrolero(role",{"_index":1331,"title":{},"body":{"injectables/RoleService.html":{}}}],["buildsitero",{"_index":1409,"title":{},"body":{"injectables/SiteService.html":{}}}],["buildsitero(site",{"_index":1413,"title":{},"body":{"injectables/SiteService.html":{}}}],["builduserro",{"_index":1582,"title":{},"body":{"injectables/UserService.html":{}}}],["builduserro(user",{"_index":1586,"title":{},"body":{"injectables/UserService.html":{}}}],["caption",{"_index":712,"title":{},"body":{"classes/CreateMenuEntryDto.html":{},"interfaces/MenuAppData.html":{},"interfaces/MenuAppEntry.html":{},"classes/MenuEntryEntity.html":{},"interfaces/MenuEntryRO.html":{},"interfaces/MenuRO.html":{},"injectables/MenuService.html":{}}}],["case",{"_index":1782,"title":{},"body":{"miscellaneous/variables.html":{}}}],["changed",{"_index":214,"title":{},"body":{"controllers/ArticleController.html":{}}}],["check",{"_index":619,"title":{},"body":{"injectables/CorporationService.html":{},"injectables/GroupService.html":{},"injectables/ListService.html":{},"injectables/MenuService.html":{},"injectables/RoleService.html":{},"injectables/SiteService.html":{},"injectables/UserService.html":{}}}],["class",{"_index":19,"title":{"classes/ArticleEntity.html":{},"classes/BaseController.html":{},"classes/Comment.html":{},"classes/CorporationEntity.html":{},"classes/CreateArticleDto.html":{},"classes/CreateCommentDto.html":{},"classes/CreateCorporationDto.html":{},"classes/CreateErrorLogDto.html":{},"classes/CreateGroupDto.html":{},"classes/CreateListDto.html":{},"classes/CreateListEntryDto.html":{},"classes/CreateMenuDto.html":{},"classes/CreateMenuEntryDto.html":{},"classes/CreateMenuEntryPointDto.html":{},"classes/CreateRoleAppDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSiteDto.html":{},"classes/CreateUserDto.html":{},"classes/ErrorLogEntity.html":{},"classes/FollowsEntity.html":{},"classes/GroupEntity.html":{},"classes/ListEntity.html":{},"classes/ListEntryEntity.html":{},"classes/LoginUserDto.html":{},"classes/MenuAppEntity.html":{},"classes/MenuEntryEntity.html":{},"classes/MyLogger.html":{},"classes/RoleEntity.html":{},"classes/RoleMenuAppEntity.html":{},"classes/RoleMenuEntryEntity.html":{},"classes/SiteEntity.html":{},"classes/TagEntity.html":{},"classes/ToIntegerPipe.html":{},"classes/UpdateUserDto.html":{},"classes/UserEntity.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/ArticleController.html":{},"classes/ArticleEntity.html":{},"modules/ArticleModule.html":{},"injectables/ArticleService.html":{},"injectables/AuthMiddleware.html":{},"classes/BaseController.html":{},"classes/Comment.html":{},"controllers/CommentController.html":{},"modules/CommentModule.html":{},"injectables/CommentService.html":{},"controllers/CorporationController.html":{},"classes/CorporationEntity.html":{},"modules/CorporationModule.html":{},"injectables/CorporationService.html":{},"classes/CreateArticleDto.html":{},"classes/CreateCommentDto.html":{},"classes/CreateCorporationDto.html":{},"classes/CreateErrorLogDto.html":{},"classes/CreateGroupDto.html":{},"classes/CreateListDto.html":{},"classes/CreateListEntryDto.html":{},"classes/CreateMenuDto.html":{},"classes/CreateMenuEntryDto.html":{},"classes/CreateMenuEntryPointDto.html":{},"classes/CreateRoleAppDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSiteDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabaseConfig.html":{},"classes/ErrorLogEntity.html":{},"controllers/ErrorlogController.html":{},"modules/ErrorlogModule.html":{},"injectables/ErrorlogService.html":{},"classes/FollowsEntity.html":{},"controllers/GroupController.html":{},"classes/GroupEntity.html":{},"modules/GroupModule.html":{},"injectables/GroupService.html":{},"controllers/ListController.html":{},"classes/ListEntity.html":{},"classes/ListEntryEntity.html":{},"modules/ListModule.html":{},"injectables/ListService.html":{},"classes/LoginUserDto.html":{},"classes/MenuAppEntity.html":{},"controllers/MenuController.html":{},"classes/MenuEntryEntity.html":{},"modules/MenuModule.html":{},"injectables/MenuService.html":{},"classes/MyLogger.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"controllers/RoleController.html":{},"classes/RoleEntity.html":{},"classes/RoleMenuAppEntity.html":{},"classes/RoleMenuEntryEntity.html":{},"modules/RoleModule.html":{},"injectables/RoleService.html":{},"controllers/SiteController.html":{},"classes/SiteEntity.html":{},"modules/SiteModule.html":{},"injectables/SiteService.html":{},"controllers/SqldirectController.html":{},"modules/SqldirectModule.html":{},"injectables/SqldirectService.html":{},"controllers/TagController.html":{},"classes/TagEntity.html":{},"modules/TagModule.html":{},"injectables/TagService.html":{},"classes/ToIntegerPipe.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"classes/UserEntity.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{},"controllers/ViewController.html":{},"modules/ViewModule.html":{},"injectables/ViewService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":255,"title":{},"body":{"classes/ArticleEntity.html":{},"classes/BaseController.html":{},"classes/Comment.html":{},"classes/CorporationEntity.html":{},"classes/CreateArticleDto.html":{},"classes/CreateCommentDto.html":{},"classes/CreateCorporationDto.html":{},"classes/CreateErrorLogDto.html":{},"classes/CreateGroupDto.html":{},"classes/CreateListDto.html":{},"classes/CreateListEntryDto.html":{},"classes/CreateMenuDto.html":{},"classes/CreateMenuEntryDto.html":{},"classes/CreateMenuEntryPointDto.html":{},"classes/CreateRoleAppDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSiteDto.html":{},"classes/CreateUserDto.html":{},"classes/ErrorLogEntity.html":{},"classes/FollowsEntity.html":{},"classes/GroupEntity.html":{},"classes/ListEntity.html":{},"classes/ListEntryEntity.html":{},"classes/LoginUserDto.html":{},"classes/MenuAppEntity.html":{},"classes/MenuEntryEntity.html":{},"classes/MyLogger.html":{},"classes/RoleEntity.html":{},"classes/RoleMenuAppEntity.html":{},"classes/RoleMenuEntryEntity.html":{},"classes/SiteEntity.html":{},"classes/TagEntity.html":{},"classes/ToIntegerPipe.html":{},"classes/UpdateUserDto.html":{},"classes/UserEntity.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":36,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":37,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_articlemodule",{"_index":307,"title":{},"body":{"modules/ArticleModule.html":{},"overview.html":{}}}],["cluster_articlemodule_imports",{"_index":308,"title":{},"body":{"modules/ArticleModule.html":{}}}],["cluster_articlemodule_providers",{"_index":309,"title":{},"body":{"modules/ArticleModule.html":{},"overview.html":{}}}],["cluster_corporationmodule",{"_index":588,"title":{},"body":{"modules/CorporationModule.html":{},"overview.html":{}}}],["cluster_corporationmodule_providers",{"_index":589,"title":{},"body":{"modules/CorporationModule.html":{},"overview.html":{}}}],["cluster_errorlogmodule",{"_index":780,"title":{},"body":{"modules/ErrorlogModule.html":{},"overview.html":{}}}],["cluster_errorlogmodule_providers",{"_index":781,"title":{},"body":{"modules/ErrorlogModule.html":{},"overview.html":{}}}],["cluster_groupmodule",{"_index":850,"title":{},"body":{"modules/GroupModule.html":{},"overview.html":{}}}],["cluster_groupmodule_providers",{"_index":851,"title":{},"body":{"modules/GroupModule.html":{},"overview.html":{}}}],["cluster_listmodule",{"_index":946,"title":{},"body":{"modules/ListModule.html":{},"overview.html":{}}}],["cluster_listmodule_providers",{"_index":947,"title":{},"body":{"modules/ListModule.html":{},"overview.html":{}}}],["cluster_menumodule",{"_index":1075,"title":{},"body":{"modules/MenuModule.html":{},"overview.html":{}}}],["cluster_menumodule_providers",{"_index":1076,"title":{},"body":{"modules/MenuModule.html":{},"overview.html":{}}}],["cluster_profilemodule",{"_index":1168,"title":{},"body":{"modules/ProfileModule.html":{},"overview.html":{}}}],["cluster_profilemodule_imports",{"_index":1169,"title":{},"body":{"modules/ProfileModule.html":{}}}],["cluster_profilemodule_providers",{"_index":1170,"title":{},"body":{"modules/ProfileModule.html":{},"overview.html":{}}}],["cluster_rolemodule",{"_index":1320,"title":{},"body":{"modules/RoleModule.html":{},"overview.html":{}}}],["cluster_rolemodule_providers",{"_index":1321,"title":{},"body":{"modules/RoleModule.html":{},"overview.html":{}}}],["cluster_sitemodule",{"_index":1402,"title":{},"body":{"modules/SiteModule.html":{},"overview.html":{}}}],["cluster_sitemodule_providers",{"_index":1403,"title":{},"body":{"modules/SiteModule.html":{},"overview.html":{}}}],["cluster_sqldirectmodule",{"_index":1445,"title":{},"body":{"modules/SqldirectModule.html":{},"overview.html":{}}}],["cluster_sqldirectmodule_providers",{"_index":1446,"title":{},"body":{"modules/SqldirectModule.html":{},"overview.html":{}}}],["cluster_tagmodule",{"_index":1471,"title":{},"body":{"modules/TagModule.html":{},"overview.html":{}}}],["cluster_tagmodule_imports",{"_index":1472,"title":{},"body":{"modules/TagModule.html":{}}}],["cluster_tagmodule_providers",{"_index":1473,"title":{},"body":{"modules/TagModule.html":{},"overview.html":{}}}],["cluster_usermodule",{"_index":1573,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_exports",{"_index":1574,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_providers",{"_index":1575,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_viewmodule",{"_index":1668,"title":{},"body":{"modules/ViewModule.html":{},"overview.html":{}}}],["cluster_viewmodule_providers",{"_index":1669,"title":{},"body":{"modules/ViewModule.html":{},"overview.html":{}}}],["column",{"_index":272,"title":{},"body":{"classes/ArticleEntity.html":{},"classes/Comment.html":{},"classes/CorporationEntity.html":{},"classes/ErrorLogEntity.html":{},"classes/FollowsEntity.html":{},"classes/GroupEntity.html":{},"classes/ListEntity.html":{},"classes/ListEntryEntity.html":{},"classes/MenuAppEntity.html":{},"classes/MenuEntryEntity.html":{},"classes/RoleEntity.html":{},"classes/RoleMenuAppEntity.html":{},"classes/RoleMenuEntryEntity.html":{},"classes/SiteEntity.html":{},"classes/TagEntity.html":{},"classes/UserEntity.html":{}}}],["column(\"nvarchar",{"_index":302,"title":{},"body":{"classes/ArticleEntity.html":{},"classes/CorporationEntity.html":{},"classes/ErrorLogEntity.html":{},"classes/GroupEntity.html":{},"classes/ListEntity.html":{},"classes/ListEntryEntity.html":{},"classes/MenuAppEntity.html":{},"classes/MenuEntryEntity.html":{},"classes/RoleEntity.html":{},"classes/SiteEntity.html":{},"classes/TagEntity.html":{}}}],["column(\"nvarchar\",{length",{"_index":775,"title":{},"body":{"classes/ErrorLogEntity.html":{}}}],["column('nvarchar",{"_index":282,"title":{},"body":{"classes/ArticleEntity.html":{},"classes/CorporationEntity.html":{},"classes/ErrorLogEntity.html":{},"classes/GroupEntity.html":{},"classes/ListEntity.html":{},"classes/ListEntryEntity.html":{},"classes/MenuAppEntity.html":{},"classes/MenuEntryEntity.html":{},"classes/RoleEntity.html":{},"classes/SiteEntity.html":{},"classes/TagEntity.html":{}}}],["column('simple",{"_index":286,"title":{},"body":{"classes/ArticleEntity.html":{}}}],["column()@isemail",{"_index":1549,"title":{},"body":{"classes/UserEntity.html":{}}}],["column({default",{"_index":266,"title":{},"body":{"classes/ArticleEntity.html":{},"classes/CorporationEntity.html":{},"classes/ListEntity.html":{},"classes/MenuAppEntity.html":{},"classes/MenuEntryEntity.html":{},"classes/RoleEntity.html":{},"classes/SiteEntity.html":{},"classes/UserEntity.html":{}}}],["column({nullable",{"_index":275,"title":{},"body":{"classes/ArticleEntity.html":{},"classes/CorporationEntity.html":{},"classes/ErrorLogEntity.html":{},"classes/GroupEntity.html":{},"classes/ListEntity.html":{},"classes/ListEntryEntity.html":{},"classes/MenuAppEntity.html":{},"classes/MenuEntryEntity.html":{},"classes/RoleEntity.html":{},"classes/SiteEntity.html":{}}}],["comment",{"_index":124,"title":{"classes/Comment.html":{}},"body":{"controllers/ArticleController.html":{},"interfaces/ArticleData.html":{},"classes/ArticleEntity.html":{},"modules/ArticleModule.html":{},"interfaces/ArticleRO.html":{},"injectables/ArticleService.html":{},"interfaces/ArticlesRO.html":{},"classes/Comment.html":{},"controllers/CommentController.html":{},"interfaces/CommentsRO.html":{},"coverage.html":{}}}],["comment'})@apiresponse({status",{"_index":123,"title":{},"body":{"controllers/ArticleController.html":{}}}],["comment.article",{"_index":306,"title":{},"body":{"classes/ArticleEntity.html":{}}}],["comment.body",{"_index":420,"title":{},"body":{"injectables/ArticleService.html":{}}}],["comment.controller",{"_index":533,"title":{},"body":{"modules/CommentModule.html":{}}}],["comment.entity",{"_index":300,"title":{},"body":{"classes/ArticleEntity.html":{},"modules/ArticleModule.html":{},"injectables/ArticleService.html":{}}}],["comment.id",{"_index":429,"title":{},"body":{"injectables/ArticleService.html":{}}}],["comment.ts",{"_index":658,"title":{},"body":{"classes/CreateCommentDto.html":{},"coverage.html":{}}}],["comment.ts:2",{"_index":659,"title":{},"body":{"classes/CreateCommentDto.html":{}}}],["commentcontroller",{"_index":528,"title":{"controllers/CommentController.html":{}},"body":{"controllers/CommentController.html":{},"modules/CommentModule.html":{},"coverage.html":{}}}],["commentdata",{"_index":121,"title":{},"body":{"controllers/ArticleController.html":{},"injectables/ArticleService.html":{}}}],["commentdata.body",{"_index":421,"title":{},"body":{"injectables/ArticleService.html":{}}}],["commentmodule",{"_index":531,"title":{"modules/CommentModule.html":{}},"body":{"modules/CommentModule.html":{},"modules.html":{}}}],["commentrepository",{"_index":349,"title":{},"body":{"injectables/ArticleService.html":{}}}],["comments",{"_index":253,"title":{},"body":{"interfaces/ArticleData.html":{},"classes/ArticleEntity.html":{},"interfaces/ArticleRO.html":{},"injectables/ArticleService.html":{},"interfaces/ArticlesRO.html":{},"interfaces/CommentsRO.html":{}}}],["commentservice",{"_index":534,"title":{"injectables/CommentService.html":{}},"body":{"injectables/CommentService.html":{},"coverage.html":{}}}],["commentsro",{"_index":178,"title":{"interfaces/CommentsRO.html":{}},"body":{"controllers/ArticleController.html":{},"interfaces/ArticleData.html":{},"interfaces/ArticleRO.html":{},"injectables/ArticleService.html":{},"interfaces/ArticlesRO.html":{},"interfaces/CommentsRO.html":{},"controllers/CorporationController.html":{},"coverage.html":{}}}],["config",{"_index":1600,"title":{},"body":{"injectables/UserService.html":{}}}],["config/config.env",{"_index":76,"title":{},"body":{"modules/AppModule.html":{}}}],["config/database.config",{"_index":78,"title":{},"body":{"modules/AppModule.html":{}}}],["configenv",{"_index":75,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["configmodule",{"_index":72,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot",{"_index":79,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice",{"_index":74,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthMiddleware.html":{},"classes/BaseController.html":{},"injectables/DatabaseConfig.html":{},"injectables/UserService.html":{}}}],["configure",{"_index":312,"title":{},"body":{"modules/ArticleModule.html":{},"modules/CorporationModule.html":{},"modules/GroupModule.html":{},"modules/ListModule.html":{},"modules/MenuModule.html":{},"modules/ProfileModule.html":{},"modules/RoleModule.html":{},"modules/SiteModule.html":{},"modules/TagModule.html":{},"modules/UserModule.html":{}}}],["configure(consumer",{"_index":313,"title":{},"body":{"modules/ArticleModule.html":{},"modules/CorporationModule.html":{},"modules/GroupModule.html":{},"modules/ListModule.html":{},"modules/MenuModule.html":{},"modules/ProfileModule.html":{},"modules/RoleModule.html":{},"modules/SiteModule.html":{},"modules/TagModule.html":{},"modules/UserModule.html":{}}}],["connection",{"_index":59,"title":{},"body":{"modules/AppModule.html":{}}}],["console.log('decoded",{"_index":502,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["console.log('secret",{"_index":497,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["console.log('token",{"_index":495,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["console.log(secret",{"_index":498,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["console.log(token",{"_index":496,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["console.log(user",{"_index":503,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["const",{"_index":226,"title":{},"body":{"controllers/ArticleController.html":{},"injectables/ArticleService.html":{},"injectables/AuthMiddleware.html":{},"classes/BaseController.html":{},"injectables/CorporationService.html":{},"injectables/GroupService.html":{},"injectables/ListService.html":{},"injectables/MenuService.html":{},"injectables/ProfileService.html":{},"injectables/RoleService.html":{},"injectables/SiteService.html":{},"classes/ToIntegerPipe.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{},"miscellaneous/variables.html":{}}}],["constraint[0",{"_index":1659,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["constraint[1",{"_index":1660,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["constructor",{"_index":346,"title":{},"body":{"injectables/ArticleService.html":{},"injectables/AuthMiddleware.html":{},"classes/BaseController.html":{},"injectables/CorporationService.html":{},"injectables/DatabaseConfig.html":{},"injectables/GroupService.html":{},"injectables/ListService.html":{},"injectables/MenuService.html":{},"injectables/ProfileService.html":{},"injectables/RoleService.html":{},"injectables/SiteService.html":{},"injectables/TagService.html":{},"injectables/UserService.html":{}}}],["constructor(articlerepository",{"_index":347,"title":{},"body":{"injectables/ArticleService.html":{}}}],["constructor(configservice",{"_index":516,"title":{},"body":{"classes/BaseController.html":{},"injectables/DatabaseConfig.html":{}}}],["constructor(corporationrepository",{"_index":597,"title":{},"body":{"injectables/CorporationService.html":{}}}],["constructor(grouprepository",{"_index":858,"title":{},"body":{"injectables/GroupService.html":{}}}],["constructor(listrepository",{"_index":954,"title":{},"body":{"injectables/ListService.html":{}}}],["constructor(menurepository",{"_index":1083,"title":{},"body":{"injectables/MenuService.html":{}}}],["constructor(private",{"_index":188,"title":{},"body":{"controllers/ArticleController.html":{},"injectables/AuthMiddleware.html":{},"classes/BaseController.html":{},"controllers/CorporationController.html":{},"injectables/DatabaseConfig.html":{},"controllers/GroupController.html":{},"controllers/ListController.html":{},"controllers/MenuController.html":{},"controllers/ProfileController.html":{},"controllers/RoleController.html":{},"controllers/SiteController.html":{},"controllers/TagController.html":{},"controllers/UserController.html":{}}}],["constructor(rolerepository",{"_index":1328,"title":{},"body":{"injectables/RoleService.html":{}}}],["constructor(siterepository",{"_index":1410,"title":{},"body":{"injectables/SiteService.html":{}}}],["constructor(tagrepository",{"_index":1479,"title":{},"body":{"injectables/TagService.html":{}}}],["constructor(userrepository",{"_index":1181,"title":{},"body":{"injectables/ProfileService.html":{},"injectables/UserService.html":{}}}],["constructor(userservice",{"_index":468,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["consumer",{"_index":316,"title":{},"body":{"modules/ArticleModule.html":{},"modules/CorporationModule.html":{},"modules/GroupModule.html":{},"modules/ListModule.html":{},"modules/MenuModule.html":{},"modules/ProfileModule.html":{},"modules/RoleModule.html":{},"modules/SiteModule.html":{},"modules/TagModule.html":{},"modules/UserModule.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/ArticleController.html":{},"controllers/CommentController.html":{},"controllers/CorporationController.html":{},"controllers/ErrorlogController.html":{},"controllers/GroupController.html":{},"controllers/ListController.html":{},"controllers/MenuController.html":{},"controllers/ProfileController.html":{},"controllers/RoleController.html":{},"controllers/SiteController.html":{},"controllers/SqldirectController.html":{},"controllers/TagController.html":{},"controllers/UserController.html":{},"controllers/ViewController.html":{}},"body":{"controllers/AppController.html":{},"controllers/ArticleController.html":{},"controllers/CommentController.html":{},"controllers/CorporationController.html":{},"controllers/ErrorlogController.html":{},"controllers/GroupController.html":{},"controllers/ListController.html":{},"controllers/MenuController.html":{},"controllers/ProfileController.html":{},"controllers/RoleController.html":{},"controllers/SiteController.html":{},"controllers/SqldirectController.html":{},"controllers/TagController.html":{},"controllers/UserController.html":{},"controllers/ViewController.html":{},"coverage.html":{}}}],["controller('articles",{"_index":187,"title":{},"body":{"controllers/ArticleController.html":{}}}],["controller('comment",{"_index":530,"title":{},"body":{"controllers/CommentController.html":{}}}],["controller('corporations",{"_index":554,"title":{},"body":{"controllers/CorporationController.html":{}}}],["controller('errorlog",{"_index":779,"title":{},"body":{"controllers/ErrorlogController.html":{}}}],["controller('group",{"_index":821,"title":{},"body":{"controllers/GroupController.html":{}}}],["controller('lists",{"_index":907,"title":{},"body":{"controllers/ListController.html":{}}}],["controller('menus",{"_index":1036,"title":{},"body":{"controllers/MenuController.html":{}}}],["controller('profiles",{"_index":1154,"title":{},"body":{"controllers/ProfileController.html":{}}}],["controller('roles",{"_index":1249,"title":{},"body":{"controllers/RoleController.html":{}}}],["controller('sites",{"_index":1375,"title":{},"body":{"controllers/SiteController.html":{}}}],["controller('sqldirect",{"_index":1443,"title":{},"body":{"controllers/SqldirectController.html":{}}}],["controller('tags",{"_index":1461,"title":{},"body":{"controllers/TagController.html":{}}}],["controller('view",{"_index":1666,"title":{},"body":{"controllers/ViewController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/ArticleController.html":{},"modules/ArticleModule.html":{},"controllers/CommentController.html":{},"modules/CommentModule.html":{},"controllers/CorporationController.html":{},"modules/CorporationModule.html":{},"controllers/ErrorlogController.html":{},"controllers/GroupController.html":{},"modules/GroupModule.html":{},"controllers/ListController.html":{},"modules/ListModule.html":{},"controllers/MenuController.html":{},"modules/MenuModule.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"controllers/RoleController.html":{},"modules/RoleModule.html":{},"controllers/SiteController.html":{},"modules/SiteModule.html":{},"controllers/SqldirectController.html":{},"modules/SqldirectModule.html":{},"controllers/TagController.html":{},"modules/TagModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"controllers/ViewController.html":{},"overview.html":{}}}],["conversion",{"_index":1498,"title":{},"body":{"classes/ToIntegerPipe.html":{}}}],["corporation",{"_index":541,"title":{},"body":{"controllers/CorporationController.html":{},"interfaces/CorporationData.html":{},"interfaces/CorporationRO.html":{},"injectables/CorporationService.html":{},"interfaces/SiteData.html":{},"classes/SiteEntity.html":{},"interfaces/SiteRO.html":{}}}],["corporation'})@apiresponse({status",{"_index":540,"title":{},"body":{"controllers/CorporationController.html":{}}}],["corporation.controller",{"_index":592,"title":{},"body":{"modules/CorporationModule.html":{}}}],["corporation.costcenter",{"_index":650,"title":{},"body":{"injectables/CorporationService.html":{}}}],["corporation.description",{"_index":651,"title":{},"body":{"injectables/CorporationService.html":{}}}],["corporation.dto.ts",{"_index":661,"title":{},"body":{"classes/CreateCorporationDto.html":{},"coverage.html":{}}}],["corporation.dto.ts:10",{"_index":662,"title":{},"body":{"classes/CreateCorporationDto.html":{}}}],["corporation.dto.ts:11",{"_index":663,"title":{},"body":{"classes/CreateCorporationDto.html":{}}}],["corporation.dto.ts:5",{"_index":664,"title":{},"body":{"classes/CreateCorporationDto.html":{}}}],["corporation.dto.ts:8",{"_index":666,"title":{},"body":{"classes/CreateCorporationDto.html":{}}}],["corporation.entity",{"_index":552,"title":{},"body":{"controllers/CorporationController.html":{},"modules/CorporationModule.html":{},"injectables/CorporationService.html":{}}}],["corporation.id",{"_index":647,"title":{},"body":{"injectables/CorporationService.html":{}}}],["corporation.interface",{"_index":550,"title":{},"body":{"controllers/CorporationController.html":{},"injectables/CorporationService.html":{}}}],["corporation.name",{"_index":649,"title":{},"body":{"injectables/CorporationService.html":{}}}],["corporation.service",{"_index":548,"title":{},"body":{"controllers/CorporationController.html":{},"modules/CorporationModule.html":{}}}],["corporation.sites",{"_index":1400,"title":{},"body":{"classes/SiteEntity.html":{}}}],["corporation.slug",{"_index":648,"title":{},"body":{"injectables/CorporationService.html":{}}}],["corporation/corporation.controller",{"_index":64,"title":{},"body":{"modules/AppModule.html":{}}}],["corporation/corporation.entity",{"_index":1398,"title":{},"body":{"classes/SiteEntity.html":{}}}],["corporation/corporation.interface",{"_index":1384,"title":{},"body":{"interfaces/SiteData.html":{},"interfaces/SiteRO.html":{}}}],["corporation/corporation.module",{"_index":62,"title":{},"body":{"modules/AppModule.html":{}}}],["corporationcontroller",{"_index":63,"title":{"controllers/CorporationController.html":{}},"body":{"modules/AppModule.html":{},"controllers/CorporationController.html":{},"modules/CorporationModule.html":{},"coverage.html":{}}}],["corporationdata",{"_index":543,"title":{"interfaces/CorporationData.html":{}},"body":{"controllers/CorporationController.html":{},"interfaces/CorporationData.html":{},"interfaces/CorporationRO.html":{},"interfaces/SiteData.html":{},"interfaces/SiteRO.html":{},"coverage.html":{}}}],["corporationentity",{"_index":551,"title":{"classes/CorporationEntity.html":{}},"body":{"controllers/CorporationController.html":{},"classes/CorporationEntity.html":{},"modules/CorporationModule.html":{},"injectables/CorporationService.html":{},"classes/SiteEntity.html":{},"coverage.html":{}}}],["corporationmodule",{"_index":39,"title":{"modules/CorporationModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CorporationModule.html":{},"modules.html":{},"overview.html":{}}}],["corporationrepository",{"_index":599,"title":{},"body":{"injectables/CorporationService.html":{}}}],["corporationro",{"_index":549,"title":{"interfaces/CorporationRO.html":{}},"body":{"controllers/CorporationController.html":{},"interfaces/CorporationData.html":{},"interfaces/CorporationRO.html":{},"injectables/CorporationService.html":{},"coverage.html":{}}}],["corporations",{"_index":537,"title":{},"body":{"controllers/CorporationController.html":{}}}],["corporationservice",{"_index":547,"title":{"injectables/CorporationService.html":{}},"body":{"controllers/CorporationController.html":{},"modules/CorporationModule.html":{},"injectables/CorporationService.html":{},"coverage.html":{},"overview.html":{}}}],["costcenter",{"_index":568,"title":{},"body":{"interfaces/CorporationData.html":{},"classes/CorporationEntity.html":{},"interfaces/CorporationRO.html":{},"injectables/CorporationService.html":{},"classes/CreateCorporationDto.html":{},"classes/CreateSiteDto.html":{},"interfaces/SiteData.html":{},"classes/SiteEntity.html":{},"interfaces/SiteRO.html":{},"injectables/SiteService.html":{}}}],["coverage",{"_index":1674,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":90,"title":{},"body":{"controllers/ArticleController.html":{},"injectables/ArticleService.html":{},"controllers/CorporationController.html":{},"injectables/CorporationService.html":{},"controllers/GroupController.html":{},"injectables/GroupService.html":{},"controllers/ListController.html":{},"injectables/ListService.html":{},"controllers/MenuController.html":{},"injectables/MenuService.html":{},"controllers/RoleController.html":{},"injectables/RoleService.html":{},"controllers/SiteController.html":{},"injectables/SiteService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["create(@body('corporation",{"_index":561,"title":{},"body":{"controllers/CorporationController.html":{}}}],["create(@body('group",{"_index":831,"title":{},"body":{"controllers/GroupController.html":{}}}],["create(@body('list",{"_index":912,"title":{},"body":{"controllers/ListController.html":{}}}],["create(@body('menu",{"_index":1042,"title":{},"body":{"controllers/MenuController.html":{}}}],["create(@body('role",{"_index":1254,"title":{},"body":{"controllers/RoleController.html":{}}}],["create(@body('site",{"_index":1380,"title":{},"body":{"controllers/SiteController.html":{}}}],["create(@body('user",{"_index":1532,"title":{},"body":{"controllers/UserController.html":{}}}],["create(@user('id",{"_index":205,"title":{},"body":{"controllers/ArticleController.html":{}}}],["create(corporationdata",{"_index":538,"title":{},"body":{"controllers/CorporationController.html":{}}}],["create(dto",{"_index":602,"title":{},"body":{"injectables/CorporationService.html":{},"injectables/GroupService.html":{},"injectables/ListService.html":{},"injectables/MenuService.html":{},"injectables/RoleService.html":{},"injectables/SiteService.html":{},"injectables/UserService.html":{}}}],["create(groupdata",{"_index":796,"title":{},"body":{"controllers/GroupController.html":{}}}],["create(listdata",{"_index":888,"title":{},"body":{"controllers/ListController.html":{}}}],["create(menudata",{"_index":1020,"title":{},"body":{"controllers/MenuController.html":{}}}],["create(roledata",{"_index":1232,"title":{},"body":{"controllers/RoleController.html":{}}}],["create(sitedata",{"_index":1358,"title":{},"body":{"controllers/SiteController.html":{}}}],["create(userdata",{"_index":1509,"title":{},"body":{"controllers/UserController.html":{}}}],["create(userid",{"_index":101,"title":{},"body":{"controllers/ArticleController.html":{},"injectables/ArticleService.html":{}}}],["createarticledto",{"_index":104,"title":{"classes/CreateArticleDto.html":{}},"body":{"controllers/ArticleController.html":{},"injectables/ArticleService.html":{},"classes/CreateArticleDto.html":{},"coverage.html":{}}}],["createcomment",{"_index":91,"title":{},"body":{"controllers/ArticleController.html":{}}}],["createcomment(@param('slug",{"_index":221,"title":{},"body":{"controllers/ArticleController.html":{}}}],["createcomment(slug",{"_index":120,"title":{},"body":{"controllers/ArticleController.html":{}}}],["createcommentdto",{"_index":122,"title":{"classes/CreateCommentDto.html":{}},"body":{"controllers/ArticleController.html":{},"classes/CreateCommentDto.html":{},"coverage.html":{}}}],["createcorporationdto",{"_index":539,"title":{"classes/CreateCorporationDto.html":{}},"body":{"controllers/CorporationController.html":{},"injectables/CorporationService.html":{},"classes/CreateCorporationDto.html":{},"coverage.html":{}}}],["created",{"_index":204,"title":{},"body":{"controllers/ArticleController.html":{},"controllers/CorporationController.html":{}}}],["created.'})@apiresponse({status",{"_index":111,"title":{},"body":{"controllers/ArticleController.html":{},"controllers/CorporationController.html":{}}}],["createdat",{"_index":243,"title":{},"body":{"interfaces/ArticleData.html":{},"interfaces/ArticleRO.html":{},"interfaces/ArticlesRO.html":{},"interfaces/CommentsRO.html":{},"interfaces/CorporationData.html":{},"interfaces/CorporationRO.html":{},"interfaces/GroupData.html":{},"interfaces/GroupRO.html":{},"interfaces/ListData.html":{},"interfaces/ListEntry.html":{},"interfaces/ListEntryRO.html":{},"interfaces/ListRO.html":{},"interfaces/RoleData.html":{},"interfaces/RoleRO.html":{},"interfaces/SiteData.html":{},"interfaces/SiteRO.html":{}}}],["createdatecolumn",{"_index":1058,"title":{},"body":{"classes/MenuEntryEntity.html":{}}}],["createdby",{"_index":257,"title":{},"body":{"classes/ArticleEntity.html":{},"interfaces/CorporationData.html":{},"classes/CorporationEntity.html":{},"interfaces/CorporationRO.html":{},"classes/ErrorLogEntity.html":{},"interfaces/GroupData.html":{},"classes/GroupEntity.html":{},"interfaces/GroupRO.html":{},"interfaces/ListData.html":{},"classes/ListEntity.html":{},"interfaces/ListEntry.html":{},"interfaces/ListEntryRO.html":{},"interfaces/ListRO.html":{},"interfaces/MenuAppData.html":{},"classes/MenuAppEntity.html":{},"interfaces/MenuAppEntry.html":{},"classes/MenuEntryEntity.html":{},"interfaces/MenuEntryRO.html":{},"interfaces/MenuRO.html":{},"interfaces/RoleData.html":{},"classes/RoleEntity.html":{},"interfaces/RoleRO.html":{},"interfaces/SiteData.html":{},"classes/SiteEntity.html":{},"interfaces/SiteRO.html":{},"classes/TagEntity.html":{},"classes/UserEntity.html":{}}}],["createddate",{"_index":258,"title":{},"body":{"classes/ArticleEntity.html":{},"classes/CorporationEntity.html":{},"classes/ErrorLogEntity.html":{},"classes/GroupEntity.html":{},"classes/ListEntity.html":{},"interfaces/MenuAppData.html":{},"classes/MenuAppEntity.html":{},"interfaces/MenuAppEntry.html":{},"classes/MenuEntryEntity.html":{},"interfaces/MenuEntryRO.html":{},"interfaces/MenuRO.html":{},"classes/RoleEntity.html":{},"classes/SiteEntity.html":{},"classes/TagEntity.html":{},"classes/UserEntity.html":{}}}],["createerrorlogdto",{"_index":667,"title":{"classes/CreateErrorLogDto.html":{}},"body":{"classes/CreateErrorLogDto.html":{},"coverage.html":{}}}],["creategroupdto",{"_index":679,"title":{"classes/CreateGroupDto.html":{}},"body":{"classes/CreateGroupDto.html":{},"controllers/GroupController.html":{},"injectables/GroupService.html":{},"coverage.html":{}}}],["createlistdto",{"_index":687,"title":{"classes/CreateListDto.html":{}},"body":{"classes/CreateListDto.html":{},"controllers/ListController.html":{},"injectables/ListService.html":{},"coverage.html":{}}}],["createlistentrydto",{"_index":693,"title":{"classes/CreateListEntryDto.html":{}},"body":{"classes/CreateListEntryDto.html":{},"coverage.html":{}}}],["createmenudto",{"_index":701,"title":{"classes/CreateMenuDto.html":{}},"body":{"classes/CreateMenuDto.html":{},"controllers/MenuController.html":{},"injectables/MenuService.html":{},"coverage.html":{}}}],["createmenuentrydto",{"_index":709,"title":{"classes/CreateMenuEntryDto.html":{}},"body":{"classes/CreateMenuEntryDto.html":{},"coverage.html":{}}}],["createmenuentrypointdto",{"_index":718,"title":{"classes/CreateMenuEntryPointDto.html":{}},"body":{"classes/CreateMenuEntryPointDto.html":{},"coverage.html":{}}}],["createparamdecorator((data",{"_index":1775,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createquerybuilder('article",{"_index":386,"title":{},"body":{"injectables/ArticleService.html":{}}}],["createquerybuilder('user",{"_index":1604,"title":{},"body":{"injectables/UserService.html":{}}}],["createroleappdto",{"_index":727,"title":{"classes/CreateRoleAppDto.html":{}},"body":{"classes/CreateRoleAppDto.html":{},"coverage.html":{}}}],["createroledto",{"_index":735,"title":{"classes/CreateRoleDto.html":{}},"body":{"classes/CreateRoleDto.html":{},"controllers/RoleController.html":{},"injectables/RoleService.html":{},"coverage.html":{}}}],["createsitedto",{"_index":740,"title":{"classes/CreateSiteDto.html":{}},"body":{"classes/CreateSiteDto.html":{},"controllers/SiteController.html":{},"injectables/SiteService.html":{},"coverage.html":{}}}],["createtypeormoptions",{"_index":756,"title":{},"body":{"injectables/DatabaseConfig.html":{}}}],["createuserdto",{"_index":747,"title":{"classes/CreateUserDto.html":{}},"body":{"classes/CreateUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["crypto",{"_index":1715,"title":{},"body":{"dependencies.html":{}}}],["ctx",{"_index":1776,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ctx.switchtohttp().getrequest",{"_index":1778,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data",{"_index":634,"title":{},"body":{"injectables/CorporationService.html":{},"injectables/GroupService.html":{},"injectables/ListService.html":{},"injectables/MenuService.html":{},"classes/RoleEntity.html":{},"injectables/RoleService.html":{},"injectables/SiteService.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{},"miscellaneous/variables.html":{}}}],["database",{"_index":1766,"title":{},"body":{"miscellaneous/variables.html":{}}}],["databaseconfig",{"_index":77,"title":{"injectables/DatabaseConfig.html":{}},"body":{"modules/AppModule.html":{},"injectables/DatabaseConfig.html":{},"coverage.html":{}}}],["date",{"_index":248,"title":{},"body":{"interfaces/ArticleData.html":{},"classes/ArticleEntity.html":{},"interfaces/ArticleRO.html":{},"interfaces/ArticlesRO.html":{},"interfaces/CommentsRO.html":{},"interfaces/CorporationData.html":{},"classes/CorporationEntity.html":{},"interfaces/CorporationRO.html":{},"classes/ErrorLogEntity.html":{},"interfaces/GroupData.html":{},"classes/GroupEntity.html":{},"interfaces/GroupRO.html":{},"interfaces/ListData.html":{},"classes/ListEntity.html":{},"interfaces/ListEntry.html":{},"interfaces/ListEntryRO.html":{},"interfaces/ListRO.html":{},"interfaces/MenuAppData.html":{},"classes/MenuAppEntity.html":{},"interfaces/MenuAppEntry.html":{},"classes/MenuEntryEntity.html":{},"interfaces/MenuEntryRO.html":{},"interfaces/MenuRO.html":{},"interfaces/RoleData.html":{},"classes/RoleEntity.html":{},"interfaces/RoleRO.html":{},"interfaces/SiteData.html":{},"classes/SiteEntity.html":{},"interfaces/SiteRO.html":{},"classes/TagEntity.html":{},"classes/UserEntity.html":{},"injectables/UserService.html":{}}}],["date(today",{"_index":1625,"title":{},"body":{"injectables/UserService.html":{}}}],["debug",{"_index":1116,"title":{},"body":{"classes/MyLogger.html":{}}}],["debug(message",{"_index":1121,"title":{},"body":{"classes/MyLogger.html":{}}}],["declarations",{"_index":32,"title":{},"body":{"modules/AppModule.html":{},"modules/ArticleModule.html":{},"modules/CorporationModule.html":{},"modules/ErrorlogModule.html":{},"modules/GroupModule.html":{},"modules/ListModule.html":{},"modules/MenuModule.html":{},"modules/ProfileModule.html":{},"modules/RoleModule.html":{},"modules/SiteModule.html":{},"modules/SqldirectModule.html":{},"modules/TagModule.html":{},"modules/UserModule.html":{},"modules/ViewModule.html":{},"overview.html":{}}}],["decoded",{"_index":499,"title":{},"body":{"injectables/AuthMiddleware.html":{},"classes/BaseController.html":{},"miscellaneous/variables.html":{}}}],["decoded.id",{"_index":523,"title":{},"body":{"classes/BaseController.html":{}}}],["decoded.user",{"_index":1789,"title":{},"body":{"miscellaneous/variables.html":{}}}],["decoded[data",{"_index":1788,"title":{},"body":{"miscellaneous/variables.html":{}}}],["decorators",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"controllers/ArticleController.html":{},"classes/ArticleEntity.html":{},"classes/Comment.html":{},"controllers/CorporationController.html":{},"classes/CorporationEntity.html":{},"classes/CreateCorporationDto.html":{},"classes/CreateErrorLogDto.html":{},"classes/CreateGroupDto.html":{},"classes/CreateListDto.html":{},"classes/CreateListEntryDto.html":{},"classes/CreateMenuDto.html":{},"classes/CreateMenuEntryDto.html":{},"classes/CreateMenuEntryPointDto.html":{},"classes/CreateRoleAppDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSiteDto.html":{},"classes/CreateUserDto.html":{},"classes/ErrorLogEntity.html":{},"classes/FollowsEntity.html":{},"controllers/GroupController.html":{},"classes/GroupEntity.html":{},"controllers/ListController.html":{},"classes/ListEntity.html":{},"classes/ListEntryEntity.html":{},"classes/LoginUserDto.html":{},"classes/MenuAppEntity.html":{},"controllers/MenuController.html":{},"classes/MenuEntryEntity.html":{},"controllers/ProfileController.html":{},"controllers/RoleController.html":{},"classes/RoleEntity.html":{},"classes/RoleMenuAppEntity.html":{},"classes/RoleMenuEntryEntity.html":{},"controllers/SiteController.html":{},"classes/SiteEntity.html":{},"controllers/TagController.html":{},"classes/TagEntity.html":{},"controllers/UserController.html":{},"classes/UserEntity.html":{}}}],["deeppartial",{"_index":1185,"title":{},"body":{"injectables/ProfileService.html":{}}}],["default",{"_index":276,"title":{},"body":{"classes/ArticleEntity.html":{},"classes/GroupEntity.html":{},"miscellaneous/variables.html":{}}}],["define",{"_index":1285,"title":{},"body":{"classes/RoleEntity.html":{}}}],["defined",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"controllers/ArticleController.html":{},"classes/ArticleEntity.html":{},"modules/ArticleModule.html":{},"injectables/ArticleService.html":{},"injectables/AuthMiddleware.html":{},"classes/BaseController.html":{},"classes/Comment.html":{},"controllers/CorporationController.html":{},"classes/CorporationEntity.html":{},"modules/CorporationModule.html":{},"injectables/CorporationService.html":{},"classes/CreateArticleDto.html":{},"classes/CreateCommentDto.html":{},"classes/CreateCorporationDto.html":{},"classes/CreateErrorLogDto.html":{},"classes/CreateGroupDto.html":{},"classes/CreateListDto.html":{},"classes/CreateListEntryDto.html":{},"classes/CreateMenuDto.html":{},"classes/CreateMenuEntryDto.html":{},"classes/CreateMenuEntryPointDto.html":{},"classes/CreateRoleAppDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSiteDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabaseConfig.html":{},"classes/ErrorLogEntity.html":{},"classes/FollowsEntity.html":{},"controllers/GroupController.html":{},"classes/GroupEntity.html":{},"modules/GroupModule.html":{},"injectables/GroupService.html":{},"controllers/ListController.html":{},"classes/ListEntity.html":{},"classes/ListEntryEntity.html":{},"modules/ListModule.html":{},"injectables/ListService.html":{},"classes/LoginUserDto.html":{},"classes/MenuAppEntity.html":{},"controllers/MenuController.html":{},"classes/MenuEntryEntity.html":{},"modules/MenuModule.html":{},"injectables/MenuService.html":{},"classes/MyLogger.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"controllers/RoleController.html":{},"classes/RoleEntity.html":{},"classes/RoleMenuAppEntity.html":{},"classes/RoleMenuEntryEntity.html":{},"modules/RoleModule.html":{},"injectables/RoleService.html":{},"controllers/SiteController.html":{},"classes/SiteEntity.html":{},"modules/SiteModule.html":{},"injectables/SiteService.html":{},"controllers/TagController.html":{},"classes/TagEntity.html":{},"modules/TagModule.html":{},"injectables/TagService.html":{},"classes/ToIntegerPipe.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"classes/UserEntity.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{}}}],["delete",{"_index":92,"title":{},"body":{"controllers/ArticleController.html":{},"injectables/ArticleService.html":{},"controllers/CorporationController.html":{},"injectables/CorporationService.html":{},"controllers/GroupController.html":{},"injectables/GroupService.html":{},"controllers/ListController.html":{},"injectables/ListService.html":{},"controllers/MenuController.html":{},"injectables/MenuService.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"controllers/RoleController.html":{},"injectables/RoleService.html":{},"controllers/SiteController.html":{},"injectables/SiteService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["delete(':slug",{"_index":217,"title":{},"body":{"controllers/ArticleController.html":{},"controllers/CorporationController.html":{}}}],["delete(':slug/comments/:id",{"_index":224,"title":{},"body":{"controllers/ArticleController.html":{}}}],["delete(':slug/favorite",{"_index":235,"title":{},"body":{"controllers/ArticleController.html":{}}}],["delete(':username/follow",{"_index":1147,"title":{},"body":{"controllers/ProfileController.html":{}}}],["delete('group/:slug",{"_index":800,"title":{},"body":{"controllers/GroupController.html":{}}}],["delete('list/:slug",{"_index":892,"title":{},"body":{"controllers/ListController.html":{}}}],["delete('menu/:slug",{"_index":1024,"title":{},"body":{"controllers/MenuController.html":{}}}],["delete('role/:slug",{"_index":1236,"title":{},"body":{"controllers/RoleController.html":{}}}],["delete('site/:slug",{"_index":1362,"title":{},"body":{"controllers/SiteController.html":{}}}],["delete('users/:slug",{"_index":1512,"title":{},"body":{"controllers/UserController.html":{}}}],["delete(@param",{"_index":218,"title":{},"body":{"controllers/ArticleController.html":{},"controllers/CorporationController.html":{},"controllers/GroupController.html":{},"controllers/ListController.html":{},"controllers/MenuController.html":{},"controllers/RoleController.html":{},"controllers/SiteController.html":{},"controllers/UserController.html":{}}}],["delete(email",{"_index":1589,"title":{},"body":{"injectables/UserService.html":{}}}],["delete(id",{"_index":604,"title":{},"body":{"injectables/CorporationService.html":{},"injectables/GroupService.html":{},"injectables/ListService.html":{},"injectables/MenuService.html":{},"injectables/RoleService.html":{},"injectables/SiteService.html":{}}}],["delete(params",{"_index":128,"title":{},"body":{"controllers/ArticleController.html":{},"controllers/CorporationController.html":{},"controllers/GroupController.html":{},"controllers/ListController.html":{},"controllers/MenuController.html":{},"controllers/RoleController.html":{},"controllers/SiteController.html":{},"controllers/UserController.html":{}}}],["delete(slug",{"_index":357,"title":{},"body":{"injectables/ArticleService.html":{}}}],["deletecomment",{"_index":93,"title":{},"body":{"controllers/ArticleController.html":{},"injectables/ArticleService.html":{}}}],["deletecomment(@param",{"_index":225,"title":{},"body":{"controllers/ArticleController.html":{}}}],["deletecomment(params",{"_index":133,"title":{},"body":{"controllers/ArticleController.html":{}}}],["deletecomment(slug",{"_index":359,"title":{},"body":{"injectables/ArticleService.html":{}}}],["deletecomments",{"_index":430,"title":{},"body":{"injectables/ArticleService.html":{}}}],["deleted",{"_index":216,"title":{},"body":{"controllers/ArticleController.html":{},"controllers/CorporationController.html":{}}}],["deleted.'})@apiresponse({status",{"_index":129,"title":{},"body":{"controllers/ArticleController.html":{},"controllers/CorporationController.html":{}}}],["deleteindex",{"_index":426,"title":{},"body":{"injectables/ArticleService.html":{}}}],["deleteresult",{"_index":377,"title":{},"body":{"injectables/ArticleService.html":{},"injectables/CorporationService.html":{},"injectables/GroupService.html":{},"injectables/ListService.html":{},"injectables/MenuService.html":{},"injectables/RoleService.html":{},"injectables/SiteService.html":{},"injectables/UserService.html":{}}}],["dependencies",{"_index":30,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/ArticleModule.html":{},"modules/CorporationModule.html":{},"modules/ErrorlogModule.html":{},"modules/GroupModule.html":{},"modules/ListModule.html":{},"modules/MenuModule.html":{},"modules/ProfileModule.html":{},"modules/RoleModule.html":{},"modules/SiteModule.html":{},"modules/SqldirectModule.html":{},"modules/TagModule.html":{},"modules/UserModule.html":{},"modules/ViewModule.html":{},"dependencies.html":{},"overview.html":{}}}],["desc",{"_index":402,"title":{},"body":{"injectables/ArticleService.html":{}}}],["description",{"_index":108,"title":{},"body":{"controllers/ArticleController.html":{},"interfaces/ArticleData.html":{},"classes/ArticleEntity.html":{},"interfaces/ArticleRO.html":{},"interfaces/ArticlesRO.html":{},"interfaces/CommentsRO.html":{},"controllers/CorporationController.html":{},"interfaces/CorporationData.html":{},"classes/CorporationEntity.html":{},"interfaces/CorporationRO.html":{},"injectables/CorporationService.html":{},"classes/CreateArticleDto.html":{},"classes/CreateCorporationDto.html":{},"classes/CreateErrorLogDto.html":{},"classes/CreateGroupDto.html":{},"classes/CreateListDto.html":{},"classes/CreateMenuDto.html":{},"classes/CreateRoleAppDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSiteDto.html":{},"classes/ErrorLogEntity.html":{},"interfaces/GroupData.html":{},"classes/GroupEntity.html":{},"interfaces/GroupRO.html":{},"injectables/GroupService.html":{},"interfaces/ListData.html":{},"classes/ListEntity.html":{},"interfaces/ListEntry.html":{},"classes/ListEntryEntity.html":{},"interfaces/ListEntryRO.html":{},"interfaces/ListRO.html":{},"injectables/ListService.html":{},"classes/MenuAppEntity.html":{},"classes/MenuEntryEntity.html":{},"injectables/MenuService.html":{},"interfaces/RoleData.html":{},"classes/RoleEntity.html":{},"interfaces/RoleRO.html":{},"injectables/RoleService.html":{},"interfaces/SiteData.html":{},"classes/SiteEntity.html":{},"interfaces/SiteRO.html":{},"injectables/SiteService.html":{}}}],["desription",{"_index":695,"title":{},"body":{"classes/CreateListEntryDto.html":{}}}],["dev",{"_index":1770,"title":{},"body":{"miscellaneous/variables.html":{}}}],["different",{"_index":1277,"title":{},"body":{"classes/RoleEntity.html":{}}}],["documentation",{"_index":1675,"title":{},"body":{"coverage.html":{}}}],["dotenv",{"_index":1719,"title":{},"body":{"dependencies.html":{}}}],["dto",{"_index":174,"title":{},"body":{"controllers/ArticleController.html":{},"injectables/ArticleService.html":{},"controllers/CorporationController.html":{},"injectables/CorporationService.html":{},"controllers/GroupController.html":{},"injectables/GroupService.html":{},"controllers/ListController.html":{},"injectables/ListService.html":{},"controllers/MenuController.html":{},"injectables/MenuService.html":{},"controllers/RoleController.html":{},"injectables/RoleService.html":{},"controllers/SiteController.html":{},"injectables/SiteService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["eager",{"_index":269,"title":{},"body":{"classes/ArticleEntity.html":{},"classes/ListEntity.html":{}}}],["el.followingid",{"_index":415,"title":{},"body":{"injectables/ArticleService.html":{}}}],["el.id",{"_index":400,"title":{},"body":{"injectables/ArticleService.html":{}}}],["el.property",{"_index":1656,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["email",{"_index":557,"title":{},"body":{"controllers/CorporationController.html":{},"classes/CreateUserDto.html":{},"classes/LoginUserDto.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"interfaces/UserData.html":{},"classes/UserEntity.html":{},"interfaces/UserRO.html":{},"injectables/UserService.html":{}}}],["entities",{"_index":1772,"title":{},"body":{"miscellaneous/variables.html":{}}}],["entity",{"_index":292,"title":{},"body":{"classes/ArticleEntity.html":{},"classes/Comment.html":{},"classes/CorporationEntity.html":{},"classes/ErrorLogEntity.html":{},"classes/FollowsEntity.html":{},"classes/GroupEntity.html":{},"classes/ListEntity.html":{},"classes/ListEntryEntity.html":{},"classes/MenuAppEntity.html":{},"classes/MenuEntryEntity.html":{},"classes/RoleEntity.html":{},"classes/RoleMenuAppEntity.html":{},"classes/RoleMenuEntryEntity.html":{},"classes/SiteEntity.html":{},"classes/TagEntity.html":{},"classes/UserEntity.html":{}}}],["entity('article",{"_index":301,"title":{},"body":{"classes/ArticleEntity.html":{}}}],["entity('corporation",{"_index":585,"title":{},"body":{"classes/CorporationEntity.html":{}}}],["entity('errorlog",{"_index":774,"title":{},"body":{"classes/ErrorLogEntity.html":{}}}],["entity('follows",{"_index":791,"title":{},"body":{"classes/FollowsEntity.html":{}}}],["entity('group",{"_index":848,"title":{},"body":{"classes/GroupEntity.html":{}}}],["entity('list",{"_index":936,"title":{},"body":{"classes/ListEntity.html":{}}}],["entity('listentry",{"_index":944,"title":{},"body":{"classes/ListEntryEntity.html":{}}}],["entity('menuapp",{"_index":1013,"title":{},"body":{"classes/MenuAppEntity.html":{}}}],["entity('menuentry",{"_index":1071,"title":{},"body":{"classes/MenuEntryEntity.html":{}}}],["entity('role",{"_index":1275,"title":{},"body":{"classes/RoleEntity.html":{}}}],["entity('rolemenuapp",{"_index":1301,"title":{},"body":{"classes/RoleMenuAppEntity.html":{}}}],["entity('rolemenuentry",{"_index":1317,"title":{},"body":{"classes/RoleMenuEntryEntity.html":{}}}],["entity('site",{"_index":1399,"title":{},"body":{"classes/SiteEntity.html":{}}}],["entity('tag",{"_index":1470,"title":{},"body":{"classes/TagEntity.html":{}}}],["entity('user",{"_index":1567,"title":{},"body":{"classes/UserEntity.html":{}}}],["equal",{"_index":1218,"title":{},"body":{"injectables/ProfileService.html":{}}}],["error",{"_index":1117,"title":{},"body":{"classes/MyLogger.html":{}}}],["error(message",{"_index":1124,"title":{},"body":{"classes/MyLogger.html":{}}}],["errorcode",{"_index":670,"title":{},"body":{"classes/CreateErrorLogDto.html":{},"classes/ErrorLogEntity.html":{}}}],["errorcodehtml",{"_index":671,"title":{},"body":{"classes/CreateErrorLogDto.html":{},"classes/ErrorLogEntity.html":{}}}],["errorlog",{"_index":778,"title":{},"body":{"controllers/ErrorlogController.html":{}}}],["errorlog.dto.ts",{"_index":669,"title":{},"body":{"classes/CreateErrorLogDto.html":{},"coverage.html":{}}}],["errorlog.dto.ts:12",{"_index":675,"title":{},"body":{"classes/CreateErrorLogDto.html":{}}}],["errorlog.dto.ts:14",{"_index":676,"title":{},"body":{"classes/CreateErrorLogDto.html":{}}}],["errorlog.dto.ts:6",{"_index":677,"title":{},"body":{"classes/CreateErrorLogDto.html":{}}}],["errorlog.dto.ts:9",{"_index":673,"title":{},"body":{"classes/CreateErrorLogDto.html":{}}}],["errorlog.service",{"_index":784,"title":{},"body":{"modules/ErrorlogModule.html":{}}}],["errorlog/errorlog.module",{"_index":71,"title":{},"body":{"modules/AppModule.html":{}}}],["errorlogcontroller",{"_index":776,"title":{"controllers/ErrorlogController.html":{}},"body":{"controllers/ErrorlogController.html":{},"coverage.html":{}}}],["errorlogentity",{"_index":761,"title":{"classes/ErrorLogEntity.html":{}},"body":{"classes/ErrorLogEntity.html":{},"coverage.html":{}}}],["errorlogmodule",{"_index":40,"title":{"modules/ErrorlogModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ErrorlogModule.html":{},"modules.html":{},"overview.html":{}}}],["errorlogservice",{"_index":782,"title":{"injectables/ErrorlogService.html":{}},"body":{"modules/ErrorlogModule.html":{},"injectables/ErrorlogService.html":{},"coverage.html":{},"overview.html":{}}}],["errors",{"_index":626,"title":{},"body":{"injectables/CorporationService.html":{},"injectables/GroupService.html":{},"injectables/ListService.html":{},"injectables/MenuService.html":{},"injectables/RoleService.html":{},"injectables/SiteService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{}}}],["errors.foreach(el",{"_index":1654,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["errors.length",{"_index":628,"title":{},"body":{"injectables/CorporationService.html":{},"injectables/GroupService.html":{},"injectables/ListService.html":{},"injectables/MenuService.html":{},"injectables/RoleService.html":{},"injectables/SiteService.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{}}}],["executioncontext",{"_index":1777,"title":{},"body":{"miscellaneous/variables.html":{}}}],["exp",{"_index":1624,"title":{},"body":{"injectables/UserService.html":{}}}],["exp.gettime",{"_index":1631,"title":{},"body":{"injectables/UserService.html":{}}}],["exp.setdate(today.getdate",{"_index":1626,"title":{},"body":{"injectables/UserService.html":{}}}],["export",{"_index":18,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/ArticleController.html":{},"interfaces/ArticleData.html":{},"classes/ArticleEntity.html":{},"modules/ArticleModule.html":{},"interfaces/ArticleRO.html":{},"injectables/ArticleService.html":{},"interfaces/ArticlesRO.html":{},"injectables/AuthMiddleware.html":{},"classes/BaseController.html":{},"classes/Comment.html":{},"controllers/CommentController.html":{},"modules/CommentModule.html":{},"injectables/CommentService.html":{},"interfaces/CommentsRO.html":{},"controllers/CorporationController.html":{},"interfaces/CorporationData.html":{},"classes/CorporationEntity.html":{},"modules/CorporationModule.html":{},"interfaces/CorporationRO.html":{},"injectables/CorporationService.html":{},"classes/CreateArticleDto.html":{},"classes/CreateCommentDto.html":{},"classes/CreateCorporationDto.html":{},"classes/CreateErrorLogDto.html":{},"classes/CreateGroupDto.html":{},"classes/CreateListDto.html":{},"classes/CreateListEntryDto.html":{},"classes/CreateMenuDto.html":{},"classes/CreateMenuEntryDto.html":{},"classes/CreateMenuEntryPointDto.html":{},"classes/CreateRoleAppDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSiteDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabaseConfig.html":{},"classes/ErrorLogEntity.html":{},"controllers/ErrorlogController.html":{},"modules/ErrorlogModule.html":{},"injectables/ErrorlogService.html":{},"classes/FollowsEntity.html":{},"controllers/GroupController.html":{},"interfaces/GroupData.html":{},"classes/GroupEntity.html":{},"modules/GroupModule.html":{},"interfaces/GroupRO.html":{},"injectables/GroupService.html":{},"controllers/ListController.html":{},"interfaces/ListData.html":{},"classes/ListEntity.html":{},"interfaces/ListEntry.html":{},"classes/ListEntryEntity.html":{},"interfaces/ListEntryRO.html":{},"modules/ListModule.html":{},"interfaces/ListRO.html":{},"injectables/ListService.html":{},"classes/LoginUserDto.html":{},"interfaces/MenuAppData.html":{},"classes/MenuAppEntity.html":{},"interfaces/MenuAppEntry.html":{},"controllers/MenuController.html":{},"classes/MenuEntryEntity.html":{},"interfaces/MenuEntryRO.html":{},"modules/MenuModule.html":{},"interfaces/MenuRO.html":{},"injectables/MenuService.html":{},"classes/MyLogger.html":{},"controllers/ProfileController.html":{},"interfaces/ProfileData.html":{},"modules/ProfileModule.html":{},"interfaces/ProfileRO.html":{},"injectables/ProfileService.html":{},"controllers/RoleController.html":{},"interfaces/RoleData.html":{},"classes/RoleEntity.html":{},"classes/RoleMenuAppEntity.html":{},"classes/RoleMenuEntryEntity.html":{},"modules/RoleModule.html":{},"interfaces/RoleRO.html":{},"injectables/RoleService.html":{},"controllers/SiteController.html":{},"interfaces/SiteData.html":{},"classes/SiteEntity.html":{},"modules/SiteModule.html":{},"interfaces/SiteRO.html":{},"injectables/SiteService.html":{},"controllers/SqldirectController.html":{},"modules/SqldirectModule.html":{},"injectables/SqldirectService.html":{},"controllers/TagController.html":{},"classes/TagEntity.html":{},"modules/TagModule.html":{},"injectables/TagService.html":{},"classes/ToIntegerPipe.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"interfaces/UserData.html":{},"classes/UserEntity.html":{},"modules/UserModule.html":{},"interfaces/UserRO.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{},"controllers/ViewController.html":{},"modules/ViewModule.html":{},"injectables/ViewService.html":{}}}],["exports",{"_index":35,"title":{},"body":{"modules/AppModule.html":{},"modules/ArticleModule.html":{},"modules/CorporationModule.html":{},"modules/ErrorlogModule.html":{},"modules/GroupModule.html":{},"modules/ListModule.html":{},"modules/MenuModule.html":{},"modules/ProfileModule.html":{},"modules/RoleModule.html":{},"modules/SiteModule.html":{},"modules/SqldirectModule.html":{},"modules/TagModule.html":{},"modules/UserModule.html":{},"modules/ViewModule.html":{},"overview.html":{}}}],["express",{"_index":171,"title":{},"body":{"controllers/ArticleController.html":{},"injectables/AuthMiddleware.html":{},"controllers/CorporationController.html":{},"controllers/GroupController.html":{},"controllers/ListController.html":{},"controllers/MenuController.html":{},"controllers/ProfileController.html":{},"controllers/RoleController.html":{},"controllers/SiteController.html":{},"controllers/UserController.html":{},"dependencies.html":{}}}],["extractjwt",{"_index":482,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["failed",{"_index":636,"title":{},"body":{"injectables/CorporationService.html":{},"injectables/GroupService.html":{},"injectables/ListService.html":{},"injectables/MenuService.html":{},"injectables/RoleService.html":{},"injectables/SiteService.html":{},"classes/ToIntegerPipe.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{}}}],["false",{"_index":571,"title":{},"body":{"classes/CorporationEntity.html":{},"classes/GroupEntity.html":{},"classes/MenuAppEntity.html":{},"classes/MenuEntryEntity.html":{},"injectables/ProfileService.html":{},"classes/RoleEntity.html":{},"classes/SiteEntity.html":{},"miscellaneous/variables.html":{}}}],["favorite",{"_index":94,"title":{},"body":{"controllers/ArticleController.html":{},"injectables/ArticleService.html":{}}}],["favorite(@user('id",{"_index":231,"title":{},"body":{"controllers/ArticleController.html":{}}}],["favorite(id",{"_index":361,"title":{},"body":{"injectables/ArticleService.html":{}}}],["favorite(userid",{"_index":136,"title":{},"body":{"controllers/ArticleController.html":{}}}],["favoritecount",{"_index":259,"title":{},"body":{"classes/ArticleEntity.html":{}}}],["favorited",{"_index":229,"title":{},"body":{"controllers/ArticleController.html":{},"interfaces/ArticleData.html":{},"interfaces/ArticleRO.html":{},"injectables/ArticleService.html":{},"interfaces/ArticlesRO.html":{},"interfaces/CommentsRO.html":{}}}],["favorited.'})@apiresponse({status",{"_index":137,"title":{},"body":{"controllers/ArticleController.html":{}}}],["favorites",{"_index":1542,"title":{},"body":{"classes/UserEntity.html":{}}}],["favoritescount",{"_index":244,"title":{},"body":{"interfaces/ArticleData.html":{},"interfaces/ArticleRO.html":{},"interfaces/ArticlesRO.html":{},"interfaces/CommentsRO.html":{}}}],["feed",{"_index":195,"title":{},"body":{"controllers/ArticleController.html":{}}}],["feed'})@apiresponse({status",{"_index":154,"title":{},"body":{"controllers/ArticleController.html":{}}}],["feed.'})@apiresponse({status",{"_index":155,"title":{},"body":{"controllers/ArticleController.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/ArticleController.html":{},"interfaces/ArticleData.html":{},"classes/ArticleEntity.html":{},"modules/ArticleModule.html":{},"interfaces/ArticleRO.html":{},"injectables/ArticleService.html":{},"interfaces/ArticlesRO.html":{},"injectables/AuthMiddleware.html":{},"classes/BaseController.html":{},"classes/Comment.html":{},"controllers/CommentController.html":{},"modules/CommentModule.html":{},"injectables/CommentService.html":{},"interfaces/CommentsRO.html":{},"controllers/CorporationController.html":{},"interfaces/CorporationData.html":{},"classes/CorporationEntity.html":{},"modules/CorporationModule.html":{},"interfaces/CorporationRO.html":{},"injectables/CorporationService.html":{},"classes/CreateArticleDto.html":{},"classes/CreateCommentDto.html":{},"classes/CreateCorporationDto.html":{},"classes/CreateErrorLogDto.html":{},"classes/CreateGroupDto.html":{},"classes/CreateListDto.html":{},"classes/CreateListEntryDto.html":{},"classes/CreateMenuDto.html":{},"classes/CreateMenuEntryDto.html":{},"classes/CreateMenuEntryPointDto.html":{},"classes/CreateRoleAppDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSiteDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabaseConfig.html":{},"classes/ErrorLogEntity.html":{},"controllers/ErrorlogController.html":{},"modules/ErrorlogModule.html":{},"injectables/ErrorlogService.html":{},"classes/FollowsEntity.html":{},"controllers/GroupController.html":{},"interfaces/GroupData.html":{},"classes/GroupEntity.html":{},"modules/GroupModule.html":{},"interfaces/GroupRO.html":{},"injectables/GroupService.html":{},"controllers/ListController.html":{},"interfaces/ListData.html":{},"classes/ListEntity.html":{},"interfaces/ListEntry.html":{},"classes/ListEntryEntity.html":{},"interfaces/ListEntryRO.html":{},"modules/ListModule.html":{},"interfaces/ListRO.html":{},"injectables/ListService.html":{},"classes/LoginUserDto.html":{},"interfaces/MenuAppData.html":{},"classes/MenuAppEntity.html":{},"interfaces/MenuAppEntry.html":{},"controllers/MenuController.html":{},"classes/MenuEntryEntity.html":{},"interfaces/MenuEntryRO.html":{},"modules/MenuModule.html":{},"interfaces/MenuRO.html":{},"injectables/MenuService.html":{},"classes/MyLogger.html":{},"controllers/ProfileController.html":{},"interfaces/ProfileData.html":{},"modules/ProfileModule.html":{},"interfaces/ProfileRO.html":{},"injectables/ProfileService.html":{},"controllers/RoleController.html":{},"interfaces/RoleData.html":{},"classes/RoleEntity.html":{},"classes/RoleMenuAppEntity.html":{},"classes/RoleMenuEntryEntity.html":{},"modules/RoleModule.html":{},"interfaces/RoleRO.html":{},"injectables/RoleService.html":{},"controllers/SiteController.html":{},"interfaces/SiteData.html":{},"classes/SiteEntity.html":{},"modules/SiteModule.html":{},"interfaces/SiteRO.html":{},"injectables/SiteService.html":{},"controllers/SqldirectController.html":{},"modules/SqldirectModule.html":{},"injectables/SqldirectService.html":{},"controllers/TagController.html":{},"classes/TagEntity.html":{},"modules/TagModule.html":{},"injectables/TagService.html":{},"classes/ToIntegerPipe.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"interfaces/UserData.html":{},"classes/UserEntity.html":{},"modules/UserModule.html":{},"interfaces/UserRO.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{},"controllers/ViewController.html":{},"modules/ViewModule.html":{},"injectables/ViewService.html":{},"coverage.html":{}}}],["findall",{"_index":95,"title":{},"body":{"controllers/ArticleController.html":{},"injectables/ArticleService.html":{},"controllers/CorporationController.html":{},"injectables/CorporationService.html":{},"controllers/GroupController.html":{},"injectables/GroupService.html":{},"controllers/ListController.html":{},"injectables/ListService.html":{},"controllers/MenuController.html":{},"injectables/MenuService.html":{},"injectables/ProfileService.html":{},"controllers/RoleController.html":{},"injectables/RoleService.html":{},"controllers/SiteController.html":{},"injectables/SiteService.html":{},"controllers/TagController.html":{},"injectables/TagService.html":{},"injectables/UserService.html":{}}}],["findall(@query",{"_index":192,"title":{},"body":{"controllers/ArticleController.html":{}}}],["findall(query",{"_index":140,"title":{},"body":{"controllers/ArticleController.html":{},"injectables/ArticleService.html":{}}}],["findbyemail",{"_index":1583,"title":{},"body":{"injectables/UserService.html":{}}}],["findbyemail(email",{"_index":1592,"title":{},"body":{"injectables/UserService.html":{}}}],["findbyid",{"_index":596,"title":{},"body":{"injectables/CorporationService.html":{},"injectables/GroupService.html":{},"injectables/ListService.html":{},"injectables/MenuService.html":{},"injectables/RoleService.html":{},"injectables/SiteService.html":{},"injectables/UserService.html":{}}}],["findbyid(id",{"_index":607,"title":{},"body":{"injectables/CorporationService.html":{},"injectables/GroupService.html":{},"injectables/ListService.html":{},"injectables/MenuService.html":{},"injectables/RoleService.html":{},"injectables/SiteService.html":{},"injectables/UserService.html":{}}}],["findcomments",{"_index":96,"title":{},"body":{"controllers/ArticleController.html":{},"injectables/ArticleService.html":{}}}],["findcomments(@param('slug",{"_index":202,"title":{},"body":{"controllers/ArticleController.html":{}}}],["findcomments(slug",{"_index":147,"title":{},"body":{"controllers/ArticleController.html":{},"injectables/ArticleService.html":{}}}],["findfeed",{"_index":344,"title":{},"body":{"injectables/ArticleService.html":{}}}],["findfeed(userid",{"_index":365,"title":{},"body":{"injectables/ArticleService.html":{}}}],["findlistentries(@param('slug",{"_index":916,"title":{},"body":{"controllers/ListController.html":{}}}],["findlistentry(slug",{"_index":979,"title":{},"body":{"injectables/ListService.html":{}}}],["findme",{"_index":1507,"title":{},"body":{"controllers/UserController.html":{}}}],["findme(@corporation('email",{"_index":556,"title":{},"body":{"controllers/CorporationController.html":{}}}],["findme(@user('email",{"_index":1526,"title":{},"body":{"controllers/UserController.html":{}}}],["findme(email",{"_index":1514,"title":{},"body":{"controllers/UserController.html":{}}}],["findmenuentries(@param('slug",{"_index":1046,"title":{},"body":{"controllers/MenuController.html":{}}}],["findmlist",{"_index":795,"title":{},"body":{"controllers/GroupController.html":{},"controllers/ListController.html":{},"controllers/RoleController.html":{},"controllers/SiteController.html":{}}}],["findmlist(@param('id",{"_index":824,"title":{},"body":{"controllers/GroupController.html":{},"controllers/ListController.html":{},"controllers/RoleController.html":{},"controllers/SiteController.html":{}}}],["findmlist(id",{"_index":804,"title":{},"body":{"controllers/GroupController.html":{},"controllers/ListController.html":{},"controllers/RoleController.html":{},"controllers/SiteController.html":{}}}],["findmmenu",{"_index":1019,"title":{},"body":{"controllers/MenuController.html":{}}}],["findmmenu(@param('id",{"_index":1038,"title":{},"body":{"controllers/MenuController.html":{}}}],["findmmenu(id",{"_index":1027,"title":{},"body":{"controllers/MenuController.html":{}}}],["findone",{"_index":97,"title":{},"body":{"controllers/ArticleController.html":{},"injectables/ArticleService.html":{},"injectables/CorporationService.html":{},"injectables/GroupService.html":{},"injectables/ListService.html":{},"injectables/MenuService.html":{},"injectables/ProfileService.html":{},"injectables/RoleService.html":{},"injectables/SiteService.html":{},"injectables/UserService.html":{}}}],["findone(@param('slug",{"_index":200,"title":{},"body":{"controllers/ArticleController.html":{},"controllers/CorporationController.html":{}}}],["findone(options",{"_index":1184,"title":{},"body":{"injectables/ProfileService.html":{}}}],["findone(slug",{"_index":150,"title":{},"body":{"controllers/ArticleController.html":{}}}],["findone(undefined",{"_index":609,"title":{},"body":{"injectables/CorporationService.html":{},"injectables/GroupService.html":{},"injectables/ListService.html":{},"injectables/MenuService.html":{},"injectables/RoleService.html":{},"injectables/SiteService.html":{},"injectables/UserService.html":{}}}],["findone(where",{"_index":367,"title":{},"body":{"injectables/ArticleService.html":{}}}],["findone({email",{"_index":1601,"title":{},"body":{"injectables/UserService.html":{}}}],["findone({id",{"_index":617,"title":{},"body":{"injectables/CorporationService.html":{},"injectables/GroupService.html":{},"injectables/ListService.html":{},"injectables/MenuService.html":{},"injectables/RoleService.html":{},"injectables/SiteService.html":{}}}],["findprofile",{"_index":1180,"title":{},"body":{"injectables/ProfileService.html":{}}}],["findprofile(id",{"_index":1189,"title":{},"body":{"injectables/ProfileService.html":{}}}],["follow",{"_index":1137,"title":{},"body":{"controllers/ProfileController.html":{},"injectables/ProfileService.html":{}}}],["follow(@user('email",{"_index":1158,"title":{},"body":{"controllers/ProfileController.html":{}}}],["follow(email",{"_index":1140,"title":{},"body":{"controllers/ProfileController.html":{}}}],["follow(followeremail",{"_index":1192,"title":{},"body":{"injectables/ProfileService.html":{}}}],["followeremail",{"_index":1194,"title":{},"body":{"injectables/ProfileService.html":{}}}],["followerid",{"_index":411,"title":{},"body":{"injectables/ArticleService.html":{},"classes/FollowsEntity.html":{},"injectables/ProfileService.html":{}}}],["followeruser",{"_index":1214,"title":{},"body":{"injectables/ProfileService.html":{}}}],["followeruser.id",{"_index":1219,"title":{},"body":{"injectables/ProfileService.html":{}}}],["following",{"_index":1165,"title":{},"body":{"interfaces/ProfileData.html":{},"interfaces/ProfileRO.html":{},"injectables/ProfileService.html":{}}}],["followingid",{"_index":787,"title":{},"body":{"classes/FollowsEntity.html":{},"injectables/ProfileService.html":{}}}],["followinguser",{"_index":1213,"title":{},"body":{"injectables/ProfileService.html":{}}}],["followinguser.bio",{"_index":1225,"title":{},"body":{"injectables/ProfileService.html":{}}}],["followinguser.email",{"_index":1216,"title":{},"body":{"injectables/ProfileService.html":{}}}],["followinguser.id",{"_index":1220,"title":{},"body":{"injectables/ProfileService.html":{}}}],["followinguser.image",{"_index":1226,"title":{},"body":{"injectables/ProfileService.html":{}}}],["followinguser.username",{"_index":1224,"title":{},"body":{"injectables/ProfileService.html":{}}}],["followingusername",{"_index":1190,"title":{},"body":{"injectables/ProfileService.html":{}}}],["follows",{"_index":1207,"title":{},"body":{"injectables/ProfileService.html":{}}}],["follows.entity",{"_index":1174,"title":{},"body":{"modules/ProfileModule.html":{},"injectables/ProfileService.html":{}}}],["follows.followerid",{"_index":1221,"title":{},"body":{"injectables/ProfileService.html":{}}}],["follows.followingid",{"_index":1222,"title":{},"body":{"injectables/ProfileService.html":{}}}],["followsentity",{"_index":321,"title":{"classes/FollowsEntity.html":{}},"body":{"modules/ArticleModule.html":{},"injectables/ArticleService.html":{},"classes/FollowsEntity.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"coverage.html":{}}}],["followsrepository",{"_index":351,"title":{},"body":{"injectables/ArticleService.html":{},"injectables/ProfileService.html":{}}}],["forbidden",{"_index":196,"title":{},"body":{"controllers/ArticleController.html":{},"controllers/CorporationController.html":{}}}],["forbidden.'})@delete(':slug",{"_index":130,"title":{},"body":{"controllers/ArticleController.html":{},"controllers/CorporationController.html":{}}}],["forbidden.'})@delete(':slug/comments/:id",{"_index":134,"title":{},"body":{"controllers/ArticleController.html":{}}}],["forbidden.'})@delete(':slug/favorite",{"_index":160,"title":{},"body":{"controllers/ArticleController.html":{}}}],["forbidden.'})@get('feed",{"_index":156,"title":{},"body":{"controllers/ArticleController.html":{}}}],["forbidden.'})@post",{"_index":113,"title":{},"body":{"controllers/ArticleController.html":{},"controllers/CorporationController.html":{}}}],["forbidden.'})@post(':slug/comments",{"_index":125,"title":{},"body":{"controllers/ArticleController.html":{}}}],["forbidden.'})@post(':slug/favorite",{"_index":138,"title":{},"body":{"controllers/ArticleController.html":{}}}],["forbidden.'})@put(':slug",{"_index":164,"title":{},"body":{"controllers/ArticleController.html":{},"controllers/CorporationController.html":{}}}],["forroutes",{"_index":328,"title":{},"body":{"modules/ArticleModule.html":{}}}],["forroutes({path",{"_index":1176,"title":{},"body":{"modules/ProfileModule.html":{},"modules/UserModule.html":{}}}],["found",{"_index":506,"title":{},"body":{"injectables/AuthMiddleware.html":{},"injectables/CorporationService.html":{},"injectables/GroupService.html":{},"injectables/ListService.html":{},"injectables/MenuService.html":{},"injectables/RoleService.html":{},"injectables/SiteService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["function",{"_index":1693,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":1738,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["general",{"_index":1744,"title":{},"body":{"index.html":{}}}],["generatejwt",{"_index":1584,"title":{},"body":{"injectables/UserService.html":{}}}],["generatejwt(user",{"_index":1596,"title":{},"body":{"injectables/UserService.html":{}}}],["get(':slug",{"_index":151,"title":{},"body":{"controllers/ArticleController.html":{},"controllers/CorporationController.html":{}}}],["get(':slug/comments",{"_index":148,"title":{},"body":{"controllers/ArticleController.html":{}}}],["get(':slug/listentries",{"_index":915,"title":{},"body":{"controllers/ListController.html":{}}}],["get(':slug/menuentries",{"_index":1045,"title":{},"body":{"controllers/MenuController.html":{}}}],["get(':username",{"_index":1144,"title":{},"body":{"controllers/ProfileController.html":{}}}],["get('corporation",{"_index":555,"title":{},"body":{"controllers/CorporationController.html":{}}}],["get('feed",{"_index":197,"title":{},"body":{"controllers/ArticleController.html":{}}}],["get('group",{"_index":805,"title":{},"body":{"controllers/GroupController.html":{}}}],["get('list",{"_index":895,"title":{},"body":{"controllers/ListController.html":{}}}],["get('menu",{"_index":1028,"title":{},"body":{"controllers/MenuController.html":{}}}],["get('role",{"_index":1239,"title":{},"body":{"controllers/RoleController.html":{}}}],["get('site",{"_index":1365,"title":{},"body":{"controllers/SiteController.html":{}}}],["get('user",{"_index":1515,"title":{},"body":{"controllers/UserController.html":{}}}],["get()@apibody({type",{"_index":802,"title":{},"body":{"controllers/GroupController.html":{}}}],["getfeed",{"_index":98,"title":{},"body":{"controllers/ArticleController.html":{}}}],["getfeed(@user('id",{"_index":198,"title":{},"body":{"controllers/ArticleController.html":{}}}],["getfeed(userid",{"_index":153,"title":{},"body":{"controllers/ArticleController.html":{}}}],["getprofile",{"_index":1138,"title":{},"body":{"controllers/ProfileController.html":{}}}],["getprofile(@user('id",{"_index":1155,"title":{},"body":{"controllers/ProfileController.html":{}}}],["getprofile(userid",{"_index":1143,"title":{},"body":{"controllers/ProfileController.html":{}}}],["getrepository",{"_index":376,"title":{},"body":{"injectables/ArticleService.html":{},"injectables/CorporationService.html":{},"injectables/GroupService.html":{},"injectables/ListService.html":{},"injectables/MenuService.html":{},"injectables/RoleService.html":{},"injectables/SiteService.html":{},"injectables/UserService.html":{}}}],["getrepository(articleentity",{"_index":385,"title":{},"body":{"injectables/ArticleService.html":{}}}],["getrepository(userentity",{"_index":1603,"title":{},"body":{"injectables/UserService.html":{}}}],["gets",{"_index":213,"title":{},"body":{"controllers/ArticleController.html":{}}}],["getting",{"_index":1740,"title":{"index.html":{}},"body":{}}],["getuseridfromtoken",{"_index":515,"title":{},"body":{"classes/BaseController.html":{}}}],["getuseridfromtoken(authorization",{"_index":518,"title":{},"body":{"classes/BaseController.html":{}}}],["graph",{"_index":1750,"title":{},"body":{"modules.html":{}}}],["group",{"_index":794,"title":{},"body":{"controllers/GroupController.html":{},"interfaces/GroupData.html":{},"interfaces/GroupRO.html":{},"injectables/GroupService.html":{},"classes/RoleEntity.html":{}}}],["group.controller",{"_index":854,"title":{},"body":{"modules/GroupModule.html":{}}}],["group.description",{"_index":884,"title":{},"body":{"injectables/GroupService.html":{}}}],["group.dto.ts",{"_index":681,"title":{},"body":{"classes/CreateGroupDto.html":{},"coverage.html":{}}}],["group.dto.ts:12",{"_index":684,"title":{},"body":{"classes/CreateGroupDto.html":{}}}],["group.dto.ts:7",{"_index":682,"title":{},"body":{"classes/CreateGroupDto.html":{}}}],["group.entity",{"_index":815,"title":{},"body":{"controllers/GroupController.html":{},"modules/GroupModule.html":{},"injectables/GroupService.html":{}}}],["group.id",{"_index":882,"title":{},"body":{"injectables/GroupService.html":{}}}],["group.interface",{"_index":813,"title":{},"body":{"controllers/GroupController.html":{},"injectables/GroupService.html":{}}}],["group.name",{"_index":883,"title":{},"body":{"injectables/GroupService.html":{}}}],["group.role",{"_index":1287,"title":{},"body":{"classes/RoleEntity.html":{}}}],["group.service",{"_index":811,"title":{},"body":{"controllers/GroupController.html":{},"modules/GroupModule.html":{}}}],["group/group.entity",{"_index":1273,"title":{},"body":{"classes/RoleEntity.html":{}}}],["group/group.module",{"_index":66,"title":{},"body":{"modules/AppModule.html":{}}}],["groupcontroller",{"_index":792,"title":{"controllers/GroupController.html":{}},"body":{"controllers/GroupController.html":{},"modules/GroupModule.html":{},"coverage.html":{}}}],["groupdata",{"_index":799,"title":{"interfaces/GroupData.html":{}},"body":{"controllers/GroupController.html":{},"interfaces/GroupData.html":{},"interfaces/GroupRO.html":{},"coverage.html":{}}}],["groupentity",{"_index":814,"title":{"classes/GroupEntity.html":{}},"body":{"controllers/GroupController.html":{},"classes/GroupEntity.html":{},"modules/GroupModule.html":{},"injectables/GroupService.html":{},"classes/RoleEntity.html":{},"coverage.html":{}}}],["groupid",{"_index":720,"title":{},"body":{"classes/CreateMenuEntryPointDto.html":{}}}],["groupmodule",{"_index":41,"title":{"modules/GroupModule.html":{}},"body":{"modules/AppModule.html":{},"modules/GroupModule.html":{},"modules.html":{},"overview.html":{}}}],["grouprepository",{"_index":860,"title":{},"body":{"injectables/GroupService.html":{}}}],["groupro",{"_index":812,"title":{"interfaces/GroupRO.html":{}},"body":{"controllers/GroupController.html":{},"interfaces/GroupData.html":{},"interfaces/GroupRO.html":{},"injectables/GroupService.html":{},"coverage.html":{}}}],["groups",{"_index":1259,"title":{},"body":{"classes/RoleEntity.html":{}}}],["groupservice",{"_index":810,"title":{"injectables/GroupService.html":{}},"body":{"controllers/GroupController.html":{},"modules/GroupModule.html":{},"injectables/GroupService.html":{},"coverage.html":{},"overview.html":{}}}],["hashpassword",{"_index":1543,"title":{},"body":{"classes/UserEntity.html":{}}}],["host",{"_index":1767,"title":{},"body":{"miscellaneous/variables.html":{}}}],["httpexception",{"_index":478,"title":{},"body":{"injectables/AuthMiddleware.html":{},"injectables/CorporationService.html":{},"controllers/GroupController.html":{},"injectables/GroupService.html":{},"controllers/ListController.html":{},"injectables/ListService.html":{},"controllers/MenuController.html":{},"injectables/MenuService.html":{},"injectables/ProfileService.html":{},"controllers/RoleController.html":{},"injectables/RoleService.html":{},"controllers/SiteController.html":{},"injectables/SiteService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{}}}],["httpexception('follower",{"_index":1211,"title":{},"body":{"injectables/ProfileService.html":{}}}],["httpexception('followeremail",{"_index":1217,"title":{},"body":{"injectables/ProfileService.html":{}}}],["httpexception('followerid",{"_index":1227,"title":{},"body":{"injectables/ProfileService.html":{}}}],["httpexception('not",{"_index":510,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["httpexception('user",{"_index":505,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["httpexception({errors",{"_index":644,"title":{},"body":{"injectables/CorporationService.html":{},"injectables/GroupService.html":{},"injectables/ListService.html":{},"injectables/MenuService.html":{},"injectables/RoleService.html":{},"injectables/SiteService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["httpexception({message",{"_index":632,"title":{},"body":{"injectables/CorporationService.html":{},"injectables/GroupService.html":{},"injectables/ListService.html":{},"injectables/MenuService.html":{},"injectables/RoleService.html":{},"injectables/SiteService.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{}}}],["httpstatus",{"_index":481,"title":{},"body":{"injectables/AuthMiddleware.html":{},"injectables/CorporationService.html":{},"injectables/GroupService.html":{},"injectables/ListService.html":{},"injectables/MenuService.html":{},"injectables/ProfileService.html":{},"injectables/RoleService.html":{},"injectables/SiteService.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{}}}],["httpstatus.bad_request",{"_index":637,"title":{},"body":{"injectables/CorporationService.html":{},"injectables/GroupService.html":{},"injectables/ListService.html":{},"injectables/MenuService.html":{},"injectables/ProfileService.html":{},"injectables/RoleService.html":{},"injectables/SiteService.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{}}}],["httpstatus.unauthorized",{"_index":507,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["id",{"_index":227,"title":{},"body":{"controllers/ArticleController.html":{},"classes/ArticleEntity.html":{},"injectables/ArticleService.html":{},"classes/Comment.html":{},"classes/CorporationEntity.html":{},"injectables/CorporationService.html":{},"classes/CreateCorporationDto.html":{},"classes/CreateGroupDto.html":{},"classes/CreateListDto.html":{},"classes/CreateListEntryDto.html":{},"classes/CreateMenuDto.html":{},"classes/CreateMenuEntryDto.html":{},"classes/CreateMenuEntryPointDto.html":{},"classes/CreateRoleAppDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSiteDto.html":{},"classes/ErrorLogEntity.html":{},"classes/FollowsEntity.html":{},"controllers/GroupController.html":{},"classes/GroupEntity.html":{},"injectables/GroupService.html":{},"controllers/ListController.html":{},"classes/ListEntity.html":{},"classes/ListEntryEntity.html":{},"injectables/ListService.html":{},"classes/MenuAppEntity.html":{},"controllers/MenuController.html":{},"classes/MenuEntryEntity.html":{},"injectables/MenuService.html":{},"injectables/ProfileService.html":{},"controllers/RoleController.html":{},"classes/RoleEntity.html":{},"classes/RoleMenuAppEntity.html":{},"injectables/RoleService.html":{},"controllers/SiteController.html":{},"classes/SiteEntity.html":{},"injectables/SiteService.html":{},"classes/TagEntity.html":{},"classes/UserEntity.html":{},"injectables/UserService.html":{}}}],["identifier",{"_index":1676,"title":{},"body":{"coverage.html":{}}}],["ids",{"_index":398,"title":{},"body":{"injectables/ArticleService.html":{}}}],["if(!_profile",{"_index":1203,"title":{},"body":{"injectables/ProfileService.html":{}}}],["image",{"_index":1166,"title":{},"body":{"interfaces/ProfileData.html":{},"interfaces/ProfileRO.html":{},"injectables/ProfileService.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"interfaces/UserData.html":{},"classes/UserEntity.html":{},"interfaces/UserRO.html":{},"injectables/UserService.html":{}}}],["implementation",{"_index":1133,"title":{},"body":{"classes/MyLogger.html":{}}}],["implements",{"_index":326,"title":{},"body":{"modules/ArticleModule.html":{},"injectables/AuthMiddleware.html":{},"modules/CorporationModule.html":{},"injectables/DatabaseConfig.html":{},"modules/GroupModule.html":{},"modules/ListModule.html":{},"modules/MenuModule.html":{},"classes/MyLogger.html":{},"modules/ProfileModule.html":{},"modules/RoleModule.html":{},"modules/SiteModule.html":{},"modules/TagModule.html":{},"classes/ToIntegerPipe.html":{},"modules/UserModule.html":{},"injectables/ValidationPipe.html":{}}}],["import",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/ArticleController.html":{},"interfaces/ArticleData.html":{},"classes/ArticleEntity.html":{},"modules/ArticleModule.html":{},"interfaces/ArticleRO.html":{},"injectables/ArticleService.html":{},"interfaces/ArticlesRO.html":{},"injectables/AuthMiddleware.html":{},"classes/BaseController.html":{},"classes/Comment.html":{},"controllers/CommentController.html":{},"modules/CommentModule.html":{},"injectables/CommentService.html":{},"interfaces/CommentsRO.html":{},"controllers/CorporationController.html":{},"classes/CorporationEntity.html":{},"modules/CorporationModule.html":{},"injectables/CorporationService.html":{},"classes/CreateCorporationDto.html":{},"classes/CreateErrorLogDto.html":{},"classes/CreateGroupDto.html":{},"classes/CreateListDto.html":{},"classes/CreateListEntryDto.html":{},"classes/CreateMenuDto.html":{},"classes/CreateMenuEntryDto.html":{},"classes/CreateMenuEntryPointDto.html":{},"classes/CreateRoleAppDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSiteDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabaseConfig.html":{},"classes/ErrorLogEntity.html":{},"controllers/ErrorlogController.html":{},"modules/ErrorlogModule.html":{},"injectables/ErrorlogService.html":{},"classes/FollowsEntity.html":{},"controllers/GroupController.html":{},"classes/GroupEntity.html":{},"modules/GroupModule.html":{},"injectables/GroupService.html":{},"controllers/ListController.html":{},"interfaces/ListData.html":{},"classes/ListEntity.html":{},"interfaces/ListEntry.html":{},"classes/ListEntryEntity.html":{},"interfaces/ListEntryRO.html":{},"modules/ListModule.html":{},"interfaces/ListRO.html":{},"injectables/ListService.html":{},"classes/LoginUserDto.html":{},"interfaces/MenuAppData.html":{},"classes/MenuAppEntity.html":{},"interfaces/MenuAppEntry.html":{},"controllers/MenuController.html":{},"classes/MenuEntryEntity.html":{},"interfaces/MenuEntryRO.html":{},"modules/MenuModule.html":{},"interfaces/MenuRO.html":{},"injectables/MenuService.html":{},"classes/MyLogger.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"controllers/RoleController.html":{},"classes/RoleEntity.html":{},"classes/RoleMenuAppEntity.html":{},"classes/RoleMenuEntryEntity.html":{},"modules/RoleModule.html":{},"injectables/RoleService.html":{},"controllers/SiteController.html":{},"interfaces/SiteData.html":{},"classes/SiteEntity.html":{},"modules/SiteModule.html":{},"interfaces/SiteRO.html":{},"injectables/SiteService.html":{},"controllers/SqldirectController.html":{},"modules/SqldirectModule.html":{},"injectables/SqldirectService.html":{},"controllers/TagController.html":{},"classes/TagEntity.html":{},"modules/TagModule.html":{},"injectables/TagService.html":{},"classes/ToIntegerPipe.html":{},"controllers/UserController.html":{},"classes/UserEntity.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{},"controllers/ViewController.html":{},"modules/ViewModule.html":{},"injectables/ViewService.html":{}}}],["imports",{"_index":53,"title":{},"body":{"modules/AppModule.html":{},"modules/ArticleModule.html":{},"modules/CorporationModule.html":{},"modules/GroupModule.html":{},"modules/ListModule.html":{},"modules/MenuModule.html":{},"modules/ProfileModule.html":{},"modules/RoleModule.html":{},"modules/SiteModule.html":{},"modules/TagModule.html":{},"modules/UserModule.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"controllers/ArticleController.html":{},"interfaces/ArticleData.html":{},"classes/ArticleEntity.html":{},"interfaces/ArticleRO.html":{},"injectables/ArticleService.html":{},"interfaces/ArticlesRO.html":{},"injectables/AuthMiddleware.html":{},"classes/BaseController.html":{},"classes/Comment.html":{},"interfaces/CommentsRO.html":{},"controllers/CorporationController.html":{},"interfaces/CorporationData.html":{},"classes/CorporationEntity.html":{},"interfaces/CorporationRO.html":{},"injectables/CorporationService.html":{},"classes/CreateArticleDto.html":{},"classes/CreateCommentDto.html":{},"classes/CreateCorporationDto.html":{},"classes/CreateErrorLogDto.html":{},"classes/CreateGroupDto.html":{},"classes/CreateListDto.html":{},"classes/CreateListEntryDto.html":{},"classes/CreateMenuDto.html":{},"classes/CreateMenuEntryDto.html":{},"classes/CreateMenuEntryPointDto.html":{},"classes/CreateRoleAppDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSiteDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabaseConfig.html":{},"classes/ErrorLogEntity.html":{},"classes/FollowsEntity.html":{},"controllers/GroupController.html":{},"interfaces/GroupData.html":{},"classes/GroupEntity.html":{},"interfaces/GroupRO.html":{},"injectables/GroupService.html":{},"controllers/ListController.html":{},"interfaces/ListData.html":{},"classes/ListEntity.html":{},"interfaces/ListEntry.html":{},"classes/ListEntryEntity.html":{},"interfaces/ListEntryRO.html":{},"interfaces/ListRO.html":{},"injectables/ListService.html":{},"classes/LoginUserDto.html":{},"interfaces/MenuAppData.html":{},"classes/MenuAppEntity.html":{},"interfaces/MenuAppEntry.html":{},"controllers/MenuController.html":{},"classes/MenuEntryEntity.html":{},"interfaces/MenuEntryRO.html":{},"interfaces/MenuRO.html":{},"injectables/MenuService.html":{},"classes/MyLogger.html":{},"controllers/ProfileController.html":{},"interfaces/ProfileData.html":{},"interfaces/ProfileRO.html":{},"injectables/ProfileService.html":{},"controllers/RoleController.html":{},"interfaces/RoleData.html":{},"classes/RoleEntity.html":{},"classes/RoleMenuAppEntity.html":{},"classes/RoleMenuEntryEntity.html":{},"interfaces/RoleRO.html":{},"injectables/RoleService.html":{},"controllers/SiteController.html":{},"interfaces/SiteData.html":{},"classes/SiteEntity.html":{},"interfaces/SiteRO.html":{},"injectables/SiteService.html":{},"controllers/TagController.html":{},"classes/TagEntity.html":{},"injectables/TagService.html":{},"classes/ToIntegerPipe.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"interfaces/UserData.html":{},"classes/UserEntity.html":{},"interfaces/UserRO.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/ArticleController.html":{},"interfaces/ArticleData.html":{},"classes/ArticleEntity.html":{},"modules/ArticleModule.html":{},"interfaces/ArticleRO.html":{},"injectables/ArticleService.html":{},"interfaces/ArticlesRO.html":{},"injectables/AuthMiddleware.html":{},"classes/BaseController.html":{},"classes/Comment.html":{},"controllers/CommentController.html":{},"modules/CommentModule.html":{},"injectables/CommentService.html":{},"interfaces/CommentsRO.html":{},"controllers/CorporationController.html":{},"interfaces/CorporationData.html":{},"classes/CorporationEntity.html":{},"modules/CorporationModule.html":{},"interfaces/CorporationRO.html":{},"injectables/CorporationService.html":{},"classes/CreateArticleDto.html":{},"classes/CreateCommentDto.html":{},"classes/CreateCorporationDto.html":{},"classes/CreateErrorLogDto.html":{},"classes/CreateGroupDto.html":{},"classes/CreateListDto.html":{},"classes/CreateListEntryDto.html":{},"classes/CreateMenuDto.html":{},"classes/CreateMenuEntryDto.html":{},"classes/CreateMenuEntryPointDto.html":{},"classes/CreateRoleAppDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSiteDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabaseConfig.html":{},"classes/ErrorLogEntity.html":{},"controllers/ErrorlogController.html":{},"modules/ErrorlogModule.html":{},"injectables/ErrorlogService.html":{},"classes/FollowsEntity.html":{},"controllers/GroupController.html":{},"interfaces/GroupData.html":{},"classes/GroupEntity.html":{},"modules/GroupModule.html":{},"interfaces/GroupRO.html":{},"injectables/GroupService.html":{},"controllers/ListController.html":{},"interfaces/ListData.html":{},"classes/ListEntity.html":{},"interfaces/ListEntry.html":{},"classes/ListEntryEntity.html":{},"interfaces/ListEntryRO.html":{},"modules/ListModule.html":{},"interfaces/ListRO.html":{},"injectables/ListService.html":{},"classes/LoginUserDto.html":{},"interfaces/MenuAppData.html":{},"classes/MenuAppEntity.html":{},"interfaces/MenuAppEntry.html":{},"controllers/MenuController.html":{},"classes/MenuEntryEntity.html":{},"interfaces/MenuEntryRO.html":{},"modules/MenuModule.html":{},"interfaces/MenuRO.html":{},"injectables/MenuService.html":{},"classes/MyLogger.html":{},"controllers/ProfileController.html":{},"interfaces/ProfileData.html":{},"modules/ProfileModule.html":{},"interfaces/ProfileRO.html":{},"injectables/ProfileService.html":{},"controllers/RoleController.html":{},"interfaces/RoleData.html":{},"classes/RoleEntity.html":{},"classes/RoleMenuAppEntity.html":{},"classes/RoleMenuEntryEntity.html":{},"modules/RoleModule.html":{},"interfaces/RoleRO.html":{},"injectables/RoleService.html":{},"controllers/SiteController.html":{},"interfaces/SiteData.html":{},"classes/SiteEntity.html":{},"modules/SiteModule.html":{},"interfaces/SiteRO.html":{},"injectables/SiteService.html":{},"controllers/SqldirectController.html":{},"modules/SqldirectModule.html":{},"injectables/SqldirectService.html":{},"controllers/TagController.html":{},"classes/TagEntity.html":{},"modules/TagModule.html":{},"injectables/TagService.html":{},"classes/ToIntegerPipe.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"interfaces/UserData.html":{},"classes/UserEntity.html":{},"modules/UserModule.html":{},"interfaces/UserRO.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{},"controllers/ViewController.html":{},"modules/ViewModule.html":{},"injectables/ViewService.html":{}}}],["injectable",{"_index":340,"title":{"injectables/ArticleService.html":{},"injectables/AuthMiddleware.html":{},"injectables/CommentService.html":{},"injectables/CorporationService.html":{},"injectables/DatabaseConfig.html":{},"injectables/ErrorlogService.html":{},"injectables/GroupService.html":{},"injectables/ListService.html":{},"injectables/MenuService.html":{},"injectables/ProfileService.html":{},"injectables/RoleService.html":{},"injectables/SiteService.html":{},"injectables/SqldirectService.html":{},"injectables/TagService.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{},"injectables/ViewService.html":{}},"body":{"injectables/ArticleService.html":{},"injectables/AuthMiddleware.html":{},"injectables/CommentService.html":{},"injectables/CorporationService.html":{},"injectables/DatabaseConfig.html":{},"injectables/ErrorlogService.html":{},"injectables/GroupService.html":{},"injectables/ListService.html":{},"injectables/MenuService.html":{},"injectables/ProfileService.html":{},"injectables/RoleService.html":{},"injectables/SiteService.html":{},"injectables/SqldirectService.html":{},"injectables/TagService.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{},"injectables/ViewService.html":{},"coverage.html":{}}}],["injectables",{"_index":341,"title":{},"body":{"injectables/ArticleService.html":{},"injectables/AuthMiddleware.html":{},"injectables/CommentService.html":{},"injectables/CorporationService.html":{},"injectables/DatabaseConfig.html":{},"injectables/ErrorlogService.html":{},"injectables/GroupService.html":{},"injectables/ListService.html":{},"injectables/MenuService.html":{},"injectables/ProfileService.html":{},"injectables/RoleService.html":{},"injectables/SiteService.html":{},"injectables/SqldirectService.html":{},"injectables/TagService.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{},"injectables/ViewService.html":{},"overview.html":{}}}],["injectrepository",{"_index":375,"title":{},"body":{"injectables/ArticleService.html":{},"injectables/CorporationService.html":{},"injectables/GroupService.html":{},"injectables/ListService.html":{},"injectables/MenuService.html":{},"injectables/ProfileService.html":{},"injectables/RoleService.html":{},"injectables/SiteService.html":{},"injectables/TagService.html":{},"injectables/UserService.html":{}}}],["injectrepository(articleentity",{"_index":379,"title":{},"body":{"injectables/ArticleService.html":{}}}],["injectrepository(comment",{"_index":381,"title":{},"body":{"injectables/ArticleService.html":{}}}],["injectrepository(corporationentity",{"_index":615,"title":{},"body":{"injectables/CorporationService.html":{}}}],["injectrepository(followsentity",{"_index":383,"title":{},"body":{"injectables/ArticleService.html":{},"injectables/ProfileService.html":{}}}],["injectrepository(groupentity",{"_index":869,"title":{},"body":{"injectables/GroupService.html":{}}}],["injectrepository(listentity",{"_index":965,"title":{},"body":{"injectables/ListService.html":{}}}],["injectrepository(menuappentity",{"_index":1094,"title":{},"body":{"injectables/MenuService.html":{}}}],["injectrepository(roleentity",{"_index":1339,"title":{},"body":{"injectables/RoleService.html":{}}}],["injectrepository(siteentity",{"_index":1421,"title":{},"body":{"injectables/SiteService.html":{}}}],["injectrepository(tagentity",{"_index":1483,"title":{},"body":{"injectables/TagService.html":{}}}],["injectrepository(userentity",{"_index":382,"title":{},"body":{"injectables/ArticleService.html":{},"injectables/ProfileService.html":{},"injectables/UserService.html":{}}}],["input",{"_index":633,"title":{},"body":{"injectables/CorporationService.html":{},"injectables/GroupService.html":{},"injectables/ListService.html":{},"injectables/MenuService.html":{},"injectables/RoleService.html":{},"injectables/SiteService.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{}}}],["integer.pipe.ts",{"_index":1487,"title":{},"body":{"classes/ToIntegerPipe.html":{},"coverage.html":{}}}],["integer.pipe.ts:6",{"_index":1493,"title":{},"body":{"classes/ToIntegerPipe.html":{}}}],["interface",{"_index":238,"title":{"interfaces/ArticleData.html":{},"interfaces/ArticleRO.html":{},"interfaces/ArticlesRO.html":{},"interfaces/CommentsRO.html":{},"interfaces/CorporationData.html":{},"interfaces/CorporationRO.html":{},"interfaces/GroupData.html":{},"interfaces/GroupRO.html":{},"interfaces/ListData.html":{},"interfaces/ListEntry.html":{},"interfaces/ListEntryRO.html":{},"interfaces/ListRO.html":{},"interfaces/MenuAppData.html":{},"interfaces/MenuAppEntry.html":{},"interfaces/MenuEntryRO.html":{},"interfaces/MenuRO.html":{},"interfaces/ProfileData.html":{},"interfaces/ProfileRO.html":{},"interfaces/RoleData.html":{},"interfaces/RoleRO.html":{},"interfaces/SiteData.html":{},"interfaces/SiteRO.html":{},"interfaces/UserData.html":{},"interfaces/UserRO.html":{}},"body":{"interfaces/ArticleData.html":{},"interfaces/ArticleRO.html":{},"interfaces/ArticlesRO.html":{},"interfaces/CommentsRO.html":{},"interfaces/CorporationData.html":{},"interfaces/CorporationRO.html":{},"interfaces/GroupData.html":{},"interfaces/GroupRO.html":{},"interfaces/ListData.html":{},"interfaces/ListEntry.html":{},"interfaces/ListEntryRO.html":{},"interfaces/ListRO.html":{},"interfaces/MenuAppData.html":{},"interfaces/MenuAppEntry.html":{},"interfaces/MenuEntryRO.html":{},"interfaces/MenuRO.html":{},"interfaces/ProfileData.html":{},"interfaces/ProfileRO.html":{},"interfaces/RoleData.html":{},"interfaces/RoleRO.html":{},"interfaces/SiteData.html":{},"interfaces/SiteRO.html":{},"interfaces/UserData.html":{},"interfaces/UserRO.html":{},"coverage.html":{}}}],["interfaces",{"_index":239,"title":{},"body":{"interfaces/ArticleData.html":{},"interfaces/ArticleRO.html":{},"interfaces/ArticlesRO.html":{},"interfaces/CommentsRO.html":{},"interfaces/CorporationData.html":{},"interfaces/CorporationRO.html":{},"interfaces/GroupData.html":{},"interfaces/GroupRO.html":{},"interfaces/ListData.html":{},"interfaces/ListEntry.html":{},"interfaces/ListEntryRO.html":{},"interfaces/ListRO.html":{},"interfaces/MenuAppData.html":{},"interfaces/MenuAppEntry.html":{},"interfaces/MenuEntryRO.html":{},"interfaces/MenuRO.html":{},"interfaces/ProfileData.html":{},"interfaces/ProfileRO.html":{},"interfaces/RoleData.html":{},"interfaces/RoleRO.html":{},"interfaces/SiteData.html":{},"interfaces/SiteRO.html":{},"interfaces/UserData.html":{},"interfaces/UserRO.html":{},"overview.html":{}}}],["isboolean",{"_index":734,"title":{},"body":{"classes/CreateRoleAppDto.html":{}}}],["isemail",{"_index":1564,"title":{},"body":{"classes/UserEntity.html":{}}}],["isglobal",{"_index":80,"title":{},"body":{"modules/AppModule.html":{}}}],["isnan(val",{"_index":1497,"title":{},"body":{"classes/ToIntegerPipe.html":{}}}],["isnewfavorite",{"_index":434,"title":{},"body":{"injectables/ArticleService.html":{}}}],["isnotempty",{"_index":665,"title":{},"body":{"classes/CreateCorporationDto.html":{},"classes/CreateErrorLogDto.html":{},"classes/CreateGroupDto.html":{},"classes/CreateListDto.html":{},"classes/CreateListEntryDto.html":{},"classes/CreateMenuDto.html":{},"classes/CreateMenuEntryDto.html":{},"classes/CreateMenuEntryPointDto.html":{},"classes/CreateRoleAppDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSiteDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginUserDto.html":{}}}],["isnotempty()@apiproperty({type",{"_index":683,"title":{},"body":{"classes/CreateGroupDto.html":{}}}],["isnumber",{"_index":674,"title":{},"body":{"classes/CreateErrorLogDto.html":{}}}],["isnumberoptions",{"_index":678,"title":{},"body":{"classes/CreateErrorLogDto.html":{}}}],["joincolumn",{"_index":296,"title":{},"body":{"classes/ArticleEntity.html":{},"classes/CorporationEntity.html":{},"classes/ListEntity.html":{},"classes/MenuAppEntity.html":{},"classes/MenuEntryEntity.html":{},"classes/RoleEntity.html":{},"classes/RoleMenuAppEntity.html":{},"classes/RoleMenuEntryEntity.html":{},"classes/SiteEntity.html":{}}}],["jointable",{"_index":1562,"title":{},"body":{"classes/UserEntity.html":{}}}],["js",{"_index":1717,"title":{},"body":{"dependencies.html":{}}}],["jsonwebtoken",{"_index":486,"title":{},"body":{"injectables/AuthMiddleware.html":{},"classes/BaseController.html":{},"dependencies.html":{}}}],["jwt",{"_index":485,"title":{},"body":{"injectables/AuthMiddleware.html":{},"classes/BaseController.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["jwt.sign",{"_index":1628,"title":{},"body":{"injectables/UserService.html":{}}}],["jwt.verify(token",{"_index":500,"title":{},"body":{"injectables/AuthMiddleware.html":{},"classes/BaseController.html":{}}}],["jwt.verify(token[1",{"_index":1787,"title":{},"body":{"miscellaneous/variables.html":{}}}],["jwtsecret",{"_index":1765,"title":{},"body":{"miscellaneous/variables.html":{}}}],["labware",{"_index":1286,"title":{},"body":{"classes/RoleEntity.html":{}}}],["leftjoinandselect('article.author",{"_index":387,"title":{},"body":{"injectables/ArticleService.html":{}}}],["legend",{"_index":31,"title":{},"body":{"modules/AppModule.html":{},"modules/ArticleModule.html":{},"modules/CorporationModule.html":{},"modules/ErrorlogModule.html":{},"modules/GroupModule.html":{},"modules/ListModule.html":{},"modules/MenuModule.html":{},"modules/ProfileModule.html":{},"modules/RoleModule.html":{},"modules/SiteModule.html":{},"modules/SqldirectModule.html":{},"modules/TagModule.html":{},"modules/UserModule.html":{},"modules/ViewModule.html":{},"overview.html":{}}}],["length",{"_index":283,"title":{},"body":{"classes/ArticleEntity.html":{},"classes/CorporationEntity.html":{},"classes/ErrorLogEntity.html":{},"classes/GroupEntity.html":{},"classes/ListEntity.html":{},"classes/ListEntryEntity.html":{},"classes/MenuAppEntity.html":{},"classes/MenuEntryEntity.html":{},"classes/RoleEntity.html":{},"classes/SiteEntity.html":{},"classes/TagEntity.html":{}}}],["limit",{"_index":404,"title":{},"body":{"injectables/ArticleService.html":{}}}],["list",{"_index":920,"title":{},"body":{"interfaces/ListData.html":{},"interfaces/ListEntry.html":{},"classes/ListEntryEntity.html":{},"interfaces/ListEntryRO.html":{},"interfaces/ListRO.html":{},"injectables/ListService.html":{}}}],["list.controller",{"_index":950,"title":{},"body":{"modules/ListModule.html":{}}}],["list.description",{"_index":983,"title":{},"body":{"injectables/ListService.html":{}}}],["list.dto.ts",{"_index":689,"title":{},"body":{"classes/CreateListDto.html":{},"coverage.html":{}}}],["list.dto.ts:11",{"_index":690,"title":{},"body":{"classes/CreateListDto.html":{}}}],["list.dto.ts:5",{"_index":691,"title":{},"body":{"classes/CreateListDto.html":{}}}],["list.dto.ts:8",{"_index":692,"title":{},"body":{"classes/CreateListDto.html":{}}}],["list.entity",{"_index":905,"title":{},"body":{"controllers/ListController.html":{},"interfaces/ListData.html":{},"interfaces/ListEntry.html":{},"classes/ListEntryEntity.html":{},"interfaces/ListEntryRO.html":{},"modules/ListModule.html":{},"interfaces/ListRO.html":{},"injectables/ListService.html":{}}}],["list.id",{"_index":981,"title":{},"body":{"injectables/ListService.html":{}}}],["list.interface",{"_index":902,"title":{},"body":{"controllers/ListController.html":{},"injectables/ListService.html":{}}}],["list.listentries",{"_index":945,"title":{},"body":{"classes/ListEntryEntity.html":{},"injectables/ListService.html":{}}}],["list.name",{"_index":982,"title":{},"body":{"injectables/ListService.html":{}}}],["list.service",{"_index":900,"title":{},"body":{"controllers/ListController.html":{},"modules/ListModule.html":{}}}],["list/list.module",{"_index":68,"title":{},"body":{"modules/AppModule.html":{}}}],["listcontroller",{"_index":885,"title":{"controllers/ListController.html":{}},"body":{"controllers/ListController.html":{},"modules/ListModule.html":{},"coverage.html":{}}}],["listdata",{"_index":891,"title":{"interfaces/ListData.html":{}},"body":{"controllers/ListController.html":{},"interfaces/ListData.html":{},"interfaces/ListEntry.html":{},"interfaces/ListEntryRO.html":{},"interfaces/ListRO.html":{},"coverage.html":{}}}],["listentity",{"_index":904,"title":{"classes/ListEntity.html":{}},"body":{"controllers/ListController.html":{},"interfaces/ListData.html":{},"classes/ListEntity.html":{},"interfaces/ListEntry.html":{},"classes/ListEntryEntity.html":{},"interfaces/ListEntryRO.html":{},"modules/ListModule.html":{},"interfaces/ListRO.html":{},"injectables/ListService.html":{},"coverage.html":{}}}],["listentries",{"_index":921,"title":{},"body":{"interfaces/ListData.html":{},"classes/ListEntity.html":{},"interfaces/ListEntry.html":{},"interfaces/ListEntryRO.html":{},"interfaces/ListRO.html":{},"injectables/ListService.html":{}}}],["listentry",{"_index":919,"title":{"interfaces/ListEntry.html":{}},"body":{"interfaces/ListData.html":{},"classes/ListEntity.html":{},"interfaces/ListEntry.html":{},"interfaces/ListEntryRO.html":{},"interfaces/ListRO.html":{},"coverage.html":{}}}],["listentry.dto.ts",{"_index":694,"title":{},"body":{"classes/CreateListEntryDto.html":{},"coverage.html":{}}}],["listentry.dto.ts:11",{"_index":697,"title":{},"body":{"classes/CreateListEntryDto.html":{}}}],["listentry.dto.ts:14",{"_index":700,"title":{},"body":{"classes/CreateListEntryDto.html":{}}}],["listentry.dto.ts:5",{"_index":698,"title":{},"body":{"classes/CreateListEntryDto.html":{}}}],["listentry.dto.ts:8",{"_index":699,"title":{},"body":{"classes/CreateListEntryDto.html":{}}}],["listentry.entity",{"_index":935,"title":{},"body":{"classes/ListEntity.html":{}}}],["listentry.list",{"_index":937,"title":{},"body":{"classes/ListEntity.html":{}}}],["listentryentity",{"_index":928,"title":{"classes/ListEntryEntity.html":{}},"body":{"classes/ListEntity.html":{},"classes/ListEntryEntity.html":{},"coverage.html":{}}}],["listentryro",{"_index":903,"title":{"interfaces/ListEntryRO.html":{}},"body":{"controllers/ListController.html":{},"interfaces/ListData.html":{},"interfaces/ListEntry.html":{},"interfaces/ListEntryRO.html":{},"interfaces/ListRO.html":{},"injectables/ListService.html":{},"coverage.html":{}}}],["listmodule",{"_index":42,"title":{"modules/ListModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ListModule.html":{},"modules.html":{},"overview.html":{}}}],["listrepository",{"_index":956,"title":{},"body":{"injectables/ListService.html":{}}}],["listro",{"_index":901,"title":{"interfaces/ListRO.html":{}},"body":{"controllers/ListController.html":{},"interfaces/ListData.html":{},"interfaces/ListEntry.html":{},"interfaces/ListEntryRO.html":{},"interfaces/ListRO.html":{},"injectables/ListService.html":{},"coverage.html":{}}}],["lists",{"_index":887,"title":{},"body":{"controllers/ListController.html":{}}}],["listservice",{"_index":899,"title":{"injectables/ListService.html":{}},"body":{"controllers/ListController.html":{},"modules/ListModule.html":{},"injectables/ListService.html":{},"coverage.html":{},"overview.html":{}}}],["load",{"_index":82,"title":{},"body":{"modules/AppModule.html":{}}}],["log",{"_index":1118,"title":{},"body":{"classes/MyLogger.html":{}}}],["log(message",{"_index":1127,"title":{},"body":{"classes/MyLogger.html":{}}}],["loggerservice",{"_index":1115,"title":{},"body":{"classes/MyLogger.html":{}}}],["logging",{"_index":1771,"title":{},"body":{"miscellaneous/variables.html":{}}}],["login",{"_index":1508,"title":{},"body":{"controllers/UserController.html":{}}}],["login(@body('user",{"_index":1536,"title":{},"body":{"controllers/UserController.html":{}}}],["login(loginuserdto",{"_index":1517,"title":{},"body":{"controllers/UserController.html":{}}}],["loginuserdto",{"_index":984,"title":{"classes/LoginUserDto.html":{}},"body":{"classes/LoginUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["lower",{"_index":461,"title":{},"body":{"injectables/ArticleService.html":{}}}],["manytomany",{"_index":1563,"title":{},"body":{"classes/UserEntity.html":{}}}],["manytomany(type",{"_index":1570,"title":{},"body":{"classes/UserEntity.html":{}}}],["manytomany(undefined)@jointable",{"_index":1551,"title":{},"body":{"classes/UserEntity.html":{}}}],["manytoone",{"_index":294,"title":{},"body":{"classes/ArticleEntity.html":{},"classes/Comment.html":{},"classes/CorporationEntity.html":{},"classes/GroupEntity.html":{},"classes/ListEntryEntity.html":{},"classes/MenuAppEntity.html":{},"classes/MenuEntryEntity.html":{},"classes/RoleEntity.html":{},"classes/RoleMenuAppEntity.html":{},"classes/RoleMenuEntryEntity.html":{},"classes/SiteEntity.html":{}}}],["manytoone(type",{"_index":303,"title":{},"body":{"classes/ArticleEntity.html":{},"classes/Comment.html":{},"classes/GroupEntity.html":{},"classes/ListEntryEntity.html":{},"classes/MenuEntryEntity.html":{},"classes/RoleEntity.html":{},"classes/RoleMenuAppEntity.html":{},"classes/RoleMenuEntryEntity.html":{},"classes/SiteEntity.html":{}}}],["manytoone(undefined",{"_index":263,"title":{},"body":{"classes/ArticleEntity.html":{},"classes/Comment.html":{},"classes/GroupEntity.html":{},"classes/ListEntryEntity.html":{},"classes/MenuEntryEntity.html":{},"classes/RoleEntity.html":{},"classes/RoleMenuAppEntity.html":{},"classes/RoleMenuEntryEntity.html":{},"classes/SiteEntity.html":{}}}],["matching",{"_index":25,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/ArticleController.html":{},"interfaces/ArticleData.html":{},"classes/ArticleEntity.html":{},"modules/ArticleModule.html":{},"interfaces/ArticleRO.html":{},"injectables/ArticleService.html":{},"interfaces/ArticlesRO.html":{},"injectables/AuthMiddleware.html":{},"classes/BaseController.html":{},"classes/Comment.html":{},"controllers/CommentController.html":{},"modules/CommentModule.html":{},"injectables/CommentService.html":{},"interfaces/CommentsRO.html":{},"controllers/CorporationController.html":{},"interfaces/CorporationData.html":{},"classes/CorporationEntity.html":{},"modules/CorporationModule.html":{},"interfaces/CorporationRO.html":{},"injectables/CorporationService.html":{},"classes/CreateArticleDto.html":{},"classes/CreateCommentDto.html":{},"classes/CreateCorporationDto.html":{},"classes/CreateErrorLogDto.html":{},"classes/CreateGroupDto.html":{},"classes/CreateListDto.html":{},"classes/CreateListEntryDto.html":{},"classes/CreateMenuDto.html":{},"classes/CreateMenuEntryDto.html":{},"classes/CreateMenuEntryPointDto.html":{},"classes/CreateRoleAppDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSiteDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabaseConfig.html":{},"classes/ErrorLogEntity.html":{},"controllers/ErrorlogController.html":{},"modules/ErrorlogModule.html":{},"injectables/ErrorlogService.html":{},"classes/FollowsEntity.html":{},"controllers/GroupController.html":{},"interfaces/GroupData.html":{},"classes/GroupEntity.html":{},"modules/GroupModule.html":{},"interfaces/GroupRO.html":{},"injectables/GroupService.html":{},"controllers/ListController.html":{},"interfaces/ListData.html":{},"classes/ListEntity.html":{},"interfaces/ListEntry.html":{},"classes/ListEntryEntity.html":{},"interfaces/ListEntryRO.html":{},"modules/ListModule.html":{},"interfaces/ListRO.html":{},"injectables/ListService.html":{},"classes/LoginUserDto.html":{},"interfaces/MenuAppData.html":{},"classes/MenuAppEntity.html":{},"interfaces/MenuAppEntry.html":{},"controllers/MenuController.html":{},"classes/MenuEntryEntity.html":{},"interfaces/MenuEntryRO.html":{},"modules/MenuModule.html":{},"interfaces/MenuRO.html":{},"injectables/MenuService.html":{},"classes/MyLogger.html":{},"controllers/ProfileController.html":{},"interfaces/ProfileData.html":{},"modules/ProfileModule.html":{},"interfaces/ProfileRO.html":{},"injectables/ProfileService.html":{},"controllers/RoleController.html":{},"interfaces/RoleData.html":{},"classes/RoleEntity.html":{},"classes/RoleMenuAppEntity.html":{},"classes/RoleMenuEntryEntity.html":{},"modules/RoleModule.html":{},"interfaces/RoleRO.html":{},"injectables/RoleService.html":{},"controllers/SiteController.html":{},"interfaces/SiteData.html":{},"classes/SiteEntity.html":{},"modules/SiteModule.html":{},"interfaces/SiteRO.html":{},"injectables/SiteService.html":{},"controllers/SqldirectController.html":{},"modules/SqldirectModule.html":{},"injectables/SqldirectService.html":{},"controllers/TagController.html":{},"classes/TagEntity.html":{},"modules/TagModule.html":{},"injectables/TagService.html":{},"classes/ToIntegerPipe.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"interfaces/UserData.html":{},"classes/UserEntity.html":{},"modules/UserModule.html":{},"interfaces/UserRO.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{},"controllers/ViewController.html":{},"modules/ViewModule.html":{},"injectables/ViewService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["math.pow(36",{"_index":463,"title":{},"body":{"injectables/ArticleService.html":{}}}],["math.random",{"_index":462,"title":{},"body":{"injectables/ArticleService.html":{}}}],["menu",{"_index":994,"title":{},"body":{"interfaces/MenuAppData.html":{},"classes/MenuAppEntity.html":{},"interfaces/MenuAppEntry.html":{},"interfaces/MenuEntryRO.html":{},"interfaces/MenuRO.html":{},"injectables/MenuService.html":{},"classes/RoleEntity.html":{}}}],["menu.abbreviation",{"_index":1112,"title":{},"body":{"injectables/MenuService.html":{}}}],["menu.controller",{"_index":1079,"title":{},"body":{"modules/MenuModule.html":{}}}],["menu.description",{"_index":1111,"title":{},"body":{"injectables/MenuService.html":{}}}],["menu.dto.ts",{"_index":703,"title":{},"body":{"classes/CreateMenuDto.html":{},"coverage.html":{}}}],["menu.dto.ts:11",{"_index":706,"title":{},"body":{"classes/CreateMenuDto.html":{}}}],["menu.dto.ts:14",{"_index":705,"title":{},"body":{"classes/CreateMenuDto.html":{}}}],["menu.dto.ts:5",{"_index":707,"title":{},"body":{"classes/CreateMenuDto.html":{}}}],["menu.dto.ts:8",{"_index":708,"title":{},"body":{"classes/CreateMenuDto.html":{}}}],["menu.id",{"_index":1109,"title":{},"body":{"injectables/MenuService.html":{}}}],["menu.interface",{"_index":1034,"title":{},"body":{"controllers/MenuController.html":{},"injectables/MenuService.html":{}}}],["menu.menuapp",{"_index":1014,"title":{},"body":{"classes/MenuAppEntity.html":{}}}],["menu.name",{"_index":1110,"title":{},"body":{"injectables/MenuService.html":{}}}],["menu.service",{"_index":1033,"title":{},"body":{"controllers/MenuController.html":{},"modules/MenuModule.html":{}}}],["menu/menu.module",{"_index":67,"title":{},"body":{"modules/AppModule.html":{}}}],["menu/menuapp.entity",{"_index":1300,"title":{},"body":{"classes/RoleMenuAppEntity.html":{}}}],["menu/menuentry.entity",{"_index":1316,"title":{},"body":{"classes/RoleMenuEntryEntity.html":{}}}],["menuapp",{"_index":1050,"title":{},"body":{"classes/MenuEntryEntity.html":{},"classes/RoleMenuAppEntity.html":{}}}],["menuapp.entity",{"_index":989,"title":{},"body":{"interfaces/MenuAppData.html":{},"interfaces/MenuAppEntry.html":{},"controllers/MenuController.html":{},"classes/MenuEntryEntity.html":{},"interfaces/MenuEntryRO.html":{},"modules/MenuModule.html":{},"interfaces/MenuRO.html":{},"injectables/MenuService.html":{}}}],["menuapp.menuentries",{"_index":1072,"title":{},"body":{"classes/MenuEntryEntity.html":{}}}],["menuappdata",{"_index":986,"title":{"interfaces/MenuAppData.html":{}},"body":{"interfaces/MenuAppData.html":{},"interfaces/MenuAppEntry.html":{},"interfaces/MenuEntryRO.html":{},"interfaces/MenuRO.html":{},"coverage.html":{}}}],["menuappentity",{"_index":988,"title":{"classes/MenuAppEntity.html":{}},"body":{"interfaces/MenuAppData.html":{},"classes/MenuAppEntity.html":{},"interfaces/MenuAppEntry.html":{},"controllers/MenuController.html":{},"classes/MenuEntryEntity.html":{},"interfaces/MenuEntryRO.html":{},"modules/MenuModule.html":{},"interfaces/MenuRO.html":{},"injectables/MenuService.html":{},"classes/RoleMenuAppEntity.html":{},"coverage.html":{}}}],["menuappentry",{"_index":992,"title":{"interfaces/MenuAppEntry.html":{}},"body":{"interfaces/MenuAppData.html":{},"interfaces/MenuAppEntry.html":{},"interfaces/MenuEntryRO.html":{},"interfaces/MenuRO.html":{},"coverage.html":{}}}],["menuappid",{"_index":1293,"title":{},"body":{"classes/RoleMenuAppEntity.html":{}}}],["menucontroller",{"_index":1016,"title":{"controllers/MenuController.html":{}},"body":{"controllers/MenuController.html":{},"modules/MenuModule.html":{},"coverage.html":{}}}],["menudata",{"_index":1023,"title":{},"body":{"controllers/MenuController.html":{}}}],["menuentries",{"_index":996,"title":{},"body":{"interfaces/MenuAppData.html":{},"classes/MenuAppEntity.html":{},"interfaces/MenuAppEntry.html":{},"interfaces/MenuEntryRO.html":{},"interfaces/MenuRO.html":{}}}],["menuentry",{"_index":1306,"title":{},"body":{"classes/RoleMenuEntryEntity.html":{}}}],["menuentry.dto.ts",{"_index":710,"title":{},"body":{"classes/CreateMenuEntryDto.html":{},"coverage.html":{}}}],["menuentry.dto.ts:11",{"_index":715,"title":{},"body":{"classes/CreateMenuEntryDto.html":{}}}],["menuentry.dto.ts:14",{"_index":717,"title":{},"body":{"classes/CreateMenuEntryDto.html":{}}}],["menuentry.dto.ts:5",{"_index":716,"title":{},"body":{"classes/CreateMenuEntryDto.html":{}}}],["menuentry.dto.ts:8",{"_index":714,"title":{},"body":{"classes/CreateMenuEntryDto.html":{}}}],["menuentry.entity",{"_index":991,"title":{},"body":{"interfaces/MenuAppData.html":{},"classes/MenuAppEntity.html":{},"interfaces/MenuAppEntry.html":{},"controllers/MenuController.html":{},"interfaces/MenuEntryRO.html":{},"interfaces/MenuRO.html":{}}}],["menuentry.menuentryconnection",{"_index":1319,"title":{},"body":{"classes/RoleMenuEntryEntity.html":{}}}],["menuentryconnection",{"_index":1051,"title":{},"body":{"classes/MenuEntryEntity.html":{}}}],["menuentryentity",{"_index":990,"title":{"classes/MenuEntryEntity.html":{}},"body":{"interfaces/MenuAppData.html":{},"classes/MenuAppEntity.html":{},"interfaces/MenuAppEntry.html":{},"controllers/MenuController.html":{},"classes/MenuEntryEntity.html":{},"interfaces/MenuEntryRO.html":{},"interfaces/MenuRO.html":{},"classes/RoleMenuEntryEntity.html":{},"coverage.html":{}}}],["menuentryid",{"_index":1307,"title":{},"body":{"classes/RoleMenuEntryEntity.html":{}}}],["menuentrypoint",{"_index":721,"title":{},"body":{"classes/CreateMenuEntryPointDto.html":{}}}],["menuentrypoint.dto.ts",{"_index":719,"title":{},"body":{"classes/CreateMenuEntryPointDto.html":{},"coverage.html":{}}}],["menuentrypoint.dto.ts:11",{"_index":722,"title":{},"body":{"classes/CreateMenuEntryPointDto.html":{}}}],["menuentrypoint.dto.ts:14",{"_index":725,"title":{},"body":{"classes/CreateMenuEntryPointDto.html":{}}}],["menuentrypoint.dto.ts:17",{"_index":726,"title":{},"body":{"classes/CreateMenuEntryPointDto.html":{}}}],["menuentrypoint.dto.ts:5",{"_index":724,"title":{},"body":{"classes/CreateMenuEntryPointDto.html":{}}}],["menuentrypoint.dto.ts:8",{"_index":723,"title":{},"body":{"classes/CreateMenuEntryPointDto.html":{}}}],["menuentryro",{"_index":995,"title":{"interfaces/MenuEntryRO.html":{}},"body":{"interfaces/MenuAppData.html":{},"interfaces/MenuAppEntry.html":{},"controllers/MenuController.html":{},"interfaces/MenuEntryRO.html":{},"interfaces/MenuRO.html":{},"coverage.html":{}}}],["menumodule",{"_index":43,"title":{"modules/MenuModule.html":{}},"body":{"modules/AppModule.html":{},"modules/MenuModule.html":{},"modules.html":{},"overview.html":{}}}],["menurepository",{"_index":1085,"title":{},"body":{"injectables/MenuService.html":{}}}],["menuro",{"_index":993,"title":{"interfaces/MenuRO.html":{}},"body":{"interfaces/MenuAppData.html":{},"interfaces/MenuAppEntry.html":{},"controllers/MenuController.html":{},"interfaces/MenuEntryRO.html":{},"interfaces/MenuRO.html":{},"injectables/MenuService.html":{},"coverage.html":{}}}],["menus",{"_index":1018,"title":{},"body":{"controllers/MenuController.html":{}}}],["menuservice",{"_index":1032,"title":{"injectables/MenuService.html":{}},"body":{"controllers/MenuController.html":{},"modules/MenuModule.html":{},"injectables/MenuService.html":{},"coverage.html":{},"overview.html":{}}}],["message",{"_index":1123,"title":{},"body":{"classes/MyLogger.html":{}}}],["metadata",{"_index":1491,"title":{},"body":{"classes/ToIntegerPipe.html":{},"injectables/ValidationPipe.html":{},"dependencies.html":{}}}],["metatype",{"_index":1643,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["method",{"_index":331,"title":{},"body":{"modules/ArticleModule.html":{},"modules/ProfileModule.html":{},"modules/UserModule.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"controllers/ArticleController.html":{},"modules/ArticleModule.html":{},"injectables/ArticleService.html":{},"injectables/AuthMiddleware.html":{},"classes/BaseController.html":{},"controllers/CorporationController.html":{},"modules/CorporationModule.html":{},"injectables/CorporationService.html":{},"injectables/DatabaseConfig.html":{},"controllers/GroupController.html":{},"modules/GroupModule.html":{},"injectables/GroupService.html":{},"controllers/ListController.html":{},"modules/ListModule.html":{},"injectables/ListService.html":{},"controllers/MenuController.html":{},"modules/MenuModule.html":{},"injectables/MenuService.html":{},"classes/MyLogger.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"controllers/RoleController.html":{},"modules/RoleModule.html":{},"injectables/RoleService.html":{},"controllers/SiteController.html":{},"modules/SiteModule.html":{},"injectables/SiteService.html":{},"controllers/TagController.html":{},"modules/TagModule.html":{},"injectables/TagService.html":{},"classes/ToIntegerPipe.html":{},"controllers/UserController.html":{},"classes/UserEntity.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{}}}],["middlewareconsumer",{"_index":314,"title":{},"body":{"modules/ArticleModule.html":{},"modules/CorporationModule.html":{},"modules/GroupModule.html":{},"modules/ListModule.html":{},"modules/MenuModule.html":{},"modules/ProfileModule.html":{},"modules/RoleModule.html":{},"modules/SiteModule.html":{},"modules/TagModule.html":{},"modules/UserModule.html":{}}}],["miscellaneous",{"_index":1737,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["module",{"_index":27,"title":{"modules/AppModule.html":{},"modules/ArticleModule.html":{},"modules/CommentModule.html":{},"modules/CorporationModule.html":{},"modules/ErrorlogModule.html":{},"modules/GroupModule.html":{},"modules/ListModule.html":{},"modules/MenuModule.html":{},"modules/ProfileModule.html":{},"modules/RoleModule.html":{},"modules/SiteModule.html":{},"modules/SqldirectModule.html":{},"modules/TagModule.html":{},"modules/UserModule.html":{},"modules/ViewModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ArticleModule.html":{},"modules/CommentModule.html":{},"modules/CorporationModule.html":{},"modules/ErrorlogModule.html":{},"modules/GroupModule.html":{},"modules/ListModule.html":{},"modules/MenuModule.html":{},"modules/ProfileModule.html":{},"modules/RoleModule.html":{},"modules/SiteModule.html":{},"modules/SqldirectModule.html":{},"modules/TagModule.html":{},"modules/UserModule.html":{},"modules/ViewModule.html":{},"overview.html":{}}}],["modules",{"_index":29,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/ArticleModule.html":{},"modules/CommentModule.html":{},"modules/CorporationModule.html":{},"modules/ErrorlogModule.html":{},"modules/GroupModule.html":{},"modules/ListModule.html":{},"modules/MenuModule.html":{},"modules/ProfileModule.html":{},"modules/RoleModule.html":{},"modules/SiteModule.html":{},"modules/SqldirectModule.html":{},"modules/TagModule.html":{},"modules/UserModule.html":{},"modules/ViewModule.html":{},"modules.html":{},"overview.html":{}}}],["mouseover",{"_index":1052,"title":{},"body":{"classes/MenuEntryEntity.html":{}}}],["mssql",{"_index":1722,"title":{},"body":{"dependencies.html":{},"miscellaneous/variables.html":{}}}],["multiple",{"_index":1276,"title":{},"body":{"classes/RoleEntity.html":{}}}],["multiples",{"_index":1288,"title":{},"body":{"classes/RoleEntity.html":{}}}],["mylogger",{"_index":1113,"title":{"classes/MyLogger.html":{}},"body":{"classes/MyLogger.html":{},"coverage.html":{}}}],["name",{"_index":116,"title":{},"body":{"controllers/ArticleController.html":{},"modules/ArticleModule.html":{},"injectables/ArticleService.html":{},"injectables/AuthMiddleware.html":{},"classes/BaseController.html":{},"controllers/CorporationController.html":{},"interfaces/CorporationData.html":{},"classes/CorporationEntity.html":{},"modules/CorporationModule.html":{},"interfaces/CorporationRO.html":{},"injectables/CorporationService.html":{},"classes/CreateCorporationDto.html":{},"classes/CreateGroupDto.html":{},"classes/CreateListDto.html":{},"classes/CreateListEntryDto.html":{},"classes/CreateMenuDto.html":{},"classes/CreateRoleAppDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSiteDto.html":{},"injectables/DatabaseConfig.html":{},"controllers/GroupController.html":{},"interfaces/GroupData.html":{},"classes/GroupEntity.html":{},"modules/GroupModule.html":{},"interfaces/GroupRO.html":{},"injectables/GroupService.html":{},"controllers/ListController.html":{},"interfaces/ListData.html":{},"classes/ListEntity.html":{},"interfaces/ListEntry.html":{},"classes/ListEntryEntity.html":{},"interfaces/ListEntryRO.html":{},"modules/ListModule.html":{},"interfaces/ListRO.html":{},"injectables/ListService.html":{},"classes/MenuAppEntity.html":{},"controllers/MenuController.html":{},"modules/MenuModule.html":{},"injectables/MenuService.html":{},"classes/MyLogger.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"controllers/RoleController.html":{},"interfaces/RoleData.html":{},"classes/RoleEntity.html":{},"classes/RoleMenuEntryEntity.html":{},"modules/RoleModule.html":{},"interfaces/RoleRO.html":{},"injectables/RoleService.html":{},"controllers/SiteController.html":{},"interfaces/SiteData.html":{},"classes/SiteEntity.html":{},"modules/SiteModule.html":{},"interfaces/SiteRO.html":{},"injectables/SiteService.html":{},"modules/TagModule.html":{},"injectables/TagService.html":{},"classes/ToIntegerPipe.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{}}}],["nestjs/common",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/ArticleController.html":{},"modules/ArticleModule.html":{},"injectables/ArticleService.html":{},"injectables/AuthMiddleware.html":{},"controllers/CommentController.html":{},"modules/CommentModule.html":{},"injectables/CommentService.html":{},"controllers/CorporationController.html":{},"modules/CorporationModule.html":{},"injectables/CorporationService.html":{},"injectables/DatabaseConfig.html":{},"controllers/ErrorlogController.html":{},"modules/ErrorlogModule.html":{},"injectables/ErrorlogService.html":{},"controllers/GroupController.html":{},"modules/GroupModule.html":{},"injectables/GroupService.html":{},"controllers/ListController.html":{},"modules/ListModule.html":{},"injectables/ListService.html":{},"controllers/MenuController.html":{},"modules/MenuModule.html":{},"injectables/MenuService.html":{},"classes/MyLogger.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"controllers/RoleController.html":{},"modules/RoleModule.html":{},"injectables/RoleService.html":{},"controllers/SiteController.html":{},"modules/SiteModule.html":{},"injectables/SiteService.html":{},"controllers/SqldirectController.html":{},"modules/SqldirectModule.html":{},"injectables/SqldirectService.html":{},"controllers/TagController.html":{},"modules/TagModule.html":{},"injectables/TagService.html":{},"classes/ToIntegerPipe.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{},"controllers/ViewController.html":{},"modules/ViewModule.html":{},"injectables/ViewService.html":{},"dependencies.html":{}}}],["nestjs/common/exceptions/http.exception",{"_index":479,"title":{},"body":{"injectables/AuthMiddleware.html":{},"injectables/CorporationService.html":{},"controllers/GroupController.html":{},"injectables/GroupService.html":{},"controllers/ListController.html":{},"injectables/ListService.html":{},"controllers/MenuController.html":{},"injectables/MenuService.html":{},"injectables/ProfileService.html":{},"controllers/RoleController.html":{},"injectables/RoleService.html":{},"controllers/SiteController.html":{},"injectables/SiteService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{}}}],["nestjs/config",{"_index":73,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthMiddleware.html":{},"classes/BaseController.html":{},"injectables/DatabaseConfig.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":1704,"title":{},"body":{"dependencies.html":{}}}],["nestjs/microservices",{"_index":1705,"title":{},"body":{"dependencies.html":{}}}],["nestjs/platform",{"_index":1706,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":185,"title":{},"body":{"controllers/ArticleController.html":{},"controllers/CorporationController.html":{},"classes/CreateGroupDto.html":{},"controllers/GroupController.html":{},"controllers/ListController.html":{},"controllers/MenuController.html":{},"controllers/ProfileController.html":{},"controllers/RoleController.html":{},"controllers/SiteController.html":{},"controllers/TagController.html":{},"controllers/UserController.html":{},"dependencies.html":{}}}],["nestjs/typeorm",{"_index":58,"title":{},"body":{"modules/AppModule.html":{},"modules/ArticleModule.html":{},"injectables/ArticleService.html":{},"modules/CorporationModule.html":{},"injectables/CorporationService.html":{},"injectables/DatabaseConfig.html":{},"modules/GroupModule.html":{},"injectables/GroupService.html":{},"modules/ListModule.html":{},"injectables/ListService.html":{},"modules/MenuModule.html":{},"injectables/MenuService.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"modules/RoleModule.html":{},"injectables/RoleService.html":{},"modules/SiteModule.html":{},"injectables/SiteService.html":{},"modules/TagModule.html":{},"injectables/TagService.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["nestjs/websockets",{"_index":1709,"title":{},"body":{"dependencies.html":{}}}],["nestmiddleware",{"_index":480,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["nestmodule",{"_index":318,"title":{},"body":{"modules/ArticleModule.html":{},"modules/CorporationModule.html":{},"modules/GroupModule.html":{},"modules/ListModule.html":{},"modules/MenuModule.html":{},"modules/ProfileModule.html":{},"modules/RoleModule.html":{},"modules/SiteModule.html":{},"modules/TagModule.html":{},"modules/UserModule.html":{}}}],["new",{"_index":419,"title":{},"body":{"injectables/ArticleService.html":{},"injectables/AuthMiddleware.html":{},"injectables/CorporationService.html":{},"injectables/GroupService.html":{},"injectables/ListService.html":{},"injectables/MenuService.html":{},"injectables/ProfileService.html":{},"injectables/RoleService.html":{},"injectables/SiteService.html":{},"classes/ToIntegerPipe.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{},"coverage.html":{}}}],["newarticle",{"_index":450,"title":{},"body":{"injectables/ArticleService.html":{}}}],["newcorporation",{"_index":622,"title":{},"body":{"injectables/CorporationService.html":{}}}],["newcorporation.costcenter",{"_index":624,"title":{},"body":{"injectables/CorporationService.html":{}}}],["newcorporation.description",{"_index":625,"title":{},"body":{"injectables/CorporationService.html":{}}}],["newcorporation.name",{"_index":623,"title":{},"body":{"injectables/CorporationService.html":{}}}],["newgroup",{"_index":872,"title":{},"body":{"injectables/GroupService.html":{}}}],["newgroup.name",{"_index":873,"title":{},"body":{"injectables/GroupService.html":{}}}],["newlist",{"_index":968,"title":{},"body":{"injectables/ListService.html":{}}}],["newlist.description",{"_index":970,"title":{},"body":{"injectables/ListService.html":{}}}],["newlist.name",{"_index":969,"title":{},"body":{"injectables/ListService.html":{}}}],["newmenu",{"_index":1097,"title":{},"body":{"injectables/MenuService.html":{}}}],["newmenu.abbreviation",{"_index":1100,"title":{},"body":{"injectables/MenuService.html":{}}}],["newmenu.description",{"_index":1099,"title":{},"body":{"injectables/MenuService.html":{}}}],["newmenu.name",{"_index":1098,"title":{},"body":{"injectables/MenuService.html":{}}}],["newrole",{"_index":1342,"title":{},"body":{"injectables/RoleService.html":{}}}],["newrole.description",{"_index":1344,"title":{},"body":{"injectables/RoleService.html":{}}}],["newrole.name",{"_index":1343,"title":{},"body":{"injectables/RoleService.html":{}}}],["newsite",{"_index":1424,"title":{},"body":{"injectables/SiteService.html":{}}}],["newsite.costcenter",{"_index":1426,"title":{},"body":{"injectables/SiteService.html":{}}}],["newsite.description",{"_index":1427,"title":{},"body":{"injectables/SiteService.html":{}}}],["newsite.name",{"_index":1425,"title":{},"body":{"injectables/SiteService.html":{}}}],["newuser",{"_index":1609,"title":{},"body":{"injectables/UserService.html":{}}}],["newuser.articles",{"_index":1613,"title":{},"body":{"injectables/UserService.html":{}}}],["newuser.email",{"_index":1611,"title":{},"body":{"injectables/UserService.html":{}}}],["newuser.password",{"_index":1612,"title":{},"body":{"injectables/UserService.html":{}}}],["newuser.username",{"_index":1610,"title":{},"body":{"injectables/UserService.html":{}}}],["next",{"_index":474,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["nextfunction",{"_index":475,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["node",{"_index":22,"title":{},"body":{"controllers/AppController.html":{},"index.html":{}}}],["null",{"_index":521,"title":{},"body":{"classes/BaseController.html":{},"injectables/CorporationService.html":{},"injectables/GroupService.html":{},"injectables/ListService.html":{},"injectables/MenuService.html":{},"injectables/RoleService.html":{},"injectables/SiteService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["nullable",{"_index":768,"title":{},"body":{"classes/ErrorLogEntity.html":{}}}],["number",{"_index":102,"title":{},"body":{"controllers/ArticleController.html":{},"interfaces/ArticleData.html":{},"classes/ArticleEntity.html":{},"interfaces/ArticleRO.html":{},"injectables/ArticleService.html":{},"interfaces/ArticlesRO.html":{},"classes/Comment.html":{},"interfaces/CommentsRO.html":{},"interfaces/CorporationData.html":{},"classes/CorporationEntity.html":{},"interfaces/CorporationRO.html":{},"injectables/CorporationService.html":{},"classes/CreateCorporationDto.html":{},"classes/CreateErrorLogDto.html":{},"classes/CreateGroupDto.html":{},"classes/CreateListDto.html":{},"classes/CreateListEntryDto.html":{},"classes/CreateMenuDto.html":{},"classes/CreateMenuEntryDto.html":{},"classes/CreateMenuEntryPointDto.html":{},"classes/CreateRoleAppDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSiteDto.html":{},"classes/ErrorLogEntity.html":{},"classes/FollowsEntity.html":{},"controllers/GroupController.html":{},"interfaces/GroupData.html":{},"classes/GroupEntity.html":{},"interfaces/GroupRO.html":{},"injectables/GroupService.html":{},"controllers/ListController.html":{},"interfaces/ListData.html":{},"classes/ListEntity.html":{},"interfaces/ListEntry.html":{},"classes/ListEntryEntity.html":{},"interfaces/ListEntryRO.html":{},"interfaces/ListRO.html":{},"injectables/ListService.html":{},"interfaces/MenuAppData.html":{},"classes/MenuAppEntity.html":{},"interfaces/MenuAppEntry.html":{},"controllers/MenuController.html":{},"classes/MenuEntryEntity.html":{},"interfaces/MenuEntryRO.html":{},"interfaces/MenuRO.html":{},"injectables/MenuService.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"controllers/RoleController.html":{},"interfaces/RoleData.html":{},"classes/RoleEntity.html":{},"classes/RoleMenuAppEntity.html":{},"classes/RoleMenuEntryEntity.html":{},"interfaces/RoleRO.html":{},"injectables/RoleService.html":{},"controllers/SiteController.html":{},"interfaces/SiteData.html":{},"classes/SiteEntity.html":{},"interfaces/SiteRO.html":{},"injectables/SiteService.html":{},"classes/TagEntity.html":{},"classes/ToIntegerPipe.html":{},"controllers/UserController.html":{},"classes/UserEntity.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{}}}],["number(process.env.http_port",{"_index":1763,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object",{"_index":1650,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["object.assign(toupdate",{"_index":457,"title":{},"body":{"injectables/ArticleService.html":{},"injectables/CorporationService.html":{},"injectables/GroupService.html":{},"injectables/ListService.html":{},"injectables/MenuService.html":{},"injectables/RoleService.html":{},"injectables/SiteService.html":{},"injectables/UserService.html":{}}}],["object.entries(el.constraints).foreach(constraint",{"_index":1657,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["offset",{"_index":406,"title":{},"body":{"injectables/ArticleService.html":{}}}],["one",{"_index":1281,"title":{},"body":{"classes/RoleEntity.html":{}}}],["onetomany",{"_index":295,"title":{},"body":{"classes/ArticleEntity.html":{},"classes/CorporationEntity.html":{},"classes/ListEntity.html":{},"classes/MenuAppEntity.html":{},"classes/MenuEntryEntity.html":{},"classes/RoleEntity.html":{},"classes/RoleMenuAppEntity.html":{},"classes/SiteEntity.html":{},"classes/UserEntity.html":{}}}],["onetomany(type",{"_index":305,"title":{},"body":{"classes/ArticleEntity.html":{},"classes/CorporationEntity.html":{},"classes/ListEntity.html":{},"classes/MenuAppEntity.html":{},"classes/MenuEntryEntity.html":{},"classes/RoleEntity.html":{},"classes/RoleMenuAppEntity.html":{},"classes/SiteEntity.html":{},"classes/UserEntity.html":{}}}],["onetomany(undefined",{"_index":268,"title":{},"body":{"classes/ArticleEntity.html":{},"classes/CorporationEntity.html":{},"classes/ListEntity.html":{},"classes/MenuAppEntity.html":{},"classes/MenuEntryEntity.html":{},"classes/RoleEntity.html":{},"classes/RoleMenuAppEntity.html":{},"classes/SiteEntity.html":{},"classes/UserEntity.html":{}}}],["onetoone",{"_index":293,"title":{},"body":{"classes/ArticleEntity.html":{},"classes/CorporationEntity.html":{},"classes/MenuAppEntity.html":{},"classes/MenuEntryEntity.html":{},"classes/RoleEntity.html":{},"classes/RoleMenuAppEntity.html":{},"classes/SiteEntity.html":{}}}],["onetoone(type",{"_index":1015,"title":{},"body":{"classes/MenuAppEntity.html":{},"classes/RoleMenuAppEntity.html":{}}}],["onetoone(undefined",{"_index":1008,"title":{},"body":{"classes/MenuAppEntity.html":{},"classes/RoleMenuAppEntity.html":{}}}],["onetoone,manytoone",{"_index":934,"title":{},"body":{"classes/ListEntity.html":{}}}],["optional",{"_index":118,"title":{},"body":{"controllers/ArticleController.html":{},"interfaces/ArticleData.html":{},"modules/ArticleModule.html":{},"injectables/ArticleService.html":{},"injectables/AuthMiddleware.html":{},"classes/BaseController.html":{},"controllers/CorporationController.html":{},"interfaces/CorporationData.html":{},"modules/CorporationModule.html":{},"injectables/CorporationService.html":{},"injectables/DatabaseConfig.html":{},"controllers/GroupController.html":{},"interfaces/GroupData.html":{},"modules/GroupModule.html":{},"injectables/GroupService.html":{},"controllers/ListController.html":{},"interfaces/ListData.html":{},"modules/ListModule.html":{},"injectables/ListService.html":{},"interfaces/MenuAppData.html":{},"controllers/MenuController.html":{},"modules/MenuModule.html":{},"injectables/MenuService.html":{},"classes/MyLogger.html":{},"controllers/ProfileController.html":{},"interfaces/ProfileData.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"controllers/RoleController.html":{},"interfaces/RoleData.html":{},"modules/RoleModule.html":{},"injectables/RoleService.html":{},"controllers/SiteController.html":{},"interfaces/SiteData.html":{},"modules/SiteModule.html":{},"injectables/SiteService.html":{},"modules/TagModule.html":{},"injectables/TagService.html":{},"classes/ToIntegerPipe.html":{},"controllers/UserController.html":{},"interfaces/UserData.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{},"miscellaneous/variables.html":{}}}],["options",{"_index":1187,"title":{},"body":{"injectables/ProfileService.html":{}}}],["orwhere('user.email",{"_index":1606,"title":{},"body":{"injectables/UserService.html":{}}}],["out",{"_index":51,"title":{},"body":{"modules/AppModule.html":{},"modules/ArticleModule.html":{},"modules/CorporationModule.html":{},"modules/ErrorlogModule.html":{},"modules/GroupModule.html":{},"modules/ListModule.html":{},"modules/MenuModule.html":{},"modules/ProfileModule.html":{},"modules/RoleModule.html":{},"modules/SiteModule.html":{},"modules/SqldirectModule.html":{},"modules/TagModule.html":{},"modules/UserModule.html":{},"modules/ViewModule.html":{},"overview.html":{}}}],["overview",{"_index":1752,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":1701,"title":{"dependencies.html":{}},"body":{}}],["param",{"_index":169,"title":{},"body":{"controllers/ArticleController.html":{},"controllers/CorporationController.html":{},"controllers/GroupController.html":{},"controllers/ListController.html":{},"controllers/MenuController.html":{},"controllers/ProfileController.html":{},"controllers/RoleController.html":{},"controllers/SiteController.html":{},"controllers/UserController.html":{}}}],["param('slug",{"_index":232,"title":{},"body":{"controllers/ArticleController.html":{}}}],["param('username",{"_index":1156,"title":{},"body":{"controllers/ProfileController.html":{}}}],["parameters",{"_index":115,"title":{},"body":{"controllers/ArticleController.html":{},"modules/ArticleModule.html":{},"injectables/ArticleService.html":{},"injectables/AuthMiddleware.html":{},"classes/BaseController.html":{},"controllers/CorporationController.html":{},"modules/CorporationModule.html":{},"injectables/CorporationService.html":{},"injectables/DatabaseConfig.html":{},"controllers/GroupController.html":{},"modules/GroupModule.html":{},"injectables/GroupService.html":{},"controllers/ListController.html":{},"modules/ListModule.html":{},"injectables/ListService.html":{},"controllers/MenuController.html":{},"modules/MenuModule.html":{},"injectables/MenuService.html":{},"classes/MyLogger.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"controllers/RoleController.html":{},"modules/RoleModule.html":{},"injectables/RoleService.html":{},"controllers/SiteController.html":{},"modules/SiteModule.html":{},"injectables/SiteService.html":{},"modules/TagModule.html":{},"injectables/TagService.html":{},"classes/ToIntegerPipe.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{}}}],["params",{"_index":132,"title":{},"body":{"controllers/ArticleController.html":{},"controllers/CorporationController.html":{},"controllers/GroupController.html":{},"controllers/ListController.html":{},"controllers/MenuController.html":{},"controllers/RoleController.html":{},"controllers/SiteController.html":{},"controllers/UserController.html":{}}}],["parseint(value",{"_index":1496,"title":{},"body":{"classes/ToIntegerPipe.html":{}}}],["passport",{"_index":484,"title":{},"body":{"injectables/AuthMiddleware.html":{},"dependencies.html":{}}}],["password",{"_index":750,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginUserDto.html":{},"classes/UserEntity.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["path",{"_index":329,"title":{},"body":{"modules/ArticleModule.html":{},"modules/UserModule.html":{}}}],["per",{"_index":1278,"title":{},"body":{"classes/RoleEntity.html":{}}}],["pipetransform",{"_index":1488,"title":{},"body":{"classes/ToIntegerPipe.html":{},"injectables/ValidationPipe.html":{}}}],["plaintoclass",{"_index":1645,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["plaintoclass(metatype",{"_index":1651,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["port",{"_index":1762,"title":{},"body":{"miscellaneous/variables.html":{}}}],["post",{"_index":166,"title":{},"body":{"controllers/ArticleController.html":{},"controllers/CorporationController.html":{},"controllers/GroupController.html":{},"controllers/ListController.html":{},"controllers/MenuController.html":{},"controllers/ProfileController.html":{},"controllers/RoleController.html":{},"controllers/SiteController.html":{},"controllers/UserController.html":{}}}],["post(':slug/comments",{"_index":220,"title":{},"body":{"controllers/ArticleController.html":{}}}],["post(':slug/favorite",{"_index":230,"title":{},"body":{"controllers/ArticleController.html":{}}}],["post(':username/follow",{"_index":1141,"title":{},"body":{"controllers/ProfileController.html":{}}}],["post('group",{"_index":830,"title":{},"body":{"controllers/GroupController.html":{}}}],["post('group')@apibody({type",{"_index":797,"title":{},"body":{"controllers/GroupController.html":{}}}],["post('list",{"_index":889,"title":{},"body":{"controllers/ListController.html":{}}}],["post('menu",{"_index":1021,"title":{},"body":{"controllers/MenuController.html":{}}}],["post('role",{"_index":1233,"title":{},"body":{"controllers/RoleController.html":{}}}],["post('site",{"_index":1359,"title":{},"body":{"controllers/SiteController.html":{}}}],["post('users",{"_index":1531,"title":{},"body":{"controllers/UserController.html":{}}}],["post('users/login",{"_index":1535,"title":{},"body":{"controllers/UserController.html":{}}}],["prefix",{"_index":87,"title":{},"body":{"controllers/ArticleController.html":{},"controllers/CommentController.html":{},"controllers/CorporationController.html":{},"controllers/ErrorlogController.html":{},"controllers/GroupController.html":{},"controllers/ListController.html":{},"controllers/MenuController.html":{},"controllers/ProfileController.html":{},"controllers/RoleController.html":{},"controllers/SiteController.html":{},"controllers/SqldirectController.html":{},"controllers/TagController.html":{},"controllers/ViewController.html":{}}}],["primary",{"_index":1309,"title":{},"body":{"classes/RoleMenuEntryEntity.html":{}}}],["primarycolumn",{"_index":1312,"title":{},"body":{"classes/RoleMenuEntryEntity.html":{}}}],["primarygeneratedcolumn",{"_index":280,"title":{},"body":{"classes/ArticleEntity.html":{},"classes/Comment.html":{},"classes/CorporationEntity.html":{},"classes/ErrorLogEntity.html":{},"classes/FollowsEntity.html":{},"classes/GroupEntity.html":{},"classes/ListEntity.html":{},"classes/ListEntryEntity.html":{},"classes/MenuAppEntity.html":{},"classes/MenuEntryEntity.html":{},"classes/RoleEntity.html":{},"classes/RoleMenuAppEntity.html":{},"classes/SiteEntity.html":{},"classes/TagEntity.html":{},"classes/UserEntity.html":{}}}],["private",{"_index":380,"title":{},"body":{"injectables/ArticleService.html":{},"injectables/AuthMiddleware.html":{},"injectables/CorporationService.html":{},"injectables/GroupService.html":{},"injectables/ListService.html":{},"injectables/MenuService.html":{},"injectables/ProfileService.html":{},"injectables/RoleService.html":{},"injectables/SiteService.html":{},"injectables/TagService.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{}}}],["profile",{"_index":1167,"title":{},"body":{"interfaces/ProfileData.html":{},"interfaces/ProfileRO.html":{},"injectables/ProfileService.html":{}}}],["profile.controller",{"_index":1173,"title":{},"body":{"modules/ProfileModule.html":{}}}],["profile.following",{"_index":1210,"title":{},"body":{"injectables/ProfileService.html":{}}}],["profile.interface",{"_index":1152,"title":{},"body":{"controllers/ProfileController.html":{},"injectables/ProfileService.html":{}}}],["profile.service",{"_index":1150,"title":{},"body":{"controllers/ProfileController.html":{},"modules/ProfileModule.html":{}}}],["profile/follows.entity",{"_index":322,"title":{},"body":{"modules/ArticleModule.html":{},"injectables/ArticleService.html":{}}}],["profile/profile.module",{"_index":70,"title":{},"body":{"modules/AppModule.html":{}}}],["profilecontroller",{"_index":1134,"title":{"controllers/ProfileController.html":{}},"body":{"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"coverage.html":{}}}],["profiledata",{"_index":1162,"title":{"interfaces/ProfileData.html":{}},"body":{"interfaces/ProfileData.html":{},"interfaces/ProfileRO.html":{},"injectables/ProfileService.html":{},"coverage.html":{}}}],["profilemodule",{"_index":44,"title":{"modules/ProfileModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ProfileModule.html":{},"modules.html":{},"overview.html":{}}}],["profilero",{"_index":1151,"title":{"interfaces/ProfileRO.html":{}},"body":{"controllers/ProfileController.html":{},"interfaces/ProfileData.html":{},"interfaces/ProfileRO.html":{},"injectables/ProfileService.html":{},"coverage.html":{}}}],["profiles",{"_index":1136,"title":{},"body":{"controllers/ProfileController.html":{}}}],["profiles/:username/follow",{"_index":1177,"title":{},"body":{"modules/ProfileModule.html":{}}}],["profileservice",{"_index":1149,"title":{"injectables/ProfileService.html":{}},"body":{"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"coverage.html":{},"overview.html":{}}}],["promise",{"_index":146,"title":{},"body":{"controllers/ArticleController.html":{},"injectables/ArticleService.html":{},"controllers/CorporationController.html":{},"injectables/CorporationService.html":{},"controllers/GroupController.html":{},"injectables/GroupService.html":{},"controllers/ListController.html":{},"injectables/ListService.html":{},"controllers/MenuController.html":{},"injectables/MenuService.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"controllers/RoleController.html":{},"injectables/RoleService.html":{},"controllers/SiteController.html":{},"injectables/SiteService.html":{},"controllers/TagController.html":{},"injectables/TagService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["prop",{"_index":1655,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["properties",{"_index":241,"title":{},"body":{"interfaces/ArticleData.html":{},"classes/ArticleEntity.html":{},"interfaces/ArticleRO.html":{},"interfaces/ArticlesRO.html":{},"classes/Comment.html":{},"interfaces/CommentsRO.html":{},"interfaces/CorporationData.html":{},"classes/CorporationEntity.html":{},"interfaces/CorporationRO.html":{},"classes/CreateArticleDto.html":{},"classes/CreateCommentDto.html":{},"classes/CreateCorporationDto.html":{},"classes/CreateErrorLogDto.html":{},"classes/CreateGroupDto.html":{},"classes/CreateListDto.html":{},"classes/CreateListEntryDto.html":{},"classes/CreateMenuDto.html":{},"classes/CreateMenuEntryDto.html":{},"classes/CreateMenuEntryPointDto.html":{},"classes/CreateRoleAppDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSiteDto.html":{},"classes/CreateUserDto.html":{},"classes/ErrorLogEntity.html":{},"classes/FollowsEntity.html":{},"interfaces/GroupData.html":{},"classes/GroupEntity.html":{},"interfaces/GroupRO.html":{},"interfaces/ListData.html":{},"classes/ListEntity.html":{},"interfaces/ListEntry.html":{},"classes/ListEntryEntity.html":{},"interfaces/ListEntryRO.html":{},"interfaces/ListRO.html":{},"classes/LoginUserDto.html":{},"interfaces/MenuAppData.html":{},"classes/MenuAppEntity.html":{},"interfaces/MenuAppEntry.html":{},"classes/MenuEntryEntity.html":{},"interfaces/MenuEntryRO.html":{},"interfaces/MenuRO.html":{},"interfaces/ProfileData.html":{},"interfaces/ProfileRO.html":{},"interfaces/RoleData.html":{},"classes/RoleEntity.html":{},"classes/RoleMenuAppEntity.html":{},"classes/RoleMenuEntryEntity.html":{},"interfaces/RoleRO.html":{},"interfaces/SiteData.html":{},"classes/SiteEntity.html":{},"interfaces/SiteRO.html":{},"classes/TagEntity.html":{},"classes/UpdateUserDto.html":{},"interfaces/UserData.html":{},"classes/UserEntity.html":{},"interfaces/UserRO.html":{}}}],["protected",{"_index":514,"title":{},"body":{"classes/BaseController.html":{},"miscellaneous/variables.html":{}}}],["provided",{"_index":1212,"title":{},"body":{"injectables/ProfileService.html":{}}}],["providers",{"_index":34,"title":{},"body":{"modules/AppModule.html":{},"modules/ArticleModule.html":{},"modules/CorporationModule.html":{},"modules/ErrorlogModule.html":{},"modules/GroupModule.html":{},"modules/ListModule.html":{},"modules/MenuModule.html":{},"modules/ProfileModule.html":{},"modules/RoleModule.html":{},"modules/SiteModule.html":{},"modules/SqldirectModule.html":{},"modules/TagModule.html":{},"modules/UserModule.html":{},"modules/ViewModule.html":{},"overview.html":{}}}],["public",{"_index":311,"title":{},"body":{"modules/ArticleModule.html":{},"modules/CorporationModule.html":{},"modules/GroupModule.html":{},"modules/ListModule.html":{},"modules/MenuModule.html":{},"modules/ProfileModule.html":{},"modules/RoleModule.html":{},"modules/SiteModule.html":{},"modules/TagModule.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["put",{"_index":168,"title":{},"body":{"controllers/ArticleController.html":{},"controllers/CorporationController.html":{},"controllers/GroupController.html":{},"controllers/ListController.html":{},"controllers/MenuController.html":{},"controllers/RoleController.html":{},"controllers/SiteController.html":{},"controllers/UserController.html":{}}}],["put(':slug",{"_index":209,"title":{},"body":{"controllers/ArticleController.html":{},"controllers/CorporationController.html":{}}}],["put('group",{"_index":807,"title":{},"body":{"controllers/GroupController.html":{}}}],["put('list",{"_index":897,"title":{},"body":{"controllers/ListController.html":{}}}],["put('menu",{"_index":1030,"title":{},"body":{"controllers/MenuController.html":{}}}],["put('role",{"_index":1241,"title":{},"body":{"controllers/RoleController.html":{}}}],["put('site",{"_index":1367,"title":{},"body":{"controllers/SiteController.html":{}}}],["put('user",{"_index":1521,"title":{},"body":{"controllers/UserController.html":{}}}],["qb",{"_index":384,"title":{},"body":{"injectables/ArticleService.html":{},"injectables/UserService.html":{}}}],["qb.andwhere(\"article.authorid",{"_index":395,"title":{},"body":{"injectables/ArticleService.html":{}}}],["qb.andwhere(\"article.taglist",{"_index":391,"title":{},"body":{"injectables/ArticleService.html":{}}}],["qb.getcount",{"_index":403,"title":{},"body":{"injectables/ArticleService.html":{}}}],["qb.getmany",{"_index":408,"title":{},"body":{"injectables/ArticleService.html":{}}}],["qb.getone",{"_index":1607,"title":{},"body":{"injectables/UserService.html":{}}}],["qb.limit(query.limit",{"_index":405,"title":{},"body":{"injectables/ArticleService.html":{}}}],["qb.offset(query.offset",{"_index":407,"title":{},"body":{"injectables/ArticleService.html":{}}}],["qb.orderby('article.created",{"_index":401,"title":{},"body":{"injectables/ArticleService.html":{}}}],["qb.where(\"1",{"_index":388,"title":{},"body":{"injectables/ArticleService.html":{}}}],["query",{"_index":145,"title":{},"body":{"controllers/ArticleController.html":{},"injectables/ArticleService.html":{},"controllers/CorporationController.html":{}}}],["query.author",{"_index":394,"title":{},"body":{"injectables/ArticleService.html":{}}}],["query.favorited",{"_index":397,"title":{},"body":{"injectables/ArticleService.html":{}}}],["query.tag",{"_index":392,"title":{},"body":{"injectables/ArticleService.html":{}}}],["readonly",{"_index":189,"title":{},"body":{"controllers/ArticleController.html":{},"injectables/ArticleService.html":{},"injectables/AuthMiddleware.html":{},"controllers/CorporationController.html":{},"injectables/CorporationService.html":{},"classes/CreateArticleDto.html":{},"classes/CreateCommentDto.html":{},"classes/CreateCorporationDto.html":{},"classes/CreateErrorLogDto.html":{},"classes/CreateGroupDto.html":{},"classes/CreateListDto.html":{},"classes/CreateListEntryDto.html":{},"classes/CreateMenuDto.html":{},"classes/CreateMenuEntryDto.html":{},"classes/CreateMenuEntryPointDto.html":{},"classes/CreateRoleAppDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSiteDto.html":{},"classes/CreateUserDto.html":{},"controllers/GroupController.html":{},"injectables/GroupService.html":{},"controllers/ListController.html":{},"injectables/ListService.html":{},"classes/LoginUserDto.html":{},"controllers/MenuController.html":{},"injectables/MenuService.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"controllers/RoleController.html":{},"injectables/RoleService.html":{},"controllers/SiteController.html":{},"injectables/SiteService.html":{},"controllers/TagController.html":{},"injectables/TagService.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["reflect",{"_index":1724,"title":{},"body":{"dependencies.html":{}}}],["relations",{"_index":452,"title":{},"body":{"injectables/ArticleService.html":{}}}],["repository",{"_index":348,"title":{},"body":{"injectables/ArticleService.html":{},"injectables/CorporationService.html":{},"injectables/GroupService.html":{},"injectables/ListService.html":{},"injectables/MenuService.html":{},"injectables/ProfileService.html":{},"injectables/RoleService.html":{},"injectables/SiteService.html":{},"injectables/TagService.html":{},"injectables/UserService.html":{}}}],["req",{"_index":477,"title":{},"body":{"injectables/AuthMiddleware.html":{},"miscellaneous/variables.html":{}}}],["req.headers.authorization",{"_index":489,"title":{},"body":{"injectables/AuthMiddleware.html":{},"miscellaneous/variables.html":{}}}],["req.user",{"_index":508,"title":{},"body":{"injectables/AuthMiddleware.html":{},"miscellaneous/variables.html":{}}}],["req.user[data",{"_index":1781,"title":{},"body":{"miscellaneous/variables.html":{}}}],["request",{"_index":170,"title":{},"body":{"controllers/ArticleController.html":{},"injectables/AuthMiddleware.html":{},"controllers/CorporationController.html":{},"controllers/GroupController.html":{},"controllers/ListController.html":{},"controllers/MenuController.html":{},"controllers/ProfileController.html":{},"controllers/RoleController.html":{},"controllers/SiteController.html":{},"controllers/UserController.html":{}}}],["requestmethod",{"_index":319,"title":{},"body":{"modules/ArticleModule.html":{},"modules/CorporationModule.html":{},"modules/GroupModule.html":{},"modules/ListModule.html":{},"modules/MenuModule.html":{},"modules/ProfileModule.html":{},"modules/RoleModule.html":{},"modules/SiteModule.html":{},"modules/TagModule.html":{},"modules/UserModule.html":{}}}],["requestmethod.all",{"_index":1178,"title":{},"body":{"modules/ProfileModule.html":{}}}],["requestmethod.delete",{"_index":335,"title":{},"body":{"modules/ArticleModule.html":{}}}],["requestmethod.get",{"_index":332,"title":{},"body":{"modules/ArticleModule.html":{},"modules/UserModule.html":{}}}],["requestmethod.post",{"_index":333,"title":{},"body":{"modules/ArticleModule.html":{}}}],["requestmethod.put",{"_index":336,"title":{},"body":{"modules/ArticleModule.html":{},"modules/UserModule.html":{}}}],["require('jsonwebtoken",{"_index":1599,"title":{},"body":{"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["require('slug",{"_index":378,"title":{},"body":{"injectables/ArticleService.html":{},"miscellaneous/variables.html":{}}}],["res",{"_index":472,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["reset",{"_index":50,"title":{},"body":{"modules/AppModule.html":{},"modules/ArticleModule.html":{},"modules/CorporationModule.html":{},"modules/ErrorlogModule.html":{},"modules/GroupModule.html":{},"modules/ListModule.html":{},"modules/MenuModule.html":{},"modules/ProfileModule.html":{},"modules/RoleModule.html":{},"modules/SiteModule.html":{},"modules/SqldirectModule.html":{},"modules/TagModule.html":{},"modules/UserModule.html":{},"modules/ViewModule.html":{},"overview.html":{}}}],["response",{"_index":473,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["rest",{"_index":1745,"title":{},"body":{"index.html":{}}}],["result",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/ArticleController.html":{},"interfaces/ArticleData.html":{},"classes/ArticleEntity.html":{},"modules/ArticleModule.html":{},"interfaces/ArticleRO.html":{},"injectables/ArticleService.html":{},"interfaces/ArticlesRO.html":{},"injectables/AuthMiddleware.html":{},"classes/BaseController.html":{},"classes/Comment.html":{},"controllers/CommentController.html":{},"modules/CommentModule.html":{},"injectables/CommentService.html":{},"interfaces/CommentsRO.html":{},"controllers/CorporationController.html":{},"interfaces/CorporationData.html":{},"classes/CorporationEntity.html":{},"modules/CorporationModule.html":{},"interfaces/CorporationRO.html":{},"injectables/CorporationService.html":{},"classes/CreateArticleDto.html":{},"classes/CreateCommentDto.html":{},"classes/CreateCorporationDto.html":{},"classes/CreateErrorLogDto.html":{},"classes/CreateGroupDto.html":{},"classes/CreateListDto.html":{},"classes/CreateListEntryDto.html":{},"classes/CreateMenuDto.html":{},"classes/CreateMenuEntryDto.html":{},"classes/CreateMenuEntryPointDto.html":{},"classes/CreateRoleAppDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSiteDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabaseConfig.html":{},"classes/ErrorLogEntity.html":{},"controllers/ErrorlogController.html":{},"modules/ErrorlogModule.html":{},"injectables/ErrorlogService.html":{},"classes/FollowsEntity.html":{},"controllers/GroupController.html":{},"interfaces/GroupData.html":{},"classes/GroupEntity.html":{},"modules/GroupModule.html":{},"interfaces/GroupRO.html":{},"injectables/GroupService.html":{},"controllers/ListController.html":{},"interfaces/ListData.html":{},"classes/ListEntity.html":{},"interfaces/ListEntry.html":{},"classes/ListEntryEntity.html":{},"interfaces/ListEntryRO.html":{},"modules/ListModule.html":{},"interfaces/ListRO.html":{},"injectables/ListService.html":{},"classes/LoginUserDto.html":{},"interfaces/MenuAppData.html":{},"classes/MenuAppEntity.html":{},"interfaces/MenuAppEntry.html":{},"controllers/MenuController.html":{},"classes/MenuEntryEntity.html":{},"interfaces/MenuEntryRO.html":{},"modules/MenuModule.html":{},"interfaces/MenuRO.html":{},"injectables/MenuService.html":{},"classes/MyLogger.html":{},"controllers/ProfileController.html":{},"interfaces/ProfileData.html":{},"modules/ProfileModule.html":{},"interfaces/ProfileRO.html":{},"injectables/ProfileService.html":{},"controllers/RoleController.html":{},"interfaces/RoleData.html":{},"classes/RoleEntity.html":{},"classes/RoleMenuAppEntity.html":{},"classes/RoleMenuEntryEntity.html":{},"modules/RoleModule.html":{},"interfaces/RoleRO.html":{},"injectables/RoleService.html":{},"controllers/SiteController.html":{},"interfaces/SiteData.html":{},"classes/SiteEntity.html":{},"modules/SiteModule.html":{},"interfaces/SiteRO.html":{},"injectables/SiteService.html":{},"controllers/SqldirectController.html":{},"modules/SqldirectModule.html":{},"injectables/SqldirectService.html":{},"controllers/TagController.html":{},"classes/TagEntity.html":{},"modules/TagModule.html":{},"injectables/TagService.html":{},"classes/ToIntegerPipe.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"interfaces/UserData.html":{},"classes/UserEntity.html":{},"modules/UserModule.html":{},"interfaces/UserRO.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{},"controllers/ViewController.html":{},"modules/ViewModule.html":{},"injectables/ViewService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["result[prop",{"_index":1658,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["results",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/ArticleController.html":{},"interfaces/ArticleData.html":{},"classes/ArticleEntity.html":{},"modules/ArticleModule.html":{},"interfaces/ArticleRO.html":{},"injectables/ArticleService.html":{},"interfaces/ArticlesRO.html":{},"injectables/AuthMiddleware.html":{},"classes/BaseController.html":{},"classes/Comment.html":{},"controllers/CommentController.html":{},"modules/CommentModule.html":{},"injectables/CommentService.html":{},"interfaces/CommentsRO.html":{},"controllers/CorporationController.html":{},"interfaces/CorporationData.html":{},"classes/CorporationEntity.html":{},"modules/CorporationModule.html":{},"interfaces/CorporationRO.html":{},"injectables/CorporationService.html":{},"classes/CreateArticleDto.html":{},"classes/CreateCommentDto.html":{},"classes/CreateCorporationDto.html":{},"classes/CreateErrorLogDto.html":{},"classes/CreateGroupDto.html":{},"classes/CreateListDto.html":{},"classes/CreateListEntryDto.html":{},"classes/CreateMenuDto.html":{},"classes/CreateMenuEntryDto.html":{},"classes/CreateMenuEntryPointDto.html":{},"classes/CreateRoleAppDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSiteDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabaseConfig.html":{},"classes/ErrorLogEntity.html":{},"controllers/ErrorlogController.html":{},"modules/ErrorlogModule.html":{},"injectables/ErrorlogService.html":{},"classes/FollowsEntity.html":{},"controllers/GroupController.html":{},"interfaces/GroupData.html":{},"classes/GroupEntity.html":{},"modules/GroupModule.html":{},"interfaces/GroupRO.html":{},"injectables/GroupService.html":{},"controllers/ListController.html":{},"interfaces/ListData.html":{},"classes/ListEntity.html":{},"interfaces/ListEntry.html":{},"classes/ListEntryEntity.html":{},"interfaces/ListEntryRO.html":{},"modules/ListModule.html":{},"interfaces/ListRO.html":{},"injectables/ListService.html":{},"classes/LoginUserDto.html":{},"interfaces/MenuAppData.html":{},"classes/MenuAppEntity.html":{},"interfaces/MenuAppEntry.html":{},"controllers/MenuController.html":{},"classes/MenuEntryEntity.html":{},"interfaces/MenuEntryRO.html":{},"modules/MenuModule.html":{},"interfaces/MenuRO.html":{},"injectables/MenuService.html":{},"classes/MyLogger.html":{},"controllers/ProfileController.html":{},"interfaces/ProfileData.html":{},"modules/ProfileModule.html":{},"interfaces/ProfileRO.html":{},"injectables/ProfileService.html":{},"controllers/RoleController.html":{},"interfaces/RoleData.html":{},"classes/RoleEntity.html":{},"classes/RoleMenuAppEntity.html":{},"classes/RoleMenuEntryEntity.html":{},"modules/RoleModule.html":{},"interfaces/RoleRO.html":{},"injectables/RoleService.html":{},"controllers/SiteController.html":{},"interfaces/SiteData.html":{},"classes/SiteEntity.html":{},"modules/SiteModule.html":{},"interfaces/SiteRO.html":{},"injectables/SiteService.html":{},"controllers/SqldirectController.html":{},"modules/SqldirectModule.html":{},"injectables/SqldirectService.html":{},"controllers/TagController.html":{},"classes/TagEntity.html":{},"modules/TagModule.html":{},"injectables/TagService.html":{},"classes/ToIntegerPipe.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"interfaces/UserData.html":{},"classes/UserEntity.html":{},"modules/UserModule.html":{},"interfaces/UserRO.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{},"controllers/ViewController.html":{},"modules/ViewModule.html":{},"injectables/ViewService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"controllers/ArticleController.html":{},"injectables/ArticleService.html":{},"classes/BaseController.html":{},"controllers/CorporationController.html":{},"injectables/CorporationService.html":{},"injectables/DatabaseConfig.html":{},"controllers/GroupController.html":{},"injectables/GroupService.html":{},"controllers/ListController.html":{},"injectables/ListService.html":{},"controllers/MenuController.html":{},"injectables/MenuService.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"controllers/RoleController.html":{},"injectables/RoleService.html":{},"controllers/SiteController.html":{},"injectables/SiteService.html":{},"controllers/TagController.html":{},"injectables/TagService.html":{},"classes/ToIntegerPipe.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"controllers/ArticleController.html":{},"modules/ArticleModule.html":{},"injectables/ArticleService.html":{},"injectables/AuthMiddleware.html":{},"classes/BaseController.html":{},"controllers/CorporationController.html":{},"modules/CorporationModule.html":{},"injectables/CorporationService.html":{},"injectables/DatabaseConfig.html":{},"controllers/GroupController.html":{},"modules/GroupModule.html":{},"injectables/GroupService.html":{},"controllers/ListController.html":{},"modules/ListModule.html":{},"injectables/ListService.html":{},"controllers/MenuController.html":{},"modules/MenuModule.html":{},"injectables/MenuService.html":{},"classes/MyLogger.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"controllers/RoleController.html":{},"modules/RoleModule.html":{},"injectables/RoleService.html":{},"controllers/SiteController.html":{},"modules/SiteModule.html":{},"injectables/SiteService.html":{},"controllers/TagController.html":{},"modules/TagModule.html":{},"injectables/TagService.html":{},"classes/ToIntegerPipe.html":{},"controllers/UserController.html":{},"classes/UserEntity.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{}}}],["riantis",{"_index":21,"title":{},"body":{"controllers/AppController.html":{}}}],["rihsrv001",{"_index":1768,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rimraf",{"_index":1726,"title":{},"body":{"dependencies.html":{}}}],["risnode",{"_index":1742,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["role",{"_index":836,"title":{},"body":{"classes/GroupEntity.html":{},"interfaces/RoleData.html":{},"classes/RoleEntity.html":{},"classes/RoleMenuAppEntity.html":{},"interfaces/RoleRO.html":{},"injectables/RoleService.html":{},"classes/SiteEntity.html":{},"classes/UserEntity.html":{}}}],["role.controller",{"_index":1324,"title":{},"body":{"modules/RoleModule.html":{}}}],["role.description",{"_index":1355,"title":{},"body":{"injectables/RoleService.html":{}}}],["role.dto.ts",{"_index":736,"title":{},"body":{"classes/CreateRoleDto.html":{},"coverage.html":{}}}],["role.dto.ts:11",{"_index":737,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["role.dto.ts:5",{"_index":738,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["role.dto.ts:8",{"_index":739,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["role.entity",{"_index":1247,"title":{},"body":{"controllers/RoleController.html":{},"classes/RoleMenuAppEntity.html":{},"modules/RoleModule.html":{},"injectables/RoleService.html":{}}}],["role.groups",{"_index":849,"title":{},"body":{"classes/GroupEntity.html":{}}}],["role.id",{"_index":1353,"title":{},"body":{"injectables/RoleService.html":{}}}],["role.interface",{"_index":1246,"title":{},"body":{"controllers/RoleController.html":{},"injectables/RoleService.html":{}}}],["role.name",{"_index":1354,"title":{},"body":{"injectables/RoleService.html":{}}}],["role.rolemenuapps",{"_index":1303,"title":{},"body":{"classes/RoleMenuAppEntity.html":{}}}],["role.service",{"_index":1244,"title":{},"body":{"controllers/RoleController.html":{},"modules/RoleModule.html":{}}}],["role.site",{"_index":1401,"title":{},"body":{"classes/SiteEntity.html":{}}}],["role.user",{"_index":1572,"title":{},"body":{"classes/UserEntity.html":{}}}],["role/role.entity",{"_index":847,"title":{},"body":{"classes/GroupEntity.html":{},"classes/SiteEntity.html":{},"classes/UserEntity.html":{}}}],["role/role.module",{"_index":61,"title":{},"body":{"modules/AppModule.html":{}}}],["role/rolemenuapp.entity",{"_index":1012,"title":{},"body":{"classes/MenuAppEntity.html":{},"classes/RoleMenuEntryEntity.html":{}}}],["role/rolemenuentry.entity",{"_index":1070,"title":{},"body":{"classes/MenuEntryEntity.html":{},"classes/RoleMenuAppEntity.html":{}}}],["roleapp.dto.ts",{"_index":729,"title":{},"body":{"classes/CreateRoleAppDto.html":{},"coverage.html":{}}}],["roleapp.dto.ts:11",{"_index":730,"title":{},"body":{"classes/CreateRoleAppDto.html":{}}}],["roleapp.dto.ts:14",{"_index":731,"title":{},"body":{"classes/CreateRoleAppDto.html":{}}}],["roleapp.dto.ts:5",{"_index":732,"title":{},"body":{"classes/CreateRoleAppDto.html":{}}}],["roleapp.dto.ts:8",{"_index":733,"title":{},"body":{"classes/CreateRoleAppDto.html":{}}}],["rolecontroller",{"_index":1229,"title":{"controllers/RoleController.html":{}},"body":{"controllers/RoleController.html":{},"modules/RoleModule.html":{},"coverage.html":{}}}],["roledata",{"_index":1235,"title":{"interfaces/RoleData.html":{}},"body":{"controllers/RoleController.html":{},"interfaces/RoleData.html":{},"interfaces/RoleRO.html":{},"coverage.html":{}}}],["roleentity",{"_index":843,"title":{"classes/RoleEntity.html":{}},"body":{"classes/GroupEntity.html":{},"controllers/RoleController.html":{},"classes/RoleEntity.html":{},"classes/RoleMenuAppEntity.html":{},"modules/RoleModule.html":{},"injectables/RoleService.html":{},"classes/SiteEntity.html":{},"classes/UserEntity.html":{},"coverage.html":{}}}],["roleid",{"_index":1302,"title":{},"body":{"classes/RoleMenuAppEntity.html":{}}}],["rolemenuapp",{"_index":998,"title":{},"body":{"classes/MenuAppEntity.html":{},"classes/RoleEntity.html":{},"classes/RoleMenuEntryEntity.html":{}}}],["rolemenuapp.entity",{"_index":1274,"title":{},"body":{"classes/RoleEntity.html":{}}}],["rolemenuapp.role",{"_index":1291,"title":{},"body":{"classes/RoleEntity.html":{}}}],["rolemenuapp.rolemenuappconnection",{"_index":1318,"title":{},"body":{"classes/RoleMenuEntryEntity.html":{}}}],["rolemenuappconnection",{"_index":1294,"title":{},"body":{"classes/RoleMenuAppEntity.html":{}}}],["rolemenuappentity",{"_index":1007,"title":{"classes/RoleMenuAppEntity.html":{}},"body":{"classes/MenuAppEntity.html":{},"classes/RoleEntity.html":{},"classes/RoleMenuAppEntity.html":{},"classes/RoleMenuEntryEntity.html":{},"coverage.html":{}}}],["rolemenuappid",{"_index":1308,"title":{},"body":{"classes/RoleMenuEntryEntity.html":{}}}],["rolemenuapps",{"_index":1260,"title":{},"body":{"classes/RoleEntity.html":{}}}],["rolemenuentry",{"_index":1073,"title":{},"body":{"classes/MenuEntryEntity.html":{},"classes/RoleMenuAppEntity.html":{}}}],["rolemenuentry.menuentryid",{"_index":1304,"title":{},"body":{"classes/RoleMenuAppEntity.html":{}}}],["rolemenuentry.rolemenuappid",{"_index":1074,"title":{},"body":{"classes/MenuEntryEntity.html":{}}}],["rolemenuentryentity",{"_index":1063,"title":{"classes/RoleMenuEntryEntity.html":{}},"body":{"classes/MenuEntryEntity.html":{},"classes/RoleMenuAppEntity.html":{},"classes/RoleMenuEntryEntity.html":{},"coverage.html":{}}}],["rolemodule",{"_index":45,"title":{"modules/RoleModule.html":{}},"body":{"modules/AppModule.html":{},"modules/RoleModule.html":{},"modules.html":{},"overview.html":{}}}],["rolerepository",{"_index":1330,"title":{},"body":{"injectables/RoleService.html":{}}}],["rolero",{"_index":1245,"title":{"interfaces/RoleRO.html":{}},"body":{"controllers/RoleController.html":{},"interfaces/RoleData.html":{},"interfaces/RoleRO.html":{},"injectables/RoleService.html":{},"coverage.html":{}}}],["roles",{"_index":1231,"title":{},"body":{"controllers/RoleController.html":{},"classes/RoleEntity.html":{},"classes/SiteEntity.html":{},"classes/UserEntity.html":{}}}],["roleservice",{"_index":1243,"title":{"injectables/RoleService.html":{}},"body":{"controllers/RoleController.html":{},"modules/RoleModule.html":{},"injectables/RoleService.html":{},"coverage.html":{},"overview.html":{}}}],["root",{"_index":9,"title":{},"body":{"controllers/AppController.html":{}}}],["route",{"_index":1779,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rxjs",{"_index":1728,"title":{},"body":{"dependencies.html":{}}}],["sa",{"_index":1769,"title":{},"body":{"miscellaneous/variables.html":{}}}],["savedcorporation",{"_index":638,"title":{},"body":{"injectables/CorporationService.html":{}}}],["savedgroup",{"_index":875,"title":{},"body":{"injectables/GroupService.html":{}}}],["savedlist",{"_index":972,"title":{},"body":{"injectables/ListService.html":{}}}],["savedmenu",{"_index":1102,"title":{},"body":{"injectables/MenuService.html":{}}}],["savedrole",{"_index":1346,"title":{},"body":{"injectables/RoleService.html":{}}}],["savedsite",{"_index":1429,"title":{},"body":{"injectables/SiteService.html":{}}}],["saveduser",{"_index":1615,"title":{},"body":{"injectables/UserService.html":{}}}],["secret",{"_index":492,"title":{},"body":{"injectables/AuthMiddleware.html":{},"classes/BaseController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["set",{"_index":1780,"title":{},"body":{"miscellaneous/variables.html":{}}}],["shared/pipes/validation.pipe",{"_index":818,"title":{},"body":{"controllers/GroupController.html":{},"controllers/ListController.html":{},"controllers/MenuController.html":{},"controllers/RoleController.html":{},"controllers/SiteController.html":{},"controllers/UserController.html":{}}}],["site",{"_index":586,"title":{},"body":{"classes/CorporationEntity.html":{},"classes/RoleEntity.html":{},"interfaces/SiteData.html":{},"interfaces/SiteRO.html":{},"injectables/SiteService.html":{}}}],["site.controller",{"_index":1406,"title":{},"body":{"modules/SiteModule.html":{}}}],["site.corporation",{"_index":587,"title":{},"body":{"classes/CorporationEntity.html":{}}}],["site.costcenter",{"_index":1438,"title":{},"body":{"injectables/SiteService.html":{}}}],["site.description",{"_index":1439,"title":{},"body":{"injectables/SiteService.html":{}}}],["site.dto.ts",{"_index":742,"title":{},"body":{"classes/CreateSiteDto.html":{},"coverage.html":{}}}],["site.dto.ts:11",{"_index":743,"title":{},"body":{"classes/CreateSiteDto.html":{}}}],["site.dto.ts:14",{"_index":744,"title":{},"body":{"classes/CreateSiteDto.html":{}}}],["site.dto.ts:5",{"_index":745,"title":{},"body":{"classes/CreateSiteDto.html":{}}}],["site.dto.ts:8",{"_index":746,"title":{},"body":{"classes/CreateSiteDto.html":{}}}],["site.entity",{"_index":1373,"title":{},"body":{"controllers/SiteController.html":{},"modules/SiteModule.html":{},"injectables/SiteService.html":{}}}],["site.id",{"_index":1436,"title":{},"body":{"injectables/SiteService.html":{}}}],["site.interface",{"_index":1372,"title":{},"body":{"controllers/SiteController.html":{},"injectables/SiteService.html":{}}}],["site.name",{"_index":1437,"title":{},"body":{"injectables/SiteService.html":{}}}],["site.roles",{"_index":1282,"title":{},"body":{"classes/RoleEntity.html":{}}}],["site.service",{"_index":1370,"title":{},"body":{"controllers/SiteController.html":{},"modules/SiteModule.html":{}}}],["site/site.entity",{"_index":584,"title":{},"body":{"classes/CorporationEntity.html":{},"classes/RoleEntity.html":{}}}],["site/site.module",{"_index":65,"title":{},"body":{"modules/AppModule.html":{}}}],["sitecontroller",{"_index":1356,"title":{"controllers/SiteController.html":{}},"body":{"controllers/SiteController.html":{},"modules/SiteModule.html":{},"coverage.html":{}}}],["sitedata",{"_index":1361,"title":{"interfaces/SiteData.html":{}},"body":{"controllers/SiteController.html":{},"interfaces/SiteData.html":{},"interfaces/SiteRO.html":{},"coverage.html":{}}}],["siteentity",{"_index":579,"title":{"classes/SiteEntity.html":{}},"body":{"classes/CorporationEntity.html":{},"classes/RoleEntity.html":{},"controllers/SiteController.html":{},"classes/SiteEntity.html":{},"modules/SiteModule.html":{},"injectables/SiteService.html":{},"coverage.html":{}}}],["siteid",{"_index":672,"title":{},"body":{"classes/CreateErrorLogDto.html":{},"classes/ErrorLogEntity.html":{}}}],["sitemodule",{"_index":46,"title":{"modules/SiteModule.html":{}},"body":{"modules/AppModule.html":{},"modules/SiteModule.html":{},"modules.html":{},"overview.html":{}}}],["siterepository",{"_index":1412,"title":{},"body":{"injectables/SiteService.html":{}}}],["sitero",{"_index":1371,"title":{"interfaces/SiteRO.html":{}},"body":{"controllers/SiteController.html":{},"interfaces/SiteData.html":{},"interfaces/SiteRO.html":{},"injectables/SiteService.html":{},"coverage.html":{}}}],["sites",{"_index":570,"title":{},"body":{"classes/CorporationEntity.html":{},"classes/RoleEntity.html":{},"controllers/SiteController.html":{}}}],["siteservice",{"_index":1369,"title":{"injectables/SiteService.html":{}},"body":{"controllers/SiteController.html":{},"modules/SiteModule.html":{},"injectables/SiteService.html":{},"coverage.html":{},"overview.html":{}}}],["slug",{"_index":127,"title":{},"body":{"controllers/ArticleController.html":{},"interfaces/ArticleData.html":{},"classes/ArticleEntity.html":{},"interfaces/ArticleRO.html":{},"injectables/ArticleService.html":{},"interfaces/ArticlesRO.html":{},"interfaces/CommentsRO.html":{},"controllers/CorporationController.html":{},"interfaces/CorporationData.html":{},"classes/CorporationEntity.html":{},"interfaces/CorporationRO.html":{},"injectables/CorporationService.html":{},"controllers/ListController.html":{},"controllers/MenuController.html":{},"classes/SiteEntity.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["slug(title",{"_index":460,"title":{},"body":{"injectables/ArticleService.html":{}}}],["slugify",{"_index":345,"title":{},"body":{"injectables/ArticleService.html":{}}}],["slugify(title",{"_index":369,"title":{},"body":{"injectables/ArticleService.html":{}}}],["sortid",{"_index":713,"title":{},"body":{"classes/CreateMenuEntryDto.html":{},"classes/CreateMenuEntryPointDto.html":{},"interfaces/MenuAppData.html":{},"interfaces/MenuAppEntry.html":{},"classes/MenuEntryEntity.html":{},"interfaces/MenuEntryRO.html":{},"interfaces/MenuRO.html":{},"injectables/MenuService.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/ArticleController.html":{},"interfaces/ArticleData.html":{},"classes/ArticleEntity.html":{},"modules/ArticleModule.html":{},"interfaces/ArticleRO.html":{},"injectables/ArticleService.html":{},"interfaces/ArticlesRO.html":{},"injectables/AuthMiddleware.html":{},"classes/BaseController.html":{},"classes/Comment.html":{},"controllers/CommentController.html":{},"modules/CommentModule.html":{},"injectables/CommentService.html":{},"interfaces/CommentsRO.html":{},"controllers/CorporationController.html":{},"interfaces/CorporationData.html":{},"classes/CorporationEntity.html":{},"modules/CorporationModule.html":{},"interfaces/CorporationRO.html":{},"injectables/CorporationService.html":{},"classes/CreateArticleDto.html":{},"classes/CreateCommentDto.html":{},"classes/CreateCorporationDto.html":{},"classes/CreateErrorLogDto.html":{},"classes/CreateGroupDto.html":{},"classes/CreateListDto.html":{},"classes/CreateListEntryDto.html":{},"classes/CreateMenuDto.html":{},"classes/CreateMenuEntryDto.html":{},"classes/CreateMenuEntryPointDto.html":{},"classes/CreateRoleAppDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSiteDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabaseConfig.html":{},"classes/ErrorLogEntity.html":{},"controllers/ErrorlogController.html":{},"modules/ErrorlogModule.html":{},"injectables/ErrorlogService.html":{},"classes/FollowsEntity.html":{},"controllers/GroupController.html":{},"interfaces/GroupData.html":{},"classes/GroupEntity.html":{},"modules/GroupModule.html":{},"interfaces/GroupRO.html":{},"injectables/GroupService.html":{},"controllers/ListController.html":{},"interfaces/ListData.html":{},"classes/ListEntity.html":{},"interfaces/ListEntry.html":{},"classes/ListEntryEntity.html":{},"interfaces/ListEntryRO.html":{},"modules/ListModule.html":{},"interfaces/ListRO.html":{},"injectables/ListService.html":{},"classes/LoginUserDto.html":{},"interfaces/MenuAppData.html":{},"classes/MenuAppEntity.html":{},"interfaces/MenuAppEntry.html":{},"controllers/MenuController.html":{},"classes/MenuEntryEntity.html":{},"interfaces/MenuEntryRO.html":{},"modules/MenuModule.html":{},"interfaces/MenuRO.html":{},"injectables/MenuService.html":{},"classes/MyLogger.html":{},"controllers/ProfileController.html":{},"interfaces/ProfileData.html":{},"modules/ProfileModule.html":{},"interfaces/ProfileRO.html":{},"injectables/ProfileService.html":{},"controllers/RoleController.html":{},"interfaces/RoleData.html":{},"classes/RoleEntity.html":{},"classes/RoleMenuAppEntity.html":{},"classes/RoleMenuEntryEntity.html":{},"modules/RoleModule.html":{},"interfaces/RoleRO.html":{},"injectables/RoleService.html":{},"controllers/SiteController.html":{},"interfaces/SiteData.html":{},"classes/SiteEntity.html":{},"modules/SiteModule.html":{},"interfaces/SiteRO.html":{},"injectables/SiteService.html":{},"controllers/SqldirectController.html":{},"modules/SqldirectModule.html":{},"injectables/SqldirectService.html":{},"controllers/TagController.html":{},"classes/TagEntity.html":{},"modules/TagModule.html":{},"injectables/TagService.html":{},"classes/ToIntegerPipe.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"interfaces/UserData.html":{},"classes/UserEntity.html":{},"modules/UserModule.html":{},"interfaces/UserRO.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{},"controllers/ViewController.html":{},"modules/ViewModule.html":{},"injectables/ViewService.html":{}}}],["sqldirect",{"_index":1442,"title":{},"body":{"controllers/SqldirectController.html":{}}}],["sqldirect.controller",{"_index":1449,"title":{},"body":{"modules/SqldirectModule.html":{}}}],["sqldirect.service",{"_index":1450,"title":{},"body":{"modules/SqldirectModule.html":{}}}],["sqldirectcontroller",{"_index":1440,"title":{"controllers/SqldirectController.html":{}},"body":{"controllers/SqldirectController.html":{},"modules/SqldirectModule.html":{},"coverage.html":{}}}],["sqldirectmodule",{"_index":1444,"title":{"modules/SqldirectModule.html":{}},"body":{"modules/SqldirectModule.html":{},"modules.html":{},"overview.html":{}}}],["sqldirectservice",{"_index":1447,"title":{"injectables/SqldirectService.html":{}},"body":{"modules/SqldirectModule.html":{},"injectables/SqldirectService.html":{},"coverage.html":{},"overview.html":{}}}],["src/**/**.entity{.ts,.js",{"_index":1773,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../article.service.ts",{"_index":1760,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../config.env.ts",{"_index":1758,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":1739,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../user.decorator.ts",{"_index":1761,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../user.service.ts",{"_index":1759,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:6",{"_index":13,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":52,"title":{},"body":{"modules/AppModule.html":{}}}],["src/article/article.controller.ts",{"_index":86,"title":{},"body":{"controllers/ArticleController.html":{},"coverage.html":{}}}],["src/article/article.controller.ts:102",{"_index":161,"title":{},"body":{"controllers/ArticleController.html":{}}}],["src/article/article.controller.ts:25",{"_index":144,"title":{},"body":{"controllers/ArticleController.html":{}}}],["src/article/article.controller.ts:34",{"_index":157,"title":{},"body":{"controllers/ArticleController.html":{}}}],["src/article/article.controller.ts:39",{"_index":152,"title":{},"body":{"controllers/ArticleController.html":{}}}],["src/article/article.controller.ts:44",{"_index":149,"title":{},"body":{"controllers/ArticleController.html":{}}}],["src/article/article.controller.ts:52",{"_index":114,"title":{},"body":{"controllers/ArticleController.html":{}}}],["src/article/article.controller.ts:60",{"_index":165,"title":{},"body":{"controllers/ArticleController.html":{}}}],["src/article/article.controller.ts:69",{"_index":131,"title":{},"body":{"controllers/ArticleController.html":{}}}],["src/article/article.controller.ts:77",{"_index":126,"title":{},"body":{"controllers/ArticleController.html":{}}}],["src/article/article.controller.ts:85",{"_index":135,"title":{},"body":{"controllers/ArticleController.html":{}}}],["src/article/article.controller.ts:94",{"_index":139,"title":{},"body":{"controllers/ArticleController.html":{}}}],["src/article/article.entity.ts",{"_index":256,"title":{},"body":{"classes/ArticleEntity.html":{},"coverage.html":{}}}],["src/article/article.entity.ts:12",{"_index":285,"title":{},"body":{"classes/ArticleEntity.html":{}}}],["src/article/article.entity.ts:15",{"_index":289,"title":{},"body":{"classes/ArticleEntity.html":{}}}],["src/article/article.entity.ts:18",{"_index":277,"title":{},"body":{"classes/ArticleEntity.html":{}}}],["src/article/article.entity.ts:21",{"_index":267,"title":{},"body":{"classes/ArticleEntity.html":{}}}],["src/article/article.entity.ts:24",{"_index":274,"title":{},"body":{"classes/ArticleEntity.html":{}}}],["src/article/article.entity.ts:27",{"_index":273,"title":{},"body":{"classes/ArticleEntity.html":{}}}],["src/article/article.entity.ts:30",{"_index":291,"title":{},"body":{"classes/ArticleEntity.html":{}}}],["src/article/article.entity.ts:33",{"_index":290,"title":{},"body":{"classes/ArticleEntity.html":{}}}],["src/article/article.entity.ts:36",{"_index":288,"title":{},"body":{"classes/ArticleEntity.html":{}}}],["src/article/article.entity.ts:39",{"_index":265,"title":{},"body":{"classes/ArticleEntity.html":{}}}],["src/article/article.entity.ts:43",{"_index":271,"title":{},"body":{"classes/ArticleEntity.html":{}}}],["src/article/article.entity.ts:46",{"_index":279,"title":{},"body":{"classes/ArticleEntity.html":{}}}],["src/article/article.entity.ts:9",{"_index":281,"title":{},"body":{"classes/ArticleEntity.html":{}}}],["src/article/article.interface.ts",{"_index":240,"title":{},"body":{"interfaces/ArticleData.html":{},"interfaces/ArticleRO.html":{},"interfaces/ArticlesRO.html":{},"interfaces/CommentsRO.html":{},"coverage.html":{}}}],["src/article/article.module.ts",{"_index":310,"title":{},"body":{"modules/ArticleModule.html":{}}}],["src/article/article.module.ts:20",{"_index":315,"title":{},"body":{"modules/ArticleModule.html":{}}}],["src/article/article.service.ts",{"_index":342,"title":{},"body":{"injectables/ArticleService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/article/article.service.ts:101",{"_index":355,"title":{},"body":{"injectables/ArticleService.html":{}}}],["src/article/article.service.ts:114",{"_index":360,"title":{},"body":{"injectables/ArticleService.html":{}}}],["src/article/article.service.ts:131",{"_index":362,"title":{},"body":{"injectables/ArticleService.html":{}}}],["src/article/article.service.ts:14",{"_index":352,"title":{},"body":{"injectables/ArticleService.html":{}}}],["src/article/article.service.ts:147",{"_index":372,"title":{},"body":{"injectables/ArticleService.html":{}}}],["src/article/article.service.ts:165",{"_index":364,"title":{},"body":{"injectables/ArticleService.html":{}}}],["src/article/article.service.ts:170",{"_index":356,"title":{},"body":{"injectables/ArticleService.html":{}}}],["src/article/article.service.ts:190",{"_index":374,"title":{},"body":{"injectables/ArticleService.html":{}}}],["src/article/article.service.ts:197",{"_index":358,"title":{},"body":{"injectables/ArticleService.html":{}}}],["src/article/article.service.ts:201",{"_index":370,"title":{},"body":{"injectables/ArticleService.html":{}}}],["src/article/article.service.ts:26",{"_index":363,"title":{},"body":{"injectables/ArticleService.html":{}}}],["src/article/article.service.ts:66",{"_index":366,"title":{},"body":{"injectables/ArticleService.html":{}}}],["src/article/article.service.ts:96",{"_index":368,"title":{},"body":{"injectables/ArticleService.html":{}}}],["src/article/comment.entity.ts",{"_index":524,"title":{},"body":{"classes/Comment.html":{},"coverage.html":{}}}],["src/article/comment.entity.ts:11",{"_index":526,"title":{},"body":{"classes/Comment.html":{}}}],["src/article/comment.entity.ts:14",{"_index":525,"title":{},"body":{"classes/Comment.html":{}}}],["src/article/comment.entity.ts:8",{"_index":527,"title":{},"body":{"classes/Comment.html":{}}}],["src/article/dto/create",{"_index":652,"title":{},"body":{"classes/CreateArticleDto.html":{},"classes/CreateCommentDto.html":{},"coverage.html":{}}}],["src/config/config.env.ts",{"_index":1687,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/config/database.config.ts",{"_index":755,"title":{},"body":{"injectables/DatabaseConfig.html":{},"coverage.html":{}}}],["src/config/database.config.ts:6",{"_index":757,"title":{},"body":{"injectables/DatabaseConfig.html":{}}}],["src/config/database.config.ts:8",{"_index":758,"title":{},"body":{"injectables/DatabaseConfig.html":{}}}],["src/corporation/corporation.controller.ts",{"_index":536,"title":{},"body":{"controllers/CorporationController.html":{},"coverage.html":{}}}],["src/corporation/corporation.controller.ts:33",{"_index":545,"title":{},"body":{"controllers/CorporationController.html":{}}}],["src/corporation/corporation.controller.ts:46",{"_index":542,"title":{},"body":{"controllers/CorporationController.html":{}}}],["src/corporation/corporation.controller.ts:54",{"_index":546,"title":{},"body":{"controllers/CorporationController.html":{}}}],["src/corporation/corporation.controller.ts:62",{"_index":544,"title":{},"body":{"controllers/CorporationController.html":{}}}],["src/corporation/corporation.entity.ts",{"_index":569,"title":{},"body":{"classes/CorporationEntity.html":{},"coverage.html":{}}}],["src/corporation/corporation.entity.ts:11",{"_index":581,"title":{},"body":{"classes/CorporationEntity.html":{}}}],["src/corporation/corporation.entity.ts:14",{"_index":578,"title":{},"body":{"classes/CorporationEntity.html":{}}}],["src/corporation/corporation.entity.ts:17",{"_index":573,"title":{},"body":{"classes/CorporationEntity.html":{}}}],["src/corporation/corporation.entity.ts:20",{"_index":576,"title":{},"body":{"classes/CorporationEntity.html":{}}}],["src/corporation/corporation.entity.ts:23",{"_index":572,"title":{},"body":{"classes/CorporationEntity.html":{}}}],["src/corporation/corporation.entity.ts:26",{"_index":575,"title":{},"body":{"classes/CorporationEntity.html":{}}}],["src/corporation/corporation.entity.ts:29",{"_index":574,"title":{},"body":{"classes/CorporationEntity.html":{}}}],["src/corporation/corporation.entity.ts:32",{"_index":583,"title":{},"body":{"classes/CorporationEntity.html":{}}}],["src/corporation/corporation.entity.ts:35",{"_index":582,"title":{},"body":{"classes/CorporationEntity.html":{}}}],["src/corporation/corporation.entity.ts:38",{"_index":580,"title":{},"body":{"classes/CorporationEntity.html":{}}}],["src/corporation/corporation.entity.ts:8",{"_index":577,"title":{},"body":{"classes/CorporationEntity.html":{}}}],["src/corporation/corporation.interface.ts",{"_index":566,"title":{},"body":{"interfaces/CorporationData.html":{},"interfaces/CorporationRO.html":{},"coverage.html":{}}}],["src/corporation/corporation.module.ts",{"_index":590,"title":{},"body":{"modules/CorporationModule.html":{}}}],["src/corporation/corporation.module.ts:17",{"_index":591,"title":{},"body":{"modules/CorporationModule.html":{}}}],["src/corporation/corporation.service.ts",{"_index":594,"title":{},"body":{"injectables/CorporationService.html":{},"coverage.html":{}}}],["src/corporation/corporation.service.ts:13",{"_index":598,"title":{},"body":{"injectables/CorporationService.html":{}}}],["src/corporation/corporation.service.ts:20",{"_index":606,"title":{},"body":{"injectables/CorporationService.html":{}}}],["src/corporation/corporation.service.ts:24",{"_index":610,"title":{},"body":{"injectables/CorporationService.html":{}}}],["src/corporation/corporation.service.ts:32",{"_index":603,"title":{},"body":{"injectables/CorporationService.html":{}}}],["src/corporation/corporation.service.ts:54",{"_index":612,"title":{},"body":{"injectables/CorporationService.html":{}}}],["src/corporation/corporation.service.ts:61",{"_index":605,"title":{},"body":{"injectables/CorporationService.html":{}}}],["src/corporation/corporation.service.ts:65",{"_index":608,"title":{},"body":{"injectables/CorporationService.html":{}}}],["src/corporation/corporation.service.ts:77",{"_index":601,"title":{},"body":{"injectables/CorporationService.html":{}}}],["src/corporation/dto/create",{"_index":660,"title":{},"body":{"classes/CreateCorporationDto.html":{},"coverage.html":{}}}],["src/errorlog/dto/create",{"_index":668,"title":{},"body":{"classes/CreateErrorLogDto.html":{},"coverage.html":{}}}],["src/errorlog/errorlog.controller.ts",{"_index":777,"title":{},"body":{"controllers/ErrorlogController.html":{},"coverage.html":{}}}],["src/errorlog/errorlog.entity.ts",{"_index":762,"title":{},"body":{"classes/ErrorLogEntity.html":{},"coverage.html":{}}}],["src/errorlog/errorlog.entity.ts:10",{"_index":771,"title":{},"body":{"classes/ErrorLogEntity.html":{}}}],["src/errorlog/errorlog.entity.ts:13",{"_index":765,"title":{},"body":{"classes/ErrorLogEntity.html":{}}}],["src/errorlog/errorlog.entity.ts:16",{"_index":767,"title":{},"body":{"classes/ErrorLogEntity.html":{}}}],["src/errorlog/errorlog.entity.ts:19",{"_index":769,"title":{},"body":{"classes/ErrorLogEntity.html":{}}}],["src/errorlog/errorlog.entity.ts:22",{"_index":764,"title":{},"body":{"classes/ErrorLogEntity.html":{}}}],["src/errorlog/errorlog.entity.ts:25",{"_index":763,"title":{},"body":{"classes/ErrorLogEntity.html":{}}}],["src/errorlog/errorlog.entity.ts:28",{"_index":773,"title":{},"body":{"classes/ErrorLogEntity.html":{}}}],["src/errorlog/errorlog.entity.ts:31",{"_index":772,"title":{},"body":{"classes/ErrorLogEntity.html":{}}}],["src/errorlog/errorlog.entity.ts:7",{"_index":770,"title":{},"body":{"classes/ErrorLogEntity.html":{}}}],["src/errorlog/errorlog.module.ts",{"_index":783,"title":{},"body":{"modules/ErrorlogModule.html":{}}}],["src/errorlog/errorlog.service.ts",{"_index":785,"title":{},"body":{"injectables/ErrorlogService.html":{},"coverage.html":{}}}],["src/group/dto/create",{"_index":680,"title":{},"body":{"classes/CreateGroupDto.html":{},"coverage.html":{}}}],["src/group/group.controller.ts",{"_index":793,"title":{},"body":{"controllers/GroupController.html":{},"coverage.html":{}}}],["src/group/group.controller.ts:30",{"_index":803,"title":{},"body":{"controllers/GroupController.html":{}}}],["src/group/group.controller.ts:35",{"_index":806,"title":{},"body":{"controllers/GroupController.html":{}}}],["src/group/group.controller.ts:40",{"_index":808,"title":{},"body":{"controllers/GroupController.html":{}}}],["src/group/group.controller.ts:47",{"_index":798,"title":{},"body":{"controllers/GroupController.html":{}}}],["src/group/group.controller.ts:52",{"_index":801,"title":{},"body":{"controllers/GroupController.html":{}}}],["src/group/group.entity.ts",{"_index":835,"title":{},"body":{"classes/GroupEntity.html":{},"coverage.html":{}}}],["src/group/group.entity.ts:11",{"_index":842,"title":{},"body":{"classes/GroupEntity.html":{}}}],["src/group/group.entity.ts:14",{"_index":840,"title":{},"body":{"classes/GroupEntity.html":{}}}],["src/group/group.entity.ts:17",{"_index":837,"title":{},"body":{"classes/GroupEntity.html":{}}}],["src/group/group.entity.ts:20",{"_index":839,"title":{},"body":{"classes/GroupEntity.html":{}}}],["src/group/group.entity.ts:23",{"_index":838,"title":{},"body":{"classes/GroupEntity.html":{}}}],["src/group/group.entity.ts:26",{"_index":846,"title":{},"body":{"classes/GroupEntity.html":{}}}],["src/group/group.entity.ts:29",{"_index":845,"title":{},"body":{"classes/GroupEntity.html":{}}}],["src/group/group.entity.ts:32",{"_index":844,"title":{},"body":{"classes/GroupEntity.html":{}}}],["src/group/group.entity.ts:8",{"_index":841,"title":{},"body":{"classes/GroupEntity.html":{}}}],["src/group/group.interface.ts",{"_index":834,"title":{},"body":{"interfaces/GroupData.html":{},"interfaces/GroupRO.html":{},"coverage.html":{}}}],["src/group/group.module.ts",{"_index":852,"title":{},"body":{"modules/GroupModule.html":{}}}],["src/group/group.module.ts:17",{"_index":853,"title":{},"body":{"modules/GroupModule.html":{}}}],["src/group/group.service.ts",{"_index":856,"title":{},"body":{"injectables/GroupService.html":{},"coverage.html":{}}}],["src/group/group.service.ts:13",{"_index":859,"title":{},"body":{"injectables/GroupService.html":{}}}],["src/group/group.service.ts:19",{"_index":865,"title":{},"body":{"injectables/GroupService.html":{}}}],["src/group/group.service.ts:23",{"_index":867,"title":{},"body":{"injectables/GroupService.html":{}}}],["src/group/group.service.ts:31",{"_index":863,"title":{},"body":{"injectables/GroupService.html":{}}}],["src/group/group.service.ts:51",{"_index":868,"title":{},"body":{"injectables/GroupService.html":{}}}],["src/group/group.service.ts:58",{"_index":864,"title":{},"body":{"injectables/GroupService.html":{}}}],["src/group/group.service.ts:62",{"_index":866,"title":{},"body":{"injectables/GroupService.html":{}}}],["src/group/group.service.ts:74",{"_index":862,"title":{},"body":{"injectables/GroupService.html":{}}}],["src/list/dto/create",{"_index":688,"title":{},"body":{"classes/CreateListDto.html":{},"classes/CreateListEntryDto.html":{},"coverage.html":{}}}],["src/list/list.controller.ts",{"_index":886,"title":{},"body":{"controllers/ListController.html":{},"coverage.html":{}}}],["src/list/list.controller.ts:29",{"_index":894,"title":{},"body":{"controllers/ListController.html":{}}}],["src/list/list.controller.ts:34",{"_index":896,"title":{},"body":{"controllers/ListController.html":{}}}],["src/list/list.controller.ts:39",{"_index":898,"title":{},"body":{"controllers/ListController.html":{}}}],["src/list/list.controller.ts:45",{"_index":890,"title":{},"body":{"controllers/ListController.html":{}}}],["src/list/list.controller.ts:50",{"_index":893,"title":{},"body":{"controllers/ListController.html":{}}}],["src/list/list.entity.ts",{"_index":922,"title":{},"body":{"classes/ListEntity.html":{},"coverage.html":{}}}],["src/list/list.entity.ts:11",{"_index":931,"title":{},"body":{"classes/ListEntity.html":{}}}],["src/list/list.entity.ts:14",{"_index":926,"title":{},"body":{"classes/ListEntity.html":{}}}],["src/list/list.entity.ts:17",{"_index":923,"title":{},"body":{"classes/ListEntity.html":{}}}],["src/list/list.entity.ts:20",{"_index":925,"title":{},"body":{"classes/ListEntity.html":{}}}],["src/list/list.entity.ts:23",{"_index":924,"title":{},"body":{"classes/ListEntity.html":{}}}],["src/list/list.entity.ts:26",{"_index":933,"title":{},"body":{"classes/ListEntity.html":{}}}],["src/list/list.entity.ts:29",{"_index":932,"title":{},"body":{"classes/ListEntity.html":{}}}],["src/list/list.entity.ts:32",{"_index":929,"title":{},"body":{"classes/ListEntity.html":{}}}],["src/list/list.entity.ts:8",{"_index":927,"title":{},"body":{"classes/ListEntity.html":{}}}],["src/list/list.interface.ts",{"_index":918,"title":{},"body":{"interfaces/ListData.html":{},"interfaces/ListEntry.html":{},"interfaces/ListEntryRO.html":{},"interfaces/ListRO.html":{},"coverage.html":{}}}],["src/list/list.module.ts",{"_index":948,"title":{},"body":{"modules/ListModule.html":{}}}],["src/list/list.module.ts:17",{"_index":949,"title":{},"body":{"modules/ListModule.html":{}}}],["src/list/list.service.ts",{"_index":952,"title":{},"body":{"injectables/ListService.html":{},"coverage.html":{}}}],["src/list/list.service.ts:15",{"_index":955,"title":{},"body":{"injectables/ListService.html":{}}}],["src/list/list.service.ts:21",{"_index":961,"title":{},"body":{"injectables/ListService.html":{}}}],["src/list/list.service.ts:26",{"_index":963,"title":{},"body":{"injectables/ListService.html":{}}}],["src/list/list.service.ts:34",{"_index":959,"title":{},"body":{"injectables/ListService.html":{}}}],["src/list/list.service.ts:55",{"_index":964,"title":{},"body":{"injectables/ListService.html":{}}}],["src/list/list.service.ts:62",{"_index":960,"title":{},"body":{"injectables/ListService.html":{}}}],["src/list/list.service.ts:66",{"_index":962,"title":{},"body":{"injectables/ListService.html":{}}}],["src/list/list.service.ts:84",{"_index":958,"title":{},"body":{"injectables/ListService.html":{}}}],["src/list/listentry.entity.ts",{"_index":938,"title":{},"body":{"classes/ListEntryEntity.html":{},"coverage.html":{}}}],["src/list/listentry.entity.ts:11",{"_index":942,"title":{},"body":{"classes/ListEntryEntity.html":{}}}],["src/list/listentry.entity.ts:14",{"_index":939,"title":{},"body":{"classes/ListEntryEntity.html":{}}}],["src/list/listentry.entity.ts:17",{"_index":943,"title":{},"body":{"classes/ListEntryEntity.html":{}}}],["src/list/listentry.entity.ts:20",{"_index":941,"title":{},"body":{"classes/ListEntryEntity.html":{}}}],["src/list/listentry.entity.ts:8",{"_index":940,"title":{},"body":{"classes/ListEntryEntity.html":{}}}],["src/main.ts",{"_index":1692,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/menu/dto/create",{"_index":702,"title":{},"body":{"classes/CreateMenuDto.html":{},"classes/CreateMenuEntryDto.html":{},"classes/CreateMenuEntryPointDto.html":{},"coverage.html":{}}}],["src/menu/menu.controller.ts",{"_index":1017,"title":{},"body":{"controllers/MenuController.html":{},"coverage.html":{}}}],["src/menu/menu.controller.ts:30",{"_index":1026,"title":{},"body":{"controllers/MenuController.html":{}}}],["src/menu/menu.controller.ts:35",{"_index":1029,"title":{},"body":{"controllers/MenuController.html":{}}}],["src/menu/menu.controller.ts:40",{"_index":1031,"title":{},"body":{"controllers/MenuController.html":{}}}],["src/menu/menu.controller.ts:46",{"_index":1022,"title":{},"body":{"controllers/MenuController.html":{}}}],["src/menu/menu.controller.ts:51",{"_index":1025,"title":{},"body":{"controllers/MenuController.html":{}}}],["src/menu/menu.interface.ts",{"_index":987,"title":{},"body":{"interfaces/MenuAppData.html":{},"interfaces/MenuAppEntry.html":{},"interfaces/MenuEntryRO.html":{},"interfaces/MenuRO.html":{},"coverage.html":{}}}],["src/menu/menu.module.ts",{"_index":1077,"title":{},"body":{"modules/MenuModule.html":{}}}],["src/menu/menu.module.ts:17",{"_index":1078,"title":{},"body":{"modules/MenuModule.html":{}}}],["src/menu/menu.service.ts",{"_index":1081,"title":{},"body":{"injectables/MenuService.html":{},"coverage.html":{}}}],["src/menu/menu.service.ts:14",{"_index":1084,"title":{},"body":{"injectables/MenuService.html":{}}}],["src/menu/menu.service.ts:20",{"_index":1090,"title":{},"body":{"injectables/MenuService.html":{}}}],["src/menu/menu.service.ts:24",{"_index":1092,"title":{},"body":{"injectables/MenuService.html":{}}}],["src/menu/menu.service.ts:32",{"_index":1088,"title":{},"body":{"injectables/MenuService.html":{}}}],["src/menu/menu.service.ts:54",{"_index":1093,"title":{},"body":{"injectables/MenuService.html":{}}}],["src/menu/menu.service.ts:61",{"_index":1089,"title":{},"body":{"injectables/MenuService.html":{}}}],["src/menu/menu.service.ts:65",{"_index":1091,"title":{},"body":{"injectables/MenuService.html":{}}}],["src/menu/menu.service.ts:77",{"_index":1087,"title":{},"body":{"injectables/MenuService.html":{}}}],["src/menu/menuapp.entity.ts",{"_index":997,"title":{},"body":{"classes/MenuAppEntity.html":{},"coverage.html":{}}}],["src/menu/menuapp.entity.ts:12",{"_index":1006,"title":{},"body":{"classes/MenuAppEntity.html":{}}}],["src/menu/menuapp.entity.ts:15",{"_index":1003,"title":{},"body":{"classes/MenuAppEntity.html":{}}}],["src/menu/menuapp.entity.ts:18",{"_index":999,"title":{},"body":{"classes/MenuAppEntity.html":{}}}],["src/menu/menuapp.entity.ts:21",{"_index":1000,"title":{},"body":{"classes/MenuAppEntity.html":{}}}],["src/menu/menuapp.entity.ts:24",{"_index":1002,"title":{},"body":{"classes/MenuAppEntity.html":{}}}],["src/menu/menuapp.entity.ts:27",{"_index":1001,"title":{},"body":{"classes/MenuAppEntity.html":{}}}],["src/menu/menuapp.entity.ts:30",{"_index":1011,"title":{},"body":{"classes/MenuAppEntity.html":{}}}],["src/menu/menuapp.entity.ts:33",{"_index":1010,"title":{},"body":{"classes/MenuAppEntity.html":{}}}],["src/menu/menuapp.entity.ts:36",{"_index":1005,"title":{},"body":{"classes/MenuAppEntity.html":{}}}],["src/menu/menuapp.entity.ts:39",{"_index":1009,"title":{},"body":{"classes/MenuAppEntity.html":{}}}],["src/menu/menuapp.entity.ts:9",{"_index":1004,"title":{},"body":{"classes/MenuAppEntity.html":{}}}],["src/menu/menuentry.entity.ts",{"_index":1048,"title":{},"body":{"classes/MenuEntryEntity.html":{},"coverage.html":{}}}],["src/menu/menuentry.entity.ts:12",{"_index":1055,"title":{},"body":{"classes/MenuEntryEntity.html":{}}}],["src/menu/menuentry.entity.ts:15",{"_index":1066,"title":{},"body":{"classes/MenuEntryEntity.html":{}}}],["src/menu/menuentry.entity.ts:18",{"_index":1056,"title":{},"body":{"classes/MenuEntryEntity.html":{}}}],["src/menu/menuentry.entity.ts:21",{"_index":1060,"title":{},"body":{"classes/MenuEntryEntity.html":{}}}],["src/menu/menuentry.entity.ts:24",{"_index":1054,"title":{},"body":{"classes/MenuEntryEntity.html":{}}}],["src/menu/menuentry.entity.ts:27",{"_index":1053,"title":{},"body":{"classes/MenuEntryEntity.html":{}}}],["src/menu/menuentry.entity.ts:30",{"_index":1065,"title":{},"body":{"classes/MenuEntryEntity.html":{}}}],["src/menu/menuentry.entity.ts:33",{"_index":1059,"title":{},"body":{"classes/MenuEntryEntity.html":{}}}],["src/menu/menuentry.entity.ts:36",{"_index":1057,"title":{},"body":{"classes/MenuEntryEntity.html":{}}}],["src/menu/menuentry.entity.ts:39",{"_index":1069,"title":{},"body":{"classes/MenuEntryEntity.html":{}}}],["src/menu/menuentry.entity.ts:42",{"_index":1067,"title":{},"body":{"classes/MenuEntryEntity.html":{}}}],["src/menu/menuentry.entity.ts:45",{"_index":1062,"title":{},"body":{"classes/MenuEntryEntity.html":{}}}],["src/menu/menuentry.entity.ts:48",{"_index":1064,"title":{},"body":{"classes/MenuEntryEntity.html":{}}}],["src/menu/menuentry.entity.ts:9",{"_index":1061,"title":{},"body":{"classes/MenuEntryEntity.html":{}}}],["src/middleware/logger.service.ts",{"_index":1114,"title":{},"body":{"classes/MyLogger.html":{},"coverage.html":{}}}],["src/middleware/logger.service.ts:10",{"_index":1132,"title":{},"body":{"classes/MyLogger.html":{}}}],["src/middleware/logger.service.ts:13",{"_index":1122,"title":{},"body":{"classes/MyLogger.html":{}}}],["src/middleware/logger.service.ts:16",{"_index":1130,"title":{},"body":{"classes/MyLogger.html":{}}}],["src/middleware/logger.service.ts:4",{"_index":1128,"title":{},"body":{"classes/MyLogger.html":{}}}],["src/middleware/logger.service.ts:7",{"_index":1126,"title":{},"body":{"classes/MyLogger.html":{}}}],["src/profile/follows.entity.ts",{"_index":786,"title":{},"body":{"classes/FollowsEntity.html":{},"coverage.html":{}}}],["src/profile/follows.entity.ts:10",{"_index":788,"title":{},"body":{"classes/FollowsEntity.html":{}}}],["src/profile/follows.entity.ts:13",{"_index":789,"title":{},"body":{"classes/FollowsEntity.html":{}}}],["src/profile/follows.entity.ts:7",{"_index":790,"title":{},"body":{"classes/FollowsEntity.html":{}}}],["src/profile/profile.controller.ts",{"_index":1135,"title":{},"body":{"controllers/ProfileController.html":{},"coverage.html":{}}}],["src/profile/profile.controller.ts:19",{"_index":1145,"title":{},"body":{"controllers/ProfileController.html":{}}}],["src/profile/profile.controller.ts:24",{"_index":1142,"title":{},"body":{"controllers/ProfileController.html":{}}}],["src/profile/profile.controller.ts:29",{"_index":1148,"title":{},"body":{"controllers/ProfileController.html":{}}}],["src/profile/profile.interface.ts",{"_index":1163,"title":{},"body":{"interfaces/ProfileData.html":{},"interfaces/ProfileRO.html":{},"coverage.html":{}}}],["src/profile/profile.module.ts",{"_index":1171,"title":{},"body":{"modules/ProfileModule.html":{}}}],["src/profile/profile.module.ts:19",{"_index":1172,"title":{},"body":{"modules/ProfileModule.html":{}}}],["src/profile/profile.service.ts",{"_index":1179,"title":{},"body":{"injectables/ProfileService.html":{},"coverage.html":{}}}],["src/profile/profile.service.ts:11",{"_index":1182,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/profile/profile.service.ts:19",{"_index":1183,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/profile/profile.service.ts:23",{"_index":1186,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/profile/profile.service.ts:30",{"_index":1191,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/profile/profile.service.ts:50",{"_index":1193,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/profile/profile.service.ts:81",{"_index":1196,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/role/dto/create",{"_index":728,"title":{},"body":{"classes/CreateRoleAppDto.html":{},"classes/CreateRoleDto.html":{},"coverage.html":{}}}],["src/role/role.controller.ts",{"_index":1230,"title":{},"body":{"controllers/RoleController.html":{},"coverage.html":{}}}],["src/role/role.controller.ts:28",{"_index":1238,"title":{},"body":{"controllers/RoleController.html":{}}}],["src/role/role.controller.ts:33",{"_index":1240,"title":{},"body":{"controllers/RoleController.html":{}}}],["src/role/role.controller.ts:38",{"_index":1242,"title":{},"body":{"controllers/RoleController.html":{}}}],["src/role/role.controller.ts:44",{"_index":1234,"title":{},"body":{"controllers/RoleController.html":{}}}],["src/role/role.controller.ts:49",{"_index":1237,"title":{},"body":{"controllers/RoleController.html":{}}}],["src/role/role.entity.ts",{"_index":1258,"title":{},"body":{"classes/RoleEntity.html":{},"coverage.html":{}}}],["src/role/role.entity.ts:11",{"_index":1266,"title":{},"body":{"classes/RoleEntity.html":{}}}],["src/role/role.entity.ts:14",{"_index":1267,"title":{},"body":{"classes/RoleEntity.html":{}}}],["src/role/role.entity.ts:17",{"_index":1264,"title":{},"body":{"classes/RoleEntity.html":{}}}],["src/role/role.entity.ts:20",{"_index":1261,"title":{},"body":{"classes/RoleEntity.html":{}}}],["src/role/role.entity.ts:23",{"_index":1263,"title":{},"body":{"classes/RoleEntity.html":{}}}],["src/role/role.entity.ts:26",{"_index":1262,"title":{},"body":{"classes/RoleEntity.html":{}}}],["src/role/role.entity.ts:29",{"_index":1271,"title":{},"body":{"classes/RoleEntity.html":{}}}],["src/role/role.entity.ts:32",{"_index":1270,"title":{},"body":{"classes/RoleEntity.html":{}}}],["src/role/role.entity.ts:36",{"_index":1272,"title":{},"body":{"classes/RoleEntity.html":{}}}],["src/role/role.entity.ts:40",{"_index":1269,"title":{},"body":{"classes/RoleEntity.html":{}}}],["src/role/role.entity.ts:44",{"_index":1265,"title":{},"body":{"classes/RoleEntity.html":{}}}],["src/role/role.entity.ts:48",{"_index":1268,"title":{},"body":{"classes/RoleEntity.html":{}}}],["src/role/role.interface.ts",{"_index":1257,"title":{},"body":{"interfaces/RoleData.html":{},"interfaces/RoleRO.html":{},"coverage.html":{}}}],["src/role/role.module.ts",{"_index":1322,"title":{},"body":{"modules/RoleModule.html":{}}}],["src/role/role.module.ts:17",{"_index":1323,"title":{},"body":{"modules/RoleModule.html":{}}}],["src/role/role.service.ts",{"_index":1326,"title":{},"body":{"injectables/RoleService.html":{},"coverage.html":{}}}],["src/role/role.service.ts:13",{"_index":1329,"title":{},"body":{"injectables/RoleService.html":{}}}],["src/role/role.service.ts:19",{"_index":1335,"title":{},"body":{"injectables/RoleService.html":{}}}],["src/role/role.service.ts:23",{"_index":1337,"title":{},"body":{"injectables/RoleService.html":{}}}],["src/role/role.service.ts:31",{"_index":1333,"title":{},"body":{"injectables/RoleService.html":{}}}],["src/role/role.service.ts:52",{"_index":1338,"title":{},"body":{"injectables/RoleService.html":{}}}],["src/role/role.service.ts:59",{"_index":1334,"title":{},"body":{"injectables/RoleService.html":{}}}],["src/role/role.service.ts:63",{"_index":1336,"title":{},"body":{"injectables/RoleService.html":{}}}],["src/role/role.service.ts:75",{"_index":1332,"title":{},"body":{"injectables/RoleService.html":{}}}],["src/role/rolemenuapp.entity.ts",{"_index":1292,"title":{},"body":{"classes/RoleMenuAppEntity.html":{},"coverage.html":{}}}],["src/role/rolemenuapp.entity.ts:10",{"_index":1295,"title":{},"body":{"classes/RoleMenuAppEntity.html":{}}}],["src/role/rolemenuapp.entity.ts:16",{"_index":1297,"title":{},"body":{"classes/RoleMenuAppEntity.html":{}}}],["src/role/rolemenuapp.entity.ts:19",{"_index":1298,"title":{},"body":{"classes/RoleMenuAppEntity.html":{}}}],["src/role/rolemenuapp.entity.ts:22",{"_index":1296,"title":{},"body":{"classes/RoleMenuAppEntity.html":{}}}],["src/role/rolemenuapp.entity.ts:25",{"_index":1299,"title":{},"body":{"classes/RoleMenuAppEntity.html":{}}}],["src/role/rolemenuentry.entity.ts",{"_index":1305,"title":{},"body":{"classes/RoleMenuEntryEntity.html":{},"coverage.html":{}}}],["src/role/rolemenuentry.entity.ts:12",{"_index":1313,"title":{},"body":{"classes/RoleMenuEntryEntity.html":{}}}],["src/role/rolemenuentry.entity.ts:16",{"_index":1314,"title":{},"body":{"classes/RoleMenuEntryEntity.html":{}}}],["src/role/rolemenuentry.entity.ts:20",{"_index":1311,"title":{},"body":{"classes/RoleMenuEntryEntity.html":{}}}],["src/role/rolemenuentry.entity.ts:9",{"_index":1315,"title":{},"body":{"classes/RoleMenuEntryEntity.html":{}}}],["src/services/comment/comment.controller.ts",{"_index":529,"title":{},"body":{"controllers/CommentController.html":{},"coverage.html":{}}}],["src/services/comment/comment.module.ts",{"_index":532,"title":{},"body":{"modules/CommentModule.html":{}}}],["src/services/comment/comment.service.ts",{"_index":535,"title":{},"body":{"injectables/CommentService.html":{},"coverage.html":{}}}],["src/services/sqldirect/sqldirect.controller.ts",{"_index":1441,"title":{},"body":{"controllers/SqldirectController.html":{},"coverage.html":{}}}],["src/services/sqldirect/sqldirect.module.ts",{"_index":1448,"title":{},"body":{"modules/SqldirectModule.html":{}}}],["src/services/sqldirect/sqldirect.service.ts",{"_index":1451,"title":{},"body":{"injectables/SqldirectService.html":{},"coverage.html":{}}}],["src/services/view/view.controller.ts",{"_index":1664,"title":{},"body":{"controllers/ViewController.html":{},"coverage.html":{}}}],["src/services/view/view.module.ts",{"_index":1671,"title":{},"body":{"modules/ViewModule.html":{}}}],["src/services/view/view.service.ts",{"_index":1673,"title":{},"body":{"injectables/ViewService.html":{},"coverage.html":{}}}],["src/shared/base.controller.ts",{"_index":513,"title":{},"body":{"classes/BaseController.html":{},"coverage.html":{}}}],["src/shared/base.controller.ts:4",{"_index":517,"title":{},"body":{"classes/BaseController.html":{}}}],["src/shared/base.controller.ts:8",{"_index":519,"title":{},"body":{"classes/BaseController.html":{}}}],["src/shared/pipes/to",{"_index":1486,"title":{},"body":{"classes/ToIntegerPipe.html":{},"coverage.html":{}}}],["src/shared/pipes/validation.pipe.ts",{"_index":1636,"title":{},"body":{"injectables/ValidationPipe.html":{},"coverage.html":{}}}],["src/shared/pipes/validation.pipe.ts:26",{"_index":1640,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["src/shared/pipes/validation.pipe.ts:37",{"_index":1642,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["src/shared/pipes/validation.pipe.ts:8",{"_index":1644,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["src/site/dto/create",{"_index":741,"title":{},"body":{"classes/CreateSiteDto.html":{},"coverage.html":{}}}],["src/site/site.controller.ts",{"_index":1357,"title":{},"body":{"controllers/SiteController.html":{},"coverage.html":{}}}],["src/site/site.controller.ts:29",{"_index":1364,"title":{},"body":{"controllers/SiteController.html":{}}}],["src/site/site.controller.ts:34",{"_index":1366,"title":{},"body":{"controllers/SiteController.html":{}}}],["src/site/site.controller.ts:39",{"_index":1368,"title":{},"body":{"controllers/SiteController.html":{}}}],["src/site/site.controller.ts:45",{"_index":1360,"title":{},"body":{"controllers/SiteController.html":{}}}],["src/site/site.controller.ts:50",{"_index":1363,"title":{},"body":{"controllers/SiteController.html":{}}}],["src/site/site.entity.ts",{"_index":1385,"title":{},"body":{"classes/SiteEntity.html":{},"coverage.html":{}}}],["src/site/site.entity.ts:12",{"_index":1395,"title":{},"body":{"classes/SiteEntity.html":{}}}],["src/site/site.entity.ts:15",{"_index":1393,"title":{},"body":{"classes/SiteEntity.html":{}}}],["src/site/site.entity.ts:18",{"_index":1388,"title":{},"body":{"classes/SiteEntity.html":{}}}],["src/site/site.entity.ts:21",{"_index":1391,"title":{},"body":{"classes/SiteEntity.html":{}}}],["src/site/site.entity.ts:24",{"_index":1386,"title":{},"body":{"classes/SiteEntity.html":{}}}],["src/site/site.entity.ts:27",{"_index":1390,"title":{},"body":{"classes/SiteEntity.html":{}}}],["src/site/site.entity.ts:30",{"_index":1389,"title":{},"body":{"classes/SiteEntity.html":{}}}],["src/site/site.entity.ts:33",{"_index":1397,"title":{},"body":{"classes/SiteEntity.html":{}}}],["src/site/site.entity.ts:36",{"_index":1396,"title":{},"body":{"classes/SiteEntity.html":{}}}],["src/site/site.entity.ts:39",{"_index":1387,"title":{},"body":{"classes/SiteEntity.html":{}}}],["src/site/site.entity.ts:42",{"_index":1394,"title":{},"body":{"classes/SiteEntity.html":{}}}],["src/site/site.entity.ts:9",{"_index":1392,"title":{},"body":{"classes/SiteEntity.html":{}}}],["src/site/site.interface.ts",{"_index":1383,"title":{},"body":{"interfaces/SiteData.html":{},"interfaces/SiteRO.html":{},"coverage.html":{}}}],["src/site/site.module.ts",{"_index":1404,"title":{},"body":{"modules/SiteModule.html":{}}}],["src/site/site.module.ts:17",{"_index":1405,"title":{},"body":{"modules/SiteModule.html":{}}}],["src/site/site.service.ts",{"_index":1408,"title":{},"body":{"injectables/SiteService.html":{},"coverage.html":{}}}],["src/site/site.service.ts:13",{"_index":1411,"title":{},"body":{"injectables/SiteService.html":{}}}],["src/site/site.service.ts:19",{"_index":1417,"title":{},"body":{"injectables/SiteService.html":{}}}],["src/site/site.service.ts:23",{"_index":1419,"title":{},"body":{"injectables/SiteService.html":{}}}],["src/site/site.service.ts:31",{"_index":1415,"title":{},"body":{"injectables/SiteService.html":{}}}],["src/site/site.service.ts:53",{"_index":1420,"title":{},"body":{"injectables/SiteService.html":{}}}],["src/site/site.service.ts:60",{"_index":1416,"title":{},"body":{"injectables/SiteService.html":{}}}],["src/site/site.service.ts:64",{"_index":1418,"title":{},"body":{"injectables/SiteService.html":{}}}],["src/site/site.service.ts:76",{"_index":1414,"title":{},"body":{"injectables/SiteService.html":{}}}],["src/tag/tag.controller.ts",{"_index":1453,"title":{},"body":{"controllers/TagController.html":{},"coverage.html":{}}}],["src/tag/tag.controller.ts:18",{"_index":1455,"title":{},"body":{"controllers/TagController.html":{}}}],["src/tag/tag.entity.ts",{"_index":1463,"title":{},"body":{"classes/TagEntity.html":{},"coverage.html":{}}}],["src/tag/tag.entity.ts:10",{"_index":1467,"title":{},"body":{"classes/TagEntity.html":{}}}],["src/tag/tag.entity.ts:13",{"_index":1465,"title":{},"body":{"classes/TagEntity.html":{}}}],["src/tag/tag.entity.ts:16",{"_index":1464,"title":{},"body":{"classes/TagEntity.html":{}}}],["src/tag/tag.entity.ts:19",{"_index":1469,"title":{},"body":{"classes/TagEntity.html":{}}}],["src/tag/tag.entity.ts:22",{"_index":1468,"title":{},"body":{"classes/TagEntity.html":{}}}],["src/tag/tag.entity.ts:7",{"_index":1466,"title":{},"body":{"classes/TagEntity.html":{}}}],["src/tag/tag.module.ts",{"_index":1474,"title":{},"body":{"modules/TagModule.html":{}}}],["src/tag/tag.module.ts:17",{"_index":1475,"title":{},"body":{"modules/TagModule.html":{}}}],["src/tag/tag.service.ts",{"_index":1478,"title":{},"body":{"injectables/TagService.html":{},"coverage.html":{}}}],["src/tag/tag.service.ts:13",{"_index":1482,"title":{},"body":{"injectables/TagService.html":{}}}],["src/tag/tag.service.ts:7",{"_index":1480,"title":{},"body":{"injectables/TagService.html":{}}}],["src/user/auth.middleware.ts",{"_index":466,"title":{},"body":{"injectables/AuthMiddleware.html":{},"coverage.html":{}}}],["src/user/auth.middleware.ts:11",{"_index":470,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["src/user/auth.middleware.ts:14",{"_index":476,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["src/user/dto/create",{"_index":748,"title":{},"body":{"classes/CreateUserDto.html":{},"coverage.html":{}}}],["src/user/dto/login",{"_index":985,"title":{},"body":{"classes/LoginUserDto.html":{},"coverage.html":{}}}],["src/user/dto/update",{"_index":1500,"title":{},"body":{"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["src/user/user.controller.ts",{"_index":1506,"title":{},"body":{"controllers/UserController.html":{},"coverage.html":{}}}],["src/user/user.controller.ts:22",{"_index":1516,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:27",{"_index":1522,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:33",{"_index":1511,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:38",{"_index":1513,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:44",{"_index":1519,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.decorator.ts",{"_index":1697,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/user/user.entity.ts",{"_index":1541,"title":{},"body":{"classes/UserEntity.html":{},"coverage.html":{}}}],["src/user/user.entity.ts:11",{"_index":1553,"title":{},"body":{"classes/UserEntity.html":{}}}],["src/user/user.entity.ts:14",{"_index":1559,"title":{},"body":{"classes/UserEntity.html":{}}}],["src/user/user.entity.ts:18",{"_index":1550,"title":{},"body":{"classes/UserEntity.html":{}}}],["src/user/user.entity.ts:21",{"_index":1546,"title":{},"body":{"classes/UserEntity.html":{}}}],["src/user/user.entity.ts:24",{"_index":1554,"title":{},"body":{"classes/UserEntity.html":{}}}],["src/user/user.entity.ts:27",{"_index":1555,"title":{},"body":{"classes/UserEntity.html":{}}}],["src/user/user.entity.ts:30",{"_index":1544,"title":{},"body":{"classes/UserEntity.html":{}}}],["src/user/user.entity.ts:33",{"_index":1548,"title":{},"body":{"classes/UserEntity.html":{}}}],["src/user/user.entity.ts:36",{"_index":1547,"title":{},"body":{"classes/UserEntity.html":{}}}],["src/user/user.entity.ts:39",{"_index":1558,"title":{},"body":{"classes/UserEntity.html":{}}}],["src/user/user.entity.ts:42",{"_index":1557,"title":{},"body":{"classes/UserEntity.html":{}}}],["src/user/user.entity.ts:45",{"_index":1561,"title":{},"body":{"classes/UserEntity.html":{}}}],["src/user/user.entity.ts:51",{"_index":1552,"title":{},"body":{"classes/UserEntity.html":{}}}],["src/user/user.entity.ts:54",{"_index":1545,"title":{},"body":{"classes/UserEntity.html":{}}}],["src/user/user.entity.ts:57",{"_index":1556,"title":{},"body":{"classes/UserEntity.html":{}}}],["src/user/user.interface.ts",{"_index":1540,"title":{},"body":{"interfaces/UserData.html":{},"interfaces/UserRO.html":{},"coverage.html":{}}}],["src/user/user.module.ts",{"_index":1576,"title":{},"body":{"modules/UserModule.html":{}}}],["src/user/user.module.ts:17",{"_index":1577,"title":{},"body":{"modules/UserModule.html":{}}}],["src/user/user.service.ts",{"_index":1581,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/user/user.service.ts:101",{"_index":1593,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:106",{"_index":1597,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:120",{"_index":1587,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:17",{"_index":1585,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:24",{"_index":1591,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:28",{"_index":1595,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:41",{"_index":1588,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:77",{"_index":1598,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:86",{"_index":1590,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:90",{"_index":1594,"title":{},"body":{"injectables/UserService.html":{}}}],["started",{"_index":1741,"title":{"index.html":{}},"body":{}}],["statements",{"_index":1677,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":191,"title":{},"body":{"controllers/ArticleController.html":{},"controllers/CorporationController.html":{}}}],["still",{"_index":1783,"title":{},"body":{"miscellaneous/variables.html":{}}}],["strategy",{"_index":483,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["string",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"interfaces/ArticleData.html":{},"classes/ArticleEntity.html":{},"interfaces/ArticleRO.html":{},"injectables/ArticleService.html":{},"interfaces/ArticlesRO.html":{},"classes/Comment.html":{},"interfaces/CommentsRO.html":{},"controllers/CorporationController.html":{},"interfaces/CorporationData.html":{},"classes/CorporationEntity.html":{},"interfaces/CorporationRO.html":{},"classes/CreateArticleDto.html":{},"classes/CreateCommentDto.html":{},"classes/CreateCorporationDto.html":{},"classes/CreateErrorLogDto.html":{},"classes/CreateGroupDto.html":{},"classes/CreateListDto.html":{},"classes/CreateListEntryDto.html":{},"classes/CreateMenuDto.html":{},"classes/CreateMenuEntryDto.html":{},"classes/CreateMenuEntryPointDto.html":{},"classes/CreateRoleAppDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSiteDto.html":{},"classes/CreateUserDto.html":{},"classes/ErrorLogEntity.html":{},"interfaces/GroupData.html":{},"classes/GroupEntity.html":{},"interfaces/GroupRO.html":{},"interfaces/ListData.html":{},"classes/ListEntity.html":{},"interfaces/ListEntry.html":{},"classes/ListEntryEntity.html":{},"interfaces/ListEntryRO.html":{},"interfaces/ListRO.html":{},"injectables/ListService.html":{},"classes/LoginUserDto.html":{},"interfaces/MenuAppData.html":{},"classes/MenuAppEntity.html":{},"interfaces/MenuAppEntry.html":{},"classes/MenuEntryEntity.html":{},"interfaces/MenuEntryRO.html":{},"interfaces/MenuRO.html":{},"classes/MyLogger.html":{},"controllers/ProfileController.html":{},"interfaces/ProfileData.html":{},"interfaces/ProfileRO.html":{},"injectables/ProfileService.html":{},"interfaces/RoleData.html":{},"classes/RoleEntity.html":{},"interfaces/RoleRO.html":{},"interfaces/SiteData.html":{},"classes/SiteEntity.html":{},"interfaces/SiteRO.html":{},"classes/TagEntity.html":{},"classes/ToIntegerPipe.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"interfaces/UserData.html":{},"classes/UserEntity.html":{},"interfaces/UserRO.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{}}}],["string).split",{"_index":490,"title":{},"body":{"injectables/AuthMiddleware.html":{},"miscellaneous/variables.html":{}}}],["submitted",{"_index":1648,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["successfully",{"_index":110,"title":{},"body":{"controllers/ArticleController.html":{},"controllers/CorporationController.html":{}}}],["summary",{"_index":190,"title":{},"body":{"controllers/ArticleController.html":{},"controllers/CorporationController.html":{}}}],["supersecret",{"_index":494,"title":{},"body":{"injectables/AuthMiddleware.html":{},"miscellaneous/variables.html":{}}}],["support",{"_index":1747,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":1748,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":1731,"title":{},"body":{"dependencies.html":{}}}],["synchronize",{"_index":1774,"title":{},"body":{"miscellaneous/variables.html":{}}}],["table",{"_index":1700,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1699,"title":{},"body":{"coverage.html":{}}}],["tag",{"_index":390,"title":{},"body":{"injectables/ArticleService.html":{},"classes/TagEntity.html":{}}}],["tag.controller",{"_index":1476,"title":{},"body":{"modules/TagModule.html":{}}}],["tag.entity",{"_index":1457,"title":{},"body":{"controllers/TagController.html":{},"modules/TagModule.html":{},"injectables/TagService.html":{}}}],["tag.service",{"_index":1459,"title":{},"body":{"controllers/TagController.html":{},"modules/TagModule.html":{}}}],["tag/tag.module",{"_index":69,"title":{},"body":{"modules/AppModule.html":{}}}],["tagcontroller",{"_index":1452,"title":{"controllers/TagController.html":{}},"body":{"controllers/TagController.html":{},"modules/TagModule.html":{},"coverage.html":{}}}],["tagentity",{"_index":1456,"title":{"classes/TagEntity.html":{}},"body":{"controllers/TagController.html":{},"classes/TagEntity.html":{},"modules/TagModule.html":{},"injectables/TagService.html":{},"coverage.html":{}}}],["taglist",{"_index":245,"title":{},"body":{"interfaces/ArticleData.html":{},"classes/ArticleEntity.html":{},"interfaces/ArticleRO.html":{},"interfaces/ArticlesRO.html":{},"interfaces/CommentsRO.html":{},"classes/CreateArticleDto.html":{}}}],["tagmodule",{"_index":47,"title":{"modules/TagModule.html":{}},"body":{"modules/AppModule.html":{},"modules/TagModule.html":{},"modules.html":{},"overview.html":{}}}],["tagrepository",{"_index":1481,"title":{},"body":{"injectables/TagService.html":{}}}],["tags",{"_index":1454,"title":{},"body":{"controllers/TagController.html":{}}}],["tagservice",{"_index":1458,"title":{"injectables/TagService.html":{}},"body":{"controllers/TagController.html":{},"modules/TagModule.html":{},"injectables/TagService.html":{},"coverage.html":{},"overview.html":{}}}],["this.articlerepository.delete",{"_index":459,"title":{},"body":{"injectables/ArticleService.html":{}}}],["this.articlerepository.findone",{"_index":456,"title":{},"body":{"injectables/ArticleService.html":{}}}],["this.articlerepository.findone(where",{"_index":417,"title":{},"body":{"injectables/ArticleService.html":{}}}],["this.articlerepository.findone({slug",{"_index":418,"title":{},"body":{"injectables/ArticleService.html":{}}}],["this.articlerepository.save(article",{"_index":424,"title":{},"body":{"injectables/ArticleService.html":{}}}],["this.articlerepository.save(updated",{"_index":458,"title":{},"body":{"injectables/ArticleService.html":{}}}],["this.articleservice.addcomment(slug",{"_index":223,"title":{},"body":{"controllers/ArticleController.html":{}}}],["this.articleservice.create(userid",{"_index":207,"title":{},"body":{"controllers/ArticleController.html":{}}}],["this.articleservice.delete(params.slug",{"_index":219,"title":{},"body":{"controllers/ArticleController.html":{}}}],["this.articleservice.deletecomment(slug",{"_index":228,"title":{},"body":{"controllers/ArticleController.html":{}}}],["this.articleservice.favorite(userid",{"_index":233,"title":{},"body":{"controllers/ArticleController.html":{}}}],["this.articleservice.findall(query",{"_index":194,"title":{},"body":{"controllers/ArticleController.html":{}}}],["this.articleservice.findcomments(slug",{"_index":203,"title":{},"body":{"controllers/ArticleController.html":{}}}],["this.articleservice.findfeed(userid",{"_index":199,"title":{},"body":{"controllers/ArticleController.html":{}}}],["this.articleservice.findone({slug",{"_index":201,"title":{},"body":{"controllers/ArticleController.html":{}}}],["this.articleservice.unfavorite(userid",{"_index":237,"title":{},"body":{"controllers/ArticleController.html":{}}}],["this.articleservice.update(params.slug",{"_index":215,"title":{},"body":{"controllers/ArticleController.html":{}}}],["this.buildcorporationro(corporation",{"_index":646,"title":{},"body":{"injectables/CorporationService.html":{}}}],["this.buildcorporationro(savedcorporation",{"_index":640,"title":{},"body":{"injectables/CorporationService.html":{}}}],["this.builderror(errors",{"_index":1653,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["this.buildgroupro(group",{"_index":881,"title":{},"body":{"injectables/GroupService.html":{}}}],["this.buildgroupro(savedgroup",{"_index":877,"title":{},"body":{"injectables/GroupService.html":{}}}],["this.buildlistro(list",{"_index":978,"title":{},"body":{"injectables/ListService.html":{}}}],["this.buildlistro(savedlist",{"_index":974,"title":{},"body":{"injectables/ListService.html":{}}}],["this.buildmenuro(menu",{"_index":1108,"title":{},"body":{"injectables/MenuService.html":{}}}],["this.buildmenuro(savedmenu",{"_index":1104,"title":{},"body":{"injectables/MenuService.html":{}}}],["this.buildrolero(role",{"_index":1352,"title":{},"body":{"injectables/RoleService.html":{}}}],["this.buildrolero(savedrole",{"_index":1348,"title":{},"body":{"injectables/RoleService.html":{}}}],["this.buildsitero(savedsite",{"_index":1431,"title":{},"body":{"injectables/SiteService.html":{}}}],["this.buildsitero(site",{"_index":1435,"title":{},"body":{"injectables/SiteService.html":{}}}],["this.builduserro(saveduser",{"_index":1617,"title":{},"body":{"injectables/UserService.html":{}}}],["this.builduserro(user",{"_index":1622,"title":{},"body":{"injectables/UserService.html":{}}}],["this.commentrepository.delete(deletecomments[0].id",{"_index":432,"title":{},"body":{"injectables/ArticleService.html":{}}}],["this.commentrepository.findone(id",{"_index":425,"title":{},"body":{"injectables/ArticleService.html":{}}}],["this.commentrepository.save(comment",{"_index":423,"title":{},"body":{"injectables/ArticleService.html":{}}}],["this.configservice.get('database",{"_index":760,"title":{},"body":{"injectables/DatabaseConfig.html":{}}}],["this.configservice.get('jwt_secret",{"_index":493,"title":{},"body":{"injectables/AuthMiddleware.html":{},"classes/BaseController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["this.corporationrepository.delete",{"_index":643,"title":{},"body":{"injectables/CorporationService.html":{}}}],["this.corporationrepository.find",{"_index":616,"title":{},"body":{"injectables/CorporationService.html":{}}}],["this.corporationrepository.findone(id",{"_index":641,"title":{},"body":{"injectables/CorporationService.html":{}}}],["this.corporationrepository.findone({id",{"_index":618,"title":{},"body":{"injectables/CorporationService.html":{}}}],["this.corporationrepository.save(newcorporation",{"_index":639,"title":{},"body":{"injectables/CorporationService.html":{}}}],["this.corporationrepository.save(updated",{"_index":642,"title":{},"body":{"injectables/CorporationService.html":{}}}],["this.corporationservice.create(corporationdata",{"_index":562,"title":{},"body":{"controllers/CorporationController.html":{}}}],["this.corporationservice.delete(params.slug",{"_index":565,"title":{},"body":{"controllers/CorporationController.html":{}}}],["this.corporationservice.findall",{"_index":559,"title":{},"body":{"controllers/CorporationController.html":{}}}],["this.corporationservice.findone({id",{"_index":558,"title":{},"body":{"controllers/CorporationController.html":{}}}],["this.corporationservice.findone({slug",{"_index":560,"title":{},"body":{"controllers/CorporationController.html":{}}}],["this.corporationservice.update(params.slug",{"_index":564,"title":{},"body":{"controllers/CorporationController.html":{}}}],["this.followsrepository.delete({followerid",{"_index":1228,"title":{},"body":{"injectables/ProfileService.html":{}}}],["this.followsrepository.find",{"_index":410,"title":{},"body":{"injectables/ArticleService.html":{}}}],["this.followsrepository.findone",{"_index":1208,"title":{},"body":{"injectables/ProfileService.html":{}}}],["this.followsrepository.save(follows",{"_index":1223,"title":{},"body":{"injectables/ProfileService.html":{}}}],["this.generatejwt(user",{"_index":1634,"title":{},"body":{"injectables/UserService.html":{}}}],["this.grouprepository.delete",{"_index":880,"title":{},"body":{"injectables/GroupService.html":{}}}],["this.grouprepository.find",{"_index":870,"title":{},"body":{"injectables/GroupService.html":{}}}],["this.grouprepository.findone(id",{"_index":878,"title":{},"body":{"injectables/GroupService.html":{}}}],["this.grouprepository.findone({id",{"_index":871,"title":{},"body":{"injectables/GroupService.html":{}}}],["this.grouprepository.save(newgroup",{"_index":876,"title":{},"body":{"injectables/GroupService.html":{}}}],["this.grouprepository.save(updated",{"_index":879,"title":{},"body":{"injectables/GroupService.html":{}}}],["this.groupservice.create(groupdata",{"_index":832,"title":{},"body":{"controllers/GroupController.html":{}}}],["this.groupservice.delete(params.slug",{"_index":833,"title":{},"body":{"controllers/GroupController.html":{}}}],["this.groupservice.findall",{"_index":823,"title":{},"body":{"controllers/GroupController.html":{}}}],["this.groupservice.findbyid(id",{"_index":825,"title":{},"body":{"controllers/GroupController.html":{}}}],["this.groupservice.update(id",{"_index":828,"title":{},"body":{"controllers/GroupController.html":{}}}],["this.listrepository.delete",{"_index":977,"title":{},"body":{"injectables/ListService.html":{}}}],["this.listrepository.find",{"_index":966,"title":{},"body":{"injectables/ListService.html":{}}}],["this.listrepository.findone(id",{"_index":975,"title":{},"body":{"injectables/ListService.html":{}}}],["this.listrepository.findone({id",{"_index":967,"title":{},"body":{"injectables/ListService.html":{}}}],["this.listrepository.findone({slug",{"_index":980,"title":{},"body":{"injectables/ListService.html":{}}}],["this.listrepository.save(newlist",{"_index":973,"title":{},"body":{"injectables/ListService.html":{}}}],["this.listrepository.save(updated",{"_index":976,"title":{},"body":{"injectables/ListService.html":{}}}],["this.listservice.create(listdata",{"_index":913,"title":{},"body":{"controllers/ListController.html":{}}}],["this.listservice.delete(params.slug",{"_index":914,"title":{},"body":{"controllers/ListController.html":{}}}],["this.listservice.findall",{"_index":908,"title":{},"body":{"controllers/ListController.html":{}}}],["this.listservice.findbyid(id",{"_index":909,"title":{},"body":{"controllers/ListController.html":{}}}],["this.listservice.findlistentry(slug",{"_index":917,"title":{},"body":{"controllers/ListController.html":{}}}],["this.listservice.update(id",{"_index":911,"title":{},"body":{"controllers/ListController.html":{}}}],["this.menurepository.delete",{"_index":1107,"title":{},"body":{"injectables/MenuService.html":{}}}],["this.menurepository.find",{"_index":1095,"title":{},"body":{"injectables/MenuService.html":{}}}],["this.menurepository.findone(id",{"_index":1105,"title":{},"body":{"injectables/MenuService.html":{}}}],["this.menurepository.findone({id",{"_index":1096,"title":{},"body":{"injectables/MenuService.html":{}}}],["this.menurepository.save(newmenu",{"_index":1103,"title":{},"body":{"injectables/MenuService.html":{}}}],["this.menurepository.save(updated",{"_index":1106,"title":{},"body":{"injectables/MenuService.html":{}}}],["this.menuservice.create(menudata",{"_index":1043,"title":{},"body":{"controllers/MenuController.html":{}}}],["this.menuservice.delete(params.slug",{"_index":1044,"title":{},"body":{"controllers/MenuController.html":{}}}],["this.menuservice.findall",{"_index":1037,"title":{},"body":{"controllers/MenuController.html":{}}}],["this.menuservice.findbyid(id",{"_index":1039,"title":{},"body":{"controllers/MenuController.html":{}}}],["this.menuservice.findmenuentry(slug",{"_index":1047,"title":{},"body":{"controllers/MenuController.html":{}}}],["this.menuservice.update(id",{"_index":1041,"title":{},"body":{"controllers/MenuController.html":{}}}],["this.password",{"_index":1568,"title":{},"body":{"classes/UserEntity.html":{}}}],["this.profileservice.findprofile(userid",{"_index":1157,"title":{},"body":{"controllers/ProfileController.html":{}}}],["this.profileservice.follow(email",{"_index":1159,"title":{},"body":{"controllers/ProfileController.html":{}}}],["this.profileservice.unfollow(userid",{"_index":1161,"title":{},"body":{"controllers/ProfileController.html":{}}}],["this.rolerepository.delete",{"_index":1351,"title":{},"body":{"injectables/RoleService.html":{}}}],["this.rolerepository.find",{"_index":1340,"title":{},"body":{"injectables/RoleService.html":{}}}],["this.rolerepository.findone(id",{"_index":1349,"title":{},"body":{"injectables/RoleService.html":{}}}],["this.rolerepository.findone({id",{"_index":1341,"title":{},"body":{"injectables/RoleService.html":{}}}],["this.rolerepository.save(newrole",{"_index":1347,"title":{},"body":{"injectables/RoleService.html":{}}}],["this.rolerepository.save(updated",{"_index":1350,"title":{},"body":{"injectables/RoleService.html":{}}}],["this.roleservice.create(roledata",{"_index":1255,"title":{},"body":{"controllers/RoleController.html":{}}}],["this.roleservice.delete(params.slug",{"_index":1256,"title":{},"body":{"controllers/RoleController.html":{}}}],["this.roleservice.findall",{"_index":1250,"title":{},"body":{"controllers/RoleController.html":{}}}],["this.roleservice.findbyid(id",{"_index":1251,"title":{},"body":{"controllers/RoleController.html":{}}}],["this.roleservice.update(id",{"_index":1253,"title":{},"body":{"controllers/RoleController.html":{}}}],["this.siterepository.delete",{"_index":1434,"title":{},"body":{"injectables/SiteService.html":{}}}],["this.siterepository.find",{"_index":1422,"title":{},"body":{"injectables/SiteService.html":{}}}],["this.siterepository.findone(id",{"_index":1432,"title":{},"body":{"injectables/SiteService.html":{}}}],["this.siterepository.findone({id",{"_index":1423,"title":{},"body":{"injectables/SiteService.html":{}}}],["this.siterepository.save(newsite",{"_index":1430,"title":{},"body":{"injectables/SiteService.html":{}}}],["this.siterepository.save(updated",{"_index":1433,"title":{},"body":{"injectables/SiteService.html":{}}}],["this.siteservice.create(sitedata",{"_index":1381,"title":{},"body":{"controllers/SiteController.html":{}}}],["this.siteservice.delete(params.slug",{"_index":1382,"title":{},"body":{"controllers/SiteController.html":{}}}],["this.siteservice.findall",{"_index":1376,"title":{},"body":{"controllers/SiteController.html":{}}}],["this.siteservice.findbyid(id",{"_index":1377,"title":{},"body":{"controllers/SiteController.html":{}}}],["this.siteservice.update(id",{"_index":1379,"title":{},"body":{"controllers/SiteController.html":{}}}],["this.slugify(articledata.title",{"_index":447,"title":{},"body":{"injectables/ArticleService.html":{}}}],["this.tagrepository.find",{"_index":1484,"title":{},"body":{"injectables/TagService.html":{}}}],["this.tagservice.findall",{"_index":1462,"title":{},"body":{"controllers/TagController.html":{}}}],["this.tovalidate(metatype",{"_index":1649,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["this.userrepository.delete",{"_index":1621,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userrepository.find",{"_index":1198,"title":{},"body":{"injectables/ProfileService.html":{},"injectables/UserService.html":{}}}],["this.userrepository.findone",{"_index":451,"title":{},"body":{"injectables/ArticleService.html":{},"injectables/ProfileService.html":{}}}],["this.userrepository.findone(id",{"_index":433,"title":{},"body":{"injectables/ArticleService.html":{},"injectables/UserService.html":{}}}],["this.userrepository.findone(options",{"_index":1199,"title":{},"body":{"injectables/ProfileService.html":{}}}],["this.userrepository.findone({email",{"_index":1215,"title":{},"body":{"injectables/ProfileService.html":{},"injectables/UserService.html":{}}}],["this.userrepository.findone({username",{"_index":393,"title":{},"body":{"injectables/ArticleService.html":{},"injectables/ProfileService.html":{}}}],["this.userrepository.save(author",{"_index":454,"title":{},"body":{"injectables/ArticleService.html":{}}}],["this.userrepository.save(newuser",{"_index":1616,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userrepository.save(updated",{"_index":1620,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userrepository.save(user",{"_index":440,"title":{},"body":{"injectables/ArticleService.html":{}}}],["this.userservice.create(userdata",{"_index":1533,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.delete(params.slug",{"_index":1534,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.findbyemail(email",{"_index":1527,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.findbyid(decoded.id",{"_index":501,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["this.userservice.findone(loginuserdto",{"_index":1538,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.generatejwt(_user",{"_index":1539,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.update(userid",{"_index":1530,"title":{},"body":{"controllers/UserController.html":{}}}],["throw",{"_index":504,"title":{},"body":{"injectables/AuthMiddleware.html":{},"injectables/CorporationService.html":{},"injectables/GroupService.html":{},"injectables/ListService.html":{},"injectables/MenuService.html":{},"injectables/ProfileService.html":{},"injectables/RoleService.html":{},"injectables/SiteService.html":{},"classes/ToIntegerPipe.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{}}}],["title",{"_index":212,"title":{},"body":{"controllers/ArticleController.html":{},"interfaces/ArticleData.html":{},"classes/ArticleEntity.html":{},"interfaces/ArticleRO.html":{},"injectables/ArticleService.html":{},"interfaces/ArticlesRO.html":{},"interfaces/CommentsRO.html":{},"classes/CreateArticleDto.html":{}}}],["today",{"_index":1623,"title":{},"body":{"injectables/UserService.html":{}}}],["todo",{"_index":211,"title":{},"body":{"controllers/ArticleController.html":{}}}],["tointegerpipe",{"_index":1485,"title":{"classes/ToIntegerPipe.html":{}},"body":{"classes/ToIntegerPipe.html":{},"coverage.html":{}}}],["token",{"_index":491,"title":{},"body":{"injectables/AuthMiddleware.html":{},"classes/BaseController.html":{},"controllers/UserController.html":{},"interfaces/UserData.html":{},"interfaces/UserRO.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["token[1",{"_index":1786,"title":{},"body":{"miscellaneous/variables.html":{}}}],["toupdate",{"_index":455,"title":{},"body":{"injectables/ArticleService.html":{},"injectables/CorporationService.html":{},"injectables/GroupService.html":{},"injectables/ListService.html":{},"injectables/MenuService.html":{},"injectables/RoleService.html":{},"injectables/SiteService.html":{},"injectables/UserService.html":{}}}],["toupdate.favorites",{"_index":1619,"title":{},"body":{"injectables/UserService.html":{}}}],["toupdate.password",{"_index":1618,"title":{},"body":{"injectables/UserService.html":{}}}],["tovalidate",{"_index":1638,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["tovalidate(metatype",{"_index":1641,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["trace",{"_index":1125,"title":{},"body":{"classes/MyLogger.html":{}}}],["transform",{"_index":1489,"title":{},"body":{"classes/ToIntegerPipe.html":{},"injectables/ValidationPipe.html":{}}}],["transform(value",{"_index":1490,"title":{},"body":{"classes/ToIntegerPipe.html":{},"injectables/ValidationPipe.html":{}}}],["transformer",{"_index":1646,"title":{},"body":{"injectables/ValidationPipe.html":{},"dependencies.html":{}}}],["true",{"_index":81,"title":{},"body":{"modules/AppModule.html":{},"classes/ArticleEntity.html":{},"injectables/ArticleService.html":{},"classes/CorporationEntity.html":{},"classes/ErrorLogEntity.html":{},"classes/GroupEntity.html":{},"classes/ListEntity.html":{},"classes/ListEntryEntity.html":{},"classes/MenuAppEntity.html":{},"classes/MenuEntryEntity.html":{},"injectables/ProfileService.html":{},"classes/RoleEntity.html":{},"classes/RoleMenuEntryEntity.html":{},"classes/SiteEntity.html":{},"miscellaneous/variables.html":{}}}],["true})@joincolumn",{"_index":270,"title":{},"body":{"classes/ArticleEntity.html":{}}}],["true})@joincolumn({name",{"_index":1310,"title":{},"body":{"classes/RoleMenuEntryEntity.html":{}}}],["type",{"_index":117,"title":{},"body":{"controllers/ArticleController.html":{},"interfaces/ArticleData.html":{},"classes/ArticleEntity.html":{},"modules/ArticleModule.html":{},"interfaces/ArticleRO.html":{},"injectables/ArticleService.html":{},"interfaces/ArticlesRO.html":{},"injectables/AuthMiddleware.html":{},"classes/BaseController.html":{},"classes/Comment.html":{},"interfaces/CommentsRO.html":{},"controllers/CorporationController.html":{},"interfaces/CorporationData.html":{},"classes/CorporationEntity.html":{},"modules/CorporationModule.html":{},"interfaces/CorporationRO.html":{},"injectables/CorporationService.html":{},"classes/CreateArticleDto.html":{},"classes/CreateCommentDto.html":{},"classes/CreateCorporationDto.html":{},"classes/CreateErrorLogDto.html":{},"classes/CreateGroupDto.html":{},"classes/CreateListDto.html":{},"classes/CreateListEntryDto.html":{},"classes/CreateMenuDto.html":{},"classes/CreateMenuEntryDto.html":{},"classes/CreateMenuEntryPointDto.html":{},"classes/CreateRoleAppDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSiteDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabaseConfig.html":{},"classes/ErrorLogEntity.html":{},"classes/FollowsEntity.html":{},"controllers/GroupController.html":{},"interfaces/GroupData.html":{},"classes/GroupEntity.html":{},"modules/GroupModule.html":{},"interfaces/GroupRO.html":{},"injectables/GroupService.html":{},"controllers/ListController.html":{},"interfaces/ListData.html":{},"classes/ListEntity.html":{},"interfaces/ListEntry.html":{},"classes/ListEntryEntity.html":{},"interfaces/ListEntryRO.html":{},"modules/ListModule.html":{},"interfaces/ListRO.html":{},"injectables/ListService.html":{},"classes/LoginUserDto.html":{},"interfaces/MenuAppData.html":{},"classes/MenuAppEntity.html":{},"interfaces/MenuAppEntry.html":{},"controllers/MenuController.html":{},"classes/MenuEntryEntity.html":{},"interfaces/MenuEntryRO.html":{},"modules/MenuModule.html":{},"interfaces/MenuRO.html":{},"injectables/MenuService.html":{},"classes/MyLogger.html":{},"controllers/ProfileController.html":{},"interfaces/ProfileData.html":{},"modules/ProfileModule.html":{},"interfaces/ProfileRO.html":{},"injectables/ProfileService.html":{},"controllers/RoleController.html":{},"interfaces/RoleData.html":{},"classes/RoleEntity.html":{},"classes/RoleMenuAppEntity.html":{},"classes/RoleMenuEntryEntity.html":{},"modules/RoleModule.html":{},"interfaces/RoleRO.html":{},"injectables/RoleService.html":{},"controllers/SiteController.html":{},"interfaces/SiteData.html":{},"classes/SiteEntity.html":{},"modules/SiteModule.html":{},"interfaces/SiteRO.html":{},"injectables/SiteService.html":{},"classes/TagEntity.html":{},"modules/TagModule.html":{},"injectables/TagService.html":{},"classes/ToIntegerPipe.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"interfaces/UserData.html":{},"classes/UserEntity.html":{},"modules/UserModule.html":{},"interfaces/UserRO.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typeorm",{"_index":60,"title":{},"body":{"modules/AppModule.html":{},"classes/ArticleEntity.html":{},"injectables/ArticleService.html":{},"classes/Comment.html":{},"classes/CorporationEntity.html":{},"injectables/CorporationService.html":{},"classes/ErrorLogEntity.html":{},"classes/FollowsEntity.html":{},"classes/GroupEntity.html":{},"injectables/GroupService.html":{},"classes/ListEntity.html":{},"classes/ListEntryEntity.html":{},"injectables/ListService.html":{},"classes/MenuAppEntity.html":{},"classes/MenuEntryEntity.html":{},"injectables/MenuService.html":{},"injectables/ProfileService.html":{},"classes/RoleEntity.html":{},"classes/RoleMenuAppEntity.html":{},"classes/RoleMenuEntryEntity.html":{},"injectables/RoleService.html":{},"classes/SiteEntity.html":{},"injectables/SiteService.html":{},"classes/TagEntity.html":{},"injectables/TagService.html":{},"classes/UserEntity.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["typeorm/common/deeppartial",{"_index":1197,"title":{},"body":{"injectables/ProfileService.html":{}}}],["typeormmodule",{"_index":57,"title":{},"body":{"modules/AppModule.html":{},"modules/ArticleModule.html":{},"modules/CorporationModule.html":{},"modules/GroupModule.html":{},"modules/ListModule.html":{},"modules/MenuModule.html":{},"modules/ProfileModule.html":{},"modules/RoleModule.html":{},"modules/SiteModule.html":{},"modules/TagModule.html":{},"modules/UserModule.html":{}}}],["typeormmodule.forfeature([articleentity",{"_index":325,"title":{},"body":{"modules/ArticleModule.html":{}}}],["typeormmodule.forfeature([corporationentity",{"_index":593,"title":{},"body":{"modules/CorporationModule.html":{}}}],["typeormmodule.forfeature([groupentity",{"_index":855,"title":{},"body":{"modules/GroupModule.html":{}}}],["typeormmodule.forfeature([listentity",{"_index":951,"title":{},"body":{"modules/ListModule.html":{}}}],["typeormmodule.forfeature([menuappentity",{"_index":1080,"title":{},"body":{"modules/MenuModule.html":{}}}],["typeormmodule.forfeature([roleentity",{"_index":1325,"title":{},"body":{"modules/RoleModule.html":{}}}],["typeormmodule.forfeature([siteentity",{"_index":1407,"title":{},"body":{"modules/SiteModule.html":{}}}],["typeormmodule.forfeature([tagentity",{"_index":1477,"title":{},"body":{"modules/TagModule.html":{}}}],["typeormmodule.forfeature([userentity",{"_index":1175,"title":{},"body":{"modules/ProfileModule.html":{},"modules/UserModule.html":{}}}],["typeormmodule.forrootasync",{"_index":83,"title":{},"body":{"modules/AppModule.html":{}}}],["typeormoptionsfactory",{"_index":759,"title":{},"body":{"injectables/DatabaseConfig.html":{}}}],["types",{"_index":1661,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["types.find((type",{"_index":1662,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["types/jsonwebtoken",{"_index":1710,"title":{},"body":{"dependencies.html":{}}}],["typescript",{"_index":1735,"title":{},"body":{"dependencies.html":{}}}],["ui",{"_index":1732,"title":{},"body":{"dependencies.html":{}}}],["undefined",{"_index":264,"title":{},"body":{"classes/ArticleEntity.html":{},"classes/Comment.html":{},"classes/CorporationEntity.html":{},"classes/GroupEntity.html":{},"classes/ListEntity.html":{},"classes/ListEntryEntity.html":{},"classes/MenuAppEntity.html":{},"classes/MenuEntryEntity.html":{},"classes/RoleEntity.html":{},"classes/RoleMenuAppEntity.html":{},"classes/RoleMenuEntryEntity.html":{},"classes/SiteEntity.html":{},"classes/UserEntity.html":{}}}],["unfavorite",{"_index":99,"title":{},"body":{"controllers/ArticleController.html":{},"injectables/ArticleService.html":{}}}],["unfavorite(@user('id",{"_index":236,"title":{},"body":{"controllers/ArticleController.html":{}}}],["unfavorite(id",{"_index":371,"title":{},"body":{"injectables/ArticleService.html":{}}}],["unfavorite(userid",{"_index":158,"title":{},"body":{"controllers/ArticleController.html":{}}}],["unfavorited",{"_index":234,"title":{},"body":{"controllers/ArticleController.html":{}}}],["unfavorited.'})@apiresponse({status",{"_index":159,"title":{},"body":{"controllers/ArticleController.html":{}}}],["unfollow",{"_index":1139,"title":{},"body":{"controllers/ProfileController.html":{},"injectables/ProfileService.html":{}}}],["unfollow(@user('id",{"_index":1160,"title":{},"body":{"controllers/ProfileController.html":{}}}],["unfollow(followerid",{"_index":1195,"title":{},"body":{"injectables/ProfileService.html":{}}}],["unfollow(userid",{"_index":1146,"title":{},"body":{"controllers/ProfileController.html":{}}}],["unique",{"_index":1608,"title":{},"body":{"injectables/UserService.html":{}}}],["uniqueness",{"_index":620,"title":{},"body":{"injectables/CorporationService.html":{},"injectables/GroupService.html":{},"injectables/ListService.html":{},"injectables/MenuService.html":{},"injectables/RoleService.html":{},"injectables/SiteService.html":{},"injectables/UserService.html":{}}}],["update",{"_index":100,"title":{},"body":{"controllers/ArticleController.html":{},"injectables/ArticleService.html":{},"controllers/CorporationController.html":{},"injectables/CorporationService.html":{},"controllers/GroupController.html":{},"injectables/GroupService.html":{},"controllers/ListController.html":{},"injectables/ListService.html":{},"controllers/MenuController.html":{},"injectables/MenuService.html":{},"controllers/RoleController.html":{},"injectables/RoleService.html":{},"controllers/SiteController.html":{},"injectables/SiteService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["update(@param",{"_index":210,"title":{},"body":{"controllers/ArticleController.html":{},"controllers/CorporationController.html":{}}}],["update(@param('id",{"_index":826,"title":{},"body":{"controllers/GroupController.html":{},"controllers/ListController.html":{},"controllers/MenuController.html":{},"controllers/RoleController.html":{},"controllers/SiteController.html":{}}}],["update(@user('id",{"_index":1528,"title":{},"body":{"controllers/UserController.html":{}}}],["update(id",{"_index":611,"title":{},"body":{"injectables/CorporationService.html":{},"controllers/GroupController.html":{},"injectables/GroupService.html":{},"controllers/ListController.html":{},"injectables/ListService.html":{},"controllers/MenuController.html":{},"injectables/MenuService.html":{},"controllers/RoleController.html":{},"injectables/RoleService.html":{},"controllers/SiteController.html":{},"injectables/SiteService.html":{},"injectables/UserService.html":{}}}],["update(params",{"_index":162,"title":{},"body":{"controllers/ArticleController.html":{},"controllers/CorporationController.html":{}}}],["update(slug",{"_index":373,"title":{},"body":{"injectables/ArticleService.html":{}}}],["update(userid",{"_index":1520,"title":{},"body":{"controllers/UserController.html":{}}}],["updated",{"_index":208,"title":{},"body":{"controllers/ArticleController.html":{},"injectables/ArticleService.html":{},"controllers/CorporationController.html":{},"injectables/CorporationService.html":{},"injectables/GroupService.html":{},"injectables/ListService.html":{},"injectables/MenuService.html":{},"injectables/RoleService.html":{},"injectables/SiteService.html":{},"injectables/UserService.html":{}}}],["updated.'})@apiresponse({status",{"_index":163,"title":{},"body":{"controllers/ArticleController.html":{},"controllers/CorporationController.html":{}}}],["updatedat",{"_index":246,"title":{},"body":{"interfaces/ArticleData.html":{},"interfaces/ArticleRO.html":{},"interfaces/ArticlesRO.html":{},"interfaces/CommentsRO.html":{},"interfaces/CorporationData.html":{},"interfaces/CorporationRO.html":{},"interfaces/GroupData.html":{},"interfaces/GroupRO.html":{},"interfaces/ListData.html":{},"interfaces/ListEntry.html":{},"interfaces/ListEntryRO.html":{},"interfaces/ListRO.html":{},"interfaces/RoleData.html":{},"interfaces/RoleRO.html":{},"interfaces/SiteData.html":{},"interfaces/SiteRO.html":{}}}],["updatedatecolumn",{"_index":1068,"title":{},"body":{"classes/MenuEntryEntity.html":{}}}],["updatedby",{"_index":260,"title":{},"body":{"classes/ArticleEntity.html":{},"interfaces/CorporationData.html":{},"classes/CorporationEntity.html":{},"interfaces/CorporationRO.html":{},"classes/ErrorLogEntity.html":{},"interfaces/GroupData.html":{},"classes/GroupEntity.html":{},"interfaces/GroupRO.html":{},"interfaces/ListData.html":{},"classes/ListEntity.html":{},"interfaces/ListEntry.html":{},"interfaces/ListEntryRO.html":{},"interfaces/ListRO.html":{},"interfaces/MenuAppData.html":{},"classes/MenuAppEntity.html":{},"interfaces/MenuAppEntry.html":{},"classes/MenuEntryEntity.html":{},"interfaces/MenuEntryRO.html":{},"interfaces/MenuRO.html":{},"interfaces/RoleData.html":{},"classes/RoleEntity.html":{},"interfaces/RoleRO.html":{},"interfaces/SiteData.html":{},"classes/SiteEntity.html":{},"interfaces/SiteRO.html":{},"classes/TagEntity.html":{},"classes/UserEntity.html":{}}}],["updateddate",{"_index":261,"title":{},"body":{"classes/ArticleEntity.html":{},"classes/CorporationEntity.html":{},"classes/ErrorLogEntity.html":{},"classes/GroupEntity.html":{},"classes/ListEntity.html":{},"interfaces/MenuAppData.html":{},"classes/MenuAppEntity.html":{},"interfaces/MenuAppEntry.html":{},"classes/MenuEntryEntity.html":{},"interfaces/MenuEntryRO.html":{},"interfaces/MenuRO.html":{},"classes/RoleEntity.html":{},"classes/SiteEntity.html":{},"classes/TagEntity.html":{},"classes/UserEntity.html":{}}}],["updateuserdto",{"_index":1499,"title":{"classes/UpdateUserDto.html":{}},"body":{"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["use",{"_index":467,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["use(req",{"_index":471,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["useclass",{"_index":84,"title":{},"body":{"modules/AppModule.html":{}}}],["used",{"_index":1283,"title":{},"body":{"classes/RoleEntity.html":{}}}],["usepipes",{"_index":809,"title":{},"body":{"controllers/GroupController.html":{},"controllers/ListController.html":{},"controllers/MenuController.html":{},"controllers/RoleController.html":{},"controllers/SiteController.html":{},"controllers/UserController.html":{}}}],["usepipes(new",{"_index":829,"title":{},"body":{"controllers/GroupController.html":{},"controllers/ListController.html":{},"controllers/MenuController.html":{},"controllers/RoleController.html":{},"controllers/SiteController.html":{},"controllers/UserController.html":{}}}],["user",{"_index":179,"title":{},"body":{"controllers/ArticleController.html":{},"classes/ArticleEntity.html":{},"injectables/ArticleService.html":{},"injectables/AuthMiddleware.html":{},"controllers/CorporationController.html":{},"controllers/GroupController.html":{},"controllers/ListController.html":{},"controllers/MenuController.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"controllers/RoleController.html":{},"classes/RoleEntity.html":{},"controllers/SiteController.html":{},"controllers/UserController.html":{},"interfaces/UserData.html":{},"modules/UserModule.html":{},"interfaces/UserRO.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["user.articles",{"_index":304,"title":{},"body":{"classes/ArticleEntity.html":{}}}],["user.bio",{"_index":1633,"title":{},"body":{"injectables/UserService.html":{}}}],["user.controller",{"_index":1578,"title":{},"body":{"modules/UserModule.html":{}}}],["user.decorator",{"_index":816,"title":{},"body":{"controllers/GroupController.html":{},"controllers/ListController.html":{},"controllers/MenuController.html":{},"controllers/RoleController.html":{},"controllers/SiteController.html":{},"controllers/UserController.html":{}}}],["user.dto.ts",{"_index":749,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginUserDto.html":{},"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["user.dto.ts:12",{"_index":753,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:2",{"_index":1504,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["user.dto.ts:3",{"_index":1502,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["user.dto.ts:4",{"_index":1501,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["user.dto.ts:5",{"_index":1503,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["user.dto.ts:6",{"_index":754,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginUserDto.html":{}}}],["user.dto.ts:9",{"_index":752,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginUserDto.html":{}}}],["user.email",{"_index":1630,"title":{},"body":{"injectables/UserService.html":{}}}],["user.entity",{"_index":1579,"title":{},"body":{"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["user.favorites.findindex(_article",{"_index":435,"title":{},"body":{"injectables/ArticleService.html":{}}}],["user.favorites.splice(deleteindex",{"_index":438,"title":{},"body":{"injectables/ArticleService.html":{}}}],["user.id",{"_index":1200,"title":{},"body":{"injectables/ProfileService.html":{},"injectables/UserService.html":{}}}],["user.image",{"_index":1635,"title":{},"body":{"injectables/UserService.html":{}}}],["user.interface",{"_index":1524,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["user.password",{"_index":1201,"title":{},"body":{"injectables/ProfileService.html":{}}}],["user.roles",{"_index":1279,"title":{},"body":{"classes/RoleEntity.html":{}}}],["user.service",{"_index":487,"title":{},"body":{"injectables/AuthMiddleware.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{}}}],["user.user",{"_index":509,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["user.username",{"_index":1629,"title":{},"body":{"injectables/UserService.html":{}}}],["user/auth.middleware",{"_index":324,"title":{},"body":{"modules/ArticleModule.html":{},"modules/ProfileModule.html":{}}}],["user/user.decorator",{"_index":180,"title":{},"body":{"controllers/ArticleController.html":{},"controllers/CorporationController.html":{},"controllers/ProfileController.html":{}}}],["user/user.entity",{"_index":299,"title":{},"body":{"classes/ArticleEntity.html":{},"modules/ArticleModule.html":{},"injectables/ArticleService.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"classes/RoleEntity.html":{}}}],["user/user.interface",{"_index":250,"title":{},"body":{"interfaces/ArticleData.html":{},"interfaces/ArticleRO.html":{},"interfaces/ArticlesRO.html":{},"interfaces/CommentsRO.html":{},"interfaces/ListData.html":{},"interfaces/ListEntry.html":{},"interfaces/ListEntryRO.html":{},"interfaces/ListRO.html":{},"interfaces/MenuAppData.html":{},"interfaces/MenuAppEntry.html":{},"interfaces/MenuEntryRO.html":{},"interfaces/MenuRO.html":{}}}],["user/user.module",{"_index":56,"title":{},"body":{"modules/AppModule.html":{},"modules/ArticleModule.html":{},"modules/ProfileModule.html":{},"modules/TagModule.html":{}}}],["usercontroller",{"_index":1505,"title":{"controllers/UserController.html":{}},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["userdata",{"_index":247,"title":{"interfaces/UserData.html":{}},"body":{"interfaces/ArticleData.html":{},"interfaces/ArticleRO.html":{},"interfaces/ArticlesRO.html":{},"interfaces/CommentsRO.html":{},"interfaces/ListData.html":{},"interfaces/ListEntry.html":{},"interfaces/ListEntryRO.html":{},"interfaces/ListRO.html":{},"interfaces/MenuAppData.html":{},"interfaces/MenuAppEntry.html":{},"interfaces/MenuEntryRO.html":{},"interfaces/MenuRO.html":{},"controllers/UserController.html":{},"interfaces/UserData.html":{},"interfaces/UserRO.html":{},"coverage.html":{}}}],["userentity",{"_index":262,"title":{"classes/UserEntity.html":{}},"body":{"classes/ArticleEntity.html":{},"modules/ArticleModule.html":{},"injectables/ArticleService.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"classes/RoleEntity.html":{},"classes/UserEntity.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["userid",{"_index":119,"title":{},"body":{"controllers/ArticleController.html":{},"injectables/ArticleService.html":{},"controllers/ProfileController.html":{},"controllers/UserController.html":{}}}],["userinput",{"_index":630,"title":{},"body":{"injectables/CorporationService.html":{},"injectables/GroupService.html":{},"injectables/ListService.html":{},"injectables/MenuService.html":{},"injectables/RoleService.html":{},"injectables/SiteService.html":{},"injectables/UserService.html":{}}}],["usermodule",{"_index":48,"title":{"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ArticleModule.html":{},"modules/ProfileModule.html":{},"modules/TagModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["username",{"_index":751,"title":{},"body":{"classes/CreateUserDto.html":{},"controllers/ProfileController.html":{},"interfaces/ProfileData.html":{},"interfaces/ProfileRO.html":{},"injectables/ProfileService.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"interfaces/UserData.html":{},"classes/UserEntity.html":{},"interfaces/UserRO.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["username/email",{"_index":621,"title":{},"body":{"injectables/CorporationService.html":{},"injectables/GroupService.html":{},"injectables/ListService.html":{},"injectables/MenuService.html":{},"injectables/RoleService.html":{},"injectables/SiteService.html":{},"injectables/UserService.html":{}}}],["userrepository",{"_index":350,"title":{},"body":{"injectables/ArticleService.html":{},"injectables/ProfileService.html":{},"injectables/UserService.html":{}}}],["userro",{"_index":1523,"title":{"interfaces/UserRO.html":{}},"body":{"controllers/UserController.html":{},"interfaces/UserData.html":{},"interfaces/UserRO.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["userservice",{"_index":469,"title":{"injectables/UserService.html":{}},"body":{"injectables/AuthMiddleware.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["val",{"_index":1495,"title":{},"body":{"classes/ToIntegerPipe.html":{}}}],["valid",{"_index":631,"title":{},"body":{"injectables/CorporationService.html":{},"injectables/GroupService.html":{},"injectables/ListService.html":{},"injectables/MenuService.html":{},"injectables/RoleService.html":{},"injectables/SiteService.html":{},"injectables/UserService.html":{}}}],["validate",{"_index":613,"title":{},"body":{"injectables/CorporationService.html":{},"injectables/GroupService.html":{},"injectables/ListService.html":{},"injectables/MenuService.html":{},"injectables/RoleService.html":{},"injectables/SiteService.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{}}}],["validate(newcorporation",{"_index":627,"title":{},"body":{"injectables/CorporationService.html":{}}}],["validate(newgroup",{"_index":874,"title":{},"body":{"injectables/GroupService.html":{}}}],["validate(newlist",{"_index":971,"title":{},"body":{"injectables/ListService.html":{}}}],["validate(newmenu",{"_index":1101,"title":{},"body":{"injectables/MenuService.html":{}}}],["validate(newrole",{"_index":1345,"title":{},"body":{"injectables/RoleService.html":{}}}],["validate(newsite",{"_index":1428,"title":{},"body":{"injectables/SiteService.html":{}}}],["validate(newuser",{"_index":1614,"title":{},"body":{"injectables/UserService.html":{}}}],["validate(object",{"_index":1652,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["validation",{"_index":635,"title":{},"body":{"injectables/CorporationService.html":{},"injectables/GroupService.html":{},"injectables/ListService.html":{},"injectables/MenuService.html":{},"injectables/RoleService.html":{},"injectables/SiteService.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{}}}],["validationpipe",{"_index":817,"title":{"injectables/ValidationPipe.html":{}},"body":{"controllers/GroupController.html":{},"controllers/ListController.html":{},"controllers/MenuController.html":{},"controllers/RoleController.html":{},"controllers/SiteController.html":{},"controllers/UserController.html":{},"injectables/ValidationPipe.html":{},"coverage.html":{}}}],["validationpipe())@post('users",{"_index":1510,"title":{},"body":{"controllers/UserController.html":{}}}],["validationpipe())@post('users/login",{"_index":1518,"title":{},"body":{"controllers/UserController.html":{}}}],["validator",{"_index":614,"title":{},"body":{"injectables/CorporationService.html":{},"classes/CreateCorporationDto.html":{},"classes/CreateErrorLogDto.html":{},"classes/CreateGroupDto.html":{},"classes/CreateListDto.html":{},"classes/CreateListEntryDto.html":{},"classes/CreateMenuDto.html":{},"classes/CreateMenuEntryDto.html":{},"classes/CreateMenuEntryPointDto.html":{},"classes/CreateRoleAppDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSiteDto.html":{},"classes/CreateUserDto.html":{},"injectables/GroupService.html":{},"injectables/ListService.html":{},"classes/LoginUserDto.html":{},"injectables/MenuService.html":{},"injectables/RoleService.html":{},"injectables/SiteService.html":{},"classes/UserEntity.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{},"dependencies.html":{}}}],["value",{"_index":696,"title":{},"body":{"classes/CreateListEntryDto.html":{},"classes/GroupEntity.html":{},"classes/ListEntryEntity.html":{},"classes/ToIntegerPipe.html":{},"injectables/ValidationPipe.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":1683,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1757,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["verbose",{"_index":1119,"title":{},"body":{"classes/MyLogger.html":{}}}],["verbose(message",{"_index":1129,"title":{},"body":{"classes/MyLogger.html":{}}}],["view",{"_index":1665,"title":{},"body":{"controllers/ViewController.html":{}}}],["view.service",{"_index":1672,"title":{},"body":{"modules/ViewModule.html":{}}}],["viewcontroller",{"_index":1663,"title":{"controllers/ViewController.html":{}},"body":{"controllers/ViewController.html":{},"coverage.html":{}}}],["viewmodule",{"_index":1667,"title":{"modules/ViewModule.html":{}},"body":{"modules/ViewModule.html":{},"modules.html":{},"overview.html":{}}}],["viewservice",{"_index":1670,"title":{"injectables/ViewService.html":{}},"body":{"modules/ViewModule.html":{},"injectables/ViewService.html":{},"coverage.html":{},"overview.html":{}}}],["void",{"_index":317,"title":{},"body":{"modules/ArticleModule.html":{},"modules/CorporationModule.html":{},"modules/GroupModule.html":{},"modules/ListModule.html":{},"modules/MenuModule.html":{},"classes/MyLogger.html":{},"modules/ProfileModule.html":{},"modules/RoleModule.html":{},"modules/SiteModule.html":{},"modules/TagModule.html":{},"modules/UserModule.html":{}}}],["want",{"_index":1784,"title":{},"body":{"miscellaneous/variables.html":{}}}],["warn",{"_index":1120,"title":{},"body":{"classes/MyLogger.html":{}}}],["warn(message",{"_index":1131,"title":{},"body":{"classes/MyLogger.html":{}}}],["where('article.authorid",{"_index":416,"title":{},"body":{"injectables/ArticleService.html":{}}}],["where('user.username",{"_index":1605,"title":{},"body":{"injectables/UserService.html":{}}}],["yes",{"_index":1188,"title":{},"body":{"injectables/ProfileService.html":{}}}],["zoom",{"_index":49,"title":{},"body":{"modules/AppModule.html":{},"modules/ArticleModule.html":{},"modules/CorporationModule.html":{},"modules/ErrorlogModule.html":{},"modules/GroupModule.html":{},"modules/ListModule.html":{},"modules/MenuModule.html":{},"modules/ProfileModule.html":{},"modules/RoleModule.html":{},"modules/SiteModule.html":{},"modules/SqldirectModule.html":{},"modules/TagModule.html":{},"modules/UserModule.html":{},"modules/ViewModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                root\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            root\n                        \n                        \n                    \n                \n            \n            \n                \nroot()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Get, Controller } from '@nestjs/common';\n\n@Controller()\nexport class AppController {\n  @Get()\n  root(): string {\n    return 'The Riantis Node API!';\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\n\nArticleModule\n\nArticleModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nArticleModule->AppModule\n\n\n\n\n\nCorporationModule\n\nCorporationModule\n\nAppModule -->\n\nCorporationModule->AppModule\n\n\n\n\n\nErrorlogModule\n\nErrorlogModule\n\nAppModule -->\n\nErrorlogModule->AppModule\n\n\n\n\n\nGroupModule\n\nGroupModule\n\nAppModule -->\n\nGroupModule->AppModule\n\n\n\n\n\nListModule\n\nListModule\n\nAppModule -->\n\nListModule->AppModule\n\n\n\n\n\nMenuModule\n\nMenuModule\n\nAppModule -->\n\nMenuModule->AppModule\n\n\n\n\n\nProfileModule\n\nProfileModule\n\nAppModule -->\n\nProfileModule->AppModule\n\n\n\n\n\nRoleModule\n\nRoleModule\n\nAppModule -->\n\nRoleModule->AppModule\n\n\n\n\n\nSiteModule\n\nSiteModule\n\nAppModule -->\n\nSiteModule->AppModule\n\n\n\n\n\nTagModule\n\nTagModule\n\nAppModule -->\n\nTagModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ArticleModule\n                        \n                        \n                            CorporationModule\n                        \n                        \n                            ErrorlogModule\n                        \n                        \n                            GroupModule\n                        \n                        \n                            ListModule\n                        \n                        \n                            MenuModule\n                        \n                        \n                            ProfileModule\n                        \n                        \n                            RoleModule\n                        \n                        \n                            SiteModule\n                        \n                        \n                            TagModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { ArticleModule } from './article/article.module';\nimport { UserModule } from './user/user.module';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { Connection } from 'typeorm';\n\nimport { RoleModule } from './role/role.module';\nimport { CorporationModule } from './corporation/corporation.module';\nimport { CorporationController } from './corporation/corporation.controller';\nimport { SiteModule } from './site/site.module';\nimport { GroupModule } from './group/group.module';\nimport { MenuModule } from './menu/menu.module';\nimport { ListModule } from './list/list.module';\nimport { TagModule } from './tag/tag.module';\nimport { ProfileModule } from './profile/profile.module';\nimport { ErrorlogModule } from './errorlog/errorlog.module';\n\nimport { ConfigModule } from '@nestjs/config';\nimport { ConfigService } from '@nestjs/config';\nimport { configenv } from './config/config.env'\nimport { DatabaseConfig } from './config/database.config';\n\n\n@Module({\n  imports: [\n    ConfigModule.forRoot({\n      isGlobal: true,\n      load: [configenv],\n    }),\n    TypeOrmModule.forRootAsync({\n      imports: [ConfigModule],\n      useClass: DatabaseConfig,\n    }),\n    ArticleModule,\n    CorporationModule,\n    ErrorlogModule,\n    GroupModule,\n    ListModule,\n    MenuModule,\n    ProfileModule,\n    RoleModule,\n    SiteModule,\n    TagModule,\n    UserModule\n\n  ],\n  controllers: [ \n    AppController\n  ],\n  providers: [ConfigService]\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ArticleController.html":{"url":"controllers/ArticleController.html","title":"controller - ArticleController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ArticleController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/article/article.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                articles\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                createComment\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                deleteComment\n                            \n                            \n                                    Async\n                                favorite\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findComments\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                getFeed\n                            \n                            \n                                    Async\n                                unFavorite\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(userId: number, articleData: CreateArticleDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Create article'})@ApiResponse({status: 201, description: 'The article has been successfully created.'})@ApiResponse({status: 403, description: 'Forbidden.'})@Post()\n                \n            \n\n            \n                \n                    Defined in src/article/article.controller.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    articleData\n                                    \n                                                CreateArticleDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createComment\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createComment(slug, commentData: CreateCommentDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Create comment'})@ApiResponse({status: 201, description: 'The comment has been successfully created.'})@ApiResponse({status: 403, description: 'Forbidden.'})@Post(':slug/comments')\n                \n            \n\n            \n                \n                    Defined in src/article/article.controller.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    slug\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    commentData\n                                    \n                                                CreateCommentDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(params)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Delete article'})@ApiResponse({status: 201, description: 'The article has been successfully deleted.'})@ApiResponse({status: 403, description: 'Forbidden.'})@Delete(':slug')\n                \n            \n\n            \n                \n                    Defined in src/article/article.controller.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteComment\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteComment(params)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Delete comment'})@ApiResponse({status: 201, description: 'The article has been successfully deleted.'})@ApiResponse({status: 403, description: 'Forbidden.'})@Delete(':slug/comments/:id')\n                \n            \n\n            \n                \n                    Defined in src/article/article.controller.ts:85\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            favorite\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    favorite(userId: number, slug)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Favorite article'})@ApiResponse({status: 201, description: 'The article has been successfully favorited.'})@ApiResponse({status: 403, description: 'Forbidden.'})@Post(':slug/favorite')\n                \n            \n\n            \n                \n                    Defined in src/article/article.controller.ts:94\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    slug\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(query)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Get all articles'})@ApiResponse({status: 200, description: 'Return all articles.'})@Get()\n                \n            \n\n            \n                \n                    Defined in src/article/article.controller.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findComments\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findComments(slug)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':slug/comments')\n                \n            \n\n            \n                \n                    Defined in src/article/article.controller.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    slug\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(slug)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':slug')\n                \n            \n\n            \n                \n                    Defined in src/article/article.controller.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    slug\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getFeed\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getFeed(userId: number, query)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Get article feed'})@ApiResponse({status: 200, description: 'Return article feed.'})@ApiResponse({status: 403, description: 'Forbidden.'})@Get('feed')\n                \n            \n\n            \n                \n                    Defined in src/article/article.controller.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    query\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            unFavorite\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    unFavorite(userId: number, slug)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Unfavorite article'})@ApiResponse({status: 201, description: 'The article has been successfully unfavorited.'})@ApiResponse({status: 403, description: 'Forbidden.'})@Delete(':slug/favorite')\n                \n            \n\n            \n                \n                    Defined in src/article/article.controller.ts:102\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    slug\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update(params, articleData: CreateArticleDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Update article'})@ApiResponse({status: 201, description: 'The article has been successfully updated.'})@ApiResponse({status: 403, description: 'Forbidden.'})@Put(':slug')\n                \n            \n\n            \n                \n                    Defined in src/article/article.controller.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    articleData\n                                    \n                                                CreateArticleDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {Get, Post, Body, Put, Delete, Query, Param, Controller} from '@nestjs/common';\nimport { Request } from 'express';\nimport { ArticleService } from './article.service';\nimport { CreateArticleDto, CreateCommentDto } from './dto';\nimport { ArticlesRO, ArticleRO } from './article.interface';\nimport { CommentsRO } from './article.interface';\nimport { User } from '../user/user.decorator';\n\nimport {\n  ApiBearerAuth,\n  ApiResponse,\n  ApiOperation, ApiTags,\n} from '@nestjs/swagger';\n\n@ApiBearerAuth()\n@ApiTags('articles')\n@Controller('articles')\nexport class ArticleController {\n\n  constructor(private readonly articleService: ArticleService) {}\n\n  @ApiOperation({ summary: 'Get all articles' })\n  @ApiResponse({ status: 200, description: 'Return all articles.'})\n  @Get()\n  async findAll(@Query() query): Promise {\n    return await this.articleService.findAll(query);\n  }\n\n\n  @ApiOperation({ summary: 'Get article feed' })\n  @ApiResponse({ status: 200, description: 'Return article feed.'})\n  @ApiResponse({ status: 403, description: 'Forbidden.' })\n  @Get('feed')\n  async getFeed(@User('id') userId: number, @Query() query): Promise {\n    return await this.articleService.findFeed(userId, query);\n  }\n\n  @Get(':slug')\n  async findOne(@Param('slug') slug): Promise {\n    return await this.articleService.findOne({slug});\n  }\n\n  @Get(':slug/comments')\n  async findComments(@Param('slug') slug): Promise {\n    return await this.articleService.findComments(slug);\n  }\n\n  @ApiOperation({ summary: 'Create article' })\n  @ApiResponse({ status: 201, description: 'The article has been successfully created.'})\n  @ApiResponse({ status: 403, description: 'Forbidden.' })\n  @Post()\n  async create(@User('id') userId: number, @Body('article') articleData: CreateArticleDto) {\n    return this.articleService.create(userId, articleData);\n  }\n\n  @ApiOperation({ summary: 'Update article' })\n  @ApiResponse({ status: 201, description: 'The article has been successfully updated.'})\n  @ApiResponse({ status: 403, description: 'Forbidden.' })\n  @Put(':slug')\n  async update(@Param() params, @Body('article') articleData: CreateArticleDto) {\n    // Todo: update slug also when title gets changed\n    return this.articleService.update(params.slug, articleData);\n  }\n\n  @ApiOperation({ summary: 'Delete article' })\n  @ApiResponse({ status: 201, description: 'The article has been successfully deleted.'})\n  @ApiResponse({ status: 403, description: 'Forbidden.' })\n  @Delete(':slug')\n  async delete(@Param() params) {\n    return this.articleService.delete(params.slug);\n  }\n\n  @ApiOperation({ summary: 'Create comment' })\n  @ApiResponse({ status: 201, description: 'The comment has been successfully created.'})\n  @ApiResponse({ status: 403, description: 'Forbidden.' })\n  @Post(':slug/comments')\n  async createComment(@Param('slug') slug, @Body('comment') commentData: CreateCommentDto) {\n    return await this.articleService.addComment(slug, commentData);\n  }\n\n  @ApiOperation({ summary: 'Delete comment' })\n  @ApiResponse({ status: 201, description: 'The article has been successfully deleted.'})\n  @ApiResponse({ status: 403, description: 'Forbidden.' })\n  @Delete(':slug/comments/:id')\n  async deleteComment(@Param() params) {\n    const {slug, id} = params;\n    return await this.articleService.deleteComment(slug, id);\n  }\n\n  @ApiOperation({ summary: 'Favorite article' })\n  @ApiResponse({ status: 201, description: 'The article has been successfully favorited.'})\n  @ApiResponse({ status: 403, description: 'Forbidden.' })\n  @Post(':slug/favorite')\n  async favorite(@User('id') userId: number, @Param('slug') slug) {\n    return await this.articleService.favorite(userId, slug);\n  }\n\n  @ApiOperation({ summary: 'Unfavorite article' })\n  @ApiResponse({ status: 201, description: 'The article has been successfully unfavorited.'})\n  @ApiResponse({ status: 403, description: 'Forbidden.' })\n  @Delete(':slug/favorite')\n  async unFavorite(@User('id') userId: number, @Param('slug') slug) {\n    return await this.articleService.unFavorite(userId, slug);\n  }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ArticleData.html":{"url":"interfaces/ArticleData.html","title":"interface - ArticleData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ArticleData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/article/article.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        author\n                                \n                                \n                                            Optional\n                                        body\n                                \n                                \n                                            Optional\n                                        createdAt\n                                \n                                \n                                        description\n                                \n                                \n                                            Optional\n                                        favorited\n                                \n                                \n                                            Optional\n                                        favoritesCount\n                                \n                                \n                                        slug\n                                \n                                \n                                            Optional\n                                        tagList\n                                \n                                \n                                        title\n                                \n                                \n                                            Optional\n                                        updatedAt\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        author\n                                    \n                                \n                                \n                                    \n                                        author:         UserData\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         UserData\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        body\n                                    \n                                \n                                \n                                    \n                                        body:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                    \n                                \n                                \n                                    \n                                        createdAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        favorited\n                                    \n                                \n                                \n                                    \n                                        favorited:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        favoritesCount\n                                    \n                                \n                                \n                                    \n                                        favoritesCount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        slug\n                                    \n                                \n                                \n                                    \n                                        slug:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tagList\n                                    \n                                \n                                \n                                    \n                                        tagList:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                    \n                                \n                                \n                                    \n                                        updatedAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { UserData } from '../user/user.interface';\nimport { ArticleEntity } from './article.entity';\ninterface Comment {\n  body: string;\n}\n\ninterface ArticleData {\n  slug: string;\n  title: string;\n  description: string;\n  body?: string;\n  tagList?: string[];\n  createdAt?: Date\n  updatedAt?: Date\n  favorited?: boolean;\n  favoritesCount?: number;\n  author?: UserData;\n}\n\nexport interface CommentsRO {\n  comments: Comment[];\n}\n\nexport interface ArticleRO {\n  article: ArticleEntity;\n}\n\nexport interface ArticlesRO {\n  articles: ArticleEntity[];\n  articlesCount: number;\n}\n\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ArticleEntity.html":{"url":"classes/ArticleEntity.html","title":"class - ArticleEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ArticleEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/article/article.entity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                author\n                            \n                            \n                                body\n                            \n                            \n                                comments\n                            \n                            \n                                createdby\n                            \n                            \n                                createddate\n                            \n                            \n                                description\n                            \n                            \n                                favoriteCount\n                            \n                            \n                                id\n                            \n                            \n                                slug\n                            \n                            \n                                tagList\n                            \n                            \n                                title\n                            \n                            \n                                updatedby\n                            \n                            \n                                updateddate\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            author\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserEntity\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne(undefined, undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/article/article.entity.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            body\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({default: ''})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/article/article.entity.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            comments\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Comment[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @OneToMany(undefined, undefined, {eager: true})@JoinColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/article/article.entity.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdby\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/article/article.entity.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createddate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/article/article.entity.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({nullable: true, default: ''})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/article/article.entity.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            favoriteCount\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({default: 0})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/article/article.entity.ts:46\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/article/article.entity.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            slug\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column('nvarchar', {length: 100})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/article/article.entity.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tagList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column('simple-array')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/article/article.entity.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column('nvarchar', {length: 100})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/article/article.entity.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedby\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/article/article.entity.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateddate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/article/article.entity.ts:30\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, PrimaryGeneratedColumn, Column, OneToOne, ManyToOne, OneToMany, JoinColumn, AfterUpdate, BeforeUpdate } from 'typeorm';\nimport { UserEntity } from '../user/user.entity';\nimport { Comment } from './comment.entity';\n\n@Entity('article')\nexport class ArticleEntity {\n\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column(\"nvarchar\", { length: 100 })\n  slug: string;\n\n  @Column(\"nvarchar\", { length: 100 })\n  title: string;\n\n  @Column({nullable: true, default: ''})\n  description: string;\n\n  @Column({default: ''})\n  body: string;\n\n  @Column()\n  createddate: Date;\n\n  @Column()\n  createdby: number;\n\n  @Column()\n  updateddate: Date;\n\n  @Column()\n  updatedby: number;\n\n  @Column('simple-array')\n  tagList: string[];\n\n  @ManyToOne(type => UserEntity, user => user.articles)\n  author: UserEntity;\n\n  @OneToMany(type => Comment, comment => comment.article, {eager: true})\n  @JoinColumn()\n  comments: Comment[];\n\n  @Column({default: 0})\n  favoriteCount: number;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ArticleModule.html":{"url":"modules/ArticleModule.html","title":"module - ArticleModule","body":"\n                   \n\n\n\n\n    Modules\n    ArticleModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ArticleModule\n\n\n\ncluster_ArticleModule_imports\n\n\n\ncluster_ArticleModule_providers\n\n\n\n\nUserModule\n\nUserModule\n\n\n\nArticleModule\n\nArticleModule\n\nArticleModule -->\n\nUserModule->ArticleModule\n\n\n\n\n\nArticleService\n\nArticleService\n\nArticleModule -->\n\nArticleService->ArticleModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/article/article.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ArticleService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ArticleController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            configure\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    configure(consumer: MiddlewareConsumer)\n                \n            \n\n\n            \n                \n                    Defined in src/article/article.module.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    consumer\n                                    \n                                            MiddlewareConsumer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { MiddlewareConsumer, Module, NestModule, RequestMethod } from '@nestjs/common';\nimport { ArticleController } from './article.controller';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { ArticleEntity } from './article.entity';\nimport { Comment } from './comment.entity';\nimport { UserEntity } from '../user/user.entity';\nimport { FollowsEntity } from '../profile/follows.entity';\nimport { ArticleService } from './article.service';\nimport { AuthMiddleware } from '../user/auth.middleware';\nimport { UserModule } from '../user/user.module';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([ArticleEntity, Comment, UserEntity, FollowsEntity]), UserModule],\n  providers: [ArticleService],\n  controllers: [\n    ArticleController\n  ]\n})\nexport class ArticleModule implements NestModule {\n  public configure(consumer: MiddlewareConsumer) {\n    consumer\n      .apply(AuthMiddleware)\n      .forRoutes(\n        {path: 'articles/feed', method: RequestMethod.GET},\n        {path: 'articles', method: RequestMethod.POST},\n        {path: 'articles/:slug', method: RequestMethod.DELETE},\n        {path: 'articles/:slug', method: RequestMethod.PUT},\n        {path: 'articles/:slug/comments', method: RequestMethod.POST},\n        {path: 'articles/:slug/comments/:id', method: RequestMethod.DELETE},\n        {path: 'articles/:slug/favorite', method: RequestMethod.POST},\n        {path: 'articles/:slug/favorite', method: RequestMethod.DELETE});\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ArticleRO.html":{"url":"interfaces/ArticleRO.html","title":"interface - ArticleRO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ArticleRO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/article/article.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        article\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        article\n                                    \n                                \n                                \n                                    \n                                        article:         ArticleEntity\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ArticleEntity\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { UserData } from '../user/user.interface';\nimport { ArticleEntity } from './article.entity';\ninterface Comment {\n  body: string;\n}\n\ninterface ArticleData {\n  slug: string;\n  title: string;\n  description: string;\n  body?: string;\n  tagList?: string[];\n  createdAt?: Date\n  updatedAt?: Date\n  favorited?: boolean;\n  favoritesCount?: number;\n  author?: UserData;\n}\n\nexport interface CommentsRO {\n  comments: Comment[];\n}\n\nexport interface ArticleRO {\n  article: ArticleEntity;\n}\n\nexport interface ArticlesRO {\n  articles: ArticleEntity[];\n  articlesCount: number;\n}\n\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ArticleService.html":{"url":"injectables/ArticleService.html","title":"injectable - ArticleService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ArticleService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/article/article.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addComment\n                            \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                deleteComment\n                            \n                            \n                                    Async\n                                favorite\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findComments\n                            \n                            \n                                    Async\n                                findFeed\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                slugify\n                            \n                            \n                                    Async\n                                unFavorite\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(articleRepository: Repository, commentRepository: Repository, userRepository: Repository, followsRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/article/article.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        articleRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        commentRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        followsRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            addComment\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addComment(slug: string, commentData)\n                \n            \n\n\n            \n                \n                    Defined in src/article/article.service.ts:101\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    slug\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    commentData\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(userId: number, articleData: CreateArticleDto)\n                \n            \n\n\n            \n                \n                    Defined in src/article/article.service.ts:170\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    articleData\n                                    \n                                                CreateArticleDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(slug: string)\n                \n            \n\n\n            \n                \n                    Defined in src/article/article.service.ts:197\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    slug\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteComment\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteComment(slug: string, id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/article/article.service.ts:114\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    slug\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            favorite\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    favorite(id: number, slug: string)\n                \n            \n\n\n            \n                \n                    Defined in src/article/article.service.ts:131\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    slug\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(query)\n                \n            \n\n\n            \n                \n                    Defined in src/article/article.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findComments\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findComments(slug: string)\n                \n            \n\n\n            \n                \n                    Defined in src/article/article.service.ts:165\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    slug\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findFeed\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findFeed(userId: number, query)\n                \n            \n\n\n            \n                \n                    Defined in src/article/article.service.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    query\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(where)\n                \n            \n\n\n            \n                \n                    Defined in src/article/article.service.ts:96\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    where\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            slugify\n                        \n                        \n                    \n                \n            \n            \n                \nslugify(title: string)\n                \n            \n\n\n            \n                \n                    Defined in src/article/article.service.ts:201\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    title\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            unFavorite\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    unFavorite(id: number, slug: string)\n                \n            \n\n\n            \n                \n                    Defined in src/article/article.service.ts:147\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    slug\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update(slug: string, articleData: any)\n                \n            \n\n\n            \n                \n                    Defined in src/article/article.service.ts:190\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    slug\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    articleData\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository, getRepository, DeleteResult } from 'typeorm';\nimport { ArticleEntity } from './article.entity';\nimport { Comment } from './comment.entity';\nimport { UserEntity } from '../user/user.entity';\nimport { FollowsEntity } from '../profile/follows.entity';\nimport { CreateArticleDto } from './dto';\n\nimport {ArticleRO, ArticlesRO, CommentsRO} from './article.interface';\nconst slug = require('slug');\n\n@Injectable()\nexport class ArticleService {\n  constructor(\n    @InjectRepository(ArticleEntity)\n    private readonly articleRepository: Repository,\n    @InjectRepository(Comment)\n    private readonly commentRepository: Repository,\n    @InjectRepository(UserEntity)\n    private readonly userRepository: Repository,\n    @InjectRepository(FollowsEntity)\n    private readonly followsRepository: Repository\n  ) {}\n\n  async findAll(query): Promise {\n\n    const qb = await getRepository(ArticleEntity)\n      .createQueryBuilder('article')\n      .leftJoinAndSelect('article.author', 'author');\n\n    qb.where(\"1 = 1\");\n\n    if ('tag' in query) {\n      qb.andWhere(\"article.tagList LIKE :tag\", { tag: `%${query.tag}%` });\n    }\n\n    if ('author' in query) {\n      const author = await this.userRepository.findOne({username: query.author});\n      qb.andWhere(\"article.authorId = :id\", { id: author.id });\n    }\n\n    if ('favorited' in query) {\n      const author = await this.userRepository.findOne({username: query.favorited});\n      const ids = author.favorites.map(el => el.id);\n      qb.andWhere(\"article.authorId IN (:ids)\", { ids });\n    }\n\n    qb.orderBy('article.created', 'DESC');\n\n    const articlesCount = await qb.getCount();\n\n    if ('limit' in query) {\n      qb.limit(query.limit);\n    }\n\n    if ('offset' in query) {\n      qb.offset(query.offset);\n    }\n\n    const articles = await qb.getMany();\n\n    return {articles, articlesCount};\n  }\n\n  async findFeed(userId: number, query): Promise {\n    const _follows = await this.followsRepository.find( {followerId: userId});\n\n    if (!(Array.isArray(_follows) && _follows.length > 0)) {\n      return {articles: [], articlesCount: 0};\n    }\n\n    const ids = _follows.map(el => el.followingId);\n\n    const qb = await getRepository(ArticleEntity)\n      .createQueryBuilder('article')\n      .where('article.authorId IN (:ids)', { ids });\n\n    qb.orderBy('article.created', 'DESC');\n\n    const articlesCount = await qb.getCount();\n\n    if ('limit' in query) {\n      qb.limit(query.limit);\n    }\n\n    if ('offset' in query) {\n      qb.offset(query.offset);\n    }\n\n    const articles = await qb.getMany();\n\n    return {articles, articlesCount};\n  }\n\n  async findOne(where): Promise {\n    const article = await this.articleRepository.findOne(where);\n    return {article};\n  }\n\n  async addComment(slug: string, commentData): Promise {\n    let article = await this.articleRepository.findOne({slug});\n\n    const comment = new Comment();\n    comment.body = commentData.body;\n\n    article.comments.push(comment);\n\n    await this.commentRepository.save(comment);\n    article = await this.articleRepository.save(article);\n    return {article}\n  }\n\n  async deleteComment(slug: string, id: string): Promise {\n    let article = await this.articleRepository.findOne({slug});\n\n    const comment = await this.commentRepository.findOne(id);\n    const deleteIndex = article.comments.findIndex(_comment => _comment.id === comment.id);\n\n    if (deleteIndex >= 0) {\n      const deleteComments = article.comments.splice(deleteIndex, 1);\n      await this.commentRepository.delete(deleteComments[0].id);\n      article =  await this.articleRepository.save(article);\n      return {article};\n    } else {\n      return {article};\n    }\n\n  }\n\n  async favorite(id: number, slug: string): Promise {\n    let article = await this.articleRepository.findOne({slug});\n    const user = await this.userRepository.findOne(id);\n\n    const isNewFavorite = user.favorites.findIndex(_article => _article.id === article.id)  {\n    let article = await this.articleRepository.findOne({slug});\n    const user = await this.userRepository.findOne(id);\n\n    const deleteIndex = user.favorites.findIndex(_article => _article.id === article.id);\n\n    if (deleteIndex >= 0) {\n\n      user.favorites.splice(deleteIndex, 1);\n      article.favoriteCount--;\n\n      await this.userRepository.save(user);\n      article = await this.articleRepository.save(article);\n    }\n\n    return {article};\n  }\n\n  async findComments(slug: string): Promise {\n    const article = await this.articleRepository.findOne({slug});\n    return {comments: article.comments};\n  }\n\n  async create(userId: number, articleData: CreateArticleDto): Promise {\n\n    let article = new ArticleEntity();\n    article.title = articleData.title;\n    article.description = articleData.description;\n    article.slug = this.slugify(articleData.title);\n    article.tagList = articleData.tagList || [];\n    article.comments = [];\n\n    const newArticle = await this.articleRepository.save(article);\n\n    const author = await this.userRepository.findOne({ where: { id: userId }, relations: ['articles'] });\n    author.articles.push(article);\n\n    await this.userRepository.save(author);\n\n    return newArticle;\n\n  }\n\n  async update(slug: string, articleData: any): Promise {\n    let toUpdate = await this.articleRepository.findOne({ slug: slug});\n    let updated = Object.assign(toUpdate, articleData);\n    const article = await this.articleRepository.save(updated);\n    return {article};\n  }\n\n  async delete(slug: string): Promise {\n    return await this.articleRepository.delete({ slug: slug});\n  }\n\n  slugify(title: string) {\n    return slug(title, {lower: true}) + '-' + (Math.random() * Math.pow(36, 6) | 0).toString(36)\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ArticlesRO.html":{"url":"interfaces/ArticlesRO.html","title":"interface - ArticlesRO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ArticlesRO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/article/article.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        articles\n                                \n                                \n                                        articlesCount\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        articles\n                                    \n                                \n                                \n                                    \n                                        articles:         ArticleEntity[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ArticleEntity[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        articlesCount\n                                    \n                                \n                                \n                                    \n                                        articlesCount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { UserData } from '../user/user.interface';\nimport { ArticleEntity } from './article.entity';\ninterface Comment {\n  body: string;\n}\n\ninterface ArticleData {\n  slug: string;\n  title: string;\n  description: string;\n  body?: string;\n  tagList?: string[];\n  createdAt?: Date\n  updatedAt?: Date\n  favorited?: boolean;\n  favoritesCount?: number;\n  author?: UserData;\n}\n\nexport interface CommentsRO {\n  comments: Comment[];\n}\n\nexport interface ArticleRO {\n  article: ArticleEntity;\n}\n\nexport interface ArticlesRO {\n  articles: ArticleEntity[];\n  articlesCount: number;\n}\n\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthMiddleware.html":{"url":"injectables/AuthMiddleware.html","title":"injectable - AuthMiddleware","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthMiddleware\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/auth.middleware.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                use\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService, configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/user/auth.middleware.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            use\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    use(req: Request, res: Response, next: NextFunction)\n                \n            \n\n\n            \n                \n                    Defined in src/user/auth.middleware.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            NextFunction\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpException } from '@nestjs/common/exceptions/http.exception';\nimport { NestMiddleware, HttpStatus, Injectable } from '@nestjs/common';\nimport { ExtractJwt, Strategy } from 'passport-jwt';\nimport { Request, Response, NextFunction } from 'express';\nimport * as jwt from 'jsonwebtoken';\nimport { UserService } from './user.service';\n\nimport {ConfigService} from '@nestjs/config';\n\n@Injectable()\nexport class AuthMiddleware implements NestMiddleware {\n  constructor(private readonly userService: UserService, private configService: ConfigService) {}\n\n  async use(req: Request, res: Response, next: NextFunction) {\n    const authHeaders = req.headers.authorization;\n \n    if (authHeaders && (authHeaders as string).split(' ')[1]) {\n      const token = (authHeaders as string).split(' ')[1];\n      const secret = this.configService.get('JWT_SECRET');\n     // const secret = \"supersecret\";\n      console.log('token');\n      console.log(token);\n      console.log('secret');\n      console.log(secret);\n      \n      const decoded: any = jwt.verify(token, secret);\n      const user = await this.userService.findById(decoded.id);\n\n      console.log('decoded');\n      console.log(user);\n\n\n      if (!user) {\n        throw new HttpException('User not found.', HttpStatus.UNAUTHORIZED);\n      }\n\n      //req.user = user.user;\n      next();\n\n    } else {\n      throw new HttpException('Not authorized.', HttpStatus.UNAUTHORIZED);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseController.html":{"url":"classes/BaseController.html","title":"class - BaseController","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/base.controller.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                getUserIdFromToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/shared/base.controller.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            getUserIdFromToken\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserIdFromToken(authorization)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/base.controller.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    authorization\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import * as jwt from 'jsonwebtoken';\nimport {ConfigService} from '@nestjs/config'\nexport class BaseController {\n\n  constructor(private configService: ConfigService) {}\n\n  protected getUserIdFromToken(authorization) {\n    if (!authorization) return null;\n\n    const token = authorization.split(' ')[1];\n    const secret = this.configService.get('JWT_SECRET');\n    const decoded: any = jwt.verify(token, secret);\n    return decoded.id;\n  }\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Comment.html":{"url":"classes/Comment.html","title":"class - Comment","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Comment\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/article/comment.entity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                article\n                            \n                            \n                                body\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            article\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ArticleEntity\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne(undefined, undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/article/comment.entity.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            body\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/article/comment.entity.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/article/comment.entity.ts:8\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, PrimaryGeneratedColumn, Column, ManyToOne } from 'typeorm';\nimport { ArticleEntity } from './article.entity';\n\n@Entity()\nexport class Comment {\n\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column()\n  body: string;\n\n  @ManyToOne(type => ArticleEntity, article => article.comments)\n  article: ArticleEntity;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/CommentController.html":{"url":"controllers/CommentController.html","title":"controller - CommentController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  CommentController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/comment/comment.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                comment\n            \n\n\n\n\n\n\n    \n\n\n    \n        import { Controller } from '@nestjs/common';\n\n@Controller('comment')\nexport class CommentController {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CommentModule.html":{"url":"modules/CommentModule.html","title":"module - CommentModule","body":"\n                   \n\n\n\n\n    Modules\n    CommentModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/services/comment/comment.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Controllers\n                    \n                        \n                            CommentController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { CommentController } from './comment.controller';\n\n@Module({\n  controllers: [CommentController]\n})\nexport class CommentModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CommentService.html":{"url":"injectables/CommentService.html","title":"injectable - CommentService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CommentService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/comment/comment.service.ts\n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class CommentService {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CommentsRO.html":{"url":"interfaces/CommentsRO.html","title":"interface - CommentsRO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CommentsRO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/article/article.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        comments\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        comments\n                                    \n                                \n                                \n                                    \n                                        comments:         Comment[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Comment[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { UserData } from '../user/user.interface';\nimport { ArticleEntity } from './article.entity';\ninterface Comment {\n  body: string;\n}\n\ninterface ArticleData {\n  slug: string;\n  title: string;\n  description: string;\n  body?: string;\n  tagList?: string[];\n  createdAt?: Date\n  updatedAt?: Date\n  favorited?: boolean;\n  favoritesCount?: number;\n  author?: UserData;\n}\n\nexport interface CommentsRO {\n  comments: Comment[];\n}\n\nexport interface ArticleRO {\n  article: ArticleEntity;\n}\n\nexport interface ArticlesRO {\n  articles: ArticleEntity[];\n  articlesCount: number;\n}\n\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/CorporationController.html":{"url":"controllers/CorporationController.html","title":"controller - CorporationController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  CorporationController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/corporation/corporation.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                corporations\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(corporationData: CreateCorporationDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Create corporation'})@ApiResponse({status: 201, description: 'The corporation has been successfully created.'})@ApiResponse({status: 403, description: 'Forbidden.'})@Post()\n                \n            \n\n            \n                \n                    Defined in src/corporation/corporation.controller.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    corporationData\n                                    \n                                                CreateCorporationDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(params)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Delete corporation'})@ApiResponse({status: 201, description: 'The corporation has been successfully deleted.'})@ApiResponse({status: 403, description: 'Forbidden.'})@Delete(':slug')\n                \n            \n\n            \n                \n                    Defined in src/corporation/corporation.controller.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/corporation/corporation.controller.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update(params, corporationData: CreateCorporationDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Update corporation'})@ApiResponse({status: 201, description: 'The corporation has been successfully updated.'})@ApiResponse({status: 403, description: 'Forbidden.'})@Put(':slug')\n                \n            \n\n            \n                \n                    Defined in src/corporation/corporation.controller.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    corporationData\n                                    \n                                                CreateCorporationDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {Get, Post, Body, Put, Delete, Query, Param, Controller} from '@nestjs/common';\nimport { Request } from 'express';\nimport { CorporationService } from './corporation.service';\nimport { CreateCorporationDto } from './dto';\nimport { CorporationRO } from './corporation.interface';\nimport { CorporationEntity } from './corporation.entity';\n\n//import { CommentsRO } from './corporation.interface';\nimport { User } from '../user/user.decorator';\n\nimport {\n  ApiBearerAuth,\n  ApiResponse,\n  ApiOperation, \n  ApiTags,\n} from '@nestjs/swagger';\n\n@ApiBearerAuth()\n@ApiTags('corporations')\n@Controller('corporations')\nexport class CorporationController {\n\n  constructor(private readonly corporationService: CorporationService) {}\n\n\n // @Get('corporation')\n // async findMe(@Corporation('email') email: string): Promise {\n //   return await this.corporationService.findOne({id; any});\n // }\n\n\n  @Get()\n  async findAll(): Promise {\n    return await this.corporationService.findAll();\n  }\n\n  // @Get(':slug')\n  // async findOne(@Param('slug') slug): Promise {\n  //   return await this.corporationService.findOne({slug});\n  // }\n\n  @ApiOperation({ summary: 'Create corporation' })\n  @ApiResponse({ status: 201, description: 'The corporation has been successfully created.'})\n  @ApiResponse({ status: 403, description: 'Forbidden.' })\n  @Post()\n  async create(@Body('corporation') corporationData: CreateCorporationDto) {\n    return this.corporationService.create(corporationData);\n  }\n\n  @ApiOperation({ summary: 'Update corporation' })\n  @ApiResponse({ status: 201, description: 'The corporation has been successfully updated.'})\n  @ApiResponse({ status: 403, description: 'Forbidden.' })\n  @Put(':slug')\n  async update(@Param() params, @Body('corporation') corporationData: CreateCorporationDto) {\n    return this.corporationService.update(params.slug, corporationData);\n  }\n\n  @ApiOperation({ summary: 'Delete corporation' })\n  @ApiResponse({ status: 201, description: 'The corporation has been successfully deleted.'})\n  @ApiResponse({ status: 403, description: 'Forbidden.' })\n  @Delete(':slug')\n  async delete(@Param() params) {\n    return this.corporationService.delete(params.slug);\n  }\n\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CorporationData.html":{"url":"interfaces/CorporationData.html","title":"interface - CorporationData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CorporationData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/corporation/corporation.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        active\n                                \n                                \n                                            Optional\n                                        costcenter\n                                \n                                \n                                            Optional\n                                        createdat\n                                \n                                \n                                            Optional\n                                        createdby\n                                \n                                \n                                        description\n                                \n                                \n                                        name\n                                \n                                \n                                        slug\n                                \n                                \n                                            Optional\n                                        updatedat\n                                \n                                \n                                            Optional\n                                        updatedby\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        active\n                                    \n                                \n                                \n                                    \n                                        active:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        costcenter\n                                    \n                                \n                                \n                                    \n                                        costcenter:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createdat\n                                    \n                                \n                                \n                                    \n                                        createdat:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createdby\n                                    \n                                \n                                \n                                    \n                                        createdby:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        slug\n                                    \n                                \n                                \n                                    \n                                        slug:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedat\n                                    \n                                \n                                \n                                    \n                                        updatedat:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedby\n                                    \n                                \n                                \n                                    \n                                        updatedby:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface CorporationData {\n\n    slug: string;\n    name: string;\n    costcenter?: number;\n    description: string;\n    active?: boolean;\n    createdat?: Date;\n    createdby?: number;\n    updatedat?: Date;\n    updatedby?: number;\n\n  }\n  \n  export interface CorporationRO {\n    corporation: CorporationData;\n  }\n\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CorporationEntity.html":{"url":"classes/CorporationEntity.html","title":"class - CorporationEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CorporationEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/corporation/corporation.entity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                active\n                            \n                            \n                                costcenter\n                            \n                            \n                                createdby\n                            \n                            \n                                createddate\n                            \n                            \n                                description\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                sites\n                            \n                            \n                                slug\n                            \n                            \n                                updatedby\n                            \n                            \n                                updateddate\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            active\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({default: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/corporation/corporation.entity.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            costcenter\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/corporation/corporation.entity.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdby\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/corporation/corporation.entity.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createddate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/corporation/corporation.entity.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/corporation/corporation.entity.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/corporation/corporation.entity.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column('nvarchar', {length: 100})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/corporation/corporation.entity.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sites\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SiteEntity[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @OneToMany(undefined, undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/corporation/corporation.entity.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            slug\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/corporation/corporation.entity.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedby\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/corporation/corporation.entity.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateddate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/corporation/corporation.entity.ts:32\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, PrimaryGeneratedColumn, Column, OneToOne, ManyToOne, OneToMany, JoinColumn, AfterUpdate, BeforeUpdate } from 'typeorm';\nimport { SiteEntity } from '../site/site.entity';\n\n@Entity('corporation')\nexport class CorporationEntity {\n\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column()\n  slug: string;\n\n  @Column(\"nvarchar\", { length: 100 })\n  name: string;\n\n  @Column()\n  costcenter: number;\n\n  @Column({nullable: true})\n  description: string;\n\n  @Column({default: false})\n  active: boolean;\n\n  @Column()\n  createddate: Date;\n\n  @Column()\n  createdby: number;\n\n  @Column()\n  updateddate: Date;\n\n  @Column()\n  updatedby: number;\n\n  @OneToMany(type => SiteEntity, site => site.corporation)\n  sites: SiteEntity[];\n\n}\n\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CorporationModule.html":{"url":"modules/CorporationModule.html","title":"module - CorporationModule","body":"\n                   \n\n\n\n\n    Modules\n    CorporationModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CorporationModule\n\n\n\ncluster_CorporationModule_providers\n\n\n\n\nCorporationService\n\nCorporationService\n\n\n\nCorporationModule\n\nCorporationModule\n\nCorporationModule -->\n\nCorporationService->CorporationModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/corporation/corporation.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CorporationService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            CorporationController\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            configure\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    configure(consumer: MiddlewareConsumer)\n                \n            \n\n\n            \n                \n                    Defined in src/corporation/corporation.module.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    consumer\n                                    \n                                            MiddlewareConsumer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import {MiddlewareConsumer, Module, NestModule, RequestMethod} from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\n\nimport { CorporationService } from './corporation.service';\nimport { CorporationEntity } from './corporation.entity';\nimport { CorporationController } from './corporation.controller';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([CorporationEntity])],\n  providers: [CorporationService],\n  controllers: [\n    CorporationController\n  ],\n  exports: []\n})\nexport class CorporationModule implements NestModule {\n  public configure(consumer: MiddlewareConsumer) {\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CorporationRO.html":{"url":"interfaces/CorporationRO.html","title":"interface - CorporationRO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CorporationRO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/corporation/corporation.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        corporation\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        corporation\n                                    \n                                \n                                \n                                    \n                                        corporation:         CorporationData\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CorporationData\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface CorporationData {\n\n    slug: string;\n    name: string;\n    costcenter?: number;\n    description: string;\n    active?: boolean;\n    createdat?: Date;\n    createdby?: number;\n    updatedat?: Date;\n    updatedby?: number;\n\n  }\n  \n  export interface CorporationRO {\n    corporation: CorporationData;\n  }\n\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CorporationService.html":{"url":"injectables/CorporationService.html","title":"injectable - CorporationService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CorporationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/corporation/corporation.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                buildCorporationRO\n                            \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findById\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(corporationRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/corporation/corporation.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        corporationRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            buildCorporationRO\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    buildCorporationRO(corporation: CorporationEntity)\n                \n            \n\n\n            \n                \n                    Defined in src/corporation/corporation.service.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    corporation\n                                    \n                                                CorporationEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         { corporation: { id: any; slug: any; name: any; costcenter: any; description: any; }; }\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(dto: CreateCorporationDto)\n                \n            \n\n\n            \n                \n                    Defined in src/corporation/corporation.service.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                CreateCorporationDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/corporation/corporation.service.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n\n            \n                \n                    Defined in src/corporation/corporation.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findById\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findById(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/corporation/corporation.service.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(undefined: CreateCorporationDto)\n                \n            \n\n\n            \n                \n                    Defined in src/corporation/corporation.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                CreateCorporationDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: number, dto: CreateCorporationDto)\n                \n            \n\n\n            \n                \n                    Defined in src/corporation/corporation.service.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dto\n                                    \n                                                CreateCorporationDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository, getRepository, DeleteResult } from 'typeorm';\nimport { HttpException } from '@nestjs/common/exceptions/http.exception';\nimport { HttpStatus } from '@nestjs/common';\nimport { validate } from 'class-validator';\n\nimport { CorporationEntity } from './corporation.entity';\nimport { CorporationRO } from './corporation.interface';\nimport { CreateCorporationDto } from './dto';\n\n@Injectable()\nexport class CorporationService {\n  constructor(\n    @InjectRepository(CorporationEntity)\n    private readonly corporationRepository: Repository, \n  ) {}\n\n  \n  async findAll(): Promise {\n    return await this.corporationRepository.find();\n  }\n\n  async findOne({id}: CreateCorporationDto): Promise {\n    const corporation = await this.corporationRepository.findOne({id});\n    if (!corporation) {\n      return null;\n    }\n    return null;\n  }\n\n  async create(dto: CreateCorporationDto): Promise {\n\n    // check uniqueness of username/email\n    const {name, costcenter, description} = dto;\n\n    // create new corporation\n    let newCorporation = new CorporationEntity();\n    newCorporation.name = name;\n    newCorporation.costcenter = costcenter;\n    newCorporation.description = description;\n\n    const errors = await validate(newCorporation);\n    if (errors.length > 0) {\n      const _errors = {corporation: 'Userinput is not valid.'};\n      throw new HttpException({message: 'Input data validation failed', _errors}, HttpStatus.BAD_REQUEST);\n\n    } else {\n      const savedCorporation = await this.corporationRepository.save(newCorporation);\n      return this.buildCorporationRO(savedCorporation);\n    }\n  }\n\n  async update(id: number, dto: CreateCorporationDto): Promise {\n    let toUpdate = await this.corporationRepository.findOne(id);\n\n    let updated = Object.assign(toUpdate, dto);\n    return await this.corporationRepository.save(updated);\n  }\n\n  async delete(id: number): Promise {\n    return await this.corporationRepository.delete({ id: id});\n  }\n\n  async findById(id: number): Promise{\n    const corporation = await this.corporationRepository.findOne(id);\n\n    if (!corporation) {\n      const errors = {Corporation: ' not found'};\n      throw new HttpException({errors}, 401);\n    }\n\n    return this.buildCorporationRO(corporation);\n  }\n\n\n  private buildCorporationRO(corporation: CorporationEntity) {\n    const CorporationRO = {\n      id: corporation.id,\n      slug: corporation.slug,\n      name: corporation.name,\n      costcenter: corporation.costcenter,\n      description: corporation.description\n     \n    };\n\n    return {corporation: CorporationRO};\n  }\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateArticleDto.html":{"url":"classes/CreateArticleDto.html","title":"class - CreateArticleDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateArticleDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/article/dto/create-article.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                body\n                            \n                            \n                                    Readonly\n                                description\n                            \n                            \n                                    Readonly\n                                tagList\n                            \n                            \n                                    Readonly\n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            body\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/article/dto/create-article.dto.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/article/dto/create-article.dto.ts:3\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            tagList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/article/dto/create-article.dto.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/article/dto/create-article.dto.ts:2\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateArticleDto {\n  readonly title: string;\n  readonly description: string;\n  readonly body: string;\n  readonly tagList: string[];\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateCommentDto.html":{"url":"classes/CreateCommentDto.html","title":"class - CreateCommentDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateCommentDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/article/dto/create-comment.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                body\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            body\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/article/dto/create-comment.ts:2\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateCommentDto {\n  readonly body: string;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateCorporationDto.html":{"url":"classes/CreateCorporationDto.html","title":"class - CreateCorporationDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateCorporationDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/corporation/dto/create-corporation.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                costcenter\n                            \n                            \n                                    Readonly\n                                description\n                            \n                            \n                                    Readonly\n                                id\n                            \n                            \n                                    Readonly\n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            costcenter\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/corporation/dto/create-corporation.dto.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/corporation/dto/create-corporation.dto.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/corporation/dto/create-corporation.dto.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/corporation/dto/create-corporation.dto.ts:8\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty } from 'class-validator';\n\nexport class CreateCorporationDto {\n\n  readonly id: number;\n\n  @IsNotEmpty()\n  readonly name: string;\n\n  readonly costcenter: number;\n  readonly description: string;\n\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateErrorLogDto.html":{"url":"classes/CreateErrorLogDto.html","title":"class - CreateErrorLogDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateErrorLogDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/errorlog/dto/create-errorlog.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                description\n                            \n                            \n                                    Readonly\n                                errorcode\n                            \n                            \n                                    Readonly\n                                errorcodehtml\n                            \n                            \n                                    Readonly\n                                siteid\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/errorlog/dto/create-errorlog.dto.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            errorcode\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNumber()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/errorlog/dto/create-errorlog.dto.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            errorcodehtml\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/errorlog/dto/create-errorlog.dto.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            siteid\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNumber()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/errorlog/dto/create-errorlog.dto.ts:6\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsNumber, IsNumberOptions } from 'class-validator';\n\nexport class CreateErrorLogDto {\n\n  @IsNumber()\n  readonly siteid: number;\n\n  @IsNotEmpty()\n  readonly description: string;\n\n  @IsNumber()\n  readonly errorcode: number;\n\n  readonly errorcodehtml: number;\n\n\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateGroupDto.html":{"url":"classes/CreateGroupDto.html","title":"class - CreateGroupDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateGroupDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/group/dto/create-group.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                id\n                            \n                            \n                                    Readonly\n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/group/dto/create-group.dto.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()@ApiProperty({type: String, description: 'name'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/group/dto/create-group.dto.ts:12\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty } from 'class-validator';\nimport {ApiProperty} from '@nestjs/swagger';\n\n\nexport class CreateGroupDto {\n\n  readonly id: number;\n\n\n  @IsNotEmpty()\n  @ApiProperty({type: String, description: 'name'})\n  readonly name: string;\n\n\n}\n\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateListDto.html":{"url":"classes/CreateListDto.html","title":"class - CreateListDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateListDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/list/dto/create-list.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                description\n                            \n                            \n                                    Readonly\n                                id\n                            \n                            \n                                    Readonly\n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/list/dto/create-list.dto.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/list/dto/create-list.dto.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/list/dto/create-list.dto.ts:8\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty } from 'class-validator';\n\nexport class CreateListDto {\n\n  readonly id: number;\n\n  @IsNotEmpty()\n  readonly name: string;\n\n  @IsNotEmpty()\n  readonly description: string;\n\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateListEntryDto.html":{"url":"classes/CreateListEntryDto.html","title":"class - CreateListEntryDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateListEntryDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/list/dto/create-listentry.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                desription\n                            \n                            \n                                    Readonly\n                                id\n                            \n                            \n                                    Readonly\n                                name\n                            \n                            \n                                    Readonly\n                                value\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            desription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/list/dto/create-listentry.dto.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/list/dto/create-listentry.dto.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/list/dto/create-listentry.dto.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            value\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/list/dto/create-listentry.dto.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty } from 'class-validator';\n\nexport class CreateListEntryDto {\n  \n  readonly id: number;\n\n  @IsNotEmpty()\n  readonly name: string;\n\n  @IsNotEmpty()\n  readonly desription: string;\n\n  @IsNotEmpty()\n  readonly value: string;\n\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateMenuDto.html":{"url":"classes/CreateMenuDto.html","title":"class - CreateMenuDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateMenuDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/menu/dto/create-menu.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                abbreviation\n                            \n                            \n                                description\n                            \n                            \n                                    Readonly\n                                id\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            abbreviation\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/menu/dto/create-menu.dto.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/menu/dto/create-menu.dto.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/menu/dto/create-menu.dto.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/menu/dto/create-menu.dto.ts:8\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty } from 'class-validator';\n\nexport class CreateMenuDto {\n\n  readonly id: number;\n\n  @IsNotEmpty()\n  name: string;\n\n  @IsNotEmpty()\n  description: string;\n\n  @IsNotEmpty()\n  abbreviation: string;\n\n}\n\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateMenuEntryDto.html":{"url":"classes/CreateMenuEntryDto.html","title":"class - CreateMenuEntryDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateMenuEntryDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/menu/dto/create-menuentry.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                appid\n                            \n                            \n                                    Readonly\n                                caption\n                            \n                            \n                                    Readonly\n                                id\n                            \n                            \n                                    Readonly\n                                sortid\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            appid\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/menu/dto/create-menuentry.dto.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            caption\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/menu/dto/create-menuentry.dto.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/menu/dto/create-menuentry.dto.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            sortid\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/menu/dto/create-menuentry.dto.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty } from 'class-validator';\n\nexport class CreateMenuEntryDto {\n\n  readonly id: number;\n\n  @IsNotEmpty()\n  appid: string;\n\n  @IsNotEmpty()\n  readonly caption: string;\n\n  @IsNotEmpty()\n  readonly sortid: string;\n\n\n}\n\n\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateMenuEntryPointDto.html":{"url":"classes/CreateMenuEntryPointDto.html","title":"class - CreateMenuEntryPointDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateMenuEntryPointDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/menu/dto/create-menuentrypoint.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                appid\n                            \n                            \n                                    Readonly\n                                groupid\n                            \n                            \n                                    Readonly\n                                id\n                            \n                            \n                                    Readonly\n                                menuentrypoint\n                            \n                            \n                                    Readonly\n                                sortid\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            appid\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/menu/dto/create-menuentrypoint.dto.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            groupid\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/menu/dto/create-menuentrypoint.dto.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/menu/dto/create-menuentrypoint.dto.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            menuentrypoint\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/menu/dto/create-menuentrypoint.dto.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            sortid\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/menu/dto/create-menuentrypoint.dto.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty } from 'class-validator';\n\nexport class CreateMenuEntryPointDto {\n\n  readonly id: number;\n\n  @IsNotEmpty()\n  readonly groupid: number;\n\n  @IsNotEmpty()\n  readonly appid: number;\n\n  @IsNotEmpty()\n  readonly menuentrypoint: string;\n\n  @IsNotEmpty()\n  readonly sortid: string;\n\n}\n\n\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateRoleAppDto.html":{"url":"classes/CreateRoleAppDto.html","title":"class - CreateRoleAppDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateRoleAppDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/role/dto/create-roleapp.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                abbreviation\n                            \n                            \n                                    Readonly\n                                description\n                            \n                            \n                                    Readonly\n                                id\n                            \n                            \n                                    Readonly\n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            abbreviation\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/role/dto/create-roleapp.dto.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/role/dto/create-roleapp.dto.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/role/dto/create-roleapp.dto.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/role/dto/create-roleapp.dto.ts:8\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsBoolean } from 'class-validator';\n\nexport class CreateRoleAppDto {\n\n  readonly id: number;\n\n  @IsNotEmpty()\n  readonly name: string;\n\n  @IsNotEmpty()\n  readonly abbreviation: string;\n\n  @IsNotEmpty()\n  readonly description: string;\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateRoleDto.html":{"url":"classes/CreateRoleDto.html","title":"class - CreateRoleDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateRoleDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/role/dto/create-role.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                description\n                            \n                            \n                                    Readonly\n                                id\n                            \n                            \n                                    Readonly\n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/role/dto/create-role.dto.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/role/dto/create-role.dto.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/role/dto/create-role.dto.ts:8\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty } from 'class-validator';\n\nexport class CreateRoleDto {\n\n  readonly id: number;\n\n  @IsNotEmpty()\n  readonly name: string;\n\n  @IsNotEmpty()\n  readonly description: string;\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateSiteDto.html":{"url":"classes/CreateSiteDto.html","title":"class - CreateSiteDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateSiteDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/site/dto/create-site.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                costcenter\n                            \n                            \n                                    Readonly\n                                description\n                            \n                            \n                                    Readonly\n                                id\n                            \n                            \n                                    Readonly\n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            costcenter\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/site/dto/create-site.dto.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/site/dto/create-site.dto.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/site/dto/create-site.dto.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/site/dto/create-site.dto.ts:8\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty } from 'class-validator';\n\nexport class CreateSiteDto {\n\n  readonly id: number;\n\n  @IsNotEmpty()\n  readonly name: string;\n\n  @IsNotEmpty()\n  costcenter: number;\n\n  @IsNotEmpty()\n  readonly description: string;\n\n}\n\n//costcenter: number;\n// must > 0\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dto/create-user.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                email\n                            \n                            \n                                    Readonly\n                                password\n                            \n                            \n                                    Readonly\n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/dto/create-user.dto.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/dto/create-user.dto.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            username\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/dto/create-user.dto.ts:6\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty } from 'class-validator';\n\nexport class CreateUserDto {\n\n  @IsNotEmpty()\n  readonly username: string;\n\n  @IsNotEmpty()\n  readonly email: string;\n\n  @IsNotEmpty()\n  readonly password: string;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DatabaseConfig.html":{"url":"injectables/DatabaseConfig.html","title":"injectable - DatabaseConfig","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DatabaseConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/config/database.config.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createTypeOrmOptions\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/config/database.config.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createTypeOrmOptions\n                        \n                        \n                    \n                \n            \n            \n                \ncreateTypeOrmOptions()\n                \n            \n\n\n            \n                \n                    Defined in src/config/database.config.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { TypeOrmOptionsFactory } from '@nestjs/typeorm';\nimport { ConfigService } from '@nestjs/config';\n\n@Injectable()\nexport class DatabaseConfig implements TypeOrmOptionsFactory {\n  constructor(private configService: ConfigService) {}\n  createTypeOrmOptions() {\n   return this.configService.get('database');   \n  }\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ErrorLogEntity.html":{"url":"classes/ErrorLogEntity.html","title":"class - ErrorLogEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ErrorLogEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/errorlog/errorlog.entity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createdby\n                            \n                            \n                                createddate\n                            \n                            \n                                description\n                            \n                            \n                                errorcode\n                            \n                            \n                                errorcodehtml\n                            \n                            \n                                id\n                            \n                            \n                                siteid\n                            \n                            \n                                updatedby\n                            \n                            \n                                updateddate\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdby\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/errorlog/errorlog.entity.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createddate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/errorlog/errorlog.entity.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/errorlog/errorlog.entity.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            errorcode\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column('nvarchar', {length: 10})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/errorlog/errorlog.entity.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            errorcodehtml\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column('nvarchar', {length: 10, nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/errorlog/errorlog.entity.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/errorlog/errorlog.entity.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            siteid\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/errorlog/errorlog.entity.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedby\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/errorlog/errorlog.entity.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateddate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/errorlog/errorlog.entity.ts:28\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, PrimaryGeneratedColumn, Column } from 'typeorm';\n\n@Entity('errorlog')\nexport class ErrorLogEntity {\n\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column()\n  siteid: number;\n\n  @Column({nullable: true})\n  description: string;\n\n  @Column(\"nvarchar\", { length: 10 })\n  errorcode: string;\n\n  @Column(\"nvarchar\",{length: 10 , nullable: true})\n  errorcodehtml: string;\n\n  @Column()\n  createddate: Date;\n\n  @Column()\n  createdby: number\n\n  @Column()\n  updateddate: Date;\n\n  @Column()\n  updatedby: number;\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ErrorlogController.html":{"url":"controllers/ErrorlogController.html","title":"controller - ErrorlogController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ErrorlogController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/errorlog/errorlog.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                errorlog\n            \n\n\n\n\n\n\n    \n\n\n    \n        import { Controller } from '@nestjs/common';\n\n@Controller('errorlog')\nexport class ErrorlogController {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ErrorlogModule.html":{"url":"modules/ErrorlogModule.html","title":"module - ErrorlogModule","body":"\n                   \n\n\n\n\n    Modules\n    ErrorlogModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ErrorlogModule\n\n\n\ncluster_ErrorlogModule_providers\n\n\n\n\nErrorlogService\n\nErrorlogService\n\n\n\nErrorlogModule\n\nErrorlogModule\n\nErrorlogModule -->\n\nErrorlogService->ErrorlogModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/errorlog/errorlog.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ErrorlogService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ErrorlogService } from './errorlog.service';\n\n@Module({\n  providers: [ErrorlogService]\n})\nexport class ErrorlogModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ErrorlogService.html":{"url":"injectables/ErrorlogService.html","title":"injectable - ErrorlogService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ErrorlogService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/errorlog/errorlog.service.ts\n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class ErrorlogService {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FollowsEntity.html":{"url":"classes/FollowsEntity.html","title":"class - FollowsEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FollowsEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/profile/follows.entity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                followerId\n                            \n                            \n                                followingId\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            followerId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/profile/follows.entity.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            followingId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/profile/follows.entity.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/profile/follows.entity.ts:7\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, PrimaryGeneratedColumn, Column } from \"typeorm\";\n\n@Entity('follows')\nexport class FollowsEntity {\n\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column()\n  followerId: number;\n\n  @Column()\n  followingId: number;\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/GroupController.html":{"url":"controllers/GroupController.html","title":"controller - GroupController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  GroupController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/group/group.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                group\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findMList\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(groupData: CreateGroupDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('group')@ApiBody({type: CreateGroupDto})\n                \n            \n\n            \n                \n                    Defined in src/group/group.controller.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    groupData\n                                    \n                                                CreateGroupDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(params)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('group/:slug')\n                \n            \n\n            \n                \n                    Defined in src/group/group.controller.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiBody({type: CreateGroupDto})\n                \n            \n\n            \n                \n                    Defined in src/group/group.controller.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findMList\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findMList(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('group')\n                \n            \n\n            \n                \n                    Defined in src/group/group.controller.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: number, groupData: CreateGroupDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put('group')\n                \n            \n\n            \n                \n                    Defined in src/group/group.controller.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    groupData\n                                    \n                                                CreateGroupDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Get, Post, Body, Put, Delete, Param, Controller, UsePipes } from '@nestjs/common';\nimport { Request } from 'express';\nimport { GroupService } from './group.service';\nimport { GroupRO } from './group.interface';\nimport { CreateGroupDto } from './dto';\nimport { GroupEntity } from './group.entity';\nimport { HttpException } from '@nestjs/common/exceptions/http.exception';\n\n//import { User } from './user.decorator';\nimport { ValidationPipe } from '../shared/pipes/validation.pipe';\n\n\nimport {\n  ApiBearerAuth,\n  ApiResponse,\n  ApiOperation, \n  ApiTags,\n  ApiBody,\n} from '@nestjs/swagger';\n\n@ApiBearerAuth()\n@ApiTags('groups')\n@Controller('group')\nexport class GroupController {\n  constructor(private readonly groupService: GroupService) {}\n\n\n  @Get()\n  @ApiBody({type: CreateGroupDto})\n  async findAll(): Promise {\n    return await this.groupService.findAll();\n  }\n\n  @Get('group')\n  async findMList(@Param('id') id: number): Promise {\n    return await this.groupService.findById(id);\n  }\n\n  @Put('group')\n  async update(@Param('id') id: number, @Body('group') groupData: CreateGroupDto) {\n    return await this.groupService.update(id, groupData);\n  }\n\n  //@UsePipes(new ValidationPipe())\n  @Post('group')\n  @ApiBody({type: CreateGroupDto})\n  async create(@Body('group') groupData: CreateGroupDto) {\n    return this.groupService.create(groupData);\n  }\n\n  @Delete('group/:slug')\n  async delete(@Param() params) {\n    return await this.groupService.delete(params.slug);\n  }\n\n \n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GroupData.html":{"url":"interfaces/GroupData.html","title":"interface - GroupData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  GroupData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/group/group.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        active\n                                \n                                \n                                            Optional\n                                        createdat\n                                \n                                \n                                            Optional\n                                        createdby\n                                \n                                \n                                        description\n                                \n                                \n                                        name\n                                \n                                \n                                            Optional\n                                        updatedat\n                                \n                                \n                                            Optional\n                                        updatedby\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        active\n                                    \n                                \n                                \n                                    \n                                        active:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createdat\n                                    \n                                \n                                \n                                    \n                                        createdat:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createdby\n                                    \n                                \n                                \n                                    \n                                        createdby:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedat\n                                    \n                                \n                                \n                                    \n                                        updatedat:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedby\n                                    \n                                \n                                \n                                    \n                                        updatedby:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface GroupData {\n\n    name: string;\n    description: string;\n    active?: boolean;\n    createdat?: Date;\n    createdby?: number;\n    updatedat?: Date;\n    updatedby?: number;\n\n  }\n  \n  export interface GroupRO {\n    group: GroupData;\n  }\n\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GroupEntity.html":{"url":"classes/GroupEntity.html","title":"class - GroupEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GroupEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/group/group.entity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                active\n                            \n                            \n                                createdby\n                            \n                            \n                                createddate\n                            \n                            \n                                description\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                role\n                            \n                            \n                                updatedby\n                            \n                            \n                                updateddate\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            active\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/group/group.entity.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdby\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/group/group.entity.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createddate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/group/group.entity.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/group/group.entity.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/group/group.entity.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column('nvarchar', {length: 100})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/group/group.entity.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            role\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         RoleEntity\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne(undefined, undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/group/group.entity.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedby\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/group/group.entity.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateddate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/group/group.entity.ts:26\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, PrimaryGeneratedColumn, Column, ManyToOne } from 'typeorm';\nimport { RoleEntity } from '../role/role.entity';\n\n@Entity('group')\nexport class GroupEntity {\n\n  @PrimaryGeneratedColumn()\n  id: number;\n  \n  @Column(\"nvarchar\", { length: 100 })\n  name: string;\n\n  @Column({nullable: true})\n  description: string;\n\n  @Column()\n  active: boolean = false;\n\n  @Column()\n  createddate: Date;\n\n  @Column()\n  createdby: number\n\n  @Column()\n  updateddate: Date;\n\n  @Column()\n  updatedby: number;\n\n  @ManyToOne(type => RoleEntity, role => role.groups)\n  role: RoleEntity;\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/GroupModule.html":{"url":"modules/GroupModule.html","title":"module - GroupModule","body":"\n                   \n\n\n\n\n    Modules\n    GroupModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_GroupModule\n\n\n\ncluster_GroupModule_providers\n\n\n\n\nGroupService\n\nGroupService\n\n\n\nGroupModule\n\nGroupModule\n\nGroupModule -->\n\nGroupService->GroupModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/group/group.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            GroupService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            GroupController\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            configure\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    configure(consumer: MiddlewareConsumer)\n                \n            \n\n\n            \n                \n                    Defined in src/group/group.module.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    consumer\n                                    \n                                            MiddlewareConsumer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import {MiddlewareConsumer, Module, NestModule, RequestMethod} from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\n\nimport { GroupService } from './group.service';\nimport { GroupEntity } from './group.entity';\nimport { GroupController } from './group.controller';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([GroupEntity])],\n  providers: [GroupService],\n  controllers: [\n    GroupController\n  ],\n  exports: []\n})\nexport class GroupModule implements NestModule {\n  public configure(consumer: MiddlewareConsumer) {\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GroupRO.html":{"url":"interfaces/GroupRO.html","title":"interface - GroupRO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  GroupRO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/group/group.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        group\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        group\n                                    \n                                \n                                \n                                    \n                                        group:         GroupData\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         GroupData\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface GroupData {\n\n    name: string;\n    description: string;\n    active?: boolean;\n    createdat?: Date;\n    createdby?: number;\n    updatedat?: Date;\n    updatedby?: number;\n\n  }\n  \n  export interface GroupRO {\n    group: GroupData;\n  }\n\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GroupService.html":{"url":"injectables/GroupService.html","title":"injectable - GroupService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  GroupService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/group/group.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                buildGroupRO\n                            \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findById\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(groupRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/group/group.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        groupRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            buildGroupRO\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    buildGroupRO(group: GroupEntity)\n                \n            \n\n\n            \n                \n                    Defined in src/group/group.service.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    group\n                                    \n                                                GroupEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     { group: { id: any; name: any; description: any; }; }\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(dto: CreateGroupDto)\n                \n            \n\n\n            \n                \n                    Defined in src/group/group.service.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                CreateGroupDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/group/group.service.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n\n            \n                \n                    Defined in src/group/group.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findById\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findById(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/group/group.service.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(undefined: CreateGroupDto)\n                \n            \n\n\n            \n                \n                    Defined in src/group/group.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                CreateGroupDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: number, dto: CreateGroupDto)\n                \n            \n\n\n            \n                \n                    Defined in src/group/group.service.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dto\n                                    \n                                                CreateGroupDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository, getRepository, DeleteResult } from 'typeorm';\nimport { HttpException } from '@nestjs/common/exceptions/http.exception';\nimport { HttpStatus } from '@nestjs/common';\nimport { validate } from 'class-validator';\n\nimport { GroupEntity } from './group.entity';\nimport { GroupRO } from './group.interface';\nimport { CreateGroupDto } from './dto';\n\n@Injectable()\nexport class GroupService {\n  constructor(\n    @InjectRepository(GroupEntity)\n    private readonly groupRepository: Repository,\n  ) {}\n\n  async findAll(): Promise {\n    return await this.groupRepository.find();\n  }\n\n  async findOne({id}: CreateGroupDto): Promise {\n    const group = await this.groupRepository.findOne({id});\n    if (!group) {\n      return null;\n    }\n    return null;\n  }\n\n  async create(dto: CreateGroupDto): Promise {\n\n    // check uniqueness of username/email\n    const {name} = dto;\n\n    // create new group\n    let newGroup = new GroupEntity();\n    newGroup.name = name;\n   \n    const errors = await validate(newGroup);\n    if (errors.length > 0) {\n      const _errors = {group: 'Userinput is not valid.'};\n      throw new HttpException({message: 'Input data validation failed', _errors}, HttpStatus.BAD_REQUEST);\n\n    } else {\n      const savedGroup = await this.groupRepository.save(newGroup);\n      return this.buildGroupRO(savedGroup);\n    }\n  }\n\n  async update(id: number, dto: CreateGroupDto): Promise {\n    let toUpdate = await this.groupRepository.findOne(id);\n\n    let updated = Object.assign(toUpdate, dto);\n    return await this.groupRepository.save(updated);\n  }\n\n  async delete(id: number): Promise {\n    return await this.groupRepository.delete({ id: id});\n  }\n\n  async findById(id: number): Promise{\n    const group = await this.groupRepository.findOne(id);\n\n    if (!group) {\n      const errors = {Group: ' not found'};\n      throw new HttpException({errors}, 401);\n    }\n\n    return this.buildGroupRO(group);\n  }\n\n\n  private buildGroupRO(group: GroupEntity) {\n    const GroupRO = {\n      id: group.id,\n      name: group.name,\n      description: group.description\n     \n    };\n\n    return {group: GroupRO};\n  }\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ListController.html":{"url":"controllers/ListController.html","title":"controller - ListController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ListController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/list/list.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                lists\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findMList\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(listData: CreateListDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('list')\n                \n            \n\n            \n                \n                    Defined in src/list/list.controller.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    listData\n                                    \n                                                CreateListDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(params)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('list/:slug')\n                \n            \n\n            \n                \n                    Defined in src/list/list.controller.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/list/list.controller.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findMList\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findMList(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('list')\n                \n            \n\n            \n                \n                    Defined in src/list/list.controller.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: number, listData: CreateListDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put('list')\n                \n            \n\n            \n                \n                    Defined in src/list/list.controller.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    listData\n                                    \n                                                CreateListDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Get, Post, Body, Put, Delete, Param, Controller, UsePipes } from '@nestjs/common';\nimport { Request } from 'express';\nimport { ListService } from './list.service';\nimport { ListRO } from './list.interface';\nimport { ListEntryRO } from './list.interface';\nimport { CreateListDto } from './dto';\nimport { ListEntity } from './list.entity';\nimport { HttpException } from '@nestjs/common/exceptions/http.exception';\n\n//import { User } from './user.decorator';\nimport { ValidationPipe } from '../shared/pipes/validation.pipe';\n\n\nimport {\n  ApiBearerAuth,\n  ApiResponse,\n  ApiOperation, \n  ApiTags,\n} from '@nestjs/swagger';\n\n@ApiBearerAuth()\n@ApiTags('lists')\n@Controller('lists')\n\nexport class ListController {\n  constructor(private readonly listService: ListService) {}\n\n  @Get()\n  async findAll(): Promise {\n    return await this.listService.findAll();\n  }\n\n  @Get('list')\n  async findMList(@Param('id') id: number): Promise {\n    return await this.listService.findById(id);\n  }\n\n  @Put('list')\n  async update(@Param('id') id: number, @Body('list') listData: CreateListDto) {\n    return await this.listService.update(id, listData);\n  }\n\n  //@UsePipes(new ValidationPipe())\n  @Post('list')\n  async create(@Body('list') listData: CreateListDto) {\n    return this.listService.create(listData);\n  }\n\n  @Delete('list/:slug')\n  async delete(@Param() params) {\n    return await this.listService.delete(params.slug);\n  }\n\n  // @Get(':slug/listentries')\n  // async findListEntries(@Param('slug') slug): Promise {\n  //   return await this.listService.findListEntry(slug);\n  // }\n\n \n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ListData.html":{"url":"interfaces/ListData.html","title":"interface - ListData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ListData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/list/list.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        active\n                                \n                                \n                                            Optional\n                                        createdat\n                                \n                                \n                                            Optional\n                                        createdby\n                                \n                                \n                                        description\n                                \n                                \n                                        name\n                                \n                                \n                                            Optional\n                                        updatedat\n                                \n                                \n                                            Optional\n                                        updatedby\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        active\n                                    \n                                \n                                \n                                    \n                                        active:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createdat\n                                    \n                                \n                                \n                                    \n                                        createdat:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createdby\n                                    \n                                \n                                \n                                    \n                                        createdby:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedat\n                                    \n                                \n                                \n                                    \n                                        updatedat:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedby\n                                    \n                                \n                                \n                                    \n                                        updatedby:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { UserData } from '../user/user.interface';\nimport { ListEntity } from './list.entity';\ninterface ListEntry {\n  body: string;\n}\n\n\nexport interface ListData {\n\n    name: string;\n    description: string;\n    active?: boolean;\n    createdat?: Date;\n    createdby?: number;\n    updatedat?: Date;\n    updatedby?: number;\n\n  }\n  \n  export interface ListRO {\n    list: ListData;\n  }\n\n  export interface ListEntryRO {\n    listentries: ListEntry[];\n  }\n\n  \n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ListEntity.html":{"url":"classes/ListEntity.html","title":"class - ListEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ListEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/list/list.entity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                active\n                            \n                            \n                                createdby\n                            \n                            \n                                createddate\n                            \n                            \n                                description\n                            \n                            \n                                id\n                            \n                            \n                                listentries\n                            \n                            \n                                name\n                            \n                            \n                                updatedby\n                            \n                            \n                                updateddate\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            active\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({default: 1})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/list/list.entity.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdby\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/list/list.entity.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createddate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/list/list.entity.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/list/list.entity.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/list/list.entity.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            listentries\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ListEntryEntity[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @OneToMany(undefined, undefined, {eager: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/list/list.entity.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column('nvarchar', {length: 50})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/list/list.entity.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedby\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/list/list.entity.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateddate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/list/list.entity.ts:26\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, PrimaryGeneratedColumn, Column, OneToOne,ManyToOne, OneToMany, JoinColumn, AfterUpdate, BeforeUpdate } from 'typeorm';\nimport { ListEntryEntity } from './listentry.entity';\n\n@Entity('list')\nexport class ListEntity {\n\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column(\"nvarchar\", { length: 50 })\n  name: string;\n\n  @Column({nullable: true})\n  description: string;\n\n  @Column({default: 1})\n  active: boolean;\n\n  @Column()\n  createddate: Date;\n\n  @Column()\n  createdby: number\n\n  @Column()\n  updateddate: Date;\n\n  @Column()\n  updatedby: number;\n\n  @OneToMany(type => ListEntryEntity, listentry => listentry.list, {eager: true})\n  listentries: ListEntryEntity[];\n\n\n}\n\n\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ListEntry.html":{"url":"interfaces/ListEntry.html","title":"interface - ListEntry","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ListEntry\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/list/list.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        body\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        body\n                                    \n                                \n                                \n                                    \n                                        body:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { UserData } from '../user/user.interface';\nimport { ListEntity } from './list.entity';\ninterface ListEntry {\n  body: string;\n}\n\n\nexport interface ListData {\n\n    name: string;\n    description: string;\n    active?: boolean;\n    createdat?: Date;\n    createdby?: number;\n    updatedat?: Date;\n    updatedby?: number;\n\n  }\n  \n  export interface ListRO {\n    list: ListData;\n  }\n\n  export interface ListEntryRO {\n    listentries: ListEntry[];\n  }\n\n  \n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ListEntryEntity.html":{"url":"classes/ListEntryEntity.html","title":"class - ListEntryEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ListEntryEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/list/listentry.entity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                description\n                            \n                            \n                                id\n                            \n                            \n                                list\n                            \n                            \n                                name\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/list/listentry.entity.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/list/listentry.entity.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            list\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ListEntity\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne(undefined, undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/list/listentry.entity.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column('nvarchar', {length: 50})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/list/listentry.entity.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            value\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/list/listentry.entity.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, PrimaryGeneratedColumn, Column, ManyToOne } from 'typeorm';\nimport { ListEntity } from './list.entity';\n\n@Entity('listentry')\nexport class ListEntryEntity {\n\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column(\"nvarchar\", { length: 50 })\n  name: string;\n\n  @Column({nullable: true})\n  description: string;\n  \n  @Column()\n  value: string;\n\n  @ManyToOne(type => ListEntity, list => list.listentries)\n  list: ListEntity;\n\n}\n\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ListEntryRO.html":{"url":"interfaces/ListEntryRO.html","title":"interface - ListEntryRO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ListEntryRO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/list/list.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        listentries\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        listentries\n                                    \n                                \n                                \n                                    \n                                        listentries:         ListEntry[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ListEntry[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { UserData } from '../user/user.interface';\nimport { ListEntity } from './list.entity';\ninterface ListEntry {\n  body: string;\n}\n\n\nexport interface ListData {\n\n    name: string;\n    description: string;\n    active?: boolean;\n    createdat?: Date;\n    createdby?: number;\n    updatedat?: Date;\n    updatedby?: number;\n\n  }\n  \n  export interface ListRO {\n    list: ListData;\n  }\n\n  export interface ListEntryRO {\n    listentries: ListEntry[];\n  }\n\n  \n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ListModule.html":{"url":"modules/ListModule.html","title":"module - ListModule","body":"\n                   \n\n\n\n\n    Modules\n    ListModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ListModule\n\n\n\ncluster_ListModule_providers\n\n\n\n\nListService\n\nListService\n\n\n\nListModule\n\nListModule\n\nListModule -->\n\nListService->ListModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/list/list.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ListService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ListController\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            configure\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    configure(consumer: MiddlewareConsumer)\n                \n            \n\n\n            \n                \n                    Defined in src/list/list.module.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    consumer\n                                    \n                                            MiddlewareConsumer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import {MiddlewareConsumer, Module, NestModule, RequestMethod} from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\n\nimport { ListService } from './list.service';\nimport { ListEntity } from './list.entity';\nimport { ListController } from './list.controller';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([ListEntity])],\n  providers: [ListService],\n  controllers: [\n    ListController\n  ],\n  exports: []\n})\nexport class ListModule implements NestModule {\n  public configure(consumer: MiddlewareConsumer) {\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ListRO.html":{"url":"interfaces/ListRO.html","title":"interface - ListRO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ListRO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/list/list.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        list\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        list\n                                    \n                                \n                                \n                                    \n                                        list:         ListData\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ListData\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { UserData } from '../user/user.interface';\nimport { ListEntity } from './list.entity';\ninterface ListEntry {\n  body: string;\n}\n\n\nexport interface ListData {\n\n    name: string;\n    description: string;\n    active?: boolean;\n    createdat?: Date;\n    createdby?: number;\n    updatedat?: Date;\n    updatedby?: number;\n\n  }\n  \n  export interface ListRO {\n    list: ListData;\n  }\n\n  export interface ListEntryRO {\n    listentries: ListEntry[];\n  }\n\n  \n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ListService.html":{"url":"injectables/ListService.html","title":"injectable - ListService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ListService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/list/list.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                buildListRO\n                            \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findById\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(listRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/list/list.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        listRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            buildListRO\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    buildListRO(list: ListEntity)\n                \n            \n\n\n            \n                \n                    Defined in src/list/list.service.ts:84\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    list\n                                    \n                                                ListEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     { list: { id: any; name: any; description: any; }; }\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(dto: CreateListDto)\n                \n            \n\n\n            \n                \n                    Defined in src/list/list.service.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                CreateListDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/list/list.service.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n\n            \n                \n                    Defined in src/list/list.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findById\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findById(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/list/list.service.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(undefined: CreateListDto)\n                \n            \n\n\n            \n                \n                    Defined in src/list/list.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                CreateListDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: number, dto: CreateListDto)\n                \n            \n\n\n            \n                \n                    Defined in src/list/list.service.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dto\n                                    \n                                                CreateListDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository, getRepository, DeleteResult } from 'typeorm';\nimport { HttpException } from '@nestjs/common/exceptions/http.exception';\nimport { HttpStatus } from '@nestjs/common';\nimport { validate } from 'class-validator';\n\nimport { ListEntity } from './list.entity';\nimport { ListRO, ListEntryRO } from './list.interface';\nimport { CreateListDto } from './dto';\n\n\n\n@Injectable()\nexport class ListService {\n  constructor(\n    @InjectRepository(ListEntity)\n    private readonly listRepository: Repository,\n  ) {}\n\n  async findAll(): Promise {\n    return await this.listRepository.find();\n\n  }\n\n  async findOne({id}: CreateListDto): Promise {\n    const list = await this.listRepository.findOne({id});\n    if (!list) {\n      return null;\n    }\n    return null;\n  }\n\n  async create(dto: CreateListDto): Promise {\n\n    // check uniqueness of username/email\n    const {name, description} = dto;\n\n    // create new list\n    let newList = new ListEntity();\n    newList.name = name;\n    newList.description = description;\n\n    const errors = await validate(newList);\n    if (errors.length > 0) {\n      const _errors = {list: 'Userinput is not valid.'};\n      throw new HttpException({message: 'Input data validation failed', _errors}, HttpStatus.BAD_REQUEST);\n\n    } else {\n      const savedList = await this.listRepository.save(newList);\n      return this.buildListRO(savedList);\n    }\n  }\n\n  async update(id: number, dto: CreateListDto): Promise {\n    let toUpdate = await this.listRepository.findOne(id);\n\n    let updated = Object.assign(toUpdate, dto);\n    return await this.listRepository.save(updated);\n  }\n\n  async delete(id: number): Promise {\n    return await this.listRepository.delete({ id: id});\n  }\n\n  async findById(id: number): Promise{\n    const list = await this.listRepository.findOne(id);\n\n    if (!list) {\n      const errors = {List: ' not found'};\n      throw new HttpException({errors}, 401);\n    }\n\n    return this.buildListRO(list);\n  }\n\n\n  // async findListEntry(slug: string): Promise {\n  //   const article = await this.listRepository.findOne({slug});\n  //   return {listentries: list.listentries};\n\n  // }\n\n  private buildListRO(list: ListEntity) {\n    const ListRO = {\n      id: list.id,\n      name: list.name,\n      description: list.description\n     \n    };\n\n    return {list: ListRO};\n  }\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginUserDto.html":{"url":"classes/LoginUserDto.html","title":"class - LoginUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dto/login-user.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                email\n                            \n                            \n                                    Readonly\n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/dto/login-user.dto.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/dto/login-user.dto.ts:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty } from 'class-validator';\n\nexport class LoginUserDto {\n\n  @IsNotEmpty()\n  readonly email: string;\n\n  @IsNotEmpty()\n  readonly password: string;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MenuAppData.html":{"url":"interfaces/MenuAppData.html","title":"interface - MenuAppData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MenuAppData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/menu/menu.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        active\n                                \n                                \n                                        appid\n                                \n                                \n                                        caption\n                                \n                                \n                                            Optional\n                                        createdby\n                                \n                                \n                                            Optional\n                                        createddate\n                                \n                                \n                                        sortid\n                                \n                                \n                                            Optional\n                                        updatedby\n                                \n                                \n                                            Optional\n                                        updateddate\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        active\n                                    \n                                \n                                \n                                    \n                                        active:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        appid\n                                    \n                                \n                                \n                                    \n                                        appid:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        caption\n                                    \n                                \n                                \n                                    \n                                        caption:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createdby\n                                    \n                                \n                                \n                                    \n                                        createdby:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createddate\n                                    \n                                \n                                \n                                    \n                                        createddate:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sortid\n                                    \n                                \n                                \n                                    \n                                        sortid:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedby\n                                    \n                                \n                                \n                                    \n                                        updatedby:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updateddate\n                                    \n                                \n                                \n                                    \n                                        updateddate:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { UserData } from '../user/user.interface';\nimport { MenuAppEntity } from './menuapp.entity';\nimport { MenuEntryEntity } from './menuentry.entity';\n\ninterface MenuAppEntry {\n  body: string;\n}\n\nexport interface MenuAppData {\n\n    appid: string,\n    caption: string,\n    sortid: string,\n    active?: boolean;\n    createddate?: Date;\n    createdby?: number;\n    updateddate?: Date;\n    updatedby?: number;\n\n  }\n  \n  export interface MenuRO {\n    menu: MenuAppData;\n  }\n\n  export interface MenuEntryRO {\n    menuentries: MenuEntryEntity;\n  }\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MenuAppEntity.html":{"url":"classes/MenuAppEntity.html","title":"class - MenuAppEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MenuAppEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/menu/menuapp.entity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                abbreviation\n                            \n                            \n                                active\n                            \n                            \n                                createdby\n                            \n                            \n                                createddate\n                            \n                            \n                                description\n                            \n                            \n                                id\n                            \n                            \n                                menuentries\n                            \n                            \n                                name\n                            \n                            \n                                rolemenuapp\n                            \n                            \n                                updatedby\n                            \n                            \n                                updateddate\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            abbreviation\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column('nvarchar', {length: 10})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/menu/menuapp.entity.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            active\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({default: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/menu/menuapp.entity.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdby\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/menu/menuapp.entity.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createddate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/menu/menuapp.entity.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/menu/menuapp.entity.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/menu/menuapp.entity.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            menuentries\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MenuEntryEntity[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @OneToMany(undefined, undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/menu/menuapp.entity.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column('nvarchar', {length: 50})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/menu/menuapp.entity.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rolemenuapp\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         RoleMenuAppEntity\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @OneToOne(undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/menu/menuapp.entity.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedby\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/menu/menuapp.entity.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateddate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/menu/menuapp.entity.ts:30\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, PrimaryGeneratedColumn, Column, OneToOne, ManyToOne, OneToMany, JoinColumn, AfterUpdate, BeforeUpdate } from 'typeorm';\nimport { RoleMenuAppEntity } from '../role/rolemenuapp.entity';\nimport { MenuEntryEntity } from './menuentry.entity';\n\n@Entity('menuapp')\nexport class MenuAppEntity {\n\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column(\"nvarchar\", { length: 50 })\n  name: string;\n\n  @Column({nullable: true})\n  description: string;\n\n  @Column(\"nvarchar\", { length: 10 })\n  abbreviation: string;\n\n  @Column({default: false})\n  active: boolean;\n\n  @Column()\n  createddate: Date;\n\n  @Column()\n  createdby: number\n\n  @Column()\n  updateddate: Date;\n\n  @Column()\n  updatedby: number;\n\n  @OneToMany(type => MenuEntryEntity, menu => menu.menuapp)\n  menuentries: MenuEntryEntity[];\n\n  @OneToOne(type => RoleMenuAppEntity)\n  rolemenuapp: RoleMenuAppEntity;\n\n}\n\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MenuAppEntry.html":{"url":"interfaces/MenuAppEntry.html","title":"interface - MenuAppEntry","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MenuAppEntry\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/menu/menu.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        body\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        body\n                                    \n                                \n                                \n                                    \n                                        body:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { UserData } from '../user/user.interface';\nimport { MenuAppEntity } from './menuapp.entity';\nimport { MenuEntryEntity } from './menuentry.entity';\n\ninterface MenuAppEntry {\n  body: string;\n}\n\nexport interface MenuAppData {\n\n    appid: string,\n    caption: string,\n    sortid: string,\n    active?: boolean;\n    createddate?: Date;\n    createdby?: number;\n    updateddate?: Date;\n    updatedby?: number;\n\n  }\n  \n  export interface MenuRO {\n    menu: MenuAppData;\n  }\n\n  export interface MenuEntryRO {\n    menuentries: MenuEntryEntity;\n  }\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/MenuController.html":{"url":"controllers/MenuController.html","title":"controller - MenuController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  MenuController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/menu/menu.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                menus\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findMMenu\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(menuData: CreateMenuDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('menu')\n                \n            \n\n            \n                \n                    Defined in src/menu/menu.controller.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    menuData\n                                    \n                                                CreateMenuDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(params)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('menu/:slug')\n                \n            \n\n            \n                \n                    Defined in src/menu/menu.controller.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/menu/menu.controller.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findMMenu\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findMMenu(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('menu')\n                \n            \n\n            \n                \n                    Defined in src/menu/menu.controller.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: number, menuData: CreateMenuDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put('menu')\n                \n            \n\n            \n                \n                    Defined in src/menu/menu.controller.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    menuData\n                                    \n                                                CreateMenuDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Get, Post, Body, Put, Delete, Param, Controller, UsePipes } from '@nestjs/common';\nimport { Request } from 'express';\nimport { MenuService } from './menu.service';\nimport { MenuRO } from './menu.interface';\nimport { MenuEntryRO } from './menu.interface';\nimport { CreateMenuDto } from './dto';\nimport { MenuAppEntity } from './menuapp.entity';\nimport { MenuEntryEntity } from './menuentry.entity';\nimport { HttpException } from '@nestjs/common/exceptions/http.exception';\n\n//import { User } from './user.decorator';\nimport { ValidationPipe } from '../shared/pipes/validation.pipe';\n\n\nimport {\n  ApiBearerAuth,\n  ApiResponse,\n  ApiOperation, \n  ApiTags,\n} from '@nestjs/swagger';\n\n@ApiBearerAuth()\n@ApiTags('menus')\n@Controller('menus')\n\nexport class MenuController {\n  constructor(private readonly menuService: MenuService) {}\n\n  @Get()\n  async findAll(): Promise {\n    return await this.menuService.findAll();\n  }\n\n  @Get('menu')\n  async findMMenu(@Param('id') id: number): Promise {\n    return await this.menuService.findById(id);\n  }\n\n  @Put('menu')\n  async update(@Param('id') id: number, @Body('menu') menuData: CreateMenuDto) {\n    return await this.menuService.update(id, menuData);\n  }\n\n  //@UsePipes(new ValidationPipe())\n  @Post('menu')\n  async create(@Body('menu') menuData: CreateMenuDto) {\n    return this.menuService.create(menuData);\n  }\n\n  @Delete('menu/:slug')\n  async delete(@Param() params) {\n    return await this.menuService.delete(params.slug);\n  }\n\n  // @Get(':slug/menuentries')\n  // async findMenuEntries(@Param('slug') slug): Promise {\n  //   return await this.menuService.findMenuEntry(slug);\n  // }\n\n \n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MenuEntryEntity.html":{"url":"classes/MenuEntryEntity.html","title":"class - MenuEntryEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MenuEntryEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/menu/menuentry.entity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                action\n                            \n                            \n                                active\n                            \n                            \n                                appid\n                            \n                            \n                                caption\n                            \n                            \n                                createdby\n                            \n                            \n                                createddate\n                            \n                            \n                                description\n                            \n                            \n                                id\n                            \n                            \n                                menuapp\n                            \n                            \n                                menuentryConnection\n                            \n                            \n                                mouseover\n                            \n                            \n                                sortid\n                            \n                            \n                                updatedby\n                            \n                            \n                                updateddate\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            action\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/menu/menuentry.entity.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            active\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({default: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/menu/menuentry.entity.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            appid\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column('nvarchar', {length: 10})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/menu/menuentry.entity.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            caption\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column('nvarchar', {length: 50})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/menu/menuentry.entity.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdby\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/menu/menuentry.entity.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createddate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @CreateDateColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/menu/menuentry.entity.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/menu/menuentry.entity.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/menu/menuentry.entity.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            menuapp\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MenuAppEntity\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne(undefined, undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/menu/menuentry.entity.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            menuentryConnection\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         RoleMenuEntryEntity\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @OneToMany(undefined, undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/menu/menuentry.entity.ts:48\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mouseover\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/menu/menuentry.entity.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sortid\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column('nvarchar', {length: 50})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/menu/menuentry.entity.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedby\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/menu/menuentry.entity.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateddate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @UpdateDateColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/menu/menuentry.entity.ts:39\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, PrimaryGeneratedColumn, Column, CreateDateColumn, UpdateDateColumn, OneToOne, ManyToOne, OneToMany, JoinColumn, AfterUpdate, BeforeUpdate } from 'typeorm';\nimport { MenuAppEntity } from './menuapp.entity';\nimport { RoleMenuEntryEntity } from '../role/rolemenuentry.entity';\n\n@Entity('menuentry')\nexport class MenuEntryEntity {\n\n  @PrimaryGeneratedColumn()\n  id: number;\n \n  @Column(\"nvarchar\", { length: 10 })\n  appid: string;\n  \n  @Column(\"nvarchar\", { length: 50 })\n  sortid: string;\n\n  @Column(\"nvarchar\", { length: 50 })\n  caption: string;\n\n  @Column({nullable: true})\n  description: string;\n\n  @Column({default: false})\n  active: boolean;\n\n  @Column()\n  action: string;\n\n  @Column()\n  mouseover: string;\n\n  @CreateDateColumn()\n  createddate: Date;\n\n  @Column()\n  createdby: number\n\n  @UpdateDateColumn()\n  updateddate: Date;\n\n  @Column()\n  updatedby: number;\n\n  @ManyToOne(type => MenuAppEntity, menuapp => menuapp.menuentries)\n  menuapp: MenuAppEntity;\n\n  @OneToMany(type => RoleMenuEntryEntity, rolemenuentry => rolemenuentry.RoleMenuAppId)\n  menuentryConnection: RoleMenuEntryEntity;\n\n\n\n\n\n}\n\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MenuEntryRO.html":{"url":"interfaces/MenuEntryRO.html","title":"interface - MenuEntryRO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MenuEntryRO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/menu/menu.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        menuentries\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        menuentries\n                                    \n                                \n                                \n                                    \n                                        menuentries:         MenuEntryEntity\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         MenuEntryEntity\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { UserData } from '../user/user.interface';\nimport { MenuAppEntity } from './menuapp.entity';\nimport { MenuEntryEntity } from './menuentry.entity';\n\ninterface MenuAppEntry {\n  body: string;\n}\n\nexport interface MenuAppData {\n\n    appid: string,\n    caption: string,\n    sortid: string,\n    active?: boolean;\n    createddate?: Date;\n    createdby?: number;\n    updateddate?: Date;\n    updatedby?: number;\n\n  }\n  \n  export interface MenuRO {\n    menu: MenuAppData;\n  }\n\n  export interface MenuEntryRO {\n    menuentries: MenuEntryEntity;\n  }\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MenuModule.html":{"url":"modules/MenuModule.html","title":"module - MenuModule","body":"\n                   \n\n\n\n\n    Modules\n    MenuModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MenuModule\n\n\n\ncluster_MenuModule_providers\n\n\n\n\nMenuService\n\nMenuService\n\n\n\nMenuModule\n\nMenuModule\n\nMenuModule -->\n\nMenuService->MenuModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/menu/menu.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            MenuService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            MenuController\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            configure\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    configure(consumer: MiddlewareConsumer)\n                \n            \n\n\n            \n                \n                    Defined in src/menu/menu.module.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    consumer\n                                    \n                                            MiddlewareConsumer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import {MiddlewareConsumer, Module, NestModule, RequestMethod} from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\n\nimport { MenuService } from './menu.service';\nimport { MenuAppEntity } from './menuapp.entity';\nimport { MenuController } from './menu.controller';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([MenuAppEntity])],\n  providers: [MenuService],\n  controllers: [\n    MenuController\n  ],\n  exports: []\n})\nexport class MenuModule implements NestModule {\n  public configure(consumer: MiddlewareConsumer) {\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MenuRO.html":{"url":"interfaces/MenuRO.html","title":"interface - MenuRO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MenuRO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/menu/menu.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        menu\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        menu\n                                    \n                                \n                                \n                                    \n                                        menu:         MenuAppData\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         MenuAppData\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { UserData } from '../user/user.interface';\nimport { MenuAppEntity } from './menuapp.entity';\nimport { MenuEntryEntity } from './menuentry.entity';\n\ninterface MenuAppEntry {\n  body: string;\n}\n\nexport interface MenuAppData {\n\n    appid: string,\n    caption: string,\n    sortid: string,\n    active?: boolean;\n    createddate?: Date;\n    createdby?: number;\n    updateddate?: Date;\n    updatedby?: number;\n\n  }\n  \n  export interface MenuRO {\n    menu: MenuAppData;\n  }\n\n  export interface MenuEntryRO {\n    menuentries: MenuEntryEntity;\n  }\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MenuService.html":{"url":"injectables/MenuService.html","title":"injectable - MenuService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MenuService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/menu/menu.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                buildMenuRO\n                            \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findById\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(menuRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/menu/menu.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        menuRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            buildMenuRO\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    buildMenuRO(menu: MenuAppEntity)\n                \n            \n\n\n            \n                \n                    Defined in src/menu/menu.service.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    menu\n                                    \n                                                MenuAppEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     { menu: { id: any; appid: any; caption: any; sortid: any; }; }\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(dto: CreateMenuDto)\n                \n            \n\n\n            \n                \n                    Defined in src/menu/menu.service.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                CreateMenuDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/menu/menu.service.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n\n            \n                \n                    Defined in src/menu/menu.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findById\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findById(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/menu/menu.service.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(undefined: CreateMenuDto)\n                \n            \n\n\n            \n                \n                    Defined in src/menu/menu.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                CreateMenuDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: number, dto: CreateMenuDto)\n                \n            \n\n\n            \n                \n                    Defined in src/menu/menu.service.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dto\n                                    \n                                                CreateMenuDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository, getRepository, DeleteResult } from 'typeorm';\nimport { HttpException } from '@nestjs/common/exceptions/http.exception';\nimport { HttpStatus } from '@nestjs/common';\nimport { validate } from 'class-validator';\n\nimport { MenuAppEntity } from './menuapp.entity';\n\nimport { MenuRO } from './menu.interface';\nimport { CreateMenuDto } from './dto';\n\n@Injectable()\nexport class MenuService {\n  constructor(\n    @InjectRepository(MenuAppEntity)\n    private readonly menuRepository: Repository,\n  ) {}\n\n  async findAll(): Promise {\n    return await this.menuRepository.find();\n  }\n\n  async findOne({id}: CreateMenuDto): Promise {\n    const menu = await this.menuRepository.findOne({id});\n    if (!menu) {\n      return null;\n    }\n    return null;\n  }\n\n  async create(dto: CreateMenuDto): Promise {\n\n    // check uniqueness of username/email\n    const {name, description, abbreviation} = dto;\n\n    // create new menu\n    let newMenu = new MenuAppEntity();\n    newMenu.name = name;\n    newMenu.description = description;\n    newMenu.abbreviation = abbreviation;\n\n    const errors = await validate(newMenu);\n    if (errors.length > 0) {\n      const _errors = {menu: 'Userinput is not valid.'};\n      throw new HttpException({message: 'Input data validation failed', _errors}, HttpStatus.BAD_REQUEST);\n\n    } else {\n      const savedMenu = await this.menuRepository.save(newMenu);\n      return this.buildMenuRO(savedMenu);\n    }\n  }\n\n  async update(id: number, dto: CreateMenuDto): Promise {\n    let toUpdate = await this.menuRepository.findOne(id);\n\n    let updated = Object.assign(toUpdate, dto);\n    return await this.menuRepository.save(updated);\n  }\n\n  async delete(id: number): Promise {\n    return await this.menuRepository.delete({ id: id});\n  }\n\n  async findById(id: number): Promise{\n    const menu = await this.menuRepository.findOne(id);\n\n    if (!menu) {\n      const errors = {Menu: ' not found'};\n      throw new HttpException({errors}, 401);\n    }\n\n    return this.buildMenuRO(menu);\n  }\n\n\n  private buildMenuRO(menu: MenuAppEntity) {\n    const MenuRO = {\n      id: menu.id,\n      appid: menu.name,\n      caption: menu.description,\n      sortid: menu.abbreviation\n     \n    };\n\n    return {menu: MenuRO};\n  }\n}\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MyLogger.html":{"url":"classes/MyLogger.html","title":"class - MyLogger","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MyLogger\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/middleware/logger.service.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        LoggerService\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                debug\n                            \n                            \n                                error\n                            \n                            \n                                log\n                            \n                            \n                                verbose\n                            \n                            \n                                warn\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            debug\n                        \n                        \n                    \n                \n            \n            \n                \ndebug(message: string)\n                \n            \n\n\n            \n                \n                    Defined in src/middleware/logger.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            error\n                        \n                        \n                    \n                \n            \n            \n                \nerror(message: string, trace: string)\n                \n            \n\n\n            \n                \n                    Defined in src/middleware/logger.service.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    trace\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            log\n                        \n                        \n                    \n                \n            \n            \n                \nlog(message: string)\n                \n            \n\n\n            \n                \n                    Defined in src/middleware/logger.service.ts:4\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            verbose\n                        \n                        \n                    \n                \n            \n            \n                \nverbose(message: string)\n                \n            \n\n\n            \n                \n                    Defined in src/middleware/logger.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            warn\n                        \n                        \n                    \n                \n            \n            \n                \nwarn(message: string)\n                \n            \n\n\n            \n                \n                    Defined in src/middleware/logger.service.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { LoggerService } from '@nestjs/common';\n\nexport class MyLogger implements LoggerService {\n  log(message: string) {\n    /* your implementation */\n  }\n  error(message: string, trace: string) {\n    /* your implementation */\n  }\n  warn(message: string) {\n    /* your implementation */\n  }\n  debug(message: string) {\n    /* your implementation */\n  }\n  verbose(message: string) {\n    /* your implementation */\n  }\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ProfileController.html":{"url":"controllers/ProfileController.html","title":"controller - ProfileController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ProfileController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/profile/profile.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                profiles\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                follow\n                            \n                            \n                                    Async\n                                getProfile\n                            \n                            \n                                    Async\n                                unFollow\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            follow\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    follow(email: string, username: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post(':username/follow')\n                \n            \n\n            \n                \n                    Defined in src/profile/profile.controller.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getProfile\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getProfile(userId: number, username: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':username')\n                \n            \n\n            \n                \n                    Defined in src/profile/profile.controller.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            unFollow\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    unFollow(userId: number, username: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':username/follow')\n                \n            \n\n            \n                \n                    Defined in src/profile/profile.controller.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Get, Post, Delete, Param, Controller } from '@nestjs/common';\nimport { Request } from 'express';\nimport { ProfileService } from './profile.service';\nimport { ProfileRO } from './profile.interface';\nimport { User } from '../user/user.decorator';\n\nimport {\n  ApiBearerAuth, ApiTags,\n} from '@nestjs/swagger';\n\n@ApiBearerAuth()\n@ApiTags('profiles')\n@Controller('profiles')\nexport class ProfileController {\n\n  constructor(private readonly profileService: ProfileService) {}\n\n  @Get(':username')\n  async getProfile(@User('id') userId: number, @Param('username') username: string): Promise {\n    return await this.profileService.findProfile(userId, username);\n  }\n\n  @Post(':username/follow')\n  async follow(@User('email') email: string, @Param('username') username: string): Promise {\n    return await this.profileService.follow(email, username);\n  }\n\n  @Delete(':username/follow')\n  async unFollow(@User('id') userId: number,  @Param('username') username: string): Promise {\n    return await this.profileService.unFollow(userId, username);\n  }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ProfileData.html":{"url":"interfaces/ProfileData.html","title":"interface - ProfileData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ProfileData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/profile/profile.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        bio\n                                \n                                \n                                            Optional\n                                        following\n                                \n                                \n                                            Optional\n                                        image\n                                \n                                \n                                        username\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        bio\n                                    \n                                \n                                \n                                    \n                                        bio:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        following\n                                    \n                                \n                                \n                                    \n                                        following:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        image\n                                    \n                                \n                                \n                                    \n                                        image:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ProfileData {\n  username: string;\n  bio: string;\n  image?: string;\n  following?: boolean;\n}\n\nexport interface ProfileRO {\n  profile: ProfileData;\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProfileModule.html":{"url":"modules/ProfileModule.html","title":"module - ProfileModule","body":"\n                   \n\n\n\n\n    Modules\n    ProfileModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ProfileModule\n\n\n\ncluster_ProfileModule_imports\n\n\n\ncluster_ProfileModule_providers\n\n\n\n\nUserModule\n\nUserModule\n\n\n\nProfileModule\n\nProfileModule\n\nProfileModule -->\n\nUserModule->ProfileModule\n\n\n\n\n\nProfileService\n\nProfileService\n\nProfileModule -->\n\nProfileService->ProfileModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/profile/profile.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ProfileService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ProfileController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            configure\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    configure(consumer: MiddlewareConsumer)\n                \n            \n\n\n            \n                \n                    Defined in src/profile/profile.module.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    consumer\n                                    \n                                            MiddlewareConsumer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import {MiddlewareConsumer, Module, NestModule, RequestMethod} from '@nestjs/common';\nimport { ProfileController } from './profile.controller';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { ProfileService } from './profile.service';\nimport { UserModule } from '../user/user.module';\nimport {UserEntity} from \"../user/user.entity\";\nimport {FollowsEntity} from \"./follows.entity\";\nimport {AuthMiddleware} from \"../user/auth.middleware\";\n\n@Module({\n  imports: [TypeOrmModule.forFeature([UserEntity, FollowsEntity]), UserModule],\n  providers: [ProfileService],\n  controllers: [\n    ProfileController\n  ],\n  exports: []\n})\nexport class ProfileModule implements NestModule {\n  public configure(consumer: MiddlewareConsumer) {\n    consumer\n      .apply(AuthMiddleware)\n      .forRoutes({path: 'profiles/:username/follow', method: RequestMethod.ALL});\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ProfileRO.html":{"url":"interfaces/ProfileRO.html","title":"interface - ProfileRO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ProfileRO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/profile/profile.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        profile\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        profile\n                                    \n                                \n                                \n                                    \n                                        profile:         ProfileData\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ProfileData\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ProfileData {\n  username: string;\n  bio: string;\n  image?: string;\n  following?: boolean;\n}\n\nexport interface ProfileRO {\n  profile: ProfileData;\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProfileService.html":{"url":"injectables/ProfileService.html","title":"injectable - ProfileService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ProfileService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/profile/profile.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                findProfile\n                            \n                            \n                                    Async\n                                follow\n                            \n                            \n                                    Async\n                                unFollow\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: Repository, followsRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/profile/profile.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        followsRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n\n            \n                \n                    Defined in src/profile/profile.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(options?: DeepPartial)\n                \n            \n\n\n            \n                \n                    Defined in src/profile/profile.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                DeepPartial\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findProfile\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findProfile(id: number, followingUsername: string)\n                \n            \n\n\n            \n                \n                    Defined in src/profile/profile.service.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    followingUsername\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            follow\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    follow(followerEmail: string, username: string)\n                \n            \n\n\n            \n                \n                    Defined in src/profile/profile.service.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    followerEmail\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            unFollow\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    unFollow(followerId: number, username: string)\n                \n            \n\n\n            \n                \n                    Defined in src/profile/profile.service.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    followerId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpStatus, Injectable} from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { UserEntity } from '../user/user.entity';\nimport { DeepPartial } from 'typeorm/common/DeepPartial';\nimport { ProfileRO, ProfileData } from './profile.interface';\nimport {FollowsEntity} from \"./follows.entity\";\nimport {HttpException} from \"@nestjs/common/exceptions/http.exception\";\n\n@Injectable()\nexport class ProfileService {\n  constructor(\n    @InjectRepository(UserEntity)\n    private readonly userRepository: Repository,\n    @InjectRepository(FollowsEntity)\n    private readonly followsRepository: Repository\n  ) {}\n\n  async findAll(): Promise {\n    return await this.userRepository.find();\n  }\n\n  async findOne(options?: DeepPartial): Promise {\n    const user = await this.userRepository.findOne(options);\n    delete user.id;\n    if (user) delete user.password;\n    return {profile: user};\n  }\n\n  async findProfile(id: number, followingUsername: string): Promise {\n    const _profile = await this.userRepository.findOne( {username: followingUsername});\n\n    if(!_profile) return;\n\n    let profile: ProfileData = {\n      username: _profile.username,\n      bio: _profile.bio,\n      image: _profile.image\n    };\n\n    const follows = await this.followsRepository.findOne( {followerId: id, followingId: _profile.id});\n\n    if (id) {\n      profile.following = !!follows;\n    }\n\n    return {profile};\n  }\n\n  async follow(followerEmail: string, username: string): Promise {\n    if (!followerEmail || !username) {\n      throw new HttpException('Follower email and username not provided.', HttpStatus.BAD_REQUEST);\n    }\n\n    const followingUser = await this.userRepository.findOne({username});\n    const followerUser = await this.userRepository.findOne({email: followerEmail});\n\n    if (followingUser.email === followerEmail) {\n      throw new HttpException('FollowerEmail and FollowingId cannot be equal.', HttpStatus.BAD_REQUEST);\n    }\n\n    const _follows = await this.followsRepository.findOne( {followerId: followerUser.id, followingId: followingUser.id});\n\n    if (!_follows) {\n      const follows = new FollowsEntity();\n      follows.followerId = followerUser.id;\n      follows.followingId = followingUser.id;\n      await this.followsRepository.save(follows);\n    }\n\n    let profile: ProfileData = {\n      username: followingUser.username,\n      bio: followingUser.bio,\n      image: followingUser.image,\n      following: true\n    };\n\n    return {profile};\n  }\n\n  async unFollow(followerId: number, username: string): Promise {\n    if (!followerId || !username) {\n      throw new HttpException('FollowerId and username not provided.', HttpStatus.BAD_REQUEST);\n    }\n\n    const followingUser = await this.userRepository.findOne({username});\n\n    if (followingUser.id === followerId) {\n      throw new HttpException('FollowerId and FollowingId cannot be equal.', HttpStatus.BAD_REQUEST);\n    }\n    const followingId = followingUser.id;\n    await this.followsRepository.delete({followerId, followingId});\n\n    let profile: ProfileData = {\n      username: followingUser.username,\n      bio: followingUser.bio,\n      image: followingUser.image,\n      following: false\n    };\n\n    return {profile};\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/RoleController.html":{"url":"controllers/RoleController.html","title":"controller - RoleController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  RoleController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/role/role.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                roles\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findMList\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(roleData: CreateRoleDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('role')\n                \n            \n\n            \n                \n                    Defined in src/role/role.controller.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    roleData\n                                    \n                                                CreateRoleDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(params)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('role/:slug')\n                \n            \n\n            \n                \n                    Defined in src/role/role.controller.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/role/role.controller.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findMList\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findMList(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('role')\n                \n            \n\n            \n                \n                    Defined in src/role/role.controller.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: number, roleData: CreateRoleDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put('role')\n                \n            \n\n            \n                \n                    Defined in src/role/role.controller.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    roleData\n                                    \n                                                CreateRoleDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Get, Post, Body, Put, Delete, Param, Controller, UsePipes } from '@nestjs/common';\nimport { Request } from 'express';\nimport { RoleService } from './role.service';\nimport { RoleRO } from './role.interface';\nimport { CreateRoleDto } from './dto';\nimport { RoleEntity } from './role.entity';\nimport { HttpException } from '@nestjs/common/exceptions/http.exception';\n\n//import { User } from './user.decorator';\nimport { ValidationPipe } from '../shared/pipes/validation.pipe';\n\n\nimport {\n  ApiBearerAuth,\n  ApiResponse,\n  ApiOperation, \n  ApiTags,\n} from '@nestjs/swagger';\n\n@ApiBearerAuth()\n@ApiTags('roles')\n@Controller('roles')\nexport class RoleController {\n  constructor(private readonly roleService: RoleService) {}\n\n\n  @Get()\n  async findAll(): Promise {\n    return await this.roleService.findAll();\n  }\n\n  @Get('role')\n  async findMList(@Param('id') id: number): Promise {\n    return await this.roleService.findById(id);\n  }\n\n  @Put('role')\n  async update(@Param('id') id: number, @Body('role') roleData: CreateRoleDto) {\n    return await this.roleService.update(id, roleData);\n  }\n\n  //@UsePipes(new ValidationPipe())\n  @Post('role')\n  async create(@Body('role') roleData: CreateRoleDto) {\n    return this.roleService.create(roleData);\n  }\n\n  @Delete('role/:slug')\n  async delete(@Param() params) {\n    return await this.roleService.delete(params.slug);\n  }\n\n \n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RoleData.html":{"url":"interfaces/RoleData.html","title":"interface - RoleData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  RoleData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/role/role.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        active\n                                \n                                \n                                            Optional\n                                        createdat\n                                \n                                \n                                            Optional\n                                        createdby\n                                \n                                \n                                        description\n                                \n                                \n                                        name\n                                \n                                \n                                            Optional\n                                        updatedat\n                                \n                                \n                                            Optional\n                                        updatedby\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        active\n                                    \n                                \n                                \n                                    \n                                        active:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createdat\n                                    \n                                \n                                \n                                    \n                                        createdat:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createdby\n                                    \n                                \n                                \n                                    \n                                        createdby:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedat\n                                    \n                                \n                                \n                                    \n                                        updatedat:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedby\n                                    \n                                \n                                \n                                    \n                                        updatedby:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface RoleData {\n\n    name: string;\n    description: string;\n    active?: boolean;\n    createdat?: Date;\n    createdby?: number;\n    updatedat?: Date;\n    updatedby?: number;\n\n  }\n  \n  export interface RoleRO {\n    role: RoleData;\n  }\n\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RoleEntity.html":{"url":"classes/RoleEntity.html","title":"class - RoleEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RoleEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/role/role.entity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                active\n                            \n                            \n                                createdby\n                            \n                            \n                                createddate\n                            \n                            \n                                description\n                            \n                            \n                                groups\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                rolemenuapps\n                            \n                            \n                                site\n                            \n                            \n                                updatedby\n                            \n                            \n                                updateddate\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            active\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({default: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/role/role.entity.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdby\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/role/role.entity.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createddate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/role/role.entity.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/role/role.entity.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            groups\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         GroupEntity[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @OneToMany(undefined, undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/role/role.entity.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/role/role.entity.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column('nvarchar', {length: 50})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/role/role.entity.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rolemenuapps\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     RoleMenuAppEntity[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @OneToMany(undefined, undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/role/role.entity.ts:48\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            site\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SiteEntity\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne(undefined, undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/role/role.entity.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedby\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/role/role.entity.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateddate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/role/role.entity.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserEntity\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne(undefined, undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/role/role.entity.ts:36\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, PrimaryGeneratedColumn, Column, OneToOne, ManyToOne, OneToMany, JoinColumn, AfterUpdate, BeforeUpdate } from 'typeorm';\nimport { UserEntity } from '../user/user.entity';\nimport { SiteEntity } from '../site/site.entity';\nimport { GroupEntity } from '../group/group.entity';\nimport { RoleMenuAppEntity } from './rolemenuapp.entity';\n\n@Entity('role')\nexport class RoleEntity {\n\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column(\"nvarchar\", { length: 50 })\n  name: string;\n\n  @Column({nullable: true})\n  description: string;\n\n  @Column({default: false})\n  active: boolean;\n\n  @Column()\n  createddate: Date;\n\n  @Column()\n  createdby: number\n\n  @Column()\n  updateddate: Date;\n\n  @Column()\n  updatedby: number;\n\n  // a user can have multiple roles on different sites so per site!\n  @ManyToOne(type => UserEntity, user => user.roles)\n  user: UserEntity;\n\n  // a role belongs only to one site as the menu could be different!! a site can have multiple roles\n  @ManyToOne(type => SiteEntity, site => site.roles)\n  site: SiteEntity;\n\n  // groups are used for data access and define on the role like in Labware\n  @OneToMany(type => GroupEntity, group => group.role)\n  groups: GroupEntity[];\n\n  // a role has multiples app to be accessed\n  @OneToMany(type => RoleMenuAppEntity, rolemenuapp => rolemenuapp.role)\n  rolemenuapps: RoleMenuAppEntity[];\n\n\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RoleMenuAppEntity.html":{"url":"classes/RoleMenuAppEntity.html","title":"class - RoleMenuAppEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RoleMenuAppEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/role/rolemenuapp.entity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                menuapp\n                            \n                            \n                                MenuAppId\n                            \n                            \n                                role\n                            \n                            \n                                rolemenuappConnection\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/role/rolemenuapp.entity.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            menuapp\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MenuAppEntity\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @OneToOne(undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/role/rolemenuapp.entity.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            MenuAppId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/role/rolemenuapp.entity.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            role\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         RoleEntity\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne(undefined, undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/role/rolemenuapp.entity.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rolemenuappConnection\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         RoleMenuEntryEntity\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @OneToMany(undefined, undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/role/rolemenuapp.entity.ts:25\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, PrimaryGeneratedColumn, Column, OneToOne, ManyToOne, OneToMany, JoinColumn, AfterUpdate, BeforeUpdate } from 'typeorm';\nimport { RoleEntity } from './role.entity';\nimport { MenuAppEntity } from '../menu/menuapp.entity';\nimport { RoleMenuEntryEntity } from '../role/rolemenuentry.entity';\n\n@Entity('rolemenuapp')\nexport class RoleMenuAppEntity {\n\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  //@Column()\n  //RoleId: number;\n\n  @Column()\n  MenuAppId: number;\n\n  @ManyToOne(type => RoleEntity, role => role.rolemenuapps)\n  role: RoleEntity;\n\n  @OneToOne(type => MenuAppEntity)\n  menuapp: MenuAppEntity;\n  \n  @OneToMany(type => RoleMenuEntryEntity, rolemenuentry => rolemenuentry.MenuEntryId)\n  rolemenuappConnection: RoleMenuEntryEntity;\n\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RoleMenuEntryEntity.html":{"url":"classes/RoleMenuEntryEntity.html","title":"class - RoleMenuEntryEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RoleMenuEntryEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/role/rolemenuentry.entity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                menuentry\n                            \n                            \n                                MenuEntryId\n                            \n                            \n                                rolemenuapp\n                            \n                            \n                                RoleMenuAppId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            menuentry\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MenuEntryEntity\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne(undefined, undefined, {primary: true})@JoinColumn({name: 'MenuEntryId'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/role/rolemenuentry.entity.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            MenuEntryId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/role/rolemenuentry.entity.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rolemenuapp\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         RoleMenuAppEntity\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne(undefined, undefined, {primary: true})@JoinColumn({name: 'RoleMenuAppId'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/role/rolemenuentry.entity.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            RoleMenuAppId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/role/rolemenuentry.entity.ts:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, PrimaryColumn, Column, ManyToOne, JoinColumn } from 'typeorm';\nimport { MenuEntryEntity } from '../menu/menuentry.entity';\nimport { RoleMenuAppEntity } from '../role/rolemenuapp.entity';\n\n@Entity('rolemenuentry')\nexport class RoleMenuEntryEntity {\n\n  @PrimaryColumn()\n  RoleMenuAppId: number;\n\n  @PrimaryColumn()\n  MenuEntryId: number;\n\n  @ManyToOne(type => RoleMenuAppEntity, rolemenuapp => rolemenuapp.rolemenuappConnection, { primary: true })\n  @JoinColumn({ name: \"RoleMenuAppId\"})\n  rolemenuapp: RoleMenuAppEntity;\n\n  @ManyToOne(type => MenuEntryEntity, menuentry => menuentry.menuentryConnection, { primary: true })\n  @JoinColumn({ name: \"MenuEntryId\"})\n  menuentry: MenuEntryEntity;\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RoleModule.html":{"url":"modules/RoleModule.html","title":"module - RoleModule","body":"\n                   \n\n\n\n\n    Modules\n    RoleModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_RoleModule\n\n\n\ncluster_RoleModule_providers\n\n\n\n\nRoleService\n\nRoleService\n\n\n\nRoleModule\n\nRoleModule\n\nRoleModule -->\n\nRoleService->RoleModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/role/role.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            RoleService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            RoleController\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            configure\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    configure(consumer: MiddlewareConsumer)\n                \n            \n\n\n            \n                \n                    Defined in src/role/role.module.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    consumer\n                                    \n                                            MiddlewareConsumer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import {MiddlewareConsumer, Module, NestModule, RequestMethod} from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\n\nimport { RoleService } from './role.service';\nimport { RoleEntity } from './role.entity';\nimport { RoleController } from './role.controller';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([RoleEntity])],\n  providers: [RoleService],\n  controllers: [\n    RoleController\n  ],\n  exports: []\n})\nexport class RoleModule implements NestModule {\n  public configure(consumer: MiddlewareConsumer) {\n  }\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RoleRO.html":{"url":"interfaces/RoleRO.html","title":"interface - RoleRO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  RoleRO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/role/role.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        role\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        role\n                                    \n                                \n                                \n                                    \n                                        role:         RoleData\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         RoleData\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface RoleData {\n\n    name: string;\n    description: string;\n    active?: boolean;\n    createdat?: Date;\n    createdby?: number;\n    updatedat?: Date;\n    updatedby?: number;\n\n  }\n  \n  export interface RoleRO {\n    role: RoleData;\n  }\n\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RoleService.html":{"url":"injectables/RoleService.html","title":"injectable - RoleService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  RoleService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/role/role.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                buildRoleRO\n                            \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findById\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(roleRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/role/role.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        roleRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            buildRoleRO\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    buildRoleRO(role: RoleEntity)\n                \n            \n\n\n            \n                \n                    Defined in src/role/role.service.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    role\n                                    \n                                                RoleEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     { role: { id: any; name: any; description: any; }; }\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(dto: CreateRoleDto)\n                \n            \n\n\n            \n                \n                    Defined in src/role/role.service.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                CreateRoleDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/role/role.service.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n\n            \n                \n                    Defined in src/role/role.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findById\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findById(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/role/role.service.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(undefined: CreateRoleDto)\n                \n            \n\n\n            \n                \n                    Defined in src/role/role.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                CreateRoleDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: number, dto: CreateRoleDto)\n                \n            \n\n\n            \n                \n                    Defined in src/role/role.service.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dto\n                                    \n                                                CreateRoleDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository, getRepository, DeleteResult } from 'typeorm';\nimport { HttpException } from '@nestjs/common/exceptions/http.exception';\nimport { HttpStatus } from '@nestjs/common';\nimport { validate } from 'class-validator';\n\nimport { RoleEntity } from './role.entity';\nimport { RoleRO } from './role.interface';\nimport { CreateRoleDto } from './dto';\n\n@Injectable()\nexport class RoleService {\n  constructor(\n    @InjectRepository(RoleEntity)\n    private readonly roleRepository: Repository,\n  ) {}\n\n  async findAll(): Promise {\n    return await this.roleRepository.find();\n  }\n\n  async findOne({id}: CreateRoleDto): Promise {\n    const role = await this.roleRepository.findOne({id});\n    if (!role) {\n      return null;\n    }\n    return null;\n  }\n\n  async create(dto: CreateRoleDto): Promise {\n\n    // check uniqueness of username/email\n    const {name, description} = dto;\n\n    // create new role\n    let newRole = new RoleEntity();\n    newRole.name = name;\n    newRole.description = description;\n\n    const errors = await validate(newRole);\n    if (errors.length > 0) {\n      const _errors = {role: 'Userinput is not valid.'};\n      throw new HttpException({message: 'Input data validation failed', _errors}, HttpStatus.BAD_REQUEST);\n\n    } else {\n      const savedRole = await this.roleRepository.save(newRole);\n      return this.buildRoleRO(savedRole);\n    }\n  }\n\n  async update(id: number, dto: CreateRoleDto): Promise {\n    let toUpdate = await this.roleRepository.findOne(id);\n\n    let updated = Object.assign(toUpdate, dto);\n    return await this.roleRepository.save(updated);\n  }\n\n  async delete(id: number): Promise {\n    return await this.roleRepository.delete({ id: id});\n  }\n\n  async findById(id: number): Promise{\n    const role = await this.roleRepository.findOne(id);\n\n    if (!role) {\n      const errors = {Role: ' not found'};\n      throw new HttpException({errors}, 401);\n    }\n\n    return this.buildRoleRO(role);\n  }\n\n\n  private buildRoleRO(role: RoleEntity) {\n    const RoleRO = {\n      id: role.id,\n      name: role.name,\n      description: role.description\n     \n    };\n\n    return {role: RoleRO};\n  }\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/SiteController.html":{"url":"controllers/SiteController.html","title":"controller - SiteController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  SiteController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/site/site.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                sites\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findMList\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(siteData: CreateSiteDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('site')\n                \n            \n\n            \n                \n                    Defined in src/site/site.controller.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    siteData\n                                    \n                                                CreateSiteDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(params)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('site/:slug')\n                \n            \n\n            \n                \n                    Defined in src/site/site.controller.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/site/site.controller.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findMList\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findMList(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('site')\n                \n            \n\n            \n                \n                    Defined in src/site/site.controller.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: number, siteData: CreateSiteDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put('site')\n                \n            \n\n            \n                \n                    Defined in src/site/site.controller.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    siteData\n                                    \n                                                CreateSiteDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        \nimport { Get, Post, Body, Put, Delete, Param, Controller, UsePipes } from '@nestjs/common';\nimport { Request } from 'express';\nimport { SiteService } from './site.service';\nimport { SiteRO } from './site.interface';\nimport { CreateSiteDto } from './dto';\nimport { SiteEntity } from './site.entity';\nimport { HttpException } from '@nestjs/common/exceptions/http.exception';\n\n//import { User } from './user.decorator';\nimport { ValidationPipe } from '../shared/pipes/validation.pipe';\n\n\nimport {\n  ApiBearerAuth,\n  ApiResponse,\n  ApiOperation, \n  ApiTags,\n} from '@nestjs/swagger';\n\n@ApiBearerAuth()\n@ApiTags('sites')\n@Controller('sites')\nexport class SiteController {\n  constructor(private readonly siteService: SiteService) {}\n\n\n  @Get()\n  async findAll(): Promise {\n    return await this.siteService.findAll();\n  }\n\n  @Get('site')\n  async findMList(@Param('id') id: number): Promise {\n    return await this.siteService.findById(id);\n  }\n\n  @Put('site')\n  async update(@Param('id') id: number, @Body('site') siteData: CreateSiteDto) {\n    return await this.siteService.update(id, siteData);\n  }\n\n  //@UsePipes(new ValidationPipe())\n  @Post('site')\n  async create(@Body('site') siteData: CreateSiteDto) {\n    return this.siteService.create(siteData);\n  }\n\n  @Delete('site/:slug')\n  async delete(@Param() params) {\n    return await this.siteService.delete(params.slug);\n  }\n\n \n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SiteData.html":{"url":"interfaces/SiteData.html","title":"interface - SiteData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SiteData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/site/site.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        active\n                                \n                                \n                                            Optional\n                                        corporation\n                                \n                                \n                                            Optional\n                                        costcenter\n                                \n                                \n                                            Optional\n                                        createdat\n                                \n                                \n                                            Optional\n                                        createdby\n                                \n                                \n                                        description\n                                \n                                \n                                        name\n                                \n                                \n                                            Optional\n                                        updatedat\n                                \n                                \n                                            Optional\n                                        updatedby\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        active\n                                    \n                                \n                                \n                                    \n                                        active:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        corporation\n                                    \n                                \n                                \n                                    \n                                        corporation:         CorporationData\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CorporationData\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        costcenter\n                                    \n                                \n                                \n                                    \n                                        costcenter:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createdat\n                                    \n                                \n                                \n                                    \n                                        createdat:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createdby\n                                    \n                                \n                                \n                                    \n                                        createdby:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedat\n                                    \n                                \n                                \n                                    \n                                        updatedat:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedby\n                                    \n                                \n                                \n                                    \n                                        updatedby:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { CorporationData } from '../corporation/corporation.interface';\n\nexport interface SiteData {\n\n    name: string;\n    costcenter?: number;\n    description: string;\n    active?: boolean;\n    createdat?: Date;\n    createdby?: number;\n    updatedat?: Date;\n    updatedby?: number;\n    corporation?: CorporationData;\n  }\n  \n  export interface SiteRO {\n    site: SiteData;\n  }\n\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SiteEntity.html":{"url":"classes/SiteEntity.html","title":"class - SiteEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SiteEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/site/site.entity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                active\n                            \n                            \n                                corporation\n                            \n                            \n                                costcenter\n                            \n                            \n                                createdby\n                            \n                            \n                                createddate\n                            \n                            \n                                description\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                roles\n                            \n                            \n                                slug\n                            \n                            \n                                updatedby\n                            \n                            \n                                updateddate\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            active\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({default: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/site/site.entity.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            corporation\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CorporationEntity\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne(undefined, undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/site/site.entity.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            costcenter\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/site/site.entity.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdby\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/site/site.entity.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createddate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/site/site.entity.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/site/site.entity.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/site/site.entity.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column('nvarchar', {length: 100})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/site/site.entity.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            roles\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         RoleEntity[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @OneToMany(undefined, undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/site/site.entity.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            slug\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/site/site.entity.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedby\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/site/site.entity.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateddate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/site/site.entity.ts:33\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, PrimaryGeneratedColumn, Column, OneToOne, ManyToOne, OneToMany, JoinColumn, AfterUpdate, BeforeUpdate } from 'typeorm';\nimport { CorporationEntity } from '../corporation/corporation.entity';\nimport { RoleEntity } from '../role/role.entity';\n\n@Entity('site')\nexport class SiteEntity {\n\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column()\n  slug: string;\n\n  @Column(\"nvarchar\", { length: 100 })\n  name: string;\n\n  @Column({nullable: true})\n  costcenter: number;\n\n  @Column({nullable: true})\n  description: string;\n\n  @Column({default: false})\n  active: boolean;\n\n  @Column()\n  createddate: Date;\n\n  @Column()\n  createdby: number\n\n  @Column()\n  updateddate: Date;\n\n  @Column()\n  updatedby: number;\n\n  @ManyToOne(type => CorporationEntity, corporation => corporation.sites)\n  corporation: CorporationEntity;\n\n  @OneToMany(type => RoleEntity, role => role.site)\n  roles: RoleEntity[];\n\n}\n\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SiteModule.html":{"url":"modules/SiteModule.html","title":"module - SiteModule","body":"\n                   \n\n\n\n\n    Modules\n    SiteModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SiteModule\n\n\n\ncluster_SiteModule_providers\n\n\n\n\nSiteService\n\nSiteService\n\n\n\nSiteModule\n\nSiteModule\n\nSiteModule -->\n\nSiteService->SiteModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/site/site.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            SiteService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            SiteController\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            configure\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    configure(consumer: MiddlewareConsumer)\n                \n            \n\n\n            \n                \n                    Defined in src/site/site.module.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    consumer\n                                    \n                                            MiddlewareConsumer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import {MiddlewareConsumer, Module, NestModule, RequestMethod} from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\n\nimport { SiteService } from './site.service';\nimport { SiteEntity } from './site.entity';\nimport { SiteController } from './site.controller';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([SiteEntity])],\n  providers: [SiteService],\n  controllers: [\n    SiteController\n  ],\n  exports: []\n})\nexport class SiteModule implements NestModule {\n  public configure(consumer: MiddlewareConsumer) {\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SiteRO.html":{"url":"interfaces/SiteRO.html","title":"interface - SiteRO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SiteRO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/site/site.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        site\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        site\n                                    \n                                \n                                \n                                    \n                                        site:         SiteData\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SiteData\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { CorporationData } from '../corporation/corporation.interface';\n\nexport interface SiteData {\n\n    name: string;\n    costcenter?: number;\n    description: string;\n    active?: boolean;\n    createdat?: Date;\n    createdby?: number;\n    updatedat?: Date;\n    updatedby?: number;\n    corporation?: CorporationData;\n  }\n  \n  export interface SiteRO {\n    site: SiteData;\n  }\n\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SiteService.html":{"url":"injectables/SiteService.html","title":"injectable - SiteService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SiteService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/site/site.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                buildSiteRO\n                            \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findById\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(siteRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/site/site.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        siteRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            buildSiteRO\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    buildSiteRO(site: SiteEntity)\n                \n            \n\n\n            \n                \n                    Defined in src/site/site.service.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    site\n                                    \n                                                SiteEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     { site: { id: any; name: any; costcenter: any; description: any; }; }\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(dto: CreateSiteDto)\n                \n            \n\n\n            \n                \n                    Defined in src/site/site.service.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                CreateSiteDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/site/site.service.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n\n            \n                \n                    Defined in src/site/site.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findById\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findById(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/site/site.service.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(undefined: CreateSiteDto)\n                \n            \n\n\n            \n                \n                    Defined in src/site/site.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                CreateSiteDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: number, dto: CreateSiteDto)\n                \n            \n\n\n            \n                \n                    Defined in src/site/site.service.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dto\n                                    \n                                                CreateSiteDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository, getRepository, DeleteResult } from 'typeorm';\nimport { HttpException } from '@nestjs/common/exceptions/http.exception';\nimport { HttpStatus } from '@nestjs/common';\nimport { validate } from 'class-validator';\n\nimport { SiteEntity } from './site.entity';\nimport { SiteRO } from './site.interface';\nimport { CreateSiteDto } from './dto';\n\n@Injectable()\nexport class SiteService {\n  constructor(\n    @InjectRepository(SiteEntity)\n    private readonly siteRepository: Repository,\n  ) {}\n\n  async findAll(): Promise {\n    return await this.siteRepository.find();\n  }\n\n  async findOne({id}: CreateSiteDto): Promise {\n    const site = await this.siteRepository.findOne({id});\n    if (!site) {\n      return null;\n    }\n    return null;\n  }\n\n  async create(dto: CreateSiteDto): Promise {\n\n    // check uniqueness of username/email\n    const {name, costcenter, description} = dto;\n\n    // create new site\n    let newSite = new SiteEntity();\n    newSite.name = name;\n    newSite.costcenter = costcenter;\n    newSite.description = description;\n\n    const errors = await validate(newSite);\n    if (errors.length > 0) {\n      const _errors = {site: 'Userinput is not valid.'};\n      throw new HttpException({message: 'Input data validation failed', _errors}, HttpStatus.BAD_REQUEST);\n\n    } else {\n      const savedSite = await this.siteRepository.save(newSite);\n      return this.buildSiteRO(savedSite);\n    }\n  }\n\n  async update(id: number, dto: CreateSiteDto): Promise {\n    let toUpdate = await this.siteRepository.findOne(id);\n\n    let updated = Object.assign(toUpdate, dto);\n    return await this.siteRepository.save(updated);\n  }\n\n  async delete(id: number): Promise {\n    return await this.siteRepository.delete({ id: id});\n  }\n\n  async findById(id: number): Promise{\n    const site = await this.siteRepository.findOne(id);\n\n    if (!site) {\n      const errors = {Site: ' not found'};\n      throw new HttpException({errors}, 401);\n    }\n\n    return this.buildSiteRO(site);\n  }\n\n\n  private buildSiteRO(site: SiteEntity) {\n    const SiteRO = {\n      id: site.id,\n      name: site.name,\n      costcenter: site.costcenter,\n      description: site.description\n     \n    };\n\n    return {site: SiteRO};\n  }\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/SqldirectController.html":{"url":"controllers/SqldirectController.html","title":"controller - SqldirectController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  SqldirectController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/sqldirect/sqldirect.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                sqldirect\n            \n\n\n\n\n\n\n    \n\n\n    \n        import { Controller } from '@nestjs/common';\n\n@Controller('sqldirect')\nexport class SqldirectController {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SqldirectModule.html":{"url":"modules/SqldirectModule.html","title":"module - SqldirectModule","body":"\n                   \n\n\n\n\n    Modules\n    SqldirectModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SqldirectModule\n\n\n\ncluster_SqldirectModule_providers\n\n\n\n\nSqldirectService\n\nSqldirectService\n\n\n\nSqldirectModule\n\nSqldirectModule\n\nSqldirectModule -->\n\nSqldirectService->SqldirectModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/services/sqldirect/sqldirect.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            SqldirectService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            SqldirectController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { SqldirectController } from './sqldirect.controller';\nimport { SqldirectService } from './sqldirect.service';\n\n@Module({\n  controllers: [SqldirectController],\n  providers: [SqldirectService]\n})\nexport class SqldirectModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SqldirectService.html":{"url":"injectables/SqldirectService.html","title":"injectable - SqldirectService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SqldirectService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/sqldirect/sqldirect.service.ts\n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class SqldirectService {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/TagController.html":{"url":"controllers/TagController.html","title":"controller - TagController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  TagController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tag/tag.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                tags\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/tag/tag.controller.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {Get, Controller } from '@nestjs/common';\n\nimport { TagEntity } from './tag.entity';\nimport { TagService } from './tag.service';\n\nimport {\n  ApiBearerAuth, ApiTags,\n} from '@nestjs/swagger';\n\n@ApiBearerAuth()\n@ApiTags('tags')\n@Controller('tags')\nexport class TagController {\n\n  constructor(private readonly tagService: TagService) {}\n\n  @Get()\n  async findAll(): Promise {\n    return await this.tagService.findAll();\n  }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TagEntity.html":{"url":"classes/TagEntity.html","title":"class - TagEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TagEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tag/tag.entity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createdby\n                            \n                            \n                                createddate\n                            \n                            \n                                id\n                            \n                            \n                                tag\n                            \n                            \n                                updatedby\n                            \n                            \n                                updateddate\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdby\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/tag/tag.entity.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createddate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/tag/tag.entity.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/tag/tag.entity.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tag\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column('nvarchar', {length: 50})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/tag/tag.entity.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedby\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/tag/tag.entity.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateddate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/tag/tag.entity.ts:19\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, PrimaryGeneratedColumn, Column } from 'typeorm';\n\n@Entity('tag')\nexport class TagEntity {\n\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column(\"nvarchar\", { length: 50 })\n  tag: string;\n\n  @Column()\n  createddate: Date;\n\n  @Column()\n  createdby: number\n\n  @Column()\n  updateddate: Date;\n\n  @Column()\n  updatedby: number;\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TagModule.html":{"url":"modules/TagModule.html","title":"module - TagModule","body":"\n                   \n\n\n\n\n    Modules\n    TagModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TagModule\n\n\n\ncluster_TagModule_imports\n\n\n\ncluster_TagModule_providers\n\n\n\n\nUserModule\n\nUserModule\n\n\n\nTagModule\n\nTagModule\n\nTagModule -->\n\nUserModule->TagModule\n\n\n\n\n\nTagService\n\nTagService\n\nTagModule -->\n\nTagService->TagModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/tag/tag.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            TagService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            TagController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            configure\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    configure(consumer: MiddlewareConsumer)\n                \n            \n\n\n            \n                \n                    Defined in src/tag/tag.module.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    consumer\n                                    \n                                            MiddlewareConsumer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import {MiddlewareConsumer, Module, NestModule, RequestMethod} from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { UserModule } from '../user/user.module';\nimport { TagService } from './tag.service';\nimport { TagEntity } from './tag.entity';\nimport { TagController } from './tag.controller';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([TagEntity]), UserModule],\n  providers: [TagService],\n  controllers: [\n    TagController\n  ],\n  exports: []\n})\nexport class TagModule implements NestModule {\n  public configure(consumer: MiddlewareConsumer) {\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TagService.html":{"url":"injectables/TagService.html","title":"injectable - TagService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TagService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tag/tag.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(tagRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/tag/tag.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        tagRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n\n            \n                \n                    Defined in src/tag/tag.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable} from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { TagEntity } from './tag.entity';\n\n@Injectable()\nexport class TagService {\n  constructor(\n    @InjectRepository(TagEntity)\n    private readonly tagRepository: Repository\n  ) {}\n\n  async findAll(): Promise {\n    return await this.tagRepository.find();\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ToIntegerPipe.html":{"url":"classes/ToIntegerPipe.html","title":"class - ToIntegerPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ToIntegerPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/pipes/to-integer.pipe.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            PipeTransform\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \ntransform(value: string, metadata: ArgumentMetadata)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/pipes/to-integer.pipe.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    metadata\n                                    \n                                            ArgumentMetadata\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {ArgumentMetadata, BadRequestException, PipeTransform} from '@nestjs/common';\n\n\nexport class ToIntegerPipe implements PipeTransform {\n\n    transform(value: string, metadata: ArgumentMetadata): number {\n\n        const val = parseInt(value);\n\n        if (isNaN(val)) {\n            throw new BadRequestException(\n                'conversion to number failed' + value);\n        }\n\n        return val;\n\n    }\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserDto.html":{"url":"classes/UpdateUserDto.html","title":"class - UpdateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dto/update-user.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                bio\n                            \n                            \n                                    Readonly\n                                email\n                            \n                            \n                                    Readonly\n                                image\n                            \n                            \n                                    Readonly\n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            bio\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/user/dto/update-user.dto.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/user/dto/update-user.dto.ts:3\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            image\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/user/dto/update-user.dto.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            username\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/user/dto/update-user.dto.ts:2\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class UpdateUserDto {\n  readonly username: string;\n  readonly email: string;\n  readonly bio: string;\n  readonly image: string;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UserController.html":{"url":"controllers/UserController.html","title":"controller - UserController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UserController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.controller.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                findMe\n                            \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(userData: CreateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UsePipes(new ValidationPipe())@Post('users')\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userData\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(params)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('users/:slug')\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findMe\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findMe(email: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('user')\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            login\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    login(loginUserDto: LoginUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UsePipes(new ValidationPipe())@Post('users/login')\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    loginUserDto\n                                    \n                                                LoginUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update(userId: number, userData: UpdateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put('user')\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userData\n                                    \n                                                UpdateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Get, Post, Body, Put, Delete, Param, Controller, UsePipes } from '@nestjs/common';\nimport { Request } from 'express';\nimport { UserService } from './user.service';\nimport { UserRO } from './user.interface';\nimport { CreateUserDto, UpdateUserDto, LoginUserDto } from './dto';\nimport { HttpException } from '@nestjs/common/exceptions/http.exception';\nimport { User } from './user.decorator';\nimport { ValidationPipe } from '../shared/pipes/validation.pipe';\n\nimport {\n  ApiBearerAuth, ApiTags\n} from '@nestjs/swagger';\n\n@ApiBearerAuth()\n@ApiTags('user')\n@Controller()\nexport class UserController {\n\n  constructor(private readonly userService: UserService) {}\n\n  @Get('user')\n  async findMe(@User('email') email: string): Promise {\n    return await this.userService.findByEmail(email);\n  }\n\n  @Put('user')\n  async update(@User('id') userId: number, @Body('user') userData: UpdateUserDto) {\n    return await this.userService.update(userId, userData);\n  }\n\n  @UsePipes(new ValidationPipe())\n  @Post('users')\n  async create(@Body('user') userData: CreateUserDto) {\n    return this.userService.create(userData);\n  }\n\n  @Delete('users/:slug')\n  async delete(@Param() params) {\n    return await this.userService.delete(params.slug);\n  }\n\n  @UsePipes(new ValidationPipe())\n  @Post('users/login')\n  async login(@Body('user') loginUserDto: LoginUserDto): Promise {\n    const _user = await this.userService.findOne(loginUserDto);\n\n    const errors = {User: ' not found'};\n    if (!_user) throw new HttpException({errors}, 401);\n\n    const token = await this.userService.generateJWT(_user);\n    const {email, username, bio, image} = _user;\n    const user = {email, token, username, bio, image};\n    return {user}\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserData.html":{"url":"interfaces/UserData.html","title":"interface - UserData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  UserData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        bio\n                                \n                                \n                                        email\n                                \n                                \n                                            Optional\n                                        image\n                                \n                                \n                                        token\n                                \n                                \n                                        username\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        bio\n                                    \n                                \n                                \n                                    \n                                        bio:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        image\n                                    \n                                \n                                \n                                    \n                                        image:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        token\n                                    \n                                \n                                \n                                    \n                                        token:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface UserData {\n  username: string;\n  email: string;\n  token: string;\n  bio: string;\n  image?: string;\n}\n\nexport interface UserRO {\n  user: UserData;\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserEntity.html":{"url":"classes/UserEntity.html","title":"class - UserEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.entity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                active\n                            \n                            \n                                articles\n                            \n                            \n                                bio\n                            \n                            \n                                createdby\n                            \n                            \n                                createddate\n                            \n                            \n                                email\n                            \n                            \n                                favorites\n                            \n                            \n                                id\n                            \n                            \n                                image\n                            \n                            \n                                password\n                            \n                            \n                                roles\n                            \n                            \n                                updatedby\n                            \n                            \n                                updateddate\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                hashPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            active\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({default: ''})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/user.entity.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            articles\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ArticleEntity[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @OneToMany(undefined, undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/user.entity.ts:54\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            bio\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({default: ''})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/user.entity.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdby\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/user.entity.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createddate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/user.entity.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()@IsEmail()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/user.entity.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            favorites\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ArticleEntity[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToMany(undefined)@JoinTable()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/user.entity.ts:51\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/user.entity.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            image\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({default: ''})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/user.entity.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/user.entity.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            roles\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         RoleEntity[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @OneToMany(undefined, undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/user.entity.ts:57\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedby\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/user.entity.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateddate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/user.entity.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            username\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/user.entity.ts:14\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            hashPassword\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    hashPassword()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @BeforeInsert()\n                \n            \n\n            \n                \n                    Defined in src/user/user.entity.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {Entity, PrimaryGeneratedColumn, Column, BeforeInsert, JoinTable, ManyToMany, OneToMany} from 'typeorm';\nimport { IsEmail } from 'class-validator';\nimport * as argon2 from 'argon2';\nimport { ArticleEntity } from '../article/article.entity';\nimport { RoleEntity } from '../role/role.entity';\n\n@Entity('user')\nexport class UserEntity {\n\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column()\n  username: string;\n\n  @Column()\n  @IsEmail()\n  email: string;\n\n  @Column({default: ''})\n  bio: string;\n\n  @Column({default: ''})\n  image: string;\n\n  @Column()\n  password: string;\n\n  @Column({default: ''})\n  active: boolean;\n  \n  @Column()\n  createddate: Date;\n\n  @Column()\n  createdby: number\n\n  @Column()\n  updateddate: Date;\n\n  @Column()\n  updatedby: number;\n\n  @BeforeInsert()\n  async hashPassword() {\n    this.password = await argon2.hash(this.password);\n  }\n\n  @ManyToMany(type => ArticleEntity)\n  @JoinTable()\n  favorites: ArticleEntity[];\n\n  @OneToMany(type => ArticleEntity, article => article.author)\n  articles: ArticleEntity[];\n\n  @OneToMany(type => RoleEntity, role => role.user)\n  roles: RoleEntity[];\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserModule.html":{"url":"modules/UserModule.html","title":"module - UserModule","body":"\n                   \n\n\n\n\n    Modules\n    UserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UserModule\n\n\n\ncluster_UserModule_exports\n\n\n\ncluster_UserModule_providers\n\n\n\n\nUserService \n\nUserService \n\n\n\nUserModule\n\nUserModule\n\nUserService  -->\n\nUserModule->UserService \n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/user/user.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UserController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UserService\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            configure\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    configure(consumer: MiddlewareConsumer)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.module.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    consumer\n                                    \n                                            MiddlewareConsumer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import {MiddlewareConsumer, Module, NestModule, RequestMethod} from '@nestjs/common';\nimport { UserController } from './user.controller';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { UserEntity } from './user.entity';\nimport { UserService } from './user.service';\nimport { AuthMiddleware } from './auth.middleware';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([UserEntity])],\n  providers: [UserService],\n  controllers: [\n    UserController\n  ],\n  exports: [UserService]\n})\nexport class UserModule implements NestModule {\n  public configure(consumer: MiddlewareConsumer) {\n    consumer\n      .apply(AuthMiddleware)\n      .forRoutes({path: 'user', method: RequestMethod.GET}, {path: 'user', method: RequestMethod.PUT});\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserRO.html":{"url":"interfaces/UserRO.html","title":"interface - UserRO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  UserRO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        user\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                    \n                                \n                                \n                                    \n                                        user:         UserData\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         UserData\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface UserData {\n  username: string;\n  email: string;\n  token: string;\n  bio: string;\n  image?: string;\n}\n\nexport interface UserRO {\n  user: UserData;\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                buildUserRO\n                            \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findByEmail\n                            \n                            \n                                    Async\n                                findById\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Public\n                                generateJWT\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: Repository, ConfigService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/user/user.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ConfigService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            buildUserRO\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    buildUserRO(user: UserEntity)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:120\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                UserEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     { user: { id: any; username: any; email: any; bio: any; token: any; image: any; }; }\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(dto: CreateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:86\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findByEmail\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findByEmail(email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:101\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findById\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findById(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:90\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(undefined: LoginUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                LoginUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            generateJWT\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    generateJWT(user)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:106\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: number, dto: UpdateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dto\n                                    \n                                                UpdateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository, getRepository, DeleteResult } from 'typeorm';\nimport { UserEntity } from './user.entity';\nimport {CreateUserDto, LoginUserDto, UpdateUserDto} from './dto';\nimport { UserRO } from './user.interface';\nimport { validate } from 'class-validator';\nimport { HttpException } from '@nestjs/common/exceptions/http.exception';\nimport { HttpStatus } from '@nestjs/common';\nimport * as argon2 from 'argon2';\n\nconst jwt = require('jsonwebtoken');\n//import { SECRET } from '../config';\nimport {ConfigService} from '@nestjs/config'\n\n@Injectable()\nexport class UserService {\n  constructor(\n    @InjectRepository(UserEntity)\n    private readonly userRepository: Repository,\n    private ConfigService: ConfigService,\n  ) {}\n\n  async findAll(): Promise {\n    return await this.userRepository.find();\n  }\n\n  async findOne({email, password}: LoginUserDto): Promise {\n    const user = await this.userRepository.findOne({email});\n    if (!user) {\n      return null;\n    }\n\n    if (await argon2.verify(user.password, password)) {\n      return user;\n    }\n\n    return null;\n  }\n\n  async create(dto: CreateUserDto): Promise {\n\n    // check uniqueness of username/email\n    const {username, email, password} = dto;\n    const qb = await getRepository(UserEntity)\n      .createQueryBuilder('user')\n      .where('user.username = :username', { username })\n      .orWhere('user.email = :email', { email });\n\n    const user = await qb.getOne();\n\n    if (user) {\n      const errors = {username: 'Username and email must be unique.'};\n      throw new HttpException({message: 'Input data validation failed', errors}, HttpStatus.BAD_REQUEST);\n\n    }\n\n    // create new user\n    let newUser = new UserEntity();\n    newUser.username = username;\n    newUser.email = email;\n    newUser.password = password;\n    newUser.articles = [];\n\n    const errors = await validate(newUser);\n    if (errors.length > 0) {\n      const _errors = {username: 'Userinput is not valid.'};\n      throw new HttpException({message: 'Input data validation failed', _errors}, HttpStatus.BAD_REQUEST);\n\n    } else {\n      const savedUser = await this.userRepository.save(newUser);\n      return this.buildUserRO(savedUser);\n    }\n\n  }\n\n  async update(id: number, dto: UpdateUserDto): Promise {\n    let toUpdate = await this.userRepository.findOne(id);\n    delete toUpdate.password;\n    delete toUpdate.favorites;\n\n    let updated = Object.assign(toUpdate, dto);\n    return await this.userRepository.save(updated);\n  }\n\n  async delete(email: string): Promise {\n    return await this.userRepository.delete({ email: email});\n  }\n\n  async findById(id: number): Promise{\n    const user = await this.userRepository.findOne(id);\n\n    if (!user) {\n      const errors = {User: ' not found'};\n      throw new HttpException({errors}, 401);\n    }\n\n    return this.buildUserRO(user);\n  }\n\n  async findByEmail(email: string): Promise{\n    const user = await this.userRepository.findOne({email: email});\n    return this.buildUserRO(user);\n  }\n\n  public generateJWT(user) {\n    let today = new Date();\n    let exp = new Date(today);\n    exp.setDate(today.getDate() + 60);\n    const secret = this.ConfigService.get('JWT_SECRET');\n\n    return jwt.sign({\n      id: user.id,\n      username: user.username,\n      email: user.email,\n      exp: exp.getTime() / 1000,\n    }, secret);\n  };\n\n  private buildUserRO(user: UserEntity) {\n    const userRO = {\n      id: user.id,\n      username: user.username,\n      email: user.email,\n      bio: user.bio,\n      token: this.generateJWT(user),\n      image: user.image\n    };\n\n    return {user: userRO};\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ValidationPipe.html":{"url":"injectables/ValidationPipe.html","title":"injectable - ValidationPipe","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ValidationPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/pipes/validation.pipe.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                buildError\n                            \n                            \n                                    Private\n                                toValidate\n                            \n                            \n                                    Async\n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            buildError\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    buildError(errors)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/pipes/validation.pipe.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    errors\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            toValidate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toValidate(metatype)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/pipes/validation.pipe.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    metatype\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    transform(value, metadata: ArgumentMetadata)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/pipes/validation.pipe.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    metadata\n                                    \n                                            ArgumentMetadata\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {PipeTransform, ArgumentMetadata, BadRequestException, HttpStatus, Injectable} from '@nestjs/common';\nimport { validate } from 'class-validator';\nimport { plainToClass } from 'class-transformer';\nimport { HttpException } from '@nestjs/common/exceptions/http.exception';\n\n@Injectable()\nexport class ValidationPipe implements PipeTransform {\n  async transform(value, metadata: ArgumentMetadata) {\n\n    if (!value) {\n      throw new BadRequestException('No data submitted');\n    }\n\n    const { metatype } = metadata;\n    if (!metatype || !this.toValidate(metatype)) {\n      return value;\n    }\n    const object = plainToClass(metatype, value);\n    const errors = await validate(object);\n    if (errors.length > 0) {\n      throw new HttpException({message: 'Input data validation failed', errors:  this.buildError(errors)}, HttpStatus.BAD_REQUEST);\n    }\n    return value;\n  }\n\n  private buildError(errors) {\n    const result = {};\n    errors.forEach(el => {\n      let prop = el.property;\n      Object.entries(el.constraints).forEach(constraint => {\n        result[prop + constraint[0]] = `${constraint[1]}`;\n      });\n    });\n    return result;\n  }\n\n  private toValidate(metatype): boolean {\n    const types = [String, Boolean, Number, Array, Object];\n    return !types.find((type) => metatype === type);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ViewController.html":{"url":"controllers/ViewController.html","title":"controller - ViewController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ViewController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/view/view.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                view\n            \n\n\n\n\n\n\n    \n\n\n    \n        import { Controller } from '@nestjs/common';\n\n@Controller('view')\nexport class ViewController {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ViewModule.html":{"url":"modules/ViewModule.html","title":"module - ViewModule","body":"\n                   \n\n\n\n\n    Modules\n    ViewModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ViewModule\n\n\n\ncluster_ViewModule_providers\n\n\n\n\nViewService\n\nViewService\n\n\n\nViewModule\n\nViewModule\n\nViewModule -->\n\nViewService->ViewModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/services/view/view.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ViewService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ViewService } from './view.service';\n\n@Module({\n  providers: [ViewService]\n})\nexport class ViewModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ViewService.html":{"url":"injectables/ViewService.html","title":"injectable - ViewService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ViewService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/view/view.service.ts\n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class ViewService {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/article/article.controller.ts\n            \n            controller\n            ArticleController\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/article/article.entity.ts\n            \n            class\n            ArticleEntity\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/article/article.interface.ts\n            \n            interface\n            ArticleData\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/article/article.interface.ts\n            \n            interface\n            ArticleRO\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/article/article.interface.ts\n            \n            interface\n            ArticlesRO\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/article/article.interface.ts\n            \n            interface\n            Comment\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/article/article.interface.ts\n            \n            interface\n            CommentsRO\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/article/article.service.ts\n            \n            injectable\n            ArticleService\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/article/article.service.ts\n            \n            variable\n            slug\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/article/comment.entity.ts\n            \n            class\n            Comment\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/article/dto/create-article.dto.ts\n            \n            class\n            CreateArticleDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/article/dto/create-comment.ts\n            \n            class\n            CreateCommentDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/config/config.env.ts\n            \n            variable\n            configenv\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/config/database.config.ts\n            \n            injectable\n            DatabaseConfig\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/corporation/corporation.controller.ts\n            \n            controller\n            CorporationController\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/corporation/corporation.entity.ts\n            \n            class\n            CorporationEntity\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/corporation/corporation.interface.ts\n            \n            interface\n            CorporationData\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/corporation/corporation.interface.ts\n            \n            interface\n            CorporationRO\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/corporation/corporation.service.ts\n            \n            injectable\n            CorporationService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/corporation/dto/create-corporation.dto.ts\n            \n            class\n            CreateCorporationDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/errorlog/dto/create-errorlog.dto.ts\n            \n            class\n            CreateErrorLogDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/errorlog/errorlog.controller.ts\n            \n            controller\n            ErrorlogController\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/errorlog/errorlog.entity.ts\n            \n            class\n            ErrorLogEntity\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/errorlog/errorlog.service.ts\n            \n            injectable\n            ErrorlogService\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/group/dto/create-group.dto.ts\n            \n            class\n            CreateGroupDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/group/group.controller.ts\n            \n            controller\n            GroupController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/group/group.entity.ts\n            \n            class\n            GroupEntity\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/group/group.interface.ts\n            \n            interface\n            GroupData\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/group/group.interface.ts\n            \n            interface\n            GroupRO\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/group/group.service.ts\n            \n            injectable\n            GroupService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/list/dto/create-list.dto.ts\n            \n            class\n            CreateListDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/list/dto/create-listentry.dto.ts\n            \n            class\n            CreateListEntryDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/list/list.controller.ts\n            \n            controller\n            ListController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/list/list.entity.ts\n            \n            class\n            ListEntity\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/list/list.interface.ts\n            \n            interface\n            ListData\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/list/list.interface.ts\n            \n            interface\n            ListEntry\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/list/list.interface.ts\n            \n            interface\n            ListEntryRO\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/list/list.interface.ts\n            \n            interface\n            ListRO\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/list/list.service.ts\n            \n            injectable\n            ListService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/list/listentry.entity.ts\n            \n            class\n            ListEntryEntity\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/menu/dto/create-menu.dto.ts\n            \n            class\n            CreateMenuDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/menu/dto/create-menuentry.dto.ts\n            \n            class\n            CreateMenuEntryDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/menu/dto/create-menuentrypoint.dto.ts\n            \n            class\n            CreateMenuEntryPointDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/menu/menu.controller.ts\n            \n            controller\n            MenuController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/menu/menu.interface.ts\n            \n            interface\n            MenuAppData\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/menu/menu.interface.ts\n            \n            interface\n            MenuAppEntry\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/menu/menu.interface.ts\n            \n            interface\n            MenuEntryRO\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/menu/menu.interface.ts\n            \n            interface\n            MenuRO\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/menu/menu.service.ts\n            \n            injectable\n            MenuService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/menu/menuapp.entity.ts\n            \n            class\n            MenuAppEntity\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/menu/menuentry.entity.ts\n            \n            class\n            MenuEntryEntity\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/middleware/logger.service.ts\n            \n            class\n            MyLogger\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/profile/follows.entity.ts\n            \n            class\n            FollowsEntity\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/profile/profile.controller.ts\n            \n            controller\n            ProfileController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/profile/profile.interface.ts\n            \n            interface\n            ProfileData\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/profile/profile.interface.ts\n            \n            interface\n            ProfileRO\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/profile/profile.service.ts\n            \n            injectable\n            ProfileService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/role/dto/create-role.dto.ts\n            \n            class\n            CreateRoleDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/role/dto/create-roleapp.dto.ts\n            \n            class\n            CreateRoleAppDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/role/role.controller.ts\n            \n            controller\n            RoleController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/role/role.entity.ts\n            \n            class\n            RoleEntity\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/role/role.interface.ts\n            \n            interface\n            RoleData\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/role/role.interface.ts\n            \n            interface\n            RoleRO\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/role/role.service.ts\n            \n            injectable\n            RoleService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/role/rolemenuapp.entity.ts\n            \n            class\n            RoleMenuAppEntity\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/role/rolemenuentry.entity.ts\n            \n            class\n            RoleMenuEntryEntity\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/services/comment/comment.controller.ts\n            \n            controller\n            CommentController\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/services/comment/comment.service.ts\n            \n            injectable\n            CommentService\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/services/sqldirect/sqldirect.controller.ts\n            \n            controller\n            SqldirectController\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/services/sqldirect/sqldirect.service.ts\n            \n            injectable\n            SqldirectService\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/services/view/view.controller.ts\n            \n            controller\n            ViewController\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/services/view/view.service.ts\n            \n            injectable\n            ViewService\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/shared/base.controller.ts\n            \n            class\n            BaseController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/shared/pipes/to-integer.pipe.ts\n            \n            class\n            ToIntegerPipe\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/shared/pipes/validation.pipe.ts\n            \n            injectable\n            ValidationPipe\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/site/dto/create-site.dto.ts\n            \n            class\n            CreateSiteDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/site/site.controller.ts\n            \n            controller\n            SiteController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/site/site.entity.ts\n            \n            class\n            SiteEntity\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/site/site.interface.ts\n            \n            interface\n            SiteData\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/site/site.interface.ts\n            \n            interface\n            SiteRO\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/site/site.service.ts\n            \n            injectable\n            SiteService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/tag/tag.controller.ts\n            \n            controller\n            TagController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/tag/tag.entity.ts\n            \n            class\n            TagEntity\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/tag/tag.service.ts\n            \n            injectable\n            TagService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/user/auth.middleware.ts\n            \n            injectable\n            AuthMiddleware\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/user/dto/create-user.dto.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/user/dto/login-user.dto.ts\n            \n            class\n            LoginUserDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/user/dto/update-user.dto.ts\n            \n            class\n            UpdateUserDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/user/user.controller.ts\n            \n            controller\n            UserController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/user/user.decorator.ts\n            \n            variable\n            User\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/user/user.entity.ts\n            \n            class\n            UserEntity\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                src/user/user.interface.ts\n            \n            interface\n            UserData\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/user/user.interface.ts\n            \n            interface\n            UserRO\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/user/user.service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/user/user.service.ts\n            \n            variable\n            jwt\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^7.1.1\n        \n            @nestjs/config : ^0.5.0\n        \n            @nestjs/core : ^7.1.1\n        \n            @nestjs/microservices : ^7.1.1\n        \n            @nestjs/platform-express : ^7.1.1\n        \n            @nestjs/swagger : ^4.5.8\n        \n            @nestjs/typeorm : ^7.1.0\n        \n            @nestjs/websockets : ^7.1.1\n        \n            @types/jsonwebtoken : ^8.5.0\n        \n            argon2 : ^0.26.2\n        \n            class-transformer : ^0.2.3\n        \n            class-validator : ^0.12.2\n        \n            crypto : ^1.0.1\n        \n            crypto-js : ^4.0.0\n        \n            dotenv : ^8.2.0\n        \n            jsonwebtoken : ^8.5.1\n        \n            mssql : ^6.2.0\n        \n            passport-jwt : ^4.0.0\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^6.5.5\n        \n            slug : ^3.2.0\n        \n            swagger-ui-express : ^4.1.4\n        \n            typeorm : ^0.2.25\n        \n            typescript : ^3.9.3\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            bootstrap\n                        \n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nRISNODE-ADMIN\n General Node REST API for admin \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ArticleModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CommentModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CorporationModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ErrorlogModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        GroupModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ListModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MenuModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProfileModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RoleModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SiteModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SqldirectModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TagModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ViewModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_ArticleModule\n\n\n\ncluster_ArticleModule_providers\n\n\n\ncluster_CorporationModule\n\n\n\ncluster_CorporationModule_providers\n\n\n\ncluster_ErrorlogModule\n\n\n\ncluster_ErrorlogModule_providers\n\n\n\ncluster_GroupModule\n\n\n\ncluster_GroupModule_providers\n\n\n\ncluster_ListModule\n\n\n\ncluster_ListModule_providers\n\n\n\ncluster_MenuModule\n\n\n\ncluster_MenuModule_providers\n\n\n\ncluster_ProfileModule\n\n\n\ncluster_ProfileModule_providers\n\n\n\ncluster_RoleModule\n\n\n\ncluster_RoleModule_providers\n\n\n\ncluster_SiteModule\n\n\n\ncluster_SiteModule_providers\n\n\n\ncluster_SqldirectModule\n\n\n\ncluster_SqldirectModule_providers\n\n\n\ncluster_TagModule\n\n\n\ncluster_TagModule_providers\n\n\n\ncluster_UserModule\n\n\n\ncluster_UserModule_exports\n\n\n\ncluster_UserModule_providers\n\n\n\ncluster_ViewModule\n\n\n\ncluster_ViewModule_providers\n\n\n\n\nArticleModule\n\nArticleModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nArticleModule->AppModule\n\n\n\n\n\nCorporationModule\n\nCorporationModule\n\nAppModule -->\n\nCorporationModule->AppModule\n\n\n\n\n\nErrorlogModule\n\nErrorlogModule\n\nAppModule -->\n\nErrorlogModule->AppModule\n\n\n\n\n\nGroupModule\n\nGroupModule\n\nAppModule -->\n\nGroupModule->AppModule\n\n\n\n\n\nListModule\n\nListModule\n\nAppModule -->\n\nListModule->AppModule\n\n\n\n\n\nMenuModule\n\nMenuModule\n\nAppModule -->\n\nMenuModule->AppModule\n\n\n\n\n\nProfileModule\n\nProfileModule\n\nAppModule -->\n\nProfileModule->AppModule\n\n\n\n\n\nRoleModule\n\nRoleModule\n\nAppModule -->\n\nRoleModule->AppModule\n\n\n\n\n\nSiteModule\n\nSiteModule\n\nAppModule -->\n\nSiteModule->AppModule\n\n\n\n\n\nTagModule\n\nTagModule\n\nAppModule -->\n\nTagModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nArticleModule -->\n\nUserModule->ArticleModule\n\n\n\nProfileModule -->\n\nUserModule->ProfileModule\n\n\n\nTagModule -->\n\nUserModule->TagModule\n\n\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nUserService \n\nUserService \n\nUserService  -->\n\nUserModule->UserService \n\n\n\n\n\nArticleService\n\nArticleService\n\nArticleModule -->\n\nArticleService->ArticleModule\n\n\n\n\n\nCorporationService\n\nCorporationService\n\nCorporationModule -->\n\nCorporationService->CorporationModule\n\n\n\n\n\nErrorlogService\n\nErrorlogService\n\nErrorlogModule -->\n\nErrorlogService->ErrorlogModule\n\n\n\n\n\nGroupService\n\nGroupService\n\nGroupModule -->\n\nGroupService->GroupModule\n\n\n\n\n\nListService\n\nListService\n\nListModule -->\n\nListService->ListModule\n\n\n\n\n\nMenuService\n\nMenuService\n\nMenuModule -->\n\nMenuService->MenuModule\n\n\n\n\n\nProfileService\n\nProfileService\n\nProfileModule -->\n\nProfileService->ProfileModule\n\n\n\n\n\nRoleService\n\nRoleService\n\nRoleModule -->\n\nRoleService->RoleModule\n\n\n\n\n\nSiteService\n\nSiteService\n\nSiteModule -->\n\nSiteService->SiteModule\n\n\n\n\n\nSqldirectService\n\nSqldirectService\n\n\n\nSqldirectModule\n\nSqldirectModule\n\nSqldirectModule -->\n\nSqldirectService->SqldirectModule\n\n\n\n\n\nTagService\n\nTagService\n\nTagModule -->\n\nTagService->TagModule\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\nViewService\n\nViewService\n\n\n\nViewModule\n\nViewModule\n\nViewModule -->\n\nViewService->ViewModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        15 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    15 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    17 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    35 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    25 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            configenv   (src/.../config.env.ts)\n                        \n                        \n                            jwt   (src/.../user.service.ts)\n                        \n                        \n                            slug   (src/.../article.service.ts)\n                        \n                        \n                            User   (src/.../user.decorator.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/config/config.env.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            configenv\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => ({\n    port: Number(process.env.HTTP_PORT) || 3000,\n    jwtSecret: 'supersecret',\n    database: {\n      type: 'mssql',\n      host: 'rihsrv001',\n      username: 'sa',\n      password: 'RihSrv001#',\n      database: 'risnode-admin-dev',\n      logging: false,\n      entities: [\"src/**/**.entity{.ts,.js}\"],\n      synchronize: true\n    },\n  })\n                        \n                    \n\n\n            \n        \n\n    src/user/user.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            jwt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require('jsonwebtoken')\n                        \n                    \n\n\n            \n        \n\n    src/article/article.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            slug\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require('slug')\n                        \n                    \n\n\n            \n        \n\n    src/user/user.decorator.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            User\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createParamDecorator((data: any, ctx: ExecutionContext) => {\n  const req = ctx.switchToHttp().getRequest();\n  // if route is protected, there is a user set in auth.middleware\n  if (!!req.user) {\n    return !!data ? req.user[data] : req.user;\n  }\n\n  // in case a route is not protected, we still want to get the optional auth user from jwt\n  const token = req.headers.authorization ? (req.headers.authorization as string).split(' ') : null;\n  if (token && token[1]) {\n    const secret = this.configService.get('JWT_SECRET');\n    const decoded: any = jwt.verify(token[1], secret);\n    return !!data ? decoded[data] : decoded.user;\n  }\n})\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
