var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.8","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.304,1,3.264]],["body/controllers/AppController.html",[0,2.249,1,5.628,2,1.904,3,0.097,4,0.097,5,0.083,6,5.493,7,0.36,8,1.77,9,8.423,10,1.462,11,0.009,12,0.682,13,6.225,14,1.462,15,1.004,16,0.297,17,1.181,18,0.097,19,0.03,20,2.001,21,6.225,22,5.493,23,5.493,24,0.006,25,0.008,26,0.006]],["title/modules/AppModule.html",[27,1.304,28,3.264]],["body/modules/AppModule.html",[1,4.65,2,1.622,3,0.057,4,0.057,5,0.049,11,0.009,16,0.422,17,0.696,18,0.057,19,0.018,24,0.004,25,0.005,26,0.004,27,1.858,28,6.717,29,1.546,30,1.593,31,1.696,32,1.696,33,1.593,34,2.449,35,1.696,36,3.239,37,3.239,38,5.28,39,5.28,40,5.28,41,5.28,42,5.28,43,5.28,44,5.28,45,5.28,46,5.28,47,5.28,48,4.524,49,2.449,50,1.696,51,1.696,52,3.672,53,3.184,54,3.672,55,3.672,56,2.742,57,1.878,58,1.274,59,3.672,60,1.151,61,3.672,62,3.672,63,2.572,64,3.672,65,3.672,66,3.672,67,3.672,68,3.672,69,3.672,70,3.672,71,3.672,72,5.303,73,3.511,74,3.716,75,4.268,76,3.672,77,3.961,78,3.672,79,3.672,80,3.672,81,1.696,82,3.672,83,3.672,84,3.672]],["title/controllers/ArticleController.html",[0,1.304,85,3.264]],["body/controllers/ArticleController.html",[0,0.533,2,0.546,3,0.028,4,0.028,5,0.024,7,0.103,8,0.706,10,1.607,11,0.009,12,0.749,14,1.607,16,0.295,17,0.338,18,0.028,19,0.009,20,2.199,24,0.002,25,0.003,26,0.002,85,2.246,86,1.575,87,0.881,88,2.746,89,2.928,90,2.263,91,3.007,92,2.34,93,2.653,94,4.035,95,1.195,96,2.653,97,1.659,98,3.007,99,4.035,100,2.15,101,1.575,102,0.79,103,3.712,104,4.661,105,3.63,106,5.535,107,6.427,108,1.314,109,4.748,110,4.08,111,3.007,112,4.161,113,3.065,114,1.785,115,1.785,116,1.725,117,0.864,118,0.211,119,1.329,120,4.619,121,1.785,122,4.035,123,4.134,124,3.007,125,2.339,126,1.785,127,1.785,128,3.257,129,1.182,130,3.007,131,1.785,132,1.785,133,3.704,134,1.785,135,1.785,136,1.785,137,1.785,138,1.785,139,1.785,140,1.785,141,1.575,142,1.785,143,3.282,144,3.282,145,1.785,146,1.785,147,4.977,148,2.325,149,1.575,150,1.785,151,2.452,152,2.068,153,1.785,154,1.785,155,1.785,156,1.805,157,1.785,158,1.785,159,1.785,160,1.785,161,3.897,162,1.785,163,1.785,164,1.785,165,1.785,166,1.785,167,1.785,168,1.785,169,1.785,170,1.785,171,1.785,172,1.659,173,0.619,174,1.026,175,0.984,176,0.947,177,0.913,178,2.58,179,1.575,180,0.751,181,1.071,182,1.071,183,2.653,184,1.026,185,0.69,186,1.436,187,1.596,188,4.23,189,3.718,190,0.947,191,0.947,192,0.619,193,1.785,194,1.785,195,0.852,196,0.45,197,3.63,198,4.197,199,1.785,200,2.147,201,1.785,202,3.53,203,1.785,204,1.785,205,1.785,206,1.785,207,1.785,208,1.785,209,1.785,210,1.785,211,1.785,212,1.728,213,2.934,214,1.785,215,3.007,216,1.785,217,0.774,218,1.785,219,1.785,220,1.785,221,1.071,222,1.785,223,1.436,224,1.785,225,1.728,226,1.785,227,1.182,228,1.785,229,1.785,230,1.785,231,1.785,232,1.785,233,1.785,234,1.785,235,0.774,236,0.674,237,1.785,238,1.182,239,1.785,240,1.785,241,3.007,242,1.785,243,1.785,244,1.785,245,1.785,246,1.785]],["title/interfaces/ArticleData.html",[103,2.623,247,0.771]],["body/interfaces/ArticleData.html",[3,0.069,4,0.069,5,0.059,7,0.255,11,0.009,15,1.186,16,0.288,18,0.107,24,0.004,25,0.006,26,0.004,88,2.653,102,0.835,103,3.627,108,1.124,109,2.54,118,0.325,119,1.713,125,3.09,128,3.211,151,2.781,173,2.69,181,2.653,182,2.653,184,2.54,221,4.443,238,4.9,247,1.367,248,1.457,249,3.097,250,0.965,251,4.9,252,3.116,253,5.527,254,4.9,255,3.116,256,3.211,257,2.22,258,2.055,259,2.261,260,3.653,261,2.781,262,3.097]],["title/classes/ArticleEntity.html",[19,0.021,260,2.319]],["body/classes/ArticleEntity.html",[3,0.056,4,0.056,5,0.048,7,0.208,10,1.99,11,0.009,12,0.928,15,1.092,16,0.294,18,0.056,19,0.017,24,0.004,25,0.005,26,0.004,60,1.13,81,2.846,102,0.893,108,0.936,118,0.322,125,3.672,128,2.673,151,3.877,173,2.139,185,1.393,221,3.699,236,1.38,250,0.836,251,4.08,254,4.08,257,1.876,260,2.777,263,0.977,264,3.181,265,1.932,266,2.846,267,6.162,268,1.932,269,2.846,270,3.588,271,2.072,272,2.584,273,3.605,274,4.059,275,3.605,276,2.072,277,4.618,278,3.605,279,3.605,280,3.61,281,3.605,282,3.605,283,2.887,284,4.212,285,3.605,286,2.584,287,3.605,288,2.846,289,3.605,290,2.777,291,3.588,292,5.05,293,3.605,294,5.234,295,4.618,296,3.605,297,3.605,298,3.605,299,3.605,300,1.613,301,2.268,302,1.913,303,2.072,304,3.008,305,2.164,306,2.164,307,2.387,308,2.901,309,3.605,310,2.777,311,2.072,312,3.605,313,2.072,314,3.605]],["title/modules/ArticleModule.html",[27,1.304,38,3.062]],["body/modules/ArticleModule.html",[2,1.803,3,0.066,4,0.066,5,0.057,8,1.001,11,0.009,12,0.467,14,1.001,16,0.405,17,0.809,18,0.066,19,0.021,24,0.004,25,0.006,26,0.004,27,2.016,29,1.795,30,1.85,31,1.969,32,1.969,33,1.85,34,3.12,35,1.969,38,5.791,48,4.75,49,2.722,50,1.969,51,1.969,53,3.014,56,3.184,57,2.18,58,1.48,85,5.046,88,2.559,116,1.075,117,0.538,118,0.162,119,0.828,125,3.014,178,5.239,179,3.761,260,2.262,261,2.682,270,3.128,307,2.823,308,3.431,315,3.761,316,4.263,317,3.761,318,4.263,319,3.014,320,2.262,321,3.128,322,3.867,323,4.263,324,3.128,325,2.18,326,3.128,327,2.262,328,4.263,329,3.708,330,3.761,331,2.823,332,3.761,333,4.263,334,1.907,335,3.431,336,4.263,337,6.652,338,4.263,339,6.652,340,3.761,341,6.756,342,5.894,343,6.756,344,3.761,345,4.263,346,4.263,347,5.894]],["title/interfaces/ArticleRO.html",[182,2.623,247,0.771]],["body/interfaces/ArticleRO.html",[3,0.085,4,0.085,5,0.073,7,0.315,11,0.009,15,1.131,16,0.331,18,0.119,24,0.005,25,0.007,26,0.005,88,3.273,102,0.783,103,3.273,108,0.828,109,4.619,118,0.207,125,3.549,128,2.365,151,3.43,173,2.409,181,3.273,182,4.166,184,3.133,221,3.273,238,3.61,247,1.464,248,1.798,249,3.82,250,1.109,251,3.61,252,2.296,253,4.072,254,3.61,255,2.296,256,3.011,257,1.926,258,1.627,259,2.788,260,4.404,261,3.43,262,3.82]],["title/injectables/ArticleService.html",[178,2.894,348,1.184]],["body/injectables/ArticleService.html",[3,0.028,4,0.028,5,0.024,7,0.102,8,0.702,11,0.009,12,0.782,14,1.642,15,1.094,16,0.306,17,0.336,18,0.028,19,0.009,20,2.295,24,0.002,25,0.003,26,0.002,58,0.615,60,0.556,81,0.819,88,3.311,89,2.914,90,1.223,92,1.188,93,2.638,94,2.638,95,1.188,96,2.638,97,1.649,99,2.638,100,1.259,101,2.638,102,0.77,103,3.523,104,3.19,109,4.361,116,1.8,117,0.901,118,0.26,119,1.387,120,3.401,122,3.421,125,2.329,128,3.205,141,2.638,147,5.493,148,2.969,149,2.638,151,1.115,178,1.979,180,0.746,181,1.064,182,1.064,183,1.564,184,1.018,185,1.155,196,1.148,200,2.891,217,0.769,221,1.064,235,3.524,236,1.381,238,1.173,251,3.367,260,1.586,261,1.115,262,3.563,270,0.94,286,2.248,307,1.173,308,1.426,329,1.115,330,1.564,348,0.81,349,0.746,350,1.426,351,2.99,352,2.99,353,2.99,354,1.427,355,1.772,356,3.788,357,3.877,358,3.12,359,3.421,360,1.772,361,2.99,362,2.99,363,1.772,364,1.772,365,2.99,366,1.772,367,2.99,368,1.772,369,2.99,370,1.772,371,1.772,372,1.772,373,2.99,374,1.772,375,2.99,376,1.772,377,2.99,378,1.772,379,1.772,380,1.772,381,2.99,382,1.772,383,0.94,384,1.018,385,1.018,386,1.564,387,1.772,388,2.248,389,1.772,390,1.426,391,1.564,392,2.638,393,2.99,394,2.99,395,1.772,396,1.772,397,2.717,398,3.421,399,1.772,400,1.772,401,2.638,402,1.772,403,2.99,404,1.772,405,1.772,406,5.515,407,1.772,408,1.772,409,2.99,410,2.99,411,2.99,412,2.99,413,2.99,414,2.99,415,2.99,416,2.99,417,1.564,418,1.772,419,1.426,420,1.772,421,1.772,422,1.772,423,1.772,424,1.772,425,1.772,426,5.085,427,1.381,428,1.772,429,1.772,430,1.772,431,1.772,432,4.553,433,1.772,434,4.553,435,1.772,436,1.772,437,1.772,438,1.772,439,1.772,440,1.772,441,2.638,442,1.772,443,2.99,444,2.99,445,2.99,446,1.772,447,1.772,448,1.772,449,2.638,450,1.772,451,1.772,452,1.772,453,1.772,454,1.772,455,1.772,456,1.772,457,1.772,458,2.99,459,1.564,460,1.772,461,1.772,462,1.772,463,1.018,464,1.772,465,1.018,466,1.772,467,1.772,468,1.772,469,1.772,470,1.772,471,1.772,472,1.772,473,1.772]],["title/interfaces/ArticlesRO.html",[181,2.623,247,0.771]],["body/interfaces/ArticlesRO.html",[3,0.083,4,0.083,5,0.072,7,0.308,11,0.009,15,1.124,16,0.327,18,0.117,24,0.005,25,0.007,26,0.005,88,4.787,102,0.899,103,3.205,108,0.811,109,3.068,118,0.261,125,3.502,128,2.316,151,3.359,173,2.377,181,4.111,182,3.205,184,3.068,221,3.205,238,3.535,247,1.454,248,1.76,249,3.74,250,1.094,251,3.535,252,2.248,253,3.987,254,3.535,255,2.248,256,2.971,257,1.9,258,1.593,259,2.73,260,4.376,261,3.359,262,5.587]],["title/injectables/AuthMiddleware.html",[331,2.894,348,1.184]],["body/injectables/AuthMiddleware.html",[3,0.066,4,0.066,5,0.057,7,0.245,8,1.378,11,0.009,12,0.642,14,0.994,16,0.386,17,0.803,18,0.066,19,0.021,24,0.004,25,0.006,26,0.004,73,2.803,74,5.671,89,2.336,116,1.479,117,0.74,118,0.223,119,1.139,176,3.856,177,2.165,185,2.267,195,2.02,196,1.067,200,1.469,235,3.425,331,3.883,334,1.894,348,1.589,349,1.782,354,2.02,388,2.09,397,4.109,427,2.709,474,3.735,475,5.865,476,4.233,477,4.967,478,4.233,479,5.865,480,6.731,481,7.266,482,7.266,483,7.266,484,4.233,485,3.735,486,1.782,487,1.782,488,5.865,489,2.246,490,4.233,491,4.233,492,3.735,493,3.883,494,3.407,495,3.407,496,7.266,497,3.735,498,5.175,499,2.663,500,5.027,501,3.161,502,3.735,503,4.233,504,4.233,505,4.233,506,4.233,507,3.407,508,3.735,509,4.233,510,4.233,511,4.233,512,2.896,513,4.233,514,2.09,515,5.865,516,3.735,517,4.233,518,4.233,519,4.233]],["title/classes/BaseController.html",[19,0.021,520,3.517]],["body/classes/BaseController.html",[3,0.086,4,0.086,5,0.074,7,0.32,8,1.646,11,0.009,12,0.767,14,1.3,16,0.334,18,0.086,19,0.027,20,2.253,24,0.006,25,0.007,26,0.006,73,3.665,74,5.968,116,1.767,117,0.885,118,0.211,119,1.361,195,2.642,235,3.336,263,1.499,354,2.642,397,3.878,493,3.665,494,4.455,499,3.483,500,5.234,501,4.134,507,4.455,508,4.884,520,5.64,521,4.884,522,6.784,523,7.008,524,4.884,525,5.536,526,7.008,527,5.536,528,7.008,529,3.181,530,5.536,531,5.536]],["title/classes/Comment.html",[19,0.021,125,2.235]],["body/classes/Comment.html",[3,0.086,4,0.086,5,0.074,7,0.321,10,1.809,11,0.009,12,0.843,15,0.936,16,0.335,18,0.086,19,0.027,24,0.006,25,0.007,26,0.006,60,1.741,102,0.792,109,4.65,118,0.293,125,3.591,173,2.673,236,1.725,250,1.122,260,4.294,261,3.493,263,1.504,271,3.191,272,2.741,280,3.445,288,3.556,300,3.142,302,2.946,311,3.191,449,4.899,532,4.899,533,5.553,534,5.553,535,5.553]],["title/controllers/CommentController.html",[0,1.304,536,3.264]],["body/controllers/CommentController.html",[0,1.996,2,2.046,3,0.104,4,0.104,5,0.09,11,0.009,16,0.319,17,1.268,18,0.104,19,0.032,24,0.007,25,0.008,26,0.007,87,3.302,125,3.42,536,5.875,537,5.901,538,6.688]],["title/modules/CommentModule.html",[27,1.304,539,3.517]],["body/modules/CommentModule.html",[2,2.364,3,0.101,4,0.101,5,0.087,11,0.009,16,0.369,17,1.232,18,0.101,19,0.032,24,0.007,25,0.008,26,0.007,27,2.307,29,2.735,536,6.164,539,6.221,540,6.495,541,6.495]],["title/injectables/CommentService.html",[348,1.184,542,3.517]],["body/injectables/CommentService.html",[3,0.105,4,0.105,5,0.09,11,0.009,16,0.321,17,1.278,18,0.105,19,0.033,24,0.007,25,0.008,26,0.007,348,2.14,349,2.837,542,6.358,543,5.945]],["title/interfaces/CommentsRO.html",[184,2.511,247,0.771]],["body/interfaces/CommentsRO.html",[3,0.085,4,0.085,5,0.073,7,0.315,11,0.009,15,1.131,16,0.331,18,0.119,24,0.005,25,0.007,26,0.005,88,3.273,102,0.783,103,3.273,108,0.828,109,3.133,118,0.207,125,4.11,128,2.365,151,5.057,173,2.409,181,3.273,182,3.273,184,3.988,221,3.273,238,3.61,247,1.464,248,1.798,249,3.82,250,1.109,251,3.61,252,2.296,253,4.072,254,3.61,255,2.296,256,3.011,257,1.926,258,1.627,259,2.788,260,4.051,261,3.43,262,3.82]],["title/controllers/CorporationController.html",[0,1.304,63,3.062]],["body/controllers/CorporationController.html",[0,0.874,2,0.896,3,0.046,4,0.046,5,0.039,7,0.169,8,1.053,10,1.433,11,0.009,12,0.668,14,1.433,16,0.364,17,0.556,18,0.046,19,0.014,20,2.114,24,0.003,25,0.005,26,0.003,63,3.141,87,1.446,89,2.823,90,2.495,92,2.614,95,2.425,100,1.234,102,0.782,105,3.238,107,5.802,108,1.315,110,3.49,112,4.05,113,1.759,116,1.373,117,0.687,118,0.207,119,1.058,133,1.843,143,3.238,144,3.238,147,2.358,148,2.294,152,3.238,156,2.692,172,1.616,173,1.556,174,1.684,175,1.616,176,1.555,177,1.498,180,1.234,184,1.684,185,1.132,186,2.358,187,2.379,188,4.316,189,3.68,190,1.555,191,1.555,192,1.017,195,1.398,196,0.739,197,3.49,198,4.263,200,1.556,202,3.49,212,2.577,213,3.13,217,1.271,236,1.367,514,1.446,544,2.585,545,6.102,546,2.969,547,2.93,548,5.216,549,5.447,550,4.983,551,2.93,552,2.93,553,3.839,554,1.616,555,4.484,556,2.379,557,2.358,558,2.358,559,3.349,560,2.358,561,2.93,562,2.93,563,1.94,564,2.93,565,1.94,566,1.94,567,2.93,568,3.606,569,2.585,570,1.94,571,3.956,572,1.843,573,2.358,574,2.93,575,2.93,576,2.93,577,1.843,578,1.94,579,2.93,580,2.93,581,2.93,582,2.93,583,1.843,584,1.843,585,2.93,586,2.358,587,1.843,588,2.358,589,2.93]],["title/interfaces/CorporationData.html",[247,0.771,553,2.749]],["body/interfaces/CorporationData.html",[3,0.077,4,0.077,5,0.066,7,0.285,11,0.009,15,1.152,18,0.101,24,0.005,25,0.007,26,0.005,102,0.975,108,1.175,117,0.976,118,0.329,119,1.72,128,3.356,247,1.147,248,1.625,250,1.038,252,3.257,255,3.257,257,2.291,258,2.171,265,2.425,268,2.425,550,3.101,553,4.577,570,3.264,590,3.967,591,2.756,592,4.267]],["title/classes/CorporationEntity.html",[19,0.021,572,2.749]],["body/classes/CorporationEntity.html",[3,0.063,4,0.063,5,0.054,7,0.235,10,1.997,11,0.009,12,0.931,15,1.038,16,0.272,18,0.063,19,0.02,24,0.004,25,0.006,26,0.004,60,1.273,81,2.632,102,0.921,108,1,117,0.831,118,0.323,128,2.856,236,1.475,250,0.91,257,1.98,258,1.7,263,1.1,265,2.064,266,3.04,268,2.064,269,3.04,272,2.005,274,3.421,276,2.334,280,3.869,283,3.143,288,3.04,290,2.155,291,3.024,292,4.256,300,1.817,301,2.555,302,2.155,303,2.334,304,2.334,305,2.438,306,2.438,310,2.155,313,2.334,572,3.585,591,2.346,592,3.631,593,3.583,594,5.298,595,3.585,596,4.061,597,4.061,598,4.061,599,4.061,600,4.061,601,4.061,602,4.061,603,4.284,604,4.061,605,4.061,606,4.061,607,4.061,608,3.583,609,4.061,610,2.689,611,4.061]],["title/modules/CorporationModule.html",[27,1.304,39,3.062]],["body/modules/CorporationModule.html",[2,2.048,3,0.08,4,0.08,5,0.069,8,1.211,11,0.009,12,0.565,14,1.211,16,0.389,17,0.978,18,0.08,19,0.025,24,0.005,25,0.007,26,0.005,27,2.219,29,2.171,30,2.237,31,2.381,32,2.381,33,2.237,34,3.434,35,3.092,39,5.857,49,3.092,50,2.381,51,2.381,53,2.636,57,2.636,58,1.789,63,5.209,116,1.3,117,0.651,118,0.196,119,1.001,319,3.424,320,2.735,321,3.552,322,4.176,324,2.735,325,2.636,326,3.552,327,2.735,334,2.306,568,5.535,569,4.548,572,3.243,573,4.149,612,4.548,613,4.548,614,5.155,615,5.155,616,5.155,617,5.155]],["title/interfaces/CorporationRO.html",[247,0.771,570,2.894]],["body/interfaces/CorporationRO.html",[3,0.094,4,0.094,5,0.081,7,0.35,11,0.009,15,1.067,18,0.115,24,0.006,25,0.007,26,0.006,102,0.903,108,0.92,117,0.765,118,0.23,128,2.628,247,1.307,248,1.997,250,1.184,252,2.551,255,2.551,257,2.057,258,1.808,265,1.899,268,1.899,550,5.25,553,5.25,570,4.908,590,4.875,591,2.159,592,3.341]],["title/injectables/CorporationService.html",[348,1.184,568,2.894]],["body/injectables/CorporationService.html",[3,0.043,4,0.043,5,0.037,7,0.159,8,1.006,11,0.009,12,0.8,14,1.659,16,0.358,17,0.812,18,0.043,19,0.021,20,2.347,24,0.003,25,0.004,26,0.003,58,0.958,60,0.865,89,2.915,90,2.145,92,1.701,95,2.349,97,2.361,100,1.803,102,0.845,108,0.898,116,1.781,117,0.985,118,0.269,119,1.372,128,1.857,148,2.979,180,2.974,196,0.696,200,2.534,217,1.197,235,3.324,236,1.583,286,1.362,348,1.16,349,1.162,354,2.043,356,3.137,383,1.464,384,1.586,385,1.586,388,2.918,427,2.955,463,1.586,465,1.586,486,1.162,487,1.162,489,1.464,512,2.59,514,2.113,529,2.46,548,5.368,550,4.908,554,2.361,556,2.272,568,2.835,570,3.473,571,2.434,572,4.026,573,2.22,592,3.261,618,2.434,619,4.281,620,2.57,621,2.759,622,2.759,623,4.281,624,4.281,625,2.759,626,2.57,627,2.759,628,2.759,629,2.759,630,2.57,631,2.759,632,1.736,633,2.759,634,2.043,635,2.759,636,1.586,637,1.01,638,2.759,639,2.759,640,1.827,641,2.759,642,4.281,643,2.893,644,2.46,645,2.759,646,1.656,647,1.656,648,2.759,649,2.759,650,2.759,651,2.759,652,2.759,653,1.586,654,2.57,655,1.656,656,1.656,657,1.586,658,1.586,659,1.411,660,1.586,661,1.522,662,1.522,663,2.759,664,2.759,665,2.759,666,3.675,667,4.281,668,2.759,669,2.759,670,2.759,671,2.759,672,2.759,673,2.759]],["title/classes/CreateArticleDto.html",[19,0.021,104,3.062]],["body/classes/CreateArticleDto.html",[3,0.088,4,0.088,5,0.076,7,0.327,11,0.009,12,0.892,15,1.172,18,0.088,19,0.027,24,0.006,25,0.007,26,0.006,104,4.978,108,1.179,118,0.31,173,2.696,196,2.277,221,4.662,250,1.135,254,5.143,263,1.532,674,6.754,675,4.992,676,5.658,677,5.658,678,5.658,679,5.658]],["title/classes/CreateCommentDto.html",[19,0.021,123,3.264]],["body/classes/CreateCommentDto.html",[3,0.1,4,0.1,5,0.086,7,0.373,11,0.009,12,0.706,15,1.026,18,0.1,19,0.031,24,0.006,25,0.008,26,0.006,118,0.245,123,5.749,173,2.856,196,2.075,250,1.23,263,1.747,674,6.195,680,5.69,681,6.449]],["title/classes/CreateCorporationDto.html",[19,0.021,548,3.062]],["body/classes/CreateCorporationDto.html",[3,0.076,4,0.076,5,0.066,7,0.282,10,1.811,11,0.009,12,0.844,15,1.137,16,0.308,18,0.076,19,0.031,24,0.005,25,0.006,26,0.005,102,0.962,108,1.351,117,1.012,118,0.293,192,1.697,196,2.23,236,1.796,250,1.033,263,1.324,548,4.53,592,4.423,637,1.789,682,7.075,683,4.313,684,4.297,685,4.889,686,4.889,687,4.889,688,2.697,689,4.889,690,3.307,691,2.413]],["title/classes/CreateErrorLogDto.html",[19,0.021,692,3.062]],["body/classes/CreateErrorLogDto.html",[3,0.071,4,0.071,5,0.061,7,0.263,10,1.839,11,0.009,12,0.858,15,1.166,16,0.294,18,0.071,19,0.03,24,0.005,25,0.006,26,0.005,102,0.947,108,1.351,118,0.298,192,1.581,196,2.243,236,1.754,250,0.985,263,1.234,637,1.667,684,4.221,688,2.512,690,3.154,691,2.248,692,4.321,693,7.122,694,4.019,695,5.486,696,5.486,697,5.486,698,4.555,699,6.167,700,4.555,701,4.555,702,4.555,703,4.555,704,6.992,705,4.555]],["title/classes/CreateGroupDto.html",[19,0.021,706,3.062]],["body/classes/CreateGroupDto.html",[3,0.081,4,0.081,5,0.07,7,0.3,10,1.754,11,0.009,12,0.818,15,1.152,16,0.321,18,0.081,19,0.033,24,0.005,25,0.007,26,0.005,102,0.89,108,1.347,117,1.032,118,0.284,192,1.805,196,2.203,236,1.832,250,1.075,263,1.408,637,1.903,684,4.285,690,3.443,691,2.567,706,4.717,707,6.967,708,4.588,709,5.2,710,5.2,711,5.2]],["title/classes/CreateListDto.html",[19,0.021,712,3.062]],["body/classes/CreateListDto.html",[3,0.081,4,0.081,5,0.07,7,0.3,10,1.754,11,0.009,12,0.818,15,1.152,16,0.321,18,0.081,19,0.033,24,0.005,25,0.007,26,0.005,102,0.89,108,1.347,117,1.032,118,0.284,192,1.805,196,2.203,236,1.832,250,1.075,263,1.408,637,1.903,684,4.038,688,3.714,690,3.818,691,2.567,712,4.717,713,6.355,714,4.588,715,5.2,716,5.2,717,5.2]],["title/classes/CreateListEntryDto.html",[19,0.021,718,3.517]],["body/classes/CreateListEntryDto.html",[3,0.076,4,0.076,5,0.065,7,0.281,10,1.807,11,0.009,12,0.843,15,1.178,16,0.307,18,0.076,19,0.031,24,0.005,25,0.006,26,0.005,102,0.868,108,1.322,117,1.01,118,0.293,192,1.688,196,2.228,236,1.793,250,1.029,263,1.317,637,1.779,684,4.094,688,3.986,690,3.935,691,2.4,713,6.442,718,5.185,719,4.29,720,7.226,721,5.3,722,4.862,723,4.862,724,4.862,725,4.862]],["title/classes/CreateMenuDto.html",[19,0.021,726,3.062]],["body/classes/CreateMenuDto.html",[3,0.077,4,0.077,5,0.067,7,0.288,10,1.825,11,0.009,12,0.851,15,1.182,16,0.312,18,0.077,19,0.032,24,0.005,25,0.007,26,0.005,102,0.876,108,1.354,117,1.018,118,0.296,192,1.73,196,1.844,236,1.808,250,1.046,263,1.35,637,1.824,684,4.127,688,4.034,690,3.973,691,2.46,726,4.588,727,6.494,728,4.397,729,6.026,730,4.984,731,4.984,732,4.984,733,4.984]],["title/classes/CreateMenuEntryDto.html",[19,0.021,734,3.517]],["body/classes/CreateMenuEntryDto.html",[3,0.076,4,0.076,5,0.066,7,0.283,10,1.813,11,0.009,12,0.845,15,1.179,16,0.309,18,0.076,19,0.031,24,0.005,25,0.007,26,0.005,102,0.87,108,1.296,118,0.294,192,1.702,196,2.178,236,1.798,250,1.035,263,1.328,637,1.794,684,4.104,688,4.002,690,3.947,691,2.42,727,6.459,734,5.213,735,4.325,736,4.565,737,5.049,738,5.049,739,6.478,740,4.902,741,4.902,742,4.902,743,4.902]],["title/classes/CreateRoleAppDto.html",[19,0.021,744,3.517]],["body/classes/CreateRoleAppDto.html",[3,0.075,4,0.075,5,0.065,7,0.28,10,1.805,11,0.009,12,0.842,15,1.177,16,0.307,18,0.075,19,0.031,24,0.005,25,0.006,26,0.005,102,0.867,108,1.349,117,1.009,118,0.292,192,1.683,196,2.228,236,1.792,250,1.027,263,1.314,637,1.775,684,4.09,688,3.981,690,3.93,691,2.394,729,5.973,744,5.176,745,6.436,746,4.279,747,4.849,748,4.849,749,4.849,750,4.849,751,4.849]],["title/classes/CreateRoleDto.html",[19,0.021,752,3.062]],["body/classes/CreateRoleDto.html",[3,0.081,4,0.081,5,0.07,7,0.3,10,1.754,11,0.009,12,0.818,15,1.152,16,0.321,18,0.081,19,0.033,24,0.005,25,0.007,26,0.005,102,0.89,108,1.347,117,1.032,118,0.284,192,1.805,196,2.203,236,1.832,250,1.075,263,1.408,637,1.903,684,4.038,688,3.714,690,3.818,691,2.567,745,6.355,752,4.717,753,4.588,754,5.2,755,5.2,756,5.2]],["title/classes/CreateSiteDto.html",[19,0.021,757,3.062]],["body/classes/CreateSiteDto.html",[3,0.075,4,0.075,5,0.065,7,0.279,10,1.803,11,0.009,12,0.841,15,1.134,16,0.306,18,0.075,19,0.031,24,0.005,25,0.006,26,0.005,102,0.971,108,1.349,117,1.009,118,0.292,192,1.679,196,2.172,236,1.79,250,1.026,263,1.31,286,2.388,592,4.53,637,1.77,684,4.086,688,3.975,690,3.926,691,2.388,757,4.498,758,7.05,759,4.267,760,4.836,761,4.836,762,4.836,763,4.836]],["title/classes/CreateUserDto.html",[19,0.021,764,3.062]],["body/classes/CreateUserDto.html",[3,0.086,4,0.086,5,0.074,7,0.319,10,1.804,11,0.009,12,0.841,15,1.134,16,0.334,18,0.086,19,0.034,24,0.006,25,0.007,26,0.006,118,0.292,192,1.916,196,2.227,250,1.117,263,1.495,637,2.019,690,4.421,691,2.724,764,4.9,765,7.123,766,4.122,767,4.235,768,5.38,769,3.927,770,4.869,771,4.441,772,4.869]],["title/injectables/DatabaseConfig.html",[77,3.264,348,1.184]],["body/injectables/DatabaseConfig.html",[3,0.09,4,0.09,5,0.078,7,0.334,8,1.692,11,0.009,12,0.789,14,1.359,16,0.374,17,1.097,18,0.09,19,0.028,20,1.86,24,0.006,25,0.007,26,0.006,58,2.008,73,3.83,74,6.034,77,5.381,116,1.459,117,0.73,118,0.22,119,1.124,195,2.761,334,2.588,348,1.951,349,2.436,354,2.761,524,5.104,773,5.104,774,8.212,775,5.785,776,5.785,777,7.204,778,5.785]],["title/interfaces/ErrorLogData.html",[247,0.771,779,3.062]],["body/interfaces/ErrorLogData.html",[3,0.079,4,0.079,5,0.069,7,0.295,11,0.009,15,1.16,18,0.103,24,0.005,25,0.007,26,0.005,102,0.982,108,1.191,118,0.328,119,1.673,247,1.174,248,1.685,250,1.063,252,3.303,255,3.303,257,2.314,265,2.46,268,2.46,666,3.581,695,5.496,696,5.496,697,5.496,779,5.188,780,4.113,781,3.384]],["title/classes/ErrorLogEntity.html",[19,0.021,782,2.894]],["body/classes/ErrorLogEntity.html",[3,0.067,4,0.067,5,0.058,7,0.25,10,1.978,11,0.009,12,0.922,15,1.06,16,0.207,18,0.067,19,0.021,24,0.004,25,0.006,26,0.004,60,1.359,81,4.008,102,0.936,108,1.035,118,0.32,236,1.527,250,0.952,257,2.037,263,1.174,265,2.137,266,3.148,268,2.137,269,3.148,280,3.284,283,4.701,288,3.148,290,3.164,291,3.616,300,1.94,310,2.3,695,4.775,696,4.775,697,4.775,782,3.948,783,3.825,784,4.335,785,4.335,786,4.335,787,5.907,788,4.335,789,5.963,790,4.335,791,4.335,792,4.335,793,4.335,794,4.335,795,4.335,796,4.335]],["title/interfaces/ErrorLogRO.html",[247,0.771,781,2.894]],["body/interfaces/ErrorLogRO.html",[3,0.095,4,0.095,5,0.082,7,0.352,11,0.009,15,1.07,18,0.116,24,0.006,25,0.007,26,0.006,102,0.906,108,0.926,118,0.232,247,1.313,248,2.011,250,1.189,252,2.568,255,2.568,257,2.065,265,1.912,268,1.912,666,5.86,695,4.273,696,4.273,697,4.273,779,5.86,780,4.908,781,4.928]],["title/controllers/ErrorlogController.html",[0,1.304,797,3.264]],["body/controllers/ErrorlogController.html",[0,0.826,2,0.846,3,0.043,4,0.043,5,0.037,7,0.16,8,1.008,10,1.505,11,0.009,12,0.702,14,1.505,16,0.366,17,0.525,18,0.043,19,0.013,20,2.06,24,0.003,25,0.004,26,0.003,87,1.366,89,2.849,90,2.421,92,2.546,95,2.353,100,2.493,102,0.846,105,3.4,108,1.315,110,3.4,112,4.069,113,2.576,116,1.493,117,0.747,118,0.225,119,1.15,143,4.069,144,3.142,148,2.226,152,3.4,156,2.576,172,1.527,173,1.49,174,1.59,175,1.527,176,1.469,177,1.415,180,1.165,185,1.07,187,2.277,188,4.263,189,3.597,190,1.469,191,1.469,192,0.961,195,1.321,196,0.698,197,3.4,198,4.207,200,1.824,202,3.4,212,2.466,213,2.466,223,3.453,225,2.466,236,1.519,486,1.165,487,1.165,514,1.366,546,2.841,554,1.527,556,2.277,557,2.227,558,2.227,559,3.205,560,2.227,563,1.832,565,1.832,566,1.832,577,1.741,578,1.832,583,1.741,584,1.741,586,2.227,587,1.741,588,2.227,634,1.321,666,5.628,692,5.258,779,4.75,781,1.832,782,1.832,797,3.205,798,2.442,799,2.768,800,5.921,801,2.768,802,2.768,803,2.768,804,2.768,805,5.256,806,2.768,807,2.768,808,2.768,809,2.768,810,1.741,811,3.48,812,2.442,813,2.442,814,2.227,815,1.741,816,2.367,817,1.741,818,2.768,819,2.768,820,2.768,821,2.768,822,1.741,823,1.832,824,2.768,825,2.768,826,2.768,827,2.768]],["title/modules/ErrorlogModule.html",[27,1.304,40,3.062]],["body/modules/ErrorlogModule.html",[2,2.048,3,0.08,4,0.08,5,0.069,8,1.211,11,0.009,12,0.565,14,1.211,16,0.389,17,0.978,18,0.08,19,0.025,24,0.005,25,0.007,26,0.005,27,2.219,29,2.171,30,2.237,31,2.381,32,2.381,33,2.237,34,3.434,35,3.092,40,5.857,49,3.092,50,2.381,51,2.381,53,2.636,57,2.636,58,1.789,116,1.3,117,0.651,118,0.196,119,1.001,319,3.424,320,2.735,321,3.552,322,4.176,324,2.735,325,2.636,326,3.552,327,2.735,334,2.306,782,3.413,797,5.553,811,5.535,812,4.548,814,4.149,828,4.548,829,4.548,830,5.155,831,5.155,832,5.155,833,5.155]],["title/injectables/ErrorlogService.html",[348,1.184,811,2.894]],["body/injectables/ErrorlogService.html",[3,0.045,4,0.045,5,0.039,7,0.167,8,1.043,11,0.009,12,0.787,14,1.621,16,0.363,17,0.842,18,0.045,19,0.022,20,2.218,24,0.003,25,0.004,26,0.003,58,1.004,60,0.907,89,2.873,90,2.209,92,1.764,95,2.409,100,1.869,102,0.857,108,0.82,116,1.74,117,0.871,118,0.263,119,1.34,148,2.918,180,3.025,196,0.729,200,2.494,217,1.255,235,3.299,236,1.61,286,1.428,348,1.203,349,1.218,354,2.119,356,3.216,383,1.535,384,1.662,385,1.662,388,2.992,427,3.02,463,1.662,465,1.662,486,1.218,487,1.218,489,1.535,512,2.667,514,2.192,554,2.449,556,2.356,620,2.665,626,2.665,630,2.665,634,2.119,636,1.662,637,1.058,643,2.98,644,2.551,646,1.736,647,1.736,653,1.662,654,2.665,655,1.736,656,1.736,657,1.662,658,1.662,659,1.479,660,1.662,661,1.595,662,1.595,666,5.531,692,5.034,695,3.785,696,4.246,697,4.246,781,3.577,782,4.329,811,2.939,813,2.552,814,2.328,834,2.552,835,4.44,836,2.892,837,2.892,838,4.44,839,4.44,840,2.892,841,2.892,842,2.892,843,2.892,844,2.892,845,2.892,846,2.892,847,2.892,848,4.44,849,2.892,850,1.915,851,2.892,852,2.892,853,2.892,854,2.892,855,2.892,856,2.892,857,2.892,858,2.892,859,2.892,860,2.892,861,2.892,862,4.44,863,2.892,864,2.892,865,2.892,866,2.892,867,2.892,868,2.892]],["title/classes/FollowsEntity.html",[19,0.021,329,2.749]],["body/classes/FollowsEntity.html",[3,0.09,4,0.09,5,0.077,7,0.333,10,1.84,11,0.009,12,0.858,16,0.275,18,0.09,19,0.028,24,0.006,25,0.007,26,0.006,60,1.808,102,0.97,118,0.298,236,1.755,250,1.148,263,1.562,280,3.776,288,3.618,300,2.58,329,4.523,419,6.305,869,5.088,870,6.912,871,5.766,872,5.766,873,5.766,874,5.766]],["title/controllers/GroupController.html",[0,1.304,875,3.264]],["body/controllers/GroupController.html",[0,0.732,2,0.751,3,0.038,4,0.038,5,0.033,7,0.142,8,0.917,10,1.421,11,0.009,12,0.663,14,1.421,16,0.353,17,0.465,18,0.038,19,0.012,20,1.782,24,0.002,25,0.004,26,0.002,87,1.212,89,2.778,90,2.267,92,2.404,95,2.203,100,1.644,102,0.815,105,3.21,108,1.352,110,3.21,112,3.93,116,1.398,117,0.7,118,0.211,119,1.077,143,3.93,144,2.941,148,2.084,152,3.21,156,2.344,172,1.354,173,0.852,174,1.41,175,1.354,176,1.302,177,1.255,180,1.033,185,0.948,187,2.072,188,4.453,189,3.585,190,1.302,191,1.302,192,0.852,195,1.171,196,0.619,197,3.21,198,4.426,200,1.688,202,3.21,212,2.244,213,3.477,223,3.142,225,2.244,236,1.444,486,1.033,487,1.033,514,2.987,546,2.585,554,1.354,556,3.93,557,4.869,558,4.869,559,5.531,560,1.975,565,1.625,577,1.544,578,1.625,583,1.544,584,1.544,586,4.869,587,1.544,588,1.975,634,1.171,659,1.255,706,5.544,810,1.544,815,1.544,816,2.154,817,1.544,822,1.544,823,1.625,850,5.171,875,2.916,876,2.165,877,2.454,878,5.543,879,3.905,880,2.454,881,2.454,882,4.514,883,2.454,884,2.454,885,4.29,886,2.454,887,2.454,888,2.454,889,2.454,890,3.905,891,2.454,892,2.454,893,3.22,894,2.165,895,1.625,896,2.165,897,1.544,898,1.975,899,2.454,900,2.454,901,2.454,902,2.454,903,2.454,904,2.454,905,2.454,906,2.454,907,2.454,908,2.454,909,2.454]],["title/interfaces/GroupData.html",[247,0.771,882,3.062]],["body/interfaces/GroupData.html",[3,0.081,4,0.081,5,0.07,7,0.301,11,0.009,15,1.117,18,0.105,24,0.005,25,0.007,26,0.005,102,0.946,108,1.2,117,0.998,118,0.325,119,1.712,247,1.189,248,1.719,250,1.077,252,3.329,255,3.329,257,2.327,258,2.231,265,2.478,268,2.478,591,2.817,850,3.453,882,5.238,895,3.453,910,4.197]],["title/classes/GroupEntity.html",[19,0.021,897,2.749]],["body/classes/GroupEntity.html",[3,0.065,4,0.065,5,0.056,7,0.242,10,1.963,11,0.009,12,0.915,15,0.963,16,0.277,18,0.065,19,0.02,24,0.004,25,0.006,26,0.004,60,1.312,81,4.039,102,0.887,108,1.016,117,0.844,118,0.318,236,1.499,250,0.929,257,2.006,258,1.736,263,1.133,265,2.097,266,3.089,268,2.097,269,3.089,271,2.404,272,2.065,280,1.872,283,4.758,284,5.383,288,3.089,290,2.22,291,3.087,292,4.345,300,1.872,302,2.22,310,2.22,311,2.404,397,4.076,591,2.383,721,2.77,897,3.66,911,3.691,912,4.155,913,4.184,914,4.184,915,4.184,916,4.184,917,4.184,918,4.184,919,3.988,920,4.184,921,4.184,922,4.184,923,3.367,924,4.184,925,4.184]],["title/modules/GroupModule.html",[27,1.304,41,3.062]],["body/modules/GroupModule.html",[2,2.048,3,0.08,4,0.08,5,0.069,8,1.211,11,0.009,12,0.565,14,1.211,16,0.389,17,0.978,18,0.08,19,0.025,24,0.005,25,0.007,26,0.005,27,2.219,29,2.171,30,2.237,31,2.381,32,2.381,33,2.237,34,3.434,35,3.092,41,5.857,49,3.092,50,2.381,51,2.381,53,2.636,57,2.636,58,1.789,116,1.3,117,0.651,118,0.196,119,1.001,319,3.424,320,2.735,321,3.552,322,4.176,324,2.735,325,2.636,326,3.552,327,2.735,334,2.306,875,5.553,893,5.535,894,4.548,897,3.243,898,4.149,926,4.548,927,4.548,928,5.155,929,5.155,930,5.155,931,5.155]],["title/interfaces/GroupRO.html",[247,0.771,895,2.894]],["body/interfaces/GroupRO.html",[3,0.095,4,0.095,5,0.082,7,0.355,11,0.009,15,0.996,18,0.116,24,0.006,25,0.008,26,0.006,102,0.843,108,0.932,117,0.775,118,0.234,247,1.318,248,2.025,250,1.194,252,2.585,255,2.585,257,2.074,258,1.832,265,1.925,268,1.925,591,2.188,850,5.551,882,5.874,895,4.948,910,4.942]],["title/injectables/GroupService.html",[348,1.184,893,2.894]],["body/injectables/GroupService.html",[3,0.044,4,0.044,5,0.038,7,0.165,8,1.034,11,0.009,12,0.809,14,1.681,16,0.361,17,0.835,18,0.044,19,0.021,20,2.375,24,0.003,25,0.004,26,0.003,58,0.993,60,0.897,89,2.933,90,2.194,92,1.749,95,2.394,97,2.428,100,1.853,102,0.855,108,0.915,116,1.805,117,0.994,118,0.272,119,1.39,148,3.004,180,3.013,196,0.721,200,2.564,217,1.241,235,3.205,236,1.539,286,1.412,348,1.192,349,1.204,354,2.1,356,3.197,383,1.518,384,1.644,385,1.644,388,2.974,427,2.783,463,1.644,465,1.644,486,1.204,487,1.204,489,1.518,512,2.173,514,1.412,529,2.529,554,2.428,559,2.136,620,2.642,626,2.642,630,2.642,632,1.799,634,2.1,636,1.644,637,1.047,640,1.894,643,2.428,644,1.644,646,1.717,647,1.717,653,1.644,654,2.642,655,1.717,656,1.717,657,1.644,658,1.644,659,1.463,660,1.644,661,1.578,662,1.578,706,5.421,850,5.213,893,2.914,895,3.552,896,2.523,897,4.093,898,2.302,932,2.523,933,4.402,934,2.86,935,2.86,936,4.402,937,4.402,938,2.86,939,2.86,940,2.86,941,2.86,942,2.86,943,2.86,944,2.86,945,2.86,946,2.86,947,2.86,948,2.86,949,2.86,950,2.86,951,2.86,952,2.86,953,2.86,954,2.86,955,4.402,956,2.86,957,2.86,958,2.523,959,2.86,960,2.86,961,2.86,962,2.86,963,2.86,964,2.86]],["title/controllers/ListController.html",[0,1.304,965,3.264]],["body/controllers/ListController.html",[0,0.823,2,0.844,3,0.043,4,0.043,5,0.037,7,0.159,8,1.006,10,1.503,11,0.009,12,0.701,14,1.503,16,0.372,17,0.523,18,0.043,19,0.013,20,2.177,24,0.003,25,0.004,26,0.003,87,1.362,89,2.872,90,2.417,92,2.543,95,2.349,100,2.489,102,0.763,105,3.395,108,1.291,110,3.395,112,4.066,113,3.149,116,1.491,117,0.746,118,0.2,119,1.148,128,1.197,129,1.827,133,2.693,143,4.066,144,3.137,148,2.406,152,3.395,156,2.57,172,1.522,173,0.958,174,1.586,175,1.522,176,1.464,177,1.411,180,1.162,185,1.066,187,2.272,188,4.14,189,3.593,190,1.464,191,1.464,192,0.958,195,1.317,196,0.696,197,3.395,198,4.066,200,2.221,202,3.395,212,2.46,213,3.014,217,1.857,225,2.46,227,1.827,236,1.324,486,1.162,487,1.162,546,2.835,563,1.827,565,1.827,566,1.827,577,1.736,578,1.827,583,1.736,584,1.736,587,1.736,634,1.317,712,5.368,810,1.736,815,1.736,816,2.361,817,1.736,822,1.736,823,1.827,965,3.197,966,2.434,967,5.911,968,2.759,969,5.911,970,4.984,971,2.759,972,2.759,973,4.26,974,2.759,975,2.759,976,2.759,977,2.759,978,2.759,979,2.759,980,2.759,981,3.473,982,2.434,983,1.656,984,3.777,985,1.656,986,1.464,987,1.656,988,2.759,989,2.759,990,2.759,991,2.759,992,2.759,993,2.759,994,2.759,995,2.759,996,2.759,997,2.759,998,2.759,999,2.759]],["title/interfaces/ListData.html",[247,0.771,973,2.749]],["body/interfaces/ListData.html",[3,0.076,4,0.076,5,0.066,7,0.282,11,0.009,15,1.12,16,0.308,18,0.113,24,0.005,25,0.006,26,0.005,102,0.929,108,1.171,117,0.973,118,0.32,119,1.693,173,1.697,247,1.36,248,1.612,250,1.033,252,3.246,255,3.246,256,2.121,257,2.286,258,2.162,259,2.5,265,2.417,268,2.417,591,2.747,970,3.076,973,4.558,983,2.935,985,2.935,986,2.594,987,2.935,1000,3.425,1001,4.068,1002,3.237]],["title/classes/ListEntity.html",[19,0.021,986,2.319]],["body/classes/ListEntity.html",[3,0.067,4,0.067,5,0.057,7,0.247,10,1.973,11,0.009,12,0.92,15,0.973,16,0.282,18,0.067,19,0.021,24,0.004,25,0.006,26,0.004,60,1.343,81,3.373,102,0.894,108,1.028,117,0.855,118,0.32,236,1.517,250,0.945,257,2.026,258,1.765,263,1.16,265,2.123,266,3.128,268,2.123,269,3.128,272,2.115,274,3.55,276,2.462,277,5.218,280,3.758,283,3.262,288,3.128,290,2.273,291,3.138,300,1.917,303,2.462,304,2.462,305,2.571,306,2.571,310,2.273,313,2.462,397,4.143,591,2.413,986,3.138,1001,2.695,1002,4.484,1003,3.779,1004,4.284,1005,4.284,1006,4.284,1007,4.284,1008,4.284,1009,5.454,1010,4.284,1011,3.915,1012,4.284,1013,4.284,1014,4.284,1015,4.284,1016,4.284,1017,4.284,1018,4.284]],["title/interfaces/ListEntry.html",[247,0.771,1001,2.749]],["body/interfaces/ListEntry.html",[3,0.088,4,0.088,5,0.076,7,0.329,11,0.009,15,1.121,16,0.34,18,0.121,24,0.006,25,0.007,26,0.006,102,0.804,108,0.865,117,0.719,118,0.217,173,2.834,247,1.44,248,1.877,250,1.139,252,2.397,255,2.397,256,2.47,257,1.979,258,1.699,259,2.912,265,1.785,268,1.785,591,2.029,970,3.582,973,4.488,983,3.418,985,3.418,986,3.021,987,3.418,1000,3.989,1001,4.901,1002,3.77]],["title/classes/ListEntryEntity.html",[19,0.021,1009,3.264]],["body/classes/ListEntryEntity.html",[3,0.078,4,0.078,5,0.067,7,0.29,10,1.9,11,0.009,12,0.886,15,1.106,16,0.314,18,0.078,19,0.024,24,0.005,25,0.007,26,0.005,60,1.576,81,3.041,102,0.742,108,1.115,117,0.927,118,0.308,236,1.645,250,1.052,263,1.361,271,2.888,272,2.481,280,3.286,283,3.632,288,3.392,290,2.667,291,3.494,300,2.249,302,2.667,310,2.667,311,2.888,721,4.863,970,4.903,986,4.136,987,3.017,1009,4.918,1011,4.36,1019,4.434,1020,5.025,1021,5.025,1022,5.025,1023,5.025,1024,5.025,1025,5.025,1026,4.434]],["title/interfaces/ListEntryRO.html",[247,0.771,985,2.623]],["body/interfaces/ListEntryRO.html",[3,0.088,4,0.088,5,0.076,7,0.329,11,0.009,15,1.038,16,0.34,18,0.121,24,0.006,25,0.007,26,0.006,102,0.804,108,0.865,117,0.719,118,0.217,173,1.976,247,1.44,248,1.877,250,1.139,252,2.397,255,2.397,256,2.47,257,1.979,258,1.699,259,2.912,265,1.785,268,1.785,591,2.029,970,3.582,973,4.488,983,3.418,985,4.282,986,3.021,987,3.418,1000,3.989,1001,5.137,1002,5.406]],["title/modules/ListModule.html",[27,1.304,42,3.062]],["body/modules/ListModule.html",[2,2.048,3,0.08,4,0.08,5,0.069,8,1.211,11,0.009,12,0.565,14,1.211,16,0.389,17,0.978,18,0.08,19,0.025,24,0.005,25,0.007,26,0.005,27,2.219,29,2.171,30,2.237,31,2.381,32,2.381,33,2.237,34,3.434,35,3.092,42,5.857,49,3.092,50,2.381,51,2.381,53,2.636,57,2.636,58,1.789,116,1.3,117,0.651,118,0.196,119,1.001,319,3.424,320,2.735,321,3.552,322,4.176,324,2.735,325,2.636,326,3.552,327,2.735,334,2.306,965,5.553,981,5.535,982,4.548,986,2.735,987,3.094,1027,4.548,1028,4.548,1029,5.155,1030,5.155,1031,5.155,1032,5.155]],["title/interfaces/ListRO.html",[247,0.771,983,2.623]],["body/interfaces/ListRO.html",[3,0.088,4,0.088,5,0.076,7,0.329,11,0.009,15,1.038,16,0.34,18,0.121,24,0.006,25,0.007,26,0.006,102,0.804,108,0.865,117,0.719,118,0.217,173,1.976,247,1.44,248,1.877,250,1.139,252,2.397,255,2.397,256,2.47,257,1.979,258,1.699,259,2.912,265,1.785,268,1.785,591,2.029,970,5.137,973,5.137,983,4.282,985,3.418,986,3.021,987,3.418,1000,3.989,1001,4.488,1002,3.77]],["title/injectables/ListService.html",[348,1.184,981,2.894]],["body/injectables/ListService.html",[3,0.043,4,0.043,5,0.037,7,0.161,8,1.015,11,0.009,12,0.803,14,1.667,15,0.372,16,0.359,17,0.82,18,0.043,19,0.021,20,2.419,24,0.003,25,0.004,26,0.003,58,0.97,60,0.876,89,2.94,90,2.162,92,1.718,95,2.365,97,2.384,100,1.82,102,0.849,108,0.904,109,1.605,116,1.789,117,0.988,118,0.27,119,1.378,148,3.026,180,2.988,196,0.704,200,2.612,217,1.212,235,3.265,236,1.59,286,1.379,348,1.171,349,1.176,354,2.063,356,3.157,383,1.482,384,1.605,385,1.605,388,2.938,427,2.748,463,1.605,465,1.605,486,1.176,487,1.176,489,1.482,512,2.134,514,1.379,529,2.484,554,2.384,556,1.482,620,2.595,626,2.595,630,2.595,632,1.757,634,2.063,636,1.605,637,1.022,640,1.85,643,2.384,644,1.605,646,1.677,647,1.677,653,1.605,654,2.595,655,1.677,656,1.677,657,1.605,658,1.605,659,1.429,660,1.605,661,1.541,662,1.541,712,5.386,970,4.837,981,2.862,983,3.173,984,2.465,985,1.677,986,3.415,987,1.677,1002,1.85,1026,2.465,1033,2.465,1034,4.322,1035,2.794,1036,2.794,1037,4.322,1038,4.322,1039,2.794,1040,2.794,1041,2.794,1042,2.794,1043,2.794,1044,2.794,1045,2.794,1046,2.794,1047,2.794,1048,2.794,1049,2.086,1050,2.794,1051,2.794,1052,2.794,1053,2.794,1054,2.794,1055,2.794,1056,2.794,1057,4.322,1058,2.794,1059,2.794,1060,2.794,1061,2.794,1062,2.794,1063,2.794,1064,2.794,1065,2.794]],["title/classes/LoginUserDto.html",[19,0.021,1066,3.062]],["body/classes/LoginUserDto.html",[3,0.087,4,0.087,5,0.075,7,0.322,10,1.652,11,0.009,12,0.77,15,1.168,16,0.336,18,0.087,19,0.034,24,0.006,25,0.007,26,0.006,108,1.23,118,0.268,192,1.933,196,2.151,250,1.124,263,1.509,637,2.038,684,3.598,688,3.881,690,3.944,691,2.75,766,4.16,767,4.608,768,5.853,771,4.483,1066,4.929,1067,6.804,1068,5.57]],["title/interfaces/MenuAppData.html",[247,0.771,1069,2.894]],["body/interfaces/MenuAppData.html",[3,0.073,4,0.073,5,0.063,7,0.272,11,0.009,15,1.154,16,0.339,18,0.111,24,0.005,25,0.006,26,0.005,102,0.919,118,0.322,119,1.682,173,1.635,247,1.34,248,1.553,250,1.008,256,2.043,257,2.262,258,2.122,259,2.409,265,2.382,266,3.508,268,2.382,269,3.508,591,2.707,736,4.779,737,4.779,738,4.779,1069,4.709,1070,3.3,1071,2.409,1072,2.827,1073,3.479,1074,3.118,1075,3.118,1076,2.827,1077,2.827,1078,2.963,1079,3.3]],["title/classes/MenuAppEntity.html",[19,0.021,1071,2.235]],["body/classes/MenuAppEntity.html",[3,0.061,4,0.061,5,0.053,7,0.228,10,1.986,11,0.009,12,0.926,15,1.029,16,0.309,18,0.061,19,0.019,24,0.004,25,0.006,26,0.004,60,1.237,81,2.579,102,0.871,108,0.984,117,0.818,118,0.322,236,1.452,250,0.892,257,1.955,258,1.666,263,1.069,265,2.032,266,2.993,268,2.032,269,2.993,272,1.948,274,3.352,276,2.267,280,3.689,283,3.08,288,2.993,290,2.963,291,3.739,300,1.765,301,2.482,302,2.093,303,2.267,304,2.267,305,2.368,306,2.368,310,2.963,313,2.267,591,2.309,595,3.513,729,4.84,787,4.493,1011,3.697,1071,2.855,1073,3.886,1074,2.612,1077,2.368,1079,4.54,1080,3.481,1081,5.215,1082,3.945,1083,3.945,1084,3.945,1085,3.945,1086,3.945,1087,3.945,1088,3.945,1089,3.945,1090,4.665,1091,3.481,1092,3.945,1093,3.945,1094,3.945,1095,3.481,1096,3.945,1097,3.945,1098,3.481]],["title/interfaces/MenuAppEntry.html",[247,0.771,1075,2.894]],["body/interfaces/MenuAppEntry.html",[3,0.087,4,0.087,5,0.075,7,0.322,11,0.009,15,1.137,16,0.368,18,0.12,24,0.006,25,0.007,26,0.006,102,0.793,118,0.212,173,2.812,247,1.429,248,1.836,250,1.124,256,2.417,257,1.952,258,1.662,259,2.849,265,1.746,266,2.572,268,1.746,269,2.572,591,1.985,736,3.504,737,3.504,738,3.504,1069,4.658,1070,3.902,1071,2.849,1072,3.344,1073,3.881,1074,3.688,1075,4.658,1076,3.344,1077,3.344,1078,3.504,1079,3.902]],["title/controllers/MenuController.html",[0,1.304,1099,3.264]],["body/controllers/MenuController.html",[0,0.817,2,0.837,3,0.043,4,0.043,5,0.037,7,0.158,8,1,10,1.498,11,0.009,12,0.698,14,1.498,16,0.377,17,0.519,18,0.043,19,0.013,20,2.17,24,0.003,25,0.004,26,0.003,87,1.352,89,2.868,90,2.407,92,2.534,95,2.34,100,2.479,102,0.761,105,3.383,108,1.289,110,3.383,112,4.057,113,3.134,116,1.485,117,0.743,118,0.199,119,1.144,128,1.188,129,1.813,133,2.677,143,4.057,144,3.124,148,2.397,152,3.383,156,2.555,172,1.51,173,0.95,174,1.574,175,1.51,176,1.453,177,1.4,180,1.153,185,1.058,187,2.258,188,4.132,189,3.581,190,1.453,191,1.453,192,0.95,195,1.307,196,0.69,197,3.383,198,4.057,200,2.213,202,3.383,212,2.446,213,3,217,1.846,225,2.446,227,1.813,236,1.319,486,1.153,487,1.153,563,1.813,566,1.813,577,1.723,583,1.723,584,1.723,587,1.723,634,1.307,726,5.357,810,1.723,815,1.723,816,2.347,817,1.723,822,1.723,823,1.813,1071,1.4,1072,1.644,1073,1.51,1074,1.813,1076,1.644,1077,4.747,1078,1.723,1099,3.178,1100,2.416,1101,5.887,1102,4.256,1103,2.738,1104,5.887,1105,2.738,1106,2.738,1107,6.75,1108,2.738,1109,2.738,1110,2.738,1111,2.738,1112,2.738,1113,2.738,1114,2.738,1115,2.738,1116,3.456,1117,2.416,1118,3.755,1119,2.738,1120,2.738,1121,2.738,1122,2.738,1123,2.738,1124,2.738,1125,2.738,1126,2.738,1127,2.738,1128,2.738,1129,2.738,1130,2.738,1131,2.738]],["title/classes/MenuEntryEntity.html",[19,0.021,1073,2.411]],["body/classes/MenuEntryEntity.html",[3,0.055,4,0.055,5,0.048,7,0.205,10,2.001,11,0.009,12,0.933,15,1.115,16,0.291,18,0.055,19,0.017,24,0.004,25,0.005,26,0.004,60,1.113,81,2.389,102,0.84,108,0.927,118,0.324,236,1.368,250,0.826,257,1.862,258,1.544,263,0.961,265,1.914,266,2.82,268,1.914,269,2.82,271,2.039,272,2.554,274,3.106,276,2.039,280,3.596,283,2.854,288,2.82,290,3.24,291,3.952,300,1.588,301,2.232,302,1.883,303,2.039,304,2.039,305,2.13,306,2.13,310,3.24,311,2.039,313,2.039,591,2.176,595,3.255,736,3.841,737,3.841,738,3.841,787,4.164,1011,4.443,1071,3.432,1072,2.13,1073,2.854,1132,3.131,1133,6.106,1134,5.921,1135,6.106,1136,6.106,1137,3.548,1138,3.548,1139,3.548,1140,3.548,1141,3.548,1142,6.106,1143,3.548,1144,3.548,1145,3.548,1146,3.548,1147,4.702,1148,3.548,1149,3.548,1150,3.548,1151,3.548,1152,6.106,1153,3.548,1154,3.131,1155,3.548,1156,3.548,1157,3.131,1158,3.548]],["title/interfaces/MenuEntryRO.html",[247,0.771,1078,2.749]],["body/interfaces/MenuEntryRO.html",[3,0.087,4,0.087,5,0.075,7,0.322,11,0.009,15,1.08,16,0.368,18,0.12,24,0.006,25,0.007,26,0.006,102,0.793,118,0.212,173,1.933,247,1.429,248,1.836,250,1.124,256,2.417,257,1.952,258,1.662,259,2.849,265,1.746,266,2.572,268,1.746,269,2.572,591,1.985,736,3.504,737,3.504,738,3.504,1069,4.658,1070,3.902,1071,2.849,1072,3.344,1073,4.468,1074,3.688,1075,3.688,1076,3.344,1077,3.344,1078,4.426,1079,5.675]],["title/modules/MenuModule.html",[27,1.304,43,3.062]],["body/modules/MenuModule.html",[2,2.048,3,0.08,4,0.08,5,0.069,8,1.211,11,0.009,12,0.565,14,1.211,16,0.389,17,0.978,18,0.08,19,0.025,24,0.005,25,0.007,26,0.005,27,2.219,29,2.171,30,2.237,31,2.381,32,2.381,33,2.237,34,3.434,35,3.092,43,5.857,49,3.092,50,2.381,51,2.381,53,2.636,57,2.636,58,1.789,116,1.3,117,0.651,118,0.196,119,1.001,319,3.424,320,2.735,321,3.552,322,4.176,324,2.735,325,2.636,326,3.552,327,2.735,334,2.306,1071,2.636,1072,3.094,1099,5.553,1116,5.535,1117,4.548,1159,4.548,1160,4.548,1161,5.155,1162,5.155,1163,5.155,1164,5.155]],["title/interfaces/MenuRO.html",[247,0.771,1076,2.623]],["body/interfaces/MenuRO.html",[3,0.087,4,0.087,5,0.075,7,0.322,11,0.009,15,1.08,16,0.368,18,0.12,24,0.006,25,0.007,26,0.006,102,0.793,118,0.212,173,1.933,247,1.429,248,1.836,250,1.124,256,2.417,257,1.952,258,1.662,259,2.849,265,1.746,266,2.572,268,1.746,269,2.572,591,1.985,736,3.504,737,3.504,738,3.504,1069,5.364,1070,3.902,1071,2.849,1072,3.344,1073,3.881,1074,3.688,1075,3.688,1076,4.223,1077,4.863,1078,3.504,1079,3.902]],["title/injectables/MenuService.html",[348,1.184,1116,2.894]],["body/injectables/MenuService.html",[3,0.044,4,0.044,5,0.038,7,0.164,8,1.03,11,0.009,12,0.808,14,1.678,16,0.361,17,0.832,18,0.044,19,0.021,20,2.371,24,0.003,25,0.004,26,0.003,58,0.988,60,0.892,89,2.931,90,2.188,92,1.743,95,2.388,97,2.419,100,1.847,102,0.853,108,0.666,116,1.802,117,0.955,118,0.272,119,1.388,148,3.001,180,3.008,196,0.718,200,2.56,217,1.235,235,3.2,236,1.601,286,1.405,348,1.188,349,1.199,354,2.093,356,3.189,383,1.51,384,1.636,385,1.636,388,2.967,427,2.776,463,1.636,465,1.636,486,1.199,487,1.199,489,1.51,512,2.165,514,1.405,529,2.52,554,2.419,556,1.51,620,2.633,626,2.633,630,2.633,632,1.791,634,2.093,636,1.636,637,1.042,640,1.885,643,2.419,644,1.636,646,1.709,647,1.709,653,1.636,654,2.633,655,1.709,656,1.709,657,1.636,658,1.636,659,1.456,660,1.636,661,1.57,662,1.57,726,5.414,729,3.275,736,2.759,737,2.759,738,2.759,1049,2.126,1071,3.32,1072,1.709,1076,3.211,1077,4.639,1116,2.904,1118,2.511,1165,2.511,1166,4.386,1167,2.847,1168,2.847,1169,4.386,1170,4.386,1171,2.847,1172,2.847,1173,2.847,1174,2.847,1175,2.847,1176,2.847,1177,2.847,1178,2.847,1179,2.847,1180,2.847,1181,2.847,1182,2.847,1183,2.847,1184,2.847,1185,2.847,1186,2.847,1187,2.847,1188,2.847,1189,4.386,1190,2.847,1191,2.847,1192,2.847,1193,2.847,1194,2.847,1195,2.847,1196,2.847]],["title/classes/MyLogger.html",[19,0.021,1197,3.517]],["body/classes/MyLogger.html",[3,0.071,4,0.071,5,0.061,7,0.263,8,1.449,11,0.009,12,0.858,14,1.839,15,1.199,16,0.217,17,0.864,18,0.071,19,0.022,24,0.005,25,0.006,26,0.005,116,1.975,117,0.988,118,0.298,119,1.521,263,1.234,325,4.004,334,2.759,1197,4.963,1198,4.019,1199,6.992,1200,6.167,1201,6.167,1202,6.167,1203,6.167,1204,6.167,1205,6.167,1206,4.555,1207,7.83,1208,6.167,1209,6.992,1210,4.555,1211,6.167,1212,4.555,1213,6.167,1214,4.555,1215,6.167,1216,4.555,1217,7.83]],["title/controllers/ProfileController.html",[0,1.304,1218,3.264]],["body/controllers/ProfileController.html",[0,1.036,2,1.062,3,0.054,4,0.054,5,0.047,7,0.201,8,1.196,10,1.417,11,0.009,12,0.66,14,1.417,15,1.11,16,0.353,17,0.659,18,0.054,19,0.017,20,1.939,24,0.003,25,0.005,26,0.003,87,1.715,89,2.775,90,2.083,92,2.397,102,0.834,105,3.2,108,1.265,110,3.2,112,3.922,116,1.521,117,0.761,118,0.229,119,1.172,120,4.961,143,3.922,144,2.703,148,2.779,152,3.2,172,1.916,175,1.916,176,1.843,177,1.776,185,1.342,186,2.795,187,2.703,188,4.053,189,3.525,190,1.843,191,1.843,192,1.206,195,1.657,196,0.876,197,3.2,198,3.922,200,2.093,202,3.2,212,2.927,217,1.507,225,2.927,767,2.809,769,4.261,958,3.064,1218,3.804,1219,3.064,1220,3.473,1221,4.494,1222,5.093,1223,4.494,1224,3.473,1225,6.031,1226,5.97,1227,3.473,1228,3.473,1229,3.473,1230,3.473,1231,3.473,1232,3.473,1233,3.473,1234,3.473,1235,3.993,1236,3.064,1237,2.3,1238,3.064,1239,3.473,1240,3.473,1241,3.473,1242,3.473,1243,6.031,1244,3.473,1245,3.473,1246,3.473,1247,3.473,1248,3.473,1249,3.473,1250,3.473,1251,3.473]],["title/interfaces/ProfileData.html",[247,0.771,1252,3.062]],["body/interfaces/ProfileData.html",[3,0.09,4,0.09,5,0.077,7,0.333,11,0.009,15,1.186,18,0.112,24,0.006,25,0.007,26,0.006,118,0.312,119,1.593,247,1.268,248,1.901,250,1.148,258,2.338,769,4.195,1226,4.307,1237,3.818,1252,5.489,1253,4.641,1254,4.714,1255,6.601,1256,4.714]],["title/modules/ProfileModule.html",[27,1.304,44,3.062]],["body/modules/ProfileModule.html",[2,1.953,3,0.075,4,0.075,5,0.064,8,1.127,11,0.009,12,0.525,14,1.127,16,0.405,17,0.91,18,0.075,19,0.023,24,0.005,25,0.006,26,0.005,27,2.142,29,2.02,30,2.082,31,2.216,32,2.216,33,2.082,34,3.315,35,2.949,44,5.952,48,4.919,49,2.949,50,2.216,51,2.216,53,3.266,56,3.583,57,2.454,58,1.665,116,1.21,117,0.606,118,0.183,119,0.932,270,2.546,307,3.176,319,3.266,320,2.546,321,3.389,322,4.061,324,3.389,325,2.454,326,3.389,327,2.546,329,4.018,331,3.176,332,4.233,334,2.147,335,3.861,339,3.861,1218,5.361,1235,5.426,1236,4.233,1257,4.233,1258,4.798,1259,4.233,1260,4.798,1261,4.798,1262,4.798,1263,4.233,1264,4.233,1265,4.233,1266,4.798,1267,4.798]],["title/interfaces/ProfileRO.html",[247,0.771,1237,2.894]],["body/interfaces/ProfileRO.html",[3,0.097,4,0.097,5,0.084,7,0.362,11,0.009,15,1.083,18,0.118,24,0.006,25,0.008,26,0.006,118,0.238,247,1.335,248,2.067,250,1.209,258,1.871,769,3.206,1226,6.306,1237,5.011,1252,5.915,1253,5.045,1254,3.602,1255,5.045,1256,3.602]],["title/injectables/ProfileService.html",[348,1.184,1235,2.894]],["body/injectables/ProfileService.html",[3,0.044,4,0.044,5,0.038,7,0.163,8,1.023,11,0.009,12,0.748,14,1.518,15,1.061,16,0.351,17,0.535,18,0.044,19,0.014,20,2.196,24,0.003,25,0.004,26,0.003,58,0.979,60,0.884,81,1.302,89,2.859,92,1.73,95,2.377,97,2.401,102,0.77,116,1.63,117,0.816,118,0.246,119,1.255,148,2.898,185,2.055,196,1.098,200,2.675,235,3.274,236,1.191,270,1.496,307,1.867,329,2.739,348,1.179,349,1.187,354,2.078,356,3.778,358,3.504,359,4.692,383,1.496,388,2.149,390,2.269,391,2.488,401,3.841,417,3.841,419,5.201,427,2.985,459,2.488,486,1.187,487,1.187,489,1.496,512,2.952,595,1.774,662,3.299,767,1.555,769,4.171,870,6.027,1221,3.841,1223,3.841,1226,5.318,1235,2.883,1237,1.867,1238,2.488,1252,4.19,1254,3.056,1255,3.504,1256,3.056,1263,2.488,1268,2.488,1269,4.354,1270,2.488,1271,2.82,1272,2.82,1273,4.354,1274,5.98,1275,2.82,1276,2.82,1277,2.82,1278,4.354,1279,5.98,1280,2.82,1281,4.354,1282,2.82,1283,5.98,1284,4.354,1285,2.82,1286,2.82,1287,2.488,1288,2.82,1289,2.488,1290,2.82,1291,2.82,1292,2.82,1293,2.82,1294,2.82,1295,2.82,1296,5.318,1297,4.354,1298,2.82,1299,2.82,1300,2.82,1301,4.354,1302,4.354,1303,2.82,1304,2.488,1305,2.82,1306,2.82,1307,4.354,1308,4.354,1309,5.98,1310,2.82,1311,2.82,1312,2.82,1313,4.354,1314,4.354,1315,4.354,1316,4.354,1317,2.82]],["title/controllers/RoleController.html",[0,1.304,1318,3.264]],["body/controllers/RoleController.html",[0,1.298,2,0.861,3,0.044,4,0.044,5,0.038,7,0.163,8,1.021,10,1.517,11,0.009,12,0.707,14,1.517,16,0.367,17,0.534,18,0.044,19,0.014,20,2.076,24,0.003,25,0.004,26,0.003,87,1.39,89,2.858,90,2.443,92,2.567,95,2.375,100,2.516,102,0.77,105,3.427,108,1.295,110,3.427,112,4.088,113,3.189,116,1.507,117,0.754,118,0.202,119,1.161,129,1.864,133,2.736,143,4.088,144,3.171,148,2.246,152,3.427,156,2.61,172,1.553,173,0.977,174,1.618,175,1.553,176,1.494,177,1.44,180,1.185,185,1.088,187,2.307,188,4.161,189,3.622,190,1.494,191,1.494,192,0.977,195,1.343,196,0.71,197,3.427,198,4.088,200,2.074,202,3.427,212,2.499,213,3.053,217,1.887,225,2.499,227,1.864,236,1.339,337,2.266,486,1.185,487,1.185,546,2.879,565,1.864,566,1.864,577,1.771,578,1.864,583,1.771,584,1.771,587,1.771,634,1.343,752,5.398,810,1.771,815,1.771,816,2.398,817,1.771,822,1.771,823,1.864,912,4.634,919,1.553,1318,3.248,1319,2.484,1320,2.815,1321,5.975,1322,2.815,1323,2.815,1324,4.783,1325,2.815,1326,2.815,1327,2.815,1328,3.968,1329,2.815,1330,2.815,1331,2.815,1332,2.815,1333,2.815,1334,3.517,1335,2.484,1336,1.864,1337,2.484,1338,2.103,1339,2.484,1340,2.484,1341,2.815,1342,2.815,1343,2.815,1344,2.815,1345,2.815,1346,2.815,1347,2.815,1348,2.815,1349,2.815,1350,2.815,1351,2.815]],["title/interfaces/RoleData.html",[247,0.771,1324,3.062]],["body/interfaces/RoleData.html",[3,0.081,4,0.081,5,0.07,7,0.301,11,0.009,15,1.117,18,0.105,24,0.005,25,0.007,26,0.005,102,0.946,108,1.2,117,0.998,118,0.325,119,1.712,247,1.189,248,1.719,250,1.077,252,3.329,255,3.329,257,2.327,258,2.231,265,2.478,268,2.478,591,2.817,912,2.997,1324,5.238,1336,3.453,1352,4.197]],["title/classes/RoleEntity.html",[19,0.021,919,2.411]],["body/classes/RoleEntity.html",[3,0.054,4,0.054,5,0.046,7,0.2,10,1.956,11,0.009,12,0.912,15,0.884,16,0.337,18,0.054,19,0.017,24,0.003,25,0.005,26,0.003,60,1.085,81,2.346,102,0.832,108,0.914,117,0.76,118,0.317,185,2.729,236,1.348,250,0.811,257,1.84,258,1.516,263,0.937,265,1.887,266,2.779,268,1.887,269,2.779,270,3.518,271,2.919,272,3.273,274,3.049,276,2.919,280,3.573,283,2.801,288,2.779,290,1.836,291,2.695,300,1.548,301,2.177,302,1.836,303,1.988,304,1.988,305,2.077,306,2.077,307,2.291,310,1.836,311,2.919,313,2.919,591,2.144,594,2.784,595,3.195,603,3.98,608,3.052,610,5.051,659,1.769,850,2.291,885,5.85,897,4.171,912,3.458,919,2.801,1011,3.363,1077,2.077,1081,2.784,1090,4.39,1328,3.793,1353,3.052,1354,6.018,1355,3.46,1356,3.46,1357,3.46,1358,3.46,1359,3.46,1360,3.46,1361,3.46,1362,3.46,1363,3.46,1364,3.46,1365,3.46,1366,3.46,1367,3.46,1368,3.46,1369,3.46,1370,5.079,1371,5.079,1372,3.46,1373,3.46,1374,3.46,1375,3.46,1376,3.46,1377,3.46,1378,3.46,1379,3.46,1380,3.46,1381,3.46,1382,3.46,1383,3.46,1384,3.46,1385,3.46]],["title/classes/RoleMenuAppEntity.html",[19,0.021,1090,2.894]],["body/classes/RoleMenuAppEntity.html",[3,0.074,4,0.074,5,0.064,7,0.276,10,1.87,11,0.009,12,0.872,16,0.365,18,0.074,19,0.023,24,0.005,25,0.006,26,0.005,60,1.5,102,0.898,118,0.303,236,1.606,250,1.018,263,1.296,271,2.75,272,3.147,276,2.75,280,3.42,288,3.311,300,2.141,301,3.01,302,2.539,303,2.75,304,2.75,305,2.872,306,2.872,311,2.75,313,2.75,912,4.393,919,4.217,1071,3.91,1090,4.221,1091,4.222,1098,4.222,1134,6.325,1147,5.356,1154,4.222,1157,4.222,1338,3.573,1386,4.222,1387,7.169,1388,7.169,1389,4.785,1390,4.785,1391,4.785,1392,4.785,1393,4.785,1394,4.785,1395,4.785,1396,4.785,1397,4.785,1398,4.785]],["title/classes/RoleMenuEntryEntity.html",[19,0.021,1147,3.062]],["body/classes/RoleMenuEntryEntity.html",[3,0.076,4,0.076,5,0.065,7,0.282,10,1.809,11,0.009,12,0.843,16,0.345,18,0.076,19,0.024,24,0.005,25,0.006,26,0.005,60,1.529,81,2.981,102,0.868,117,0.815,118,0.293,250,1.031,263,1.321,271,3.709,272,3.186,280,2.181,300,2.181,302,2.587,304,4.158,311,3.709,1073,4.248,1081,6.198,1090,5.099,1095,4.302,1147,4.522,1399,4.302,1400,7.702,1401,8.012,1402,8.012,1403,7.702,1404,6.455,1405,4.876,1406,8.012,1407,4.876,1408,4.876,1409,4.876,1410,4.876,1411,4.876,1412,4.876,1413,4.876]],["title/modules/RoleModule.html",[27,1.304,45,3.062]],["body/modules/RoleModule.html",[2,2.048,3,0.08,4,0.08,5,0.069,8,1.211,11,0.009,12,0.565,14,1.211,16,0.389,17,0.978,18,0.08,19,0.025,24,0.005,25,0.007,26,0.005,27,2.219,29,2.171,30,2.237,31,2.381,32,2.381,33,2.237,34,3.434,35,3.092,45,5.857,49,3.092,50,2.381,51,2.381,53,2.636,57,2.636,58,1.789,116,1.3,117,0.651,118,0.196,119,1.001,319,3.424,320,2.735,321,3.552,322,4.176,324,2.735,325,2.636,326,3.552,327,2.735,334,2.306,919,2.843,1318,5.553,1334,5.535,1335,4.548,1338,3.85,1414,4.548,1415,4.548,1416,5.155,1417,5.155,1418,5.155,1419,5.155]],["title/interfaces/RoleRO.html",[247,0.771,1336,2.894]],["body/interfaces/RoleRO.html",[3,0.095,4,0.095,5,0.082,7,0.355,11,0.009,15,0.996,18,0.116,24,0.006,25,0.008,26,0.006,102,0.843,108,0.932,117,0.775,118,0.234,247,1.318,248,2.025,250,1.194,252,2.585,255,2.585,257,2.074,258,1.832,265,1.925,268,1.925,591,2.188,912,4.818,1324,5.874,1336,4.948,1352,4.942]],["title/injectables/RoleService.html",[348,1.184,1334,2.894]],["body/injectables/RoleService.html",[3,0.045,4,0.045,5,0.039,7,0.166,8,1.039,11,0.009,12,0.811,14,1.685,16,0.362,17,0.839,18,0.045,19,0.021,20,2.38,24,0.003,25,0.004,26,0.003,58,0.999,60,0.902,89,2.936,90,2.203,92,1.758,95,2.402,97,2.44,100,1.862,102,0.856,108,0.918,116,1.809,117,0.995,118,0.273,119,1.393,148,3.008,180,3.02,196,0.726,200,2.57,217,1.249,235,3.212,236,1.607,286,1.421,348,1.198,349,1.212,354,2.111,356,3.208,383,1.527,384,1.654,385,1.654,388,2.984,427,2.792,463,1.654,465,1.654,486,1.212,487,1.212,489,1.527,512,2.184,514,1.421,529,2.542,554,2.44,556,1.527,620,2.655,626,2.655,630,2.655,632,1.811,634,2.111,636,1.654,637,1.053,640,1.906,643,2.44,644,1.654,646,1.728,647,1.728,653,1.654,654,2.655,655,1.728,656,1.728,657,1.654,658,1.654,659,1.472,660,1.654,661,1.588,662,1.588,752,5.43,912,4.532,919,3.599,1334,2.929,1336,3.567,1337,2.54,1338,2.15,1420,2.54,1421,4.423,1422,2.878,1423,2.878,1424,4.423,1425,4.423,1426,2.878,1427,2.878,1428,2.878,1429,2.878,1430,2.878,1431,2.878,1432,2.878,1433,2.878,1434,2.878,1435,2.878,1436,2.878,1437,2.878,1438,2.878,1439,2.878,1440,2.878,1441,2.878,1442,2.878,1443,4.423,1444,2.878,1445,2.878,1446,2.878,1447,2.878,1448,2.878,1449,2.878]],["title/controllers/SiteController.html",[0,1.304,1450,3.264]],["body/controllers/SiteController.html",[0,0.848,2,0.869,3,0.044,4,0.044,5,0.038,7,0.164,8,1.029,10,1.524,11,0.009,12,0.71,14,1.524,16,0.368,17,0.539,18,0.044,19,0.014,20,2.085,24,0.003,25,0.004,26,0.003,87,1.403,89,2.863,90,2.456,92,2.578,95,2.386,100,2.529,102,0.773,105,3.442,108,1.297,110,3.442,112,4.099,113,3.208,116,1.514,117,0.758,118,0.203,119,1.167,129,1.882,133,2.756,143,4.099,144,3.186,148,2.258,152,3.442,156,2.629,172,1.568,173,0.986,174,1.633,175,1.568,176,1.508,177,1.453,180,1.197,185,1.098,187,2.324,188,4.171,189,3.636,190,1.508,191,1.508,192,0.986,195,1.356,196,0.717,197,3.442,198,4.099,200,2.084,202,3.442,212,2.517,213,3.071,217,1.9,225,2.517,227,1.882,236,1.345,486,1.197,487,1.197,546,2.9,563,1.882,565,1.882,566,1.882,577,1.788,578,1.882,583,1.788,584,1.788,587,1.788,594,4.833,603,1.706,610,5.282,634,1.356,757,5.412,810,1.788,815,1.788,816,2.416,817,1.788,822,1.788,823,1.882,1450,3.271,1451,2.508,1452,2.842,1453,6.005,1454,2.842,1455,2.842,1456,4.801,1457,2.842,1458,2.842,1459,2.842,1460,2.842,1461,2.842,1462,2.842,1463,2.842,1464,3.538,1465,2.508,1466,1.882,1467,2.508,1468,2.287,1469,2.842,1470,2.842,1471,2.842,1472,2.842,1473,2.842,1474,2.842,1475,2.842,1476,2.842,1477,2.842]],["title/interfaces/SiteData.html",[247,0.771,1456,3.062]],["body/interfaces/SiteData.html",[3,0.075,4,0.075,5,0.065,7,0.279,11,0.009,15,1.095,16,0.231,18,0.1,24,0.005,25,0.006,26,0.005,102,0.971,108,1.166,117,0.969,118,0.328,119,1.734,247,1.132,248,1.595,250,1.026,252,3.233,255,3.233,257,2.279,258,2.151,265,2.407,268,2.407,550,4.83,553,4.83,591,2.736,592,4.235,610,3.202,1456,5.049,1466,3.202,1478,3.892,1479,4.267]],["title/classes/SiteEntity.html",[19,0.021,603,2.623]],["body/classes/SiteEntity.html",[3,0.06,4,0.06,5,0.051,7,0.222,10,1.995,11,0.009,12,0.93,15,1.019,16,0.304,18,0.06,19,0.019,24,0.004,25,0.005,26,0.004,60,1.203,81,3.213,102,0.908,108,0.969,117,0.805,118,0.323,128,2.768,236,1.429,250,0.874,257,1.93,258,1.633,263,1.039,265,2,266,2.947,268,2,269,2.947,271,2.204,272,2.702,274,3.285,276,2.204,280,3.762,283,3.838,288,2.947,290,2.035,291,2.904,292,4.087,300,1.716,301,2.413,302,2.035,303,2.204,304,2.204,305,2.303,306,2.303,310,2.035,311,2.204,313,2.204,550,4.377,572,4.377,591,2.274,592,3.519,595,3.443,603,3.285,912,2.204,919,3.838,923,3.087,1328,4.765,1480,3.384,1481,3.836,1482,3.836,1483,3.836,1484,3.836,1485,3.836,1486,3.836,1487,3.836,1488,3.836,1489,3.836,1490,3.836,1491,3.836,1492,3.836,1493,3.836,1494,3.836,1495,3.836,1496,3.836]],["title/modules/SiteModule.html",[27,1.304,46,3.062]],["body/modules/SiteModule.html",[2,2.048,3,0.08,4,0.08,5,0.069,8,1.211,11,0.009,12,0.565,14,1.211,16,0.389,17,0.978,18,0.08,19,0.025,24,0.005,25,0.007,26,0.005,27,2.219,29,2.171,30,2.237,31,2.381,32,2.381,33,2.237,34,3.434,35,3.092,46,5.857,49,3.092,50,2.381,51,2.381,53,2.636,57,2.636,58,1.789,116,1.3,117,0.651,118,0.196,119,1.001,319,3.424,320,2.735,321,3.552,322,4.176,324,2.735,325,2.636,326,3.552,327,2.735,334,2.306,603,3.094,1450,5.553,1464,5.535,1465,4.548,1468,4.149,1497,4.548,1498,4.548,1499,5.155,1500,5.155,1501,5.155,1502,5.155]],["title/interfaces/SiteRO.html",[247,0.771,1466,2.894]],["body/interfaces/SiteRO.html",[3,0.093,4,0.093,5,0.08,7,0.344,11,0.009,15,0.978,16,0.284,18,0.114,24,0.006,25,0.007,26,0.006,102,0.896,108,0.905,117,0.752,118,0.227,247,1.294,248,1.964,250,1.172,252,2.508,255,2.508,257,2.036,258,1.778,265,1.868,268,1.868,550,3.748,553,4.616,591,2.123,592,3.286,610,5.493,1456,5.813,1466,4.858,1478,4.794,1479,5.256]],["title/injectables/SiteService.html",[348,1.184,1464,2.894]],["body/injectables/SiteService.html",[3,0.044,4,0.044,5,0.038,7,0.164,8,1.03,11,0.009,12,0.808,14,1.678,16,0.361,17,0.832,18,0.044,19,0.021,20,2.371,24,0.003,25,0.004,26,0.003,58,0.988,60,0.892,89,2.931,90,2.188,92,1.743,95,2.388,97,2.419,100,1.847,102,0.853,108,0.913,116,1.802,117,0.993,118,0.272,119,1.388,148,3.001,180,3.008,196,0.718,200,2.56,217,1.235,235,3.2,236,1.601,286,1.405,348,1.188,349,1.199,354,2.093,356,3.189,383,1.51,384,1.636,385,1.636,388,2.967,427,2.776,463,1.636,465,1.636,486,1.199,487,1.199,489,1.51,512,2.165,514,1.405,529,2.52,554,2.419,556,1.51,592,3.315,603,3.896,610,5.117,620,2.633,626,2.633,630,2.633,632,1.791,634,2.093,636,1.636,637,1.042,640,1.885,643,2.419,644,1.636,646,1.709,647,1.709,653,1.636,654,2.633,655,1.709,656,1.709,657,1.636,658,1.636,659,1.456,660,1.636,661,1.57,662,1.57,757,5.414,1049,2.126,1464,2.904,1466,3.542,1467,2.511,1468,2.291,1503,2.511,1504,4.386,1505,2.847,1506,2.847,1507,4.386,1508,4.386,1509,2.847,1510,2.847,1511,2.847,1512,2.847,1513,2.847,1514,2.847,1515,2.847,1516,2.847,1517,2.847,1518,2.847,1519,2.847,1520,2.847,1521,2.847,1522,2.847,1523,2.847,1524,2.847,1525,2.847,1526,2.847,1527,4.386,1528,2.847,1529,2.847,1530,2.847,1531,2.847,1532,2.847,1533,2.847,1534,2.847]],["title/controllers/SqldirectController.html",[0,1.304,1535,3.264]],["body/controllers/SqldirectController.html",[0,1.996,2,2.046,3,0.104,4,0.104,5,0.09,11,0.009,16,0.319,17,1.268,18,0.104,19,0.032,24,0.007,25,0.008,26,0.007,87,3.302,1535,5.875,1536,5.901,1537,6.688,1538,6.688]],["title/modules/SqldirectModule.html",[27,1.304,1539,3.264]],["body/modules/SqldirectModule.html",[2,2.221,3,0.091,4,0.091,5,0.079,11,0.009,16,0.376,17,1.111,18,0.091,19,0.028,24,0.006,25,0.007,26,0.006,27,2.355,29,2.468,30,2.543,31,2.707,32,2.707,33,2.543,34,3.645,35,2.707,49,3.354,50,2.707,51,2.707,1535,5.894,1539,6.453,1540,5.171,1541,5.171,1542,6.054,1543,5.86,1544,5.86,1545,5.86]],["title/injectables/SqldirectService.html",[348,1.184,1542,3.062]],["body/injectables/SqldirectService.html",[3,0.105,4,0.105,5,0.09,11,0.009,16,0.321,17,1.278,18,0.105,19,0.033,24,0.007,25,0.008,26,0.007,348,2.14,349,2.837,1542,5.535,1546,5.945]],["title/controllers/TagController.html",[0,1.304,1547,3.264]],["body/controllers/TagController.html",[0,1.556,2,1.595,3,0.081,4,0.081,5,0.07,7,0.301,8,1.584,10,1.225,11,0.009,12,0.571,14,1.225,16,0.377,17,0.989,18,0.081,19,0.025,20,1.676,24,0.005,25,0.007,26,0.005,87,2.574,89,2.595,95,3.142,105,2.767,108,1.2,110,2.767,112,3.579,143,3.579,144,3.579,148,2.536,152,2.767,187,3.579,188,3.967,189,3.579,190,2.767,191,2.767,192,1.81,195,2.489,196,1.315,197,2.767,198,3.579,200,1.81,202,2.767,563,3.453,1339,6.975,1547,5.038,1548,4.601,1549,5.215,1550,5.215,1551,3.453,1552,4.197,1553,4.95,1554,4.601,1555,5.215,1556,5.215,1557,5.215]],["title/classes/TagEntity.html",[19,0.021,1551,2.894]],["body/classes/TagEntity.html",[3,0.078,4,0.078,5,0.068,7,0.291,10,1.951,11,0.009,12,0.91,15,0.879,16,0.24,18,0.078,19,0.024,24,0.005,25,0.007,26,0.005,60,1.58,102,0.937,118,0.316,236,1.648,250,1.054,257,2.165,263,1.365,265,2.306,266,3.396,268,2.306,269,3.396,280,3.885,288,3.396,290,2.674,291,3.5,300,2.255,310,2.674,398,6.489,1011,4.368,1551,4.368,1558,4.446,1559,5.04,1560,5.04,1561,5.04,1562,5.04,1563,5.04,1564,5.04,1565,5.04]],["title/modules/TagModule.html",[27,1.304,47,3.062]],["body/modules/TagModule.html",[2,1.992,3,0.077,4,0.077,5,0.066,8,1.161,11,0.009,12,0.541,14,1.161,16,0.394,17,0.937,18,0.077,19,0.024,24,0.005,25,0.007,26,0.005,27,2.174,29,2.081,30,2.144,31,2.283,32,2.283,33,2.144,34,3.364,35,3.008,47,5.991,48,4.961,49,3.008,50,2.283,51,2.283,53,3.331,56,3.691,57,2.528,58,1.716,116,1.246,117,0.624,118,0.188,119,0.96,319,3.331,320,2.623,321,3.456,322,4.109,324,2.623,325,2.528,326,3.456,327,2.623,334,2.211,1547,5.441,1551,3.272,1552,3.978,1553,5.471,1554,4.361,1566,4.361,1567,4.943,1568,4.361,1569,4.943,1570,4.943,1571,4.943,1572,4.943]],["title/injectables/TagService.html",[348,1.184,1553,2.894]],["body/injectables/TagService.html",[3,0.087,4,0.087,5,0.075,7,0.322,8,1.652,11,0.009,12,0.77,14,1.308,16,0.386,17,1.056,18,0.087,19,0.027,20,1.791,24,0.006,25,0.007,26,0.006,58,1.933,60,1.746,89,2.677,95,3.219,116,1.405,117,0.703,118,0.212,119,1.082,148,2.645,196,1.405,200,1.933,348,1.906,349,2.345,354,3.357,356,4.298,383,2.956,388,2.75,1551,3.688,1552,4.483,1553,4.658,1573,4.914,1574,5.57,1575,5.57,1576,7.035,1577,5.57,1578,5.57,1579,5.57]],["title/classes/ToIntegerPipe.html",[19,0.021,1580,3.517]],["body/classes/ToIntegerPipe.html",[3,0.087,4,0.087,5,0.075,7,0.325,8,1.662,11,0.009,12,0.616,14,1.321,15,1.032,16,0.268,17,1.066,18,0.087,19,0.027,20,1.807,24,0.006,25,0.007,26,0.006,102,0.873,116,1.418,117,0.71,118,0.214,119,1.092,235,2.439,263,1.523,334,3.166,427,2.597,512,2.776,661,3.101,721,4.686,1580,5.695,1581,6.244,1582,4.96,1583,6.833,1584,6.244,1585,6.244,1586,6.233,1587,7.172,1588,5.622,1589,6.244,1590,7.077,1591,5.622,1592,5.622,1593,5.622]],["title/classes/UpdateUserDto.html",[19,0.021,1594,3.062]],["body/classes/UpdateUserDto.html",[3,0.077,4,0.077,5,0.067,7,0.288,10,1.825,11,0.009,12,0.851,15,1.203,16,0.238,18,0.077,19,0.024,24,0.005,25,0.007,26,0.005,108,1.301,118,0.296,192,1.73,196,2.237,250,1.046,263,1.35,684,4.381,691,2.46,766,3.722,767,4.451,769,4.127,770,4.397,771,4.011,772,4.397,1254,4.637,1256,4.637,1594,4.588,1595,7.119,1596,4.984]],["title/controllers/UserController.html",[0,1.304,1597,3.264]],["body/controllers/UserController.html",[0,1.238,2,0.81,3,0.041,4,0.041,5,0.036,7,0.153,8,0.974,10,1.475,11,0.009,12,0.688,14,1.475,15,0.681,16,0.353,17,0.502,18,0.041,19,0.013,20,2.237,24,0.003,25,0.004,26,0.003,89,2.824,90,2.365,92,2.495,100,2.435,102,0.576,105,3.331,108,1.283,110,3.069,112,4.019,113,3.471,116,1.583,117,0.792,118,0.22,119,1.22,120,3.098,129,1.754,133,2.609,143,4.019,144,2.201,148,2.174,152,3.069,172,1.461,173,0.92,174,1.523,175,1.461,176,1.406,177,1.355,180,1.116,185,3.223,187,2.201,188,4.096,189,3.533,190,1.406,191,1.406,192,0.92,195,1.264,196,0.668,197,3.331,198,4.019,200,2.179,202,3.331,213,3.323,217,1.8,225,2.384,227,1.754,235,2.724,256,2.889,427,1.224,477,3.216,486,1.116,487,1.116,495,2.132,499,2.609,512,1.308,514,1.308,556,1.406,643,1.461,644,1.523,764,4.665,767,3.19,769,2.121,810,1.667,815,1.667,816,2.819,817,1.667,822,2.609,1066,4.875,1254,2.384,1256,2.384,1594,4.398,1597,3.098,1598,2.338,1599,4.148,1600,5.783,1601,2.65,1602,6.278,1603,2.65,1604,2.65,1605,2.65,1606,2.65,1607,2.65,1608,2.65,1609,2.65,1610,2.65,1611,2.65,1612,2.65,1613,4.148,1614,2.65,1615,2.65,1616,2.65,1617,2.65,1618,2.65,1619,2.65,1620,1.754,1621,2.338,1622,2.65,1623,2.65,1624,2.65,1625,2.65,1626,2.65,1627,2.65,1628,2.65,1629,2.65,1630,2.65,1631,5.111,1632,2.65,1633,2.65,1634,2.65,1635,2.65,1636,2.65,1637,2.65,1638,2.65,1639,2.65]],["title/interfaces/UserData.html",[247,0.771,256,1.896]],["body/interfaces/UserData.html",[3,0.088,4,0.088,5,0.076,7,0.326,11,0.009,15,1.216,18,0.11,24,0.006,25,0.007,26,0.006,118,0.319,119,1.377,185,2.179,247,1.25,248,1.86,250,1.133,256,3.365,499,5.119,767,4.489,769,4.162,1254,4.676,1256,4.676,1620,3.734,1640,4.539]],["title/classes/UserEntity.html",[19,0.021,270,2.319]],["body/classes/UserEntity.html",[3,0.053,4,0.053,5,0.045,7,0.196,8,1.175,10,2,11,0.009,12,0.933,14,0.796,15,1.077,16,0.349,18,0.078,19,0.029,24,0.003,25,0.005,26,0.003,60,1.062,88,3.568,89,2.063,102,0.826,109,1.947,118,0.321,200,1.176,236,1.332,250,0.799,257,1.821,258,1.492,260,4.021,263,0.918,265,1.864,266,2.745,268,1.864,269,2.745,270,3.154,272,2.469,274,4.398,276,2.874,280,3.781,288,2.745,300,1.516,303,1.947,313,2.874,591,2.118,637,1.24,767,3.279,768,4.165,769,3.04,912,1.947,919,3.62,923,2.727,1254,3.416,1256,3.416,1328,4.44,1641,2.989,1642,5.945,1643,6.564,1644,3.388,1645,3.388,1646,3.388,1647,3.388,1648,3.388,1649,3.388,1650,3.388,1651,3.388,1652,3.388,1653,3.388,1654,3.388,1655,3.388,1656,3.388,1657,3.388,1658,3.388,1659,3.388,1660,5.945,1661,3.388,1662,5.001,1663,3.388,1664,5.001,1665,4.025,1666,3.388,1667,3.388,1668,5.001,1669,3.388,1670,3.388,1671,3.388,1672,3.388,1673,3.388,1674,3.388,1675,3.388]],["title/modules/UserModule.html",[27,1.304,48,2.623]],["body/modules/UserModule.html",[2,1.96,3,0.075,4,0.075,5,0.065,8,1.133,11,0.009,12,0.528,14,1.133,16,0.391,17,0.915,18,0.075,19,0.023,24,0.005,25,0.006,26,0.005,27,2.148,29,2.031,30,2.093,31,2.228,32,2.228,33,2.093,34,3.324,35,3.324,48,5.027,49,2.96,50,2.228,51,2.228,53,2.467,57,2.467,58,1.674,116,1.216,117,0.609,118,0.183,119,0.937,185,2.477,270,2.559,319,3.277,320,2.559,321,3.401,322,4.069,324,3.401,325,2.467,326,3.401,327,2.559,331,3.194,334,2.158,335,3.882,337,3.882,339,5.157,340,4.256,344,4.256,477,5.553,495,3.882,1264,4.256,1265,4.256,1597,5.375,1676,4.256,1677,4.256,1678,4.256,1679,4.823,1680,4.823,1681,4.823,1682,4.256,1683,4.256]],["title/interfaces/UserRO.html",[247,0.771,1620,2.894]],["body/interfaces/UserRO.html",[3,0.097,4,0.097,5,0.083,7,0.36,11,0.009,15,1.15,18,0.117,24,0.006,25,0.008,26,0.006,118,0.237,185,3.255,247,1.329,248,2.053,250,1.204,256,3.655,499,3.917,767,3.434,769,3.184,1254,3.577,1256,3.577,1620,4.99,1640,5.01]],["title/injectables/UserService.html",[348,1.184,477,2.749]],["body/injectables/UserService.html",[3,0.035,4,0.035,5,0.03,7,0.131,8,0.858,11,0.009,12,0.791,14,1.651,15,0.828,16,0.359,17,0.693,18,0.035,19,0.018,20,2.373,24,0.002,25,0.004,26,0.002,58,0.784,60,0.709,73,1.496,74,4.579,89,2.873,90,1.882,92,2.101,95,2.101,97,2.016,100,1.539,102,0.7,116,1.772,117,0.887,118,0.259,119,1.365,148,2.917,180,2.752,185,2.999,196,0.57,200,2.612,217,0.981,235,3.367,236,1.3,257,0.627,270,3.08,286,1.116,319,2.353,348,0.99,349,0.952,354,1.744,356,2.805,358,2.941,383,1.199,384,1.299,385,1.299,388,2.865,390,1.819,392,1.994,427,3.019,441,3.225,463,1.299,465,1.299,477,2.299,486,0.952,487,0.952,489,1.199,493,1.496,499,2.299,500,3.437,501,1.688,512,2.272,514,1.116,529,2.1,556,1.199,620,2.194,626,2.194,630,2.194,632,1.422,634,1.744,636,1.299,637,0.827,643,2.916,644,1.299,646,1.357,647,1.357,653,1.299,654,2.194,655,1.357,656,1.357,657,2.1,658,2.1,659,1.869,660,2.1,661,2.016,662,2.016,764,3.703,767,4.219,768,3.703,769,3.692,1049,1.688,1066,3.703,1254,2.1,1256,2.1,1270,1.994,1287,1.994,1289,3.225,1304,3.225,1594,3.703,1620,3.047,1621,1.994,1665,2.941,1682,1.994,1684,1.819,1685,3.655,1686,3.655,1687,3.655,1688,2.26,1689,3.655,1690,2.26,1691,2.26,1692,3.655,1693,2.26,1694,2.26,1695,3.655,1696,2.26,1697,2.26,1698,2.26,1699,3.655,1700,2.26,1701,2.26,1702,1.994,1703,2.26,1704,2.26,1705,2.26,1706,2.26,1707,2.26,1708,2.26,1709,2.26,1710,2.26,1711,2.26,1712,2.26,1713,2.26,1714,2.26,1715,2.26,1716,2.26,1717,2.26,1718,2.26,1719,2.26,1720,2.26,1721,2.26,1722,2.26,1723,2.26,1724,2.26,1725,3.655,1726,2.26,1727,3.655,1728,2.26,1729,2.26,1730,2.26,1731,2.26,1732,3.655,1733,3.655,1734,2.26,1735,2.26,1736,2.26,1737,2.26,1738,2.26]],["title/injectables/ValidationPipe.html",[348,1.184,816,2.411]],["body/injectables/ValidationPipe.html",[3,0.063,4,0.063,5,0.055,7,0.236,8,1.343,11,0.009,12,0.723,14,1.55,15,0.544,16,0.341,17,0.774,18,0.063,19,0.032,20,2.299,24,0.007,25,0.006,26,0.004,89,2.291,102,0.46,116,1.664,117,0.833,118,0.217,119,1.282,200,1.416,235,3.266,258,1.969,286,2.014,295,3.599,334,1.825,348,1.548,349,1.718,388,3.852,427,2.64,486,1.718,487,1.718,489,2.165,512,2.822,636,2.344,637,1.493,643,3.64,653,2.344,657,2.344,658,2.344,659,2.923,660,2.344,661,2.25,662,2.25,721,4.985,816,3.153,1583,5.043,1584,5.043,1585,5.043,1586,5.755,1587,6.309,1589,3.599,1739,3.599,1740,5.716,1741,5.716,1742,5.716,1743,4.08,1744,5.716,1745,4.08,1746,7.151,1747,4.08,1748,4.08,1749,3.599,1750,4.08,1751,4.08,1752,4.08,1753,5.716,1754,4.08,1755,4.08,1756,4.08,1757,4.08,1758,4.08,1759,4.08,1760,4.08,1761,4.08,1762,4.08,1763,4.08,1764,4.08,1765,4.08]],["title/controllers/ViewController.html",[0,1.304,1766,3.517]],["body/controllers/ViewController.html",[0,1.996,2,2.046,3,0.104,4,0.104,5,0.09,11,0.009,16,0.319,17,1.268,18,0.104,19,0.032,24,0.007,25,0.008,26,0.007,87,3.302,1766,6.33,1767,5.901,1768,6.688,1769,6.688]],["title/modules/ViewModule.html",[27,1.304,1770,3.264]],["body/modules/ViewModule.html",[3,0.094,4,0.094,5,0.081,11,0.009,16,0.353,17,1.145,18,0.094,19,0.029,24,0.006,25,0.007,26,0.006,27,2.386,29,2.542,30,2.619,31,2.788,32,2.788,33,2.619,34,3.693,35,2.788,49,3.416,50,2.788,51,2.788,1770,6.5,1771,5.327,1772,5.327,1773,6.098,1774,6.037,1775,6.037]],["title/injectables/ViewService.html",[348,1.184,1773,3.062]],["body/injectables/ViewService.html",[3,0.105,4,0.105,5,0.09,11,0.009,16,0.321,17,1.278,18,0.105,19,0.033,24,0.007,25,0.008,26,0.007,348,2.14,349,2.837,1773,5.535,1776,5.945]],["title/coverage.html",[1777,5.29]],["body/coverage.html",[0,2.299,1,1.555,5,0.028,6,1.837,11,0.009,19,0.042,24,0.002,25,0.003,26,0.002,33,0.903,63,1.459,75,1.676,77,1.555,85,1.555,86,1.837,103,1.25,104,1.459,118,0.079,123,1.555,125,1.748,128,0.903,178,1.379,181,1.25,182,1.25,184,1.197,185,0.805,247,1.486,249,3.895,256,0.903,260,1.105,264,1.837,270,1.105,286,4.547,329,1.31,331,1.379,348,2.136,350,2.751,427,0.962,474,1.837,477,1.31,493,1.379,520,1.676,521,1.837,532,1.837,536,1.555,537,1.837,542,1.676,543,1.837,544,1.837,548,1.459,553,1.31,568,1.379,570,1.379,572,1.31,590,2.751,593,1.837,603,1.25,618,1.837,674,2.751,675,1.837,680,1.837,682,1.837,683,1.837,692,1.459,693,1.837,694,1.837,706,1.459,707,1.837,708,1.837,712,1.459,713,2.751,714,1.837,718,1.676,719,1.837,726,1.459,727,2.751,728,1.837,734,1.676,735,1.837,744,1.676,745,2.751,746,1.837,752,1.459,753,1.837,757,1.459,758,1.837,759,1.837,764,1.459,765,1.837,766,3.248,773,1.837,779,1.459,780,2.751,781,1.379,782,1.379,783,1.837,797,1.555,798,1.837,811,1.379,816,1.148,834,1.837,869,1.837,875,1.555,876,1.837,882,1.459,893,1.379,895,1.379,897,1.31,910,2.751,911,1.837,919,1.148,932,1.837,965,1.555,966,1.837,973,1.31,981,1.379,983,1.25,985,1.25,986,1.105,1000,3.527,1001,1.31,1003,1.837,1009,1.555,1019,1.837,1033,1.837,1066,1.459,1067,1.837,1069,1.379,1070,3.527,1071,1.065,1073,1.148,1075,1.379,1076,1.25,1078,1.31,1080,1.837,1090,1.379,1099,1.555,1100,1.837,1116,1.379,1132,1.837,1147,1.459,1165,1.837,1197,1.676,1198,1.837,1218,1.555,1219,1.837,1235,1.379,1237,1.379,1252,1.459,1253,2.751,1268,1.837,1318,1.555,1319,1.837,1324,1.459,1334,1.379,1336,1.379,1352,2.751,1353,1.837,1386,1.837,1399,1.837,1420,1.837,1450,1.555,1451,1.837,1456,1.459,1464,1.379,1466,1.379,1478,2.751,1480,1.837,1503,1.837,1535,1.555,1536,1.837,1542,1.459,1546,1.837,1547,1.555,1548,1.837,1551,1.379,1553,1.379,1558,1.837,1573,1.837,1580,1.676,1581,1.837,1582,1.837,1594,1.459,1595,1.837,1597,1.555,1598,1.837,1620,1.379,1640,2.751,1641,1.837,1684,2.751,1739,1.837,1766,1.676,1767,1.837,1773,1.459,1776,1.837,1777,1.837,1778,2.082,1779,2.082,1780,2.082,1781,8.096,1782,4.349,1783,3.419,1784,3.419,1785,5.976,1786,5.035,1787,7.2,1788,6.593,1789,7.2,1790,1.837,1791,5.56,1792,6.593,1793,7.351,1794,5.035,1795,1.837,1796,2.082,1797,2.082,1798,3.419,1799,3.419,1800,1.837,1801,2.082,1802,2.082,1803,2.082]],["title/dependencies.html",[30,2.284,1804,3.634]],["body/dependencies.html",[11,0.009,17,1.018,19,0.033,24,0.005,25,0.007,26,0.005,30,2.33,58,1.864,60,1.684,73,3.556,128,2.33,177,3.515,192,1.864,492,4.738,493,3.556,494,4.322,637,1.965,1340,4.738,1586,4.322,1665,4.322,1749,4.738,1805,8.262,1806,5.371,1807,5.371,1808,5.371,1809,5.371,1810,5.371,1811,5.371,1812,5.371,1813,5.371,1814,5.371,1815,5.371,1816,5.371,1817,5.371,1818,6.874,1819,5.371,1820,5.371,1821,6.874,1822,5.371,1823,5.371,1824,5.371,1825,4.738,1826,5.371,1827,5.371,1828,5.371,1829,5.371,1830,5.371,1831,5.371,1832,5.371,1833,5.371,1834,5.371,1835,5.371,1836,5.371,1837,5.371,1838,5.371]],["title/miscellaneous/functions.html",[1839,2.714,1840,4.645]],["body/miscellaneous/functions.html",[7,0.401,11,0.008,24,0.007,25,0.008,26,0.007,33,3.683,1795,6.129,1839,5.188,1840,6.129,1841,6.947]],["title/index.html",[7,0.21,1842,3.634,1843,3.634]],["body/index.html",[11,0.008,22,6.153,23,6.153,24,0.007,25,0.008,26,0.007,1844,6.153,1845,7.111,1846,6.974,1847,6.974]],["title/modules.html",[29,2.525]],["body/modules.html",[11,0.007,24,0.006,25,0.007,26,0.006,28,4.122,29,2.324,38,3.866,39,3.866,40,3.866,41,3.866,42,3.866,43,3.866,44,3.866,45,3.866,46,3.866,47,3.866,48,3.313,539,4.441,1539,4.122,1770,4.122,1848,9.074,1849,9.074,1850,9.074,1851,9.104,1852,5.519,1853,5.519]],["title/overview.html",[1854,5.29]],["body/overview.html",[2,1.171,11,0.009,24,0.004,25,0.005,26,0.004,27,1.142,28,6.712,29,1.612,30,1.661,31,1.768,32,1.768,33,1.661,34,1.768,35,1.768,36,3.377,37,3.377,38,5.512,39,5.15,40,5.15,41,5.15,42,5.15,43,5.15,44,5.512,45,5.15,46,5.15,47,5.512,48,4.915,49,2.524,50,1.768,51,1.768,178,4.219,248,1.262,263,1.037,315,3.377,317,3.377,349,1.612,477,4.95,568,4.219,612,3.377,613,3.377,811,4.219,828,3.377,829,3.377,893,4.219,926,3.377,927,3.377,981,4.219,1027,3.377,1028,3.377,1116,4.219,1159,3.377,1160,3.377,1235,4.219,1257,3.377,1259,3.377,1334,4.219,1414,3.377,1415,3.377,1464,4.219,1497,3.377,1498,3.377,1539,5.191,1540,3.377,1541,3.377,1542,4.465,1553,4.219,1566,3.377,1568,3.377,1676,3.377,1677,3.377,1678,3.377,1770,5.191,1771,3.377,1772,3.377,1773,4.465,1854,3.377,1855,5.465,1856,3.828,1857,3.828,1858,3.828]],["title/miscellaneous/variables.html",[1839,2.714,1859,4.645]],["body/miscellaneous/variables.html",[7,0.274,11,0.009,20,2.035,24,0.005,25,0.006,26,0.005,75,5.094,81,2.187,118,0.18,119,0.92,128,2.746,185,2.942,235,3.303,284,6.126,350,3.81,386,4.177,485,4.177,493,4.721,497,5.585,498,4.177,499,3.982,500,4.727,501,3.536,502,4.177,507,3.81,516,5.585,522,5.585,529,2.721,595,2.979,659,3.237,721,5.04,768,3.317,769,2.421,1683,4.177,1684,3.81,1702,4.177,1790,4.177,1800,4.177,1825,4.177,1839,3.536,1844,4.177,1845,4.177,1859,4.177,1860,4.734,1861,4.734,1862,4.734,1863,4.734,1864,4.734,1865,4.734,1866,4.734,1867,4.734,1868,6.33,1869,4.734,1870,6.33,1871,4.734,1872,4.734,1873,4.734,1874,4.734,1875,4.734,1876,4.734,1877,4.734,1878,4.734,1879,4.734,1880,4.734,1881,6.33,1882,4.734,1883,4.734,1884,4.734,1885,4.734,1886,4.734,1887,4.734,1888,4.734,1889,4.734,1890,4.734,1891,4.734]]],"invertedIndex":[["",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/ArticleController.html":{},"interfaces/ArticleData.html":{},"classes/ArticleEntity.html":{},"modules/ArticleModule.html":{},"interfaces/ArticleRO.html":{},"injectables/ArticleService.html":{},"interfaces/ArticlesRO.html":{},"injectables/AuthMiddleware.html":{},"classes/BaseController.html":{},"classes/Comment.html":{},"controllers/CommentController.html":{},"modules/CommentModule.html":{},"injectables/CommentService.html":{},"interfaces/CommentsRO.html":{},"controllers/CorporationController.html":{},"interfaces/CorporationData.html":{},"classes/CorporationEntity.html":{},"modules/CorporationModule.html":{},"interfaces/CorporationRO.html":{},"injectables/CorporationService.html":{},"classes/CreateArticleDto.html":{},"classes/CreateCommentDto.html":{},"classes/CreateCorporationDto.html":{},"classes/CreateErrorLogDto.html":{},"classes/CreateGroupDto.html":{},"classes/CreateListDto.html":{},"classes/CreateListEntryDto.html":{},"classes/CreateMenuDto.html":{},"classes/CreateMenuEntryDto.html":{},"classes/CreateRoleAppDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSiteDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabaseConfig.html":{},"interfaces/ErrorLogData.html":{},"classes/ErrorLogEntity.html":{},"interfaces/ErrorLogRO.html":{},"controllers/ErrorlogController.html":{},"modules/ErrorlogModule.html":{},"injectables/ErrorlogService.html":{},"classes/FollowsEntity.html":{},"controllers/GroupController.html":{},"interfaces/GroupData.html":{},"classes/GroupEntity.html":{},"modules/GroupModule.html":{},"interfaces/GroupRO.html":{},"injectables/GroupService.html":{},"controllers/ListController.html":{},"interfaces/ListData.html":{},"classes/ListEntity.html":{},"interfaces/ListEntry.html":{},"classes/ListEntryEntity.html":{},"interfaces/ListEntryRO.html":{},"modules/ListModule.html":{},"interfaces/ListRO.html":{},"injectables/ListService.html":{},"classes/LoginUserDto.html":{},"interfaces/MenuAppData.html":{},"classes/MenuAppEntity.html":{},"interfaces/MenuAppEntry.html":{},"controllers/MenuController.html":{},"classes/MenuEntryEntity.html":{},"interfaces/MenuEntryRO.html":{},"modules/MenuModule.html":{},"interfaces/MenuRO.html":{},"injectables/MenuService.html":{},"classes/MyLogger.html":{},"controllers/ProfileController.html":{},"interfaces/ProfileData.html":{},"modules/ProfileModule.html":{},"interfaces/ProfileRO.html":{},"injectables/ProfileService.html":{},"controllers/RoleController.html":{},"interfaces/RoleData.html":{},"classes/RoleEntity.html":{},"classes/RoleMenuAppEntity.html":{},"classes/RoleMenuEntryEntity.html":{},"modules/RoleModule.html":{},"interfaces/RoleRO.html":{},"injectables/RoleService.html":{},"controllers/SiteController.html":{},"interfaces/SiteData.html":{},"classes/SiteEntity.html":{},"modules/SiteModule.html":{},"interfaces/SiteRO.html":{},"injectables/SiteService.html":{},"controllers/SqldirectController.html":{},"modules/SqldirectModule.html":{},"injectables/SqldirectService.html":{},"controllers/TagController.html":{},"classes/TagEntity.html":{},"modules/TagModule.html":{},"injectables/TagService.html":{},"classes/ToIntegerPipe.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"interfaces/UserData.html":{},"classes/UserEntity.html":{},"modules/UserModule.html":{},"interfaces/UserRO.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{},"controllers/ViewController.html":{},"modules/ViewModule.html":{},"injectables/ViewService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":286,"title":{},"body":{"classes/ArticleEntity.html":{},"injectables/ArticleService.html":{},"injectables/CorporationService.html":{},"classes/CreateSiteDto.html":{},"injectables/ErrorlogService.html":{},"injectables/GroupService.html":{},"injectables/ListService.html":{},"injectables/MenuService.html":{},"injectables/RoleService.html":{},"injectables/SiteService.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{},"coverage.html":{}}}],["0).tostring(36",{"_index":473,"title":{},"body":{"injectables/ArticleService.html":{}}}],["0.1.13",{"_index":1828,"title":{},"body":{"dependencies.html":{}}}],["0.12.2",{"_index":1817,"title":{},"body":{"dependencies.html":{}}}],["0.2.25",{"_index":1836,"title":{},"body":{"dependencies.html":{}}}],["0.2.3",{"_index":1816,"title":{},"body":{"dependencies.html":{}}}],["0.26.2",{"_index":1815,"title":{},"body":{"dependencies.html":{}}}],["0.5.0",{"_index":1806,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1787,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":1791,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":1784,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":1782,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":1799,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":1783,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":1797,"title":{},"body":{"coverage.html":{}}}],["0/16",{"_index":1801,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1781,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1785,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1788,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1789,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1793,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1798,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1794,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1792,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":397,"title":{},"body":{"injectables/ArticleService.html":{},"injectables/AuthMiddleware.html":{},"classes/BaseController.html":{},"classes/GroupEntity.html":{},"classes/ListEntity.html":{}}}],["1.0.1",{"_index":1819,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":787,"title":{},"body":{"classes/ErrorLogEntity.html":{},"classes/MenuAppEntity.html":{},"classes/MenuEntryEntity.html":{}}}],["100",{"_index":292,"title":{},"body":{"classes/ArticleEntity.html":{},"classes/CorporationEntity.html":{},"classes/GroupEntity.html":{},"classes/SiteEntity.html":{}}}],["1000",{"_index":1735,"title":{},"body":{"injectables/UserService.html":{}}}],["15",{"_index":1855,"title":{},"body":{"overview.html":{}}}],["17",{"_index":1856,"title":{},"body":{"overview.html":{}}}],["200",{"_index":143,"title":{},"body":{"controllers/ArticleController.html":{},"controllers/CorporationController.html":{},"controllers/ErrorlogController.html":{},"controllers/GroupController.html":{},"controllers/ListController.html":{},"controllers/MenuController.html":{},"controllers/ProfileController.html":{},"controllers/RoleController.html":{},"controllers/SiteController.html":{},"controllers/TagController.html":{},"controllers/UserController.html":{}}}],["201",{"_index":107,"title":{},"body":{"controllers/ArticleController.html":{},"controllers/CorporationController.html":{}}}],["27",{"_index":1858,"title":{},"body":{"overview.html":{}}}],["3.0.2",{"_index":1830,"title":{},"body":{"dependencies.html":{}}}],["3.2.0",{"_index":1833,"title":{},"body":{"dependencies.html":{}}}],["3.9.3",{"_index":1838,"title":{},"body":{"dependencies.html":{}}}],["3000",{"_index":1866,"title":{},"body":{"miscellaneous/variables.html":{}}}],["34",{"_index":1857,"title":{},"body":{"overview.html":{}}}],["4.0.0",{"_index":1821,"title":{},"body":{"dependencies.html":{}}}],["4.1.4",{"_index":1835,"title":{},"body":{"dependencies.html":{}}}],["4.5.8",{"_index":1810,"title":{},"body":{"dependencies.html":{}}}],["401",{"_index":556,"title":{},"body":{"controllers/CorporationController.html":{},"injectables/CorporationService.html":{},"controllers/ErrorlogController.html":{},"injectables/ErrorlogService.html":{},"controllers/GroupController.html":{},"injectables/ListService.html":{},"injectables/MenuService.html":{},"injectables/RoleService.html":{},"injectables/SiteService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["403",{"_index":112,"title":{},"body":{"controllers/ArticleController.html":{},"controllers/CorporationController.html":{},"controllers/ErrorlogController.html":{},"controllers/GroupController.html":{},"controllers/ListController.html":{},"controllers/MenuController.html":{},"controllers/ProfileController.html":{},"controllers/RoleController.html":{},"controllers/SiteController.html":{},"controllers/TagController.html":{},"controllers/UserController.html":{}}}],["404",{"_index":559,"title":{},"body":{"controllers/CorporationController.html":{},"controllers/ErrorlogController.html":{},"controllers/GroupController.html":{},"injectables/GroupService.html":{}}}],["50",{"_index":1011,"title":{},"body":{"classes/ListEntity.html":{},"classes/ListEntryEntity.html":{},"classes/MenuAppEntity.html":{},"classes/MenuEntryEntity.html":{},"classes/RoleEntity.html":{},"classes/TagEntity.html":{}}}],["6",{"_index":472,"title":{},"body":{"injectables/ArticleService.html":{}}}],["6.2.0",{"_index":1826,"title":{},"body":{"dependencies.html":{}}}],["6.5.5",{"_index":1832,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":1730,"title":{},"body":{"injectables/UserService.html":{}}}],["7.1.0",{"_index":1811,"title":{},"body":{"dependencies.html":{}}}],["7.1.1",{"_index":1805,"title":{},"body":{"dependencies.html":{}}}],["8.2.0",{"_index":1823,"title":{},"body":{"dependencies.html":{}}}],["8.5.0",{"_index":1814,"title":{},"body":{"dependencies.html":{}}}],["8.5.1",{"_index":1824,"title":{},"body":{"dependencies.html":{}}}],["_article.id",{"_index":444,"title":{},"body":{"injectables/ArticleService.html":{}}}],["_comment.id",{"_index":436,"title":{},"body":{"injectables/ArticleService.html":{}}}],["_errors",{"_index":654,"title":{},"body":{"injectables/CorporationService.html":{},"injectables/ErrorlogService.html":{},"injectables/GroupService.html":{},"injectables/ListService.html":{},"injectables/MenuService.html":{},"injectables/RoleService.html":{},"injectables/SiteService.html":{},"injectables/UserService.html":{}}}],["_follows",{"_index":417,"title":{},"body":{"injectables/ArticleService.html":{},"injectables/ProfileService.html":{}}}],["_follows.length",{"_index":421,"title":{},"body":{"injectables/ArticleService.html":{}}}],["_follows.map(el",{"_index":422,"title":{},"body":{"injectables/ArticleService.html":{}}}],["_profile",{"_index":1291,"title":{},"body":{"injectables/ProfileService.html":{}}}],["_profile.bio",{"_index":1294,"title":{},"body":{"injectables/ProfileService.html":{}}}],["_profile.id",{"_index":1298,"title":{},"body":{"injectables/ProfileService.html":{}}}],["_profile.image",{"_index":1295,"title":{},"body":{"injectables/ProfileService.html":{}}}],["_profile.username",{"_index":1293,"title":{},"body":{"injectables/ProfileService.html":{}}}],["_user",{"_index":1631,"title":{},"body":{"controllers/UserController.html":{}}}],["abbreviation",{"_index":729,"title":{},"body":{"classes/CreateMenuDto.html":{},"classes/CreateRoleAppDto.html":{},"classes/MenuAppEntity.html":{},"injectables/MenuService.html":{}}}],["access",{"_index":1378,"title":{},"body":{"classes/RoleEntity.html":{}}}],["accessed",{"_index":1384,"title":{},"body":{"classes/RoleEntity.html":{}}}],["action",{"_index":1133,"title":{},"body":{"classes/MenuEntryEntity.html":{}}}],["active",{"_index":591,"title":{},"body":{"interfaces/CorporationData.html":{},"classes/CorporationEntity.html":{},"interfaces/CorporationRO.html":{},"interfaces/GroupData.html":{},"classes/GroupEntity.html":{},"interfaces/GroupRO.html":{},"interfaces/ListData.html":{},"classes/ListEntity.html":{},"interfaces/ListEntry.html":{},"interfaces/ListEntryRO.html":{},"interfaces/ListRO.html":{},"interfaces/MenuAppData.html":{},"classes/MenuAppEntity.html":{},"interfaces/MenuAppEntry.html":{},"classes/MenuEntryEntity.html":{},"interfaces/MenuEntryRO.html":{},"interfaces/MenuRO.html":{},"interfaces/RoleData.html":{},"classes/RoleEntity.html":{},"interfaces/RoleRO.html":{},"interfaces/SiteData.html":{},"classes/SiteEntity.html":{},"interfaces/SiteRO.html":{},"classes/UserEntity.html":{}}}],["addcomment",{"_index":351,"title":{},"body":{"injectables/ArticleService.html":{}}}],["addcomment(slug",{"_index":362,"title":{},"body":{"injectables/ArticleService.html":{}}}],["admin",{"_index":1845,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["afterupdate",{"_index":305,"title":{},"body":{"classes/ArticleEntity.html":{},"classes/CorporationEntity.html":{},"classes/ListEntity.html":{},"classes/MenuAppEntity.html":{},"classes/MenuEntryEntity.html":{},"classes/RoleEntity.html":{},"classes/RoleMenuAppEntity.html":{},"classes/SiteEntity.html":{}}}],["apappid",{"_index":739,"title":{},"body":{"classes/CreateMenuEntryDto.html":{}}}],["api",{"_index":23,"title":{},"body":{"controllers/AppController.html":{},"index.html":{}}}],["apibearerauth",{"_index":187,"title":{},"body":{"controllers/ArticleController.html":{},"controllers/CorporationController.html":{},"controllers/ErrorlogController.html":{},"controllers/GroupController.html":{},"controllers/ListController.html":{},"controllers/MenuController.html":{},"controllers/ProfileController.html":{},"controllers/RoleController.html":{},"controllers/SiteController.html":{},"controllers/TagController.html":{},"controllers/UserController.html":{}}}],["apibody",{"_index":191,"title":{},"body":{"controllers/ArticleController.html":{},"controllers/CorporationController.html":{},"controllers/ErrorlogController.html":{},"controllers/GroupController.html":{},"controllers/ListController.html":{},"controllers/MenuController.html":{},"controllers/ProfileController.html":{},"controllers/RoleController.html":{},"controllers/SiteController.html":{},"controllers/TagController.html":{},"controllers/UserController.html":{}}}],["apibody({type",{"_index":213,"title":{},"body":{"controllers/ArticleController.html":{},"controllers/CorporationController.html":{},"controllers/ErrorlogController.html":{},"controllers/GroupController.html":{},"controllers/ListController.html":{},"controllers/MenuController.html":{},"controllers/RoleController.html":{},"controllers/SiteController.html":{},"controllers/UserController.html":{}}}],["apioperation",{"_index":189,"title":{},"body":{"controllers/ArticleController.html":{},"controllers/CorporationController.html":{},"controllers/ErrorlogController.html":{},"controllers/GroupController.html":{},"controllers/ListController.html":{},"controllers/MenuController.html":{},"controllers/ProfileController.html":{},"controllers/RoleController.html":{},"controllers/SiteController.html":{},"controllers/TagController.html":{},"controllers/UserController.html":{}}}],["apioperation({summary",{"_index":105,"title":{},"body":{"controllers/ArticleController.html":{},"controllers/CorporationController.html":{},"controllers/ErrorlogController.html":{},"controllers/GroupController.html":{},"controllers/ListController.html":{},"controllers/MenuController.html":{},"controllers/ProfileController.html":{},"controllers/RoleController.html":{},"controllers/SiteController.html":{},"controllers/TagController.html":{},"controllers/UserController.html":{}}}],["apiproperty",{"_index":691,"title":{},"body":{"classes/CreateCorporationDto.html":{},"classes/CreateErrorLogDto.html":{},"classes/CreateGroupDto.html":{},"classes/CreateListDto.html":{},"classes/CreateListEntryDto.html":{},"classes/CreateMenuDto.html":{},"classes/CreateMenuEntryDto.html":{},"classes/CreateRoleAppDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSiteDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["apiproperty({type",{"_index":684,"title":{},"body":{"classes/CreateCorporationDto.html":{},"classes/CreateErrorLogDto.html":{},"classes/CreateGroupDto.html":{},"classes/CreateListDto.html":{},"classes/CreateListEntryDto.html":{},"classes/CreateMenuDto.html":{},"classes/CreateMenuEntryDto.html":{},"classes/CreateRoleAppDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSiteDto.html":{},"classes/LoginUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["apiresponse",{"_index":188,"title":{},"body":{"controllers/ArticleController.html":{},"controllers/CorporationController.html":{},"controllers/ErrorlogController.html":{},"controllers/GroupController.html":{},"controllers/ListController.html":{},"controllers/MenuController.html":{},"controllers/ProfileController.html":{},"controllers/RoleController.html":{},"controllers/SiteController.html":{},"controllers/TagController.html":{},"controllers/UserController.html":{}}}],["apitags",{"_index":190,"title":{},"body":{"controllers/ArticleController.html":{},"controllers/CorporationController.html":{},"controllers/ErrorlogController.html":{},"controllers/GroupController.html":{},"controllers/ListController.html":{},"controllers/MenuController.html":{},"controllers/ProfileController.html":{},"controllers/RoleController.html":{},"controllers/SiteController.html":{},"controllers/TagController.html":{},"controllers/UserController.html":{}}}],["apitags('articles",{"_index":193,"title":{},"body":{"controllers/ArticleController.html":{}}}],["apitags('corporations",{"_index":574,"title":{},"body":{"controllers/CorporationController.html":{}}}],["apitags('errorlog",{"_index":818,"title":{},"body":{"controllers/ErrorlogController.html":{}}}],["apitags('groups",{"_index":899,"title":{},"body":{"controllers/GroupController.html":{}}}],["apitags('lists",{"_index":988,"title":{},"body":{"controllers/ListController.html":{}}}],["apitags('menus",{"_index":1119,"title":{},"body":{"controllers/MenuController.html":{}}}],["apitags('profiles",{"_index":1239,"title":{},"body":{"controllers/ProfileController.html":{}}}],["apitags('roles",{"_index":1342,"title":{},"body":{"controllers/RoleController.html":{}}}],["apitags('sites",{"_index":1469,"title":{},"body":{"controllers/SiteController.html":{}}}],["apitags('tags",{"_index":1555,"title":{},"body":{"controllers/TagController.html":{}}}],["apitags('user",{"_index":1622,"title":{},"body":{"controllers/UserController.html":{}}}],["app",{"_index":1383,"title":{},"body":{"classes/RoleEntity.html":{}}}],["app.controller",{"_index":54,"title":{},"body":{"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["appid",{"_index":736,"title":{},"body":{"classes/CreateMenuEntryDto.html":{},"interfaces/MenuAppData.html":{},"interfaces/MenuAppEntry.html":{},"classes/MenuEntryEntity.html":{},"interfaces/MenuEntryRO.html":{},"interfaces/MenuRO.html":{},"injectables/MenuService.html":{}}}],["apply(authmiddleware",{"_index":335,"title":{},"body":{"modules/ArticleModule.html":{},"modules/ProfileModule.html":{},"modules/UserModule.html":{}}}],["appmodule",{"_index":28,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["argon2",{"_index":1665,"title":{},"body":{"classes/UserEntity.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["argon2.hash(this.password",{"_index":1672,"title":{},"body":{"classes/UserEntity.html":{}}}],["argon2.verify(user.password",{"_index":1705,"title":{},"body":{"injectables/UserService.html":{}}}],["argumentmetadata",{"_index":1587,"title":{},"body":{"classes/ToIntegerPipe.html":{},"injectables/ValidationPipe.html":{}}}],["array",{"_index":295,"title":{},"body":{"classes/ArticleEntity.html":{},"injectables/ValidationPipe.html":{}}}],["array.isarray(_follows",{"_index":420,"title":{},"body":{"injectables/ArticleService.html":{}}}],["article",{"_index":109,"title":{},"body":{"controllers/ArticleController.html":{},"interfaces/ArticleData.html":{},"interfaces/ArticleRO.html":{},"injectables/ArticleService.html":{},"interfaces/ArticlesRO.html":{},"classes/Comment.html":{},"interfaces/CommentsRO.html":{},"injectables/ListService.html":{},"classes/UserEntity.html":{}}}],["article'})@apiresponse({status",{"_index":106,"title":{},"body":{"controllers/ArticleController.html":{}}}],["article.author",{"_index":1674,"title":{},"body":{"classes/UserEntity.html":{}}}],["article.comments",{"_index":449,"title":{},"body":{"injectables/ArticleService.html":{},"classes/Comment.html":{}}}],["article.comments.findindex(_comment",{"_index":435,"title":{},"body":{"injectables/ArticleService.html":{}}}],["article.comments.push(comment",{"_index":430,"title":{},"body":{"injectables/ArticleService.html":{}}}],["article.comments.splice(deleteindex",{"_index":439,"title":{},"body":{"injectables/ArticleService.html":{}}}],["article.controller",{"_index":328,"title":{},"body":{"modules/ArticleModule.html":{}}}],["article.description",{"_index":452,"title":{},"body":{"injectables/ArticleService.html":{}}}],["article.dto.ts",{"_index":675,"title":{},"body":{"classes/CreateArticleDto.html":{},"coverage.html":{}}}],["article.dto.ts:2",{"_index":679,"title":{},"body":{"classes/CreateArticleDto.html":{}}}],["article.dto.ts:3",{"_index":677,"title":{},"body":{"classes/CreateArticleDto.html":{}}}],["article.dto.ts:4",{"_index":676,"title":{},"body":{"classes/CreateArticleDto.html":{}}}],["article.dto.ts:5",{"_index":678,"title":{},"body":{"classes/CreateArticleDto.html":{}}}],["article.entity",{"_index":261,"title":{},"body":{"interfaces/ArticleData.html":{},"modules/ArticleModule.html":{},"interfaces/ArticleRO.html":{},"injectables/ArticleService.html":{},"interfaces/ArticlesRO.html":{},"classes/Comment.html":{},"interfaces/CommentsRO.html":{}}}],["article.favoritecount",{"_index":447,"title":{},"body":{"injectables/ArticleService.html":{}}}],["article.id",{"_index":445,"title":{},"body":{"injectables/ArticleService.html":{}}}],["article.interface",{"_index":183,"title":{},"body":{"controllers/ArticleController.html":{},"injectables/ArticleService.html":{}}}],["article.service",{"_index":179,"title":{},"body":{"controllers/ArticleController.html":{},"modules/ArticleModule.html":{}}}],["article.slug",{"_index":454,"title":{},"body":{"injectables/ArticleService.html":{}}}],["article.taglist",{"_index":456,"title":{},"body":{"injectables/ArticleService.html":{}}}],["article.title",{"_index":450,"title":{},"body":{"injectables/ArticleService.html":{}}}],["article/article.entity",{"_index":1666,"title":{},"body":{"classes/UserEntity.html":{}}}],["article/article.module",{"_index":55,"title":{},"body":{"modules/AppModule.html":{}}}],["articlecontroller",{"_index":85,"title":{"controllers/ArticleController.html":{}},"body":{"controllers/ArticleController.html":{},"modules/ArticleModule.html":{},"coverage.html":{}}}],["articledata",{"_index":103,"title":{"interfaces/ArticleData.html":{}},"body":{"controllers/ArticleController.html":{},"interfaces/ArticleData.html":{},"interfaces/ArticleRO.html":{},"injectables/ArticleService.html":{},"interfaces/ArticlesRO.html":{},"interfaces/CommentsRO.html":{},"coverage.html":{}}}],["articledata.description",{"_index":453,"title":{},"body":{"injectables/ArticleService.html":{}}}],["articledata.taglist",{"_index":457,"title":{},"body":{"injectables/ArticleService.html":{}}}],["articledata.title",{"_index":451,"title":{},"body":{"injectables/ArticleService.html":{}}}],["articleentity",{"_index":260,"title":{"classes/ArticleEntity.html":{}},"body":{"interfaces/ArticleData.html":{},"classes/ArticleEntity.html":{},"modules/ArticleModule.html":{},"interfaces/ArticleRO.html":{},"injectables/ArticleService.html":{},"interfaces/ArticlesRO.html":{},"classes/Comment.html":{},"interfaces/CommentsRO.html":{},"classes/UserEntity.html":{},"coverage.html":{}}}],["articlemodule",{"_index":38,"title":{"modules/ArticleModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ArticleModule.html":{},"modules.html":{},"overview.html":{}}}],["articlerepository",{"_index":361,"title":{},"body":{"injectables/ArticleService.html":{}}}],["articlero",{"_index":182,"title":{"interfaces/ArticleRO.html":{}},"body":{"controllers/ArticleController.html":{},"interfaces/ArticleData.html":{},"interfaces/ArticleRO.html":{},"injectables/ArticleService.html":{},"interfaces/ArticlesRO.html":{},"interfaces/CommentsRO.html":{},"coverage.html":{}}}],["articles",{"_index":88,"title":{},"body":{"controllers/ArticleController.html":{},"interfaces/ArticleData.html":{},"modules/ArticleModule.html":{},"interfaces/ArticleRO.html":{},"injectables/ArticleService.html":{},"interfaces/ArticlesRO.html":{},"interfaces/CommentsRO.html":{},"classes/UserEntity.html":{}}}],["articles'})@apiresponse({status",{"_index":142,"title":{},"body":{"controllers/ArticleController.html":{}}}],["articles/:slug",{"_index":342,"title":{},"body":{"modules/ArticleModule.html":{}}}],["articles/:slug/comments",{"_index":345,"title":{},"body":{"modules/ArticleModule.html":{}}}],["articles/:slug/comments/:id",{"_index":346,"title":{},"body":{"modules/ArticleModule.html":{}}}],["articles/:slug/favorite",{"_index":347,"title":{},"body":{"modules/ArticleModule.html":{}}}],["articles/feed",{"_index":338,"title":{},"body":{"modules/ArticleModule.html":{}}}],["articlescount",{"_index":262,"title":{},"body":{"interfaces/ArticleData.html":{},"interfaces/ArticleRO.html":{},"injectables/ArticleService.html":{},"interfaces/ArticlesRO.html":{},"interfaces/CommentsRO.html":{}}}],["articleservice",{"_index":178,"title":{"injectables/ArticleService.html":{}},"body":{"controllers/ArticleController.html":{},"modules/ArticleModule.html":{},"injectables/ArticleService.html":{},"coverage.html":{},"overview.html":{}}}],["articlesro",{"_index":181,"title":{"interfaces/ArticlesRO.html":{}},"body":{"controllers/ArticleController.html":{},"interfaces/ArticleData.html":{},"interfaces/ArticleRO.html":{},"injectables/ArticleService.html":{},"interfaces/ArticlesRO.html":{},"interfaces/CommentsRO.html":{},"coverage.html":{}}}],["async",{"_index":89,"title":{},"body":{"controllers/ArticleController.html":{},"injectables/ArticleService.html":{},"injectables/AuthMiddleware.html":{},"controllers/CorporationController.html":{},"injectables/CorporationService.html":{},"controllers/ErrorlogController.html":{},"injectables/ErrorlogService.html":{},"controllers/GroupController.html":{},"injectables/GroupService.html":{},"controllers/ListController.html":{},"injectables/ListService.html":{},"controllers/MenuController.html":{},"injectables/MenuService.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"controllers/RoleController.html":{},"injectables/RoleService.html":{},"controllers/SiteController.html":{},"injectables/SiteService.html":{},"controllers/TagController.html":{},"injectables/TagService.html":{},"controllers/UserController.html":{},"classes/UserEntity.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{}}}],["auth",{"_index":1887,"title":{},"body":{"miscellaneous/variables.html":{}}}],["auth.middleware",{"_index":1683,"title":{},"body":{"modules/UserModule.html":{},"miscellaneous/variables.html":{}}}],["authheaders",{"_index":496,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["authmiddleware",{"_index":331,"title":{"injectables/AuthMiddleware.html":{}},"body":{"modules/ArticleModule.html":{},"injectables/AuthMiddleware.html":{},"modules/ProfileModule.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["author",{"_index":251,"title":{},"body":{"interfaces/ArticleData.html":{},"classes/ArticleEntity.html":{},"interfaces/ArticleRO.html":{},"injectables/ArticleService.html":{},"interfaces/ArticlesRO.html":{},"interfaces/CommentsRO.html":{}}}],["author.articles.push(article",{"_index":461,"title":{},"body":{"injectables/ArticleService.html":{}}}],["author.favorites.map(el",{"_index":407,"title":{},"body":{"injectables/ArticleService.html":{}}}],["author.id",{"_index":404,"title":{},"body":{"injectables/ArticleService.html":{}}}],["authorization",{"_index":528,"title":{},"body":{"classes/BaseController.html":{}}}],["authorization.split",{"_index":530,"title":{},"body":{"classes/BaseController.html":{}}}],["authorized",{"_index":519,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["available",{"_index":1853,"title":{},"body":{"modules.html":{}}}],["await",{"_index":200,"title":{},"body":{"controllers/ArticleController.html":{},"injectables/ArticleService.html":{},"injectables/AuthMiddleware.html":{},"controllers/CorporationController.html":{},"injectables/CorporationService.html":{},"controllers/ErrorlogController.html":{},"injectables/ErrorlogService.html":{},"controllers/GroupController.html":{},"injectables/GroupService.html":{},"controllers/ListController.html":{},"injectables/ListService.html":{},"controllers/MenuController.html":{},"injectables/MenuService.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"controllers/RoleController.html":{},"injectables/RoleService.html":{},"controllers/SiteController.html":{},"injectables/SiteService.html":{},"controllers/TagController.html":{},"injectables/TagService.html":{},"controllers/UserController.html":{},"classes/UserEntity.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{}}}],["badrequestexception",{"_index":1589,"title":{},"body":{"classes/ToIntegerPipe.html":{},"injectables/ValidationPipe.html":{}}}],["badrequestexception('no",{"_index":1750,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["basecontroller",{"_index":520,"title":{"classes/BaseController.html":{}},"body":{"classes/BaseController.html":{},"coverage.html":{}}}],["baseentity",{"_index":1668,"title":{},"body":{"classes/UserEntity.html":{}}}],["beforeinsert",{"_index":1660,"title":{},"body":{"classes/UserEntity.html":{}}}],["beforeupdate",{"_index":306,"title":{},"body":{"classes/ArticleEntity.html":{},"classes/CorporationEntity.html":{},"classes/ListEntity.html":{},"classes/MenuAppEntity.html":{},"classes/MenuEntryEntity.html":{},"classes/RoleEntity.html":{},"classes/RoleMenuAppEntity.html":{},"classes/SiteEntity.html":{}}}],["belongs",{"_index":1374,"title":{},"body":{"classes/RoleEntity.html":{}}}],["bio",{"_index":1254,"title":{},"body":{"interfaces/ProfileData.html":{},"interfaces/ProfileRO.html":{},"injectables/ProfileService.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"interfaces/UserData.html":{},"classes/UserEntity.html":{},"interfaces/UserRO.html":{},"injectables/UserService.html":{}}}],["body",{"_index":173,"title":{},"body":{"controllers/ArticleController.html":{},"interfaces/ArticleData.html":{},"classes/ArticleEntity.html":{},"interfaces/ArticleRO.html":{},"interfaces/ArticlesRO.html":{},"classes/Comment.html":{},"interfaces/CommentsRO.html":{},"controllers/CorporationController.html":{},"classes/CreateArticleDto.html":{},"classes/CreateCommentDto.html":{},"controllers/ErrorlogController.html":{},"controllers/GroupController.html":{},"controllers/ListController.html":{},"interfaces/ListData.html":{},"interfaces/ListEntry.html":{},"interfaces/ListEntryRO.html":{},"interfaces/ListRO.html":{},"interfaces/MenuAppData.html":{},"interfaces/MenuAppEntry.html":{},"controllers/MenuController.html":{},"interfaces/MenuEntryRO.html":{},"interfaces/MenuRO.html":{},"controllers/RoleController.html":{},"controllers/SiteController.html":{},"controllers/UserController.html":{}}}],["body('article",{"_index":215,"title":{},"body":{"controllers/ArticleController.html":{}}}],["body('comment",{"_index":231,"title":{},"body":{"controllers/ArticleController.html":{}}}],["body('group",{"_index":907,"title":{},"body":{"controllers/GroupController.html":{}}}],["body('list",{"_index":994,"title":{},"body":{"controllers/ListController.html":{}}}],["body('menu",{"_index":1126,"title":{},"body":{"controllers/MenuController.html":{}}}],["body('role",{"_index":1349,"title":{},"body":{"controllers/RoleController.html":{}}}],["body('site",{"_index":1475,"title":{},"body":{"controllers/SiteController.html":{}}}],["body('user",{"_index":1636,"title":{},"body":{"controllers/UserController.html":{}}}],["boolean",{"_index":258,"title":{},"body":{"interfaces/ArticleData.html":{},"interfaces/ArticleRO.html":{},"interfaces/ArticlesRO.html":{},"interfaces/CommentsRO.html":{},"interfaces/CorporationData.html":{},"classes/CorporationEntity.html":{},"interfaces/CorporationRO.html":{},"interfaces/GroupData.html":{},"classes/GroupEntity.html":{},"interfaces/GroupRO.html":{},"interfaces/ListData.html":{},"classes/ListEntity.html":{},"interfaces/ListEntry.html":{},"interfaces/ListEntryRO.html":{},"interfaces/ListRO.html":{},"interfaces/MenuAppData.html":{},"classes/MenuAppEntity.html":{},"interfaces/MenuAppEntry.html":{},"classes/MenuEntryEntity.html":{},"interfaces/MenuEntryRO.html":{},"interfaces/MenuRO.html":{},"interfaces/ProfileData.html":{},"interfaces/ProfileRO.html":{},"interfaces/RoleData.html":{},"classes/RoleEntity.html":{},"interfaces/RoleRO.html":{},"interfaces/SiteData.html":{},"classes/SiteEntity.html":{},"interfaces/SiteRO.html":{},"classes/UserEntity.html":{},"injectables/ValidationPipe.html":{}}}],["bootstrap",{"_index":33,"title":{},"body":{"modules/AppModule.html":{},"modules/ArticleModule.html":{},"modules/CorporationModule.html":{},"modules/ErrorlogModule.html":{},"modules/GroupModule.html":{},"modules/ListModule.html":{},"modules/MenuModule.html":{},"modules/ProfileModule.html":{},"modules/RoleModule.html":{},"modules/SiteModule.html":{},"modules/SqldirectModule.html":{},"modules/TagModule.html":{},"modules/UserModule.html":{},"modules/ViewModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":1851,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1848,"title":{},"body":{"modules.html":{}}}],["buildcorporationro",{"_index":619,"title":{},"body":{"injectables/CorporationService.html":{}}}],["buildcorporationro(corporation",{"_index":624,"title":{},"body":{"injectables/CorporationService.html":{}}}],["builderror",{"_index":1740,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["builderror(errors",{"_index":1742,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["builderrorlogro",{"_index":835,"title":{},"body":{"injectables/ErrorlogService.html":{}}}],["builderrorlogro(errorlog",{"_index":839,"title":{},"body":{"injectables/ErrorlogService.html":{}}}],["buildgroupro",{"_index":933,"title":{},"body":{"injectables/GroupService.html":{}}}],["buildgroupro(group",{"_index":937,"title":{},"body":{"injectables/GroupService.html":{}}}],["buildlistro",{"_index":1034,"title":{},"body":{"injectables/ListService.html":{}}}],["buildlistro(list",{"_index":1038,"title":{},"body":{"injectables/ListService.html":{}}}],["buildmenuro",{"_index":1166,"title":{},"body":{"injectables/MenuService.html":{}}}],["buildmenuro(menu",{"_index":1170,"title":{},"body":{"injectables/MenuService.html":{}}}],["buildrolero",{"_index":1421,"title":{},"body":{"injectables/RoleService.html":{}}}],["buildrolero(role",{"_index":1425,"title":{},"body":{"injectables/RoleService.html":{}}}],["buildsitero",{"_index":1504,"title":{},"body":{"injectables/SiteService.html":{}}}],["buildsitero(site",{"_index":1508,"title":{},"body":{"injectables/SiteService.html":{}}}],["builduserro",{"_index":1685,"title":{},"body":{"injectables/UserService.html":{}}}],["builduserro(user",{"_index":1689,"title":{},"body":{"injectables/UserService.html":{}}}],["caption",{"_index":737,"title":{},"body":{"classes/CreateMenuEntryDto.html":{},"interfaces/MenuAppData.html":{},"interfaces/MenuAppEntry.html":{},"classes/MenuEntryEntity.html":{},"interfaces/MenuEntryRO.html":{},"interfaces/MenuRO.html":{},"injectables/MenuService.html":{}}}],["case",{"_index":1884,"title":{},"body":{"miscellaneous/variables.html":{}}}],["change",{"_index":890,"title":{},"body":{"controllers/GroupController.html":{}}}],["changed",{"_index":223,"title":{},"body":{"controllers/ArticleController.html":{},"controllers/ErrorlogController.html":{},"controllers/GroupController.html":{}}}],["check",{"_index":646,"title":{},"body":{"injectables/CorporationService.html":{},"injectables/ErrorlogService.html":{},"injectables/GroupService.html":{},"injectables/ListService.html":{},"injectables/MenuService.html":{},"injectables/RoleService.html":{},"injectables/SiteService.html":{},"injectables/UserService.html":{}}}],["class",{"_index":19,"title":{"classes/ArticleEntity.html":{},"classes/BaseController.html":{},"classes/Comment.html":{},"classes/CorporationEntity.html":{},"classes/CreateArticleDto.html":{},"classes/CreateCommentDto.html":{},"classes/CreateCorporationDto.html":{},"classes/CreateErrorLogDto.html":{},"classes/CreateGroupDto.html":{},"classes/CreateListDto.html":{},"classes/CreateListEntryDto.html":{},"classes/CreateMenuDto.html":{},"classes/CreateMenuEntryDto.html":{},"classes/CreateRoleAppDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSiteDto.html":{},"classes/CreateUserDto.html":{},"classes/ErrorLogEntity.html":{},"classes/FollowsEntity.html":{},"classes/GroupEntity.html":{},"classes/ListEntity.html":{},"classes/ListEntryEntity.html":{},"classes/LoginUserDto.html":{},"classes/MenuAppEntity.html":{},"classes/MenuEntryEntity.html":{},"classes/MyLogger.html":{},"classes/RoleEntity.html":{},"classes/RoleMenuAppEntity.html":{},"classes/RoleMenuEntryEntity.html":{},"classes/SiteEntity.html":{},"classes/TagEntity.html":{},"classes/ToIntegerPipe.html":{},"classes/UpdateUserDto.html":{},"classes/UserEntity.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/ArticleController.html":{},"classes/ArticleEntity.html":{},"modules/ArticleModule.html":{},"injectables/ArticleService.html":{},"injectables/AuthMiddleware.html":{},"classes/BaseController.html":{},"classes/Comment.html":{},"controllers/CommentController.html":{},"modules/CommentModule.html":{},"injectables/CommentService.html":{},"controllers/CorporationController.html":{},"classes/CorporationEntity.html":{},"modules/CorporationModule.html":{},"injectables/CorporationService.html":{},"classes/CreateArticleDto.html":{},"classes/CreateCommentDto.html":{},"classes/CreateCorporationDto.html":{},"classes/CreateErrorLogDto.html":{},"classes/CreateGroupDto.html":{},"classes/CreateListDto.html":{},"classes/CreateListEntryDto.html":{},"classes/CreateMenuDto.html":{},"classes/CreateMenuEntryDto.html":{},"classes/CreateRoleAppDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSiteDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabaseConfig.html":{},"classes/ErrorLogEntity.html":{},"controllers/ErrorlogController.html":{},"modules/ErrorlogModule.html":{},"injectables/ErrorlogService.html":{},"classes/FollowsEntity.html":{},"controllers/GroupController.html":{},"classes/GroupEntity.html":{},"modules/GroupModule.html":{},"injectables/GroupService.html":{},"controllers/ListController.html":{},"classes/ListEntity.html":{},"classes/ListEntryEntity.html":{},"modules/ListModule.html":{},"injectables/ListService.html":{},"classes/LoginUserDto.html":{},"classes/MenuAppEntity.html":{},"controllers/MenuController.html":{},"classes/MenuEntryEntity.html":{},"modules/MenuModule.html":{},"injectables/MenuService.html":{},"classes/MyLogger.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"controllers/RoleController.html":{},"classes/RoleEntity.html":{},"classes/RoleMenuAppEntity.html":{},"classes/RoleMenuEntryEntity.html":{},"modules/RoleModule.html":{},"injectables/RoleService.html":{},"controllers/SiteController.html":{},"classes/SiteEntity.html":{},"modules/SiteModule.html":{},"injectables/SiteService.html":{},"controllers/SqldirectController.html":{},"modules/SqldirectModule.html":{},"injectables/SqldirectService.html":{},"controllers/TagController.html":{},"classes/TagEntity.html":{},"modules/TagModule.html":{},"injectables/TagService.html":{},"classes/ToIntegerPipe.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"classes/UserEntity.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{},"controllers/ViewController.html":{},"modules/ViewModule.html":{},"injectables/ViewService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":263,"title":{},"body":{"classes/ArticleEntity.html":{},"classes/BaseController.html":{},"classes/Comment.html":{},"classes/CorporationEntity.html":{},"classes/CreateArticleDto.html":{},"classes/CreateCommentDto.html":{},"classes/CreateCorporationDto.html":{},"classes/CreateErrorLogDto.html":{},"classes/CreateGroupDto.html":{},"classes/CreateListDto.html":{},"classes/CreateListEntryDto.html":{},"classes/CreateMenuDto.html":{},"classes/CreateMenuEntryDto.html":{},"classes/CreateRoleAppDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSiteDto.html":{},"classes/CreateUserDto.html":{},"classes/ErrorLogEntity.html":{},"classes/FollowsEntity.html":{},"classes/GroupEntity.html":{},"classes/ListEntity.html":{},"classes/ListEntryEntity.html":{},"classes/LoginUserDto.html":{},"classes/MenuAppEntity.html":{},"classes/MenuEntryEntity.html":{},"classes/MyLogger.html":{},"classes/RoleEntity.html":{},"classes/RoleMenuAppEntity.html":{},"classes/RoleMenuEntryEntity.html":{},"classes/SiteEntity.html":{},"classes/TagEntity.html":{},"classes/ToIntegerPipe.html":{},"classes/UpdateUserDto.html":{},"classes/UserEntity.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":36,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":37,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_articlemodule",{"_index":315,"title":{},"body":{"modules/ArticleModule.html":{},"overview.html":{}}}],["cluster_articlemodule_imports",{"_index":316,"title":{},"body":{"modules/ArticleModule.html":{}}}],["cluster_articlemodule_providers",{"_index":317,"title":{},"body":{"modules/ArticleModule.html":{},"overview.html":{}}}],["cluster_corporationmodule",{"_index":612,"title":{},"body":{"modules/CorporationModule.html":{},"overview.html":{}}}],["cluster_corporationmodule_providers",{"_index":613,"title":{},"body":{"modules/CorporationModule.html":{},"overview.html":{}}}],["cluster_errorlogmodule",{"_index":828,"title":{},"body":{"modules/ErrorlogModule.html":{},"overview.html":{}}}],["cluster_errorlogmodule_providers",{"_index":829,"title":{},"body":{"modules/ErrorlogModule.html":{},"overview.html":{}}}],["cluster_groupmodule",{"_index":926,"title":{},"body":{"modules/GroupModule.html":{},"overview.html":{}}}],["cluster_groupmodule_providers",{"_index":927,"title":{},"body":{"modules/GroupModule.html":{},"overview.html":{}}}],["cluster_listmodule",{"_index":1027,"title":{},"body":{"modules/ListModule.html":{},"overview.html":{}}}],["cluster_listmodule_providers",{"_index":1028,"title":{},"body":{"modules/ListModule.html":{},"overview.html":{}}}],["cluster_menumodule",{"_index":1159,"title":{},"body":{"modules/MenuModule.html":{},"overview.html":{}}}],["cluster_menumodule_providers",{"_index":1160,"title":{},"body":{"modules/MenuModule.html":{},"overview.html":{}}}],["cluster_profilemodule",{"_index":1257,"title":{},"body":{"modules/ProfileModule.html":{},"overview.html":{}}}],["cluster_profilemodule_imports",{"_index":1258,"title":{},"body":{"modules/ProfileModule.html":{}}}],["cluster_profilemodule_providers",{"_index":1259,"title":{},"body":{"modules/ProfileModule.html":{},"overview.html":{}}}],["cluster_rolemodule",{"_index":1414,"title":{},"body":{"modules/RoleModule.html":{},"overview.html":{}}}],["cluster_rolemodule_providers",{"_index":1415,"title":{},"body":{"modules/RoleModule.html":{},"overview.html":{}}}],["cluster_sitemodule",{"_index":1497,"title":{},"body":{"modules/SiteModule.html":{},"overview.html":{}}}],["cluster_sitemodule_providers",{"_index":1498,"title":{},"body":{"modules/SiteModule.html":{},"overview.html":{}}}],["cluster_sqldirectmodule",{"_index":1540,"title":{},"body":{"modules/SqldirectModule.html":{},"overview.html":{}}}],["cluster_sqldirectmodule_providers",{"_index":1541,"title":{},"body":{"modules/SqldirectModule.html":{},"overview.html":{}}}],["cluster_tagmodule",{"_index":1566,"title":{},"body":{"modules/TagModule.html":{},"overview.html":{}}}],["cluster_tagmodule_imports",{"_index":1567,"title":{},"body":{"modules/TagModule.html":{}}}],["cluster_tagmodule_providers",{"_index":1568,"title":{},"body":{"modules/TagModule.html":{},"overview.html":{}}}],["cluster_usermodule",{"_index":1676,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_exports",{"_index":1677,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_providers",{"_index":1678,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_viewmodule",{"_index":1771,"title":{},"body":{"modules/ViewModule.html":{},"overview.html":{}}}],["cluster_viewmodule_providers",{"_index":1772,"title":{},"body":{"modules/ViewModule.html":{},"overview.html":{}}}],["column",{"_index":280,"title":{},"body":{"classes/ArticleEntity.html":{},"classes/Comment.html":{},"classes/CorporationEntity.html":{},"classes/ErrorLogEntity.html":{},"classes/FollowsEntity.html":{},"classes/GroupEntity.html":{},"classes/ListEntity.html":{},"classes/ListEntryEntity.html":{},"classes/MenuAppEntity.html":{},"classes/MenuEntryEntity.html":{},"classes/RoleEntity.html":{},"classes/RoleMenuAppEntity.html":{},"classes/RoleMenuEntryEntity.html":{},"classes/SiteEntity.html":{},"classes/TagEntity.html":{},"classes/UserEntity.html":{}}}],["column(\"nvarchar",{"_index":310,"title":{},"body":{"classes/ArticleEntity.html":{},"classes/CorporationEntity.html":{},"classes/ErrorLogEntity.html":{},"classes/GroupEntity.html":{},"classes/ListEntity.html":{},"classes/ListEntryEntity.html":{},"classes/MenuAppEntity.html":{},"classes/MenuEntryEntity.html":{},"classes/RoleEntity.html":{},"classes/SiteEntity.html":{},"classes/TagEntity.html":{}}}],["column(\"nvarchar\",{length",{"_index":796,"title":{},"body":{"classes/ErrorLogEntity.html":{}}}],["column('nvarchar",{"_index":290,"title":{},"body":{"classes/ArticleEntity.html":{},"classes/CorporationEntity.html":{},"classes/ErrorLogEntity.html":{},"classes/GroupEntity.html":{},"classes/ListEntity.html":{},"classes/ListEntryEntity.html":{},"classes/MenuAppEntity.html":{},"classes/MenuEntryEntity.html":{},"classes/RoleEntity.html":{},"classes/SiteEntity.html":{},"classes/TagEntity.html":{}}}],["column('simple",{"_index":294,"title":{},"body":{"classes/ArticleEntity.html":{}}}],["column()@isemail",{"_index":1649,"title":{},"body":{"classes/UserEntity.html":{}}}],["column({default",{"_index":274,"title":{},"body":{"classes/ArticleEntity.html":{},"classes/CorporationEntity.html":{},"classes/ListEntity.html":{},"classes/MenuAppEntity.html":{},"classes/MenuEntryEntity.html":{},"classes/RoleEntity.html":{},"classes/SiteEntity.html":{},"classes/UserEntity.html":{}}}],["column({nullable",{"_index":283,"title":{},"body":{"classes/ArticleEntity.html":{},"classes/CorporationEntity.html":{},"classes/ErrorLogEntity.html":{},"classes/GroupEntity.html":{},"classes/ListEntity.html":{},"classes/ListEntryEntity.html":{},"classes/MenuAppEntity.html":{},"classes/MenuEntryEntity.html":{},"classes/RoleEntity.html":{},"classes/SiteEntity.html":{}}}],["comment",{"_index":125,"title":{"classes/Comment.html":{}},"body":{"controllers/ArticleController.html":{},"interfaces/ArticleData.html":{},"classes/ArticleEntity.html":{},"modules/ArticleModule.html":{},"interfaces/ArticleRO.html":{},"injectables/ArticleService.html":{},"interfaces/ArticlesRO.html":{},"classes/Comment.html":{},"controllers/CommentController.html":{},"interfaces/CommentsRO.html":{},"coverage.html":{}}}],["comment'})@apiresponse({status",{"_index":124,"title":{},"body":{"controllers/ArticleController.html":{}}}],["comment.article",{"_index":314,"title":{},"body":{"classes/ArticleEntity.html":{}}}],["comment.body",{"_index":428,"title":{},"body":{"injectables/ArticleService.html":{}}}],["comment.controller",{"_index":541,"title":{},"body":{"modules/CommentModule.html":{}}}],["comment.entity",{"_index":308,"title":{},"body":{"classes/ArticleEntity.html":{},"modules/ArticleModule.html":{},"injectables/ArticleService.html":{}}}],["comment.id",{"_index":437,"title":{},"body":{"injectables/ArticleService.html":{}}}],["comment.ts",{"_index":680,"title":{},"body":{"classes/CreateCommentDto.html":{},"coverage.html":{}}}],["comment.ts:2",{"_index":681,"title":{},"body":{"classes/CreateCommentDto.html":{}}}],["commentcontroller",{"_index":536,"title":{"controllers/CommentController.html":{}},"body":{"controllers/CommentController.html":{},"modules/CommentModule.html":{},"coverage.html":{}}}],["commentdata",{"_index":122,"title":{},"body":{"controllers/ArticleController.html":{},"injectables/ArticleService.html":{}}}],["commentdata.body",{"_index":429,"title":{},"body":{"injectables/ArticleService.html":{}}}],["commentmodule",{"_index":539,"title":{"modules/CommentModule.html":{}},"body":{"modules/CommentModule.html":{},"modules.html":{}}}],["commentrepository",{"_index":357,"title":{},"body":{"injectables/ArticleService.html":{}}}],["comments",{"_index":151,"title":{},"body":{"controllers/ArticleController.html":{},"interfaces/ArticleData.html":{},"classes/ArticleEntity.html":{},"interfaces/ArticleRO.html":{},"injectables/ArticleService.html":{},"interfaces/ArticlesRO.html":{},"interfaces/CommentsRO.html":{}}}],["comments'})@apiresponse({status",{"_index":150,"title":{},"body":{"controllers/ArticleController.html":{}}}],["commentservice",{"_index":542,"title":{"injectables/CommentService.html":{}},"body":{"injectables/CommentService.html":{},"coverage.html":{}}}],["commentsro",{"_index":184,"title":{"interfaces/CommentsRO.html":{}},"body":{"controllers/ArticleController.html":{},"interfaces/ArticleData.html":{},"interfaces/ArticleRO.html":{},"injectables/ArticleService.html":{},"interfaces/ArticlesRO.html":{},"interfaces/CommentsRO.html":{},"controllers/CorporationController.html":{},"coverage.html":{}}}],["config",{"_index":1703,"title":{},"body":{"injectables/UserService.html":{}}}],["config/config.env",{"_index":76,"title":{},"body":{"modules/AppModule.html":{}}}],["config/database.config",{"_index":78,"title":{},"body":{"modules/AppModule.html":{}}}],["configenv",{"_index":75,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["configmodule",{"_index":72,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot",{"_index":79,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice",{"_index":74,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthMiddleware.html":{},"classes/BaseController.html":{},"injectables/DatabaseConfig.html":{},"injectables/UserService.html":{}}}],["configure",{"_index":320,"title":{},"body":{"modules/ArticleModule.html":{},"modules/CorporationModule.html":{},"modules/ErrorlogModule.html":{},"modules/GroupModule.html":{},"modules/ListModule.html":{},"modules/MenuModule.html":{},"modules/ProfileModule.html":{},"modules/RoleModule.html":{},"modules/SiteModule.html":{},"modules/TagModule.html":{},"modules/UserModule.html":{}}}],["configure(consumer",{"_index":321,"title":{},"body":{"modules/ArticleModule.html":{},"modules/CorporationModule.html":{},"modules/ErrorlogModule.html":{},"modules/GroupModule.html":{},"modules/ListModule.html":{},"modules/MenuModule.html":{},"modules/ProfileModule.html":{},"modules/RoleModule.html":{},"modules/SiteModule.html":{},"modules/TagModule.html":{},"modules/UserModule.html":{}}}],["connection",{"_index":59,"title":{},"body":{"modules/AppModule.html":{}}}],["console.log('decoded",{"_index":510,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["console.log('group",{"_index":904,"title":{},"body":{"controllers/GroupController.html":{}}}],["console.log('secret",{"_index":505,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["console.log('token",{"_index":503,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["console.log(groupdata",{"_index":905,"title":{},"body":{"controllers/GroupController.html":{}}}],["console.log(secret",{"_index":506,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["console.log(token",{"_index":504,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["console.log(user",{"_index":511,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["const",{"_index":235,"title":{},"body":{"controllers/ArticleController.html":{},"injectables/ArticleService.html":{},"injectables/AuthMiddleware.html":{},"classes/BaseController.html":{},"injectables/CorporationService.html":{},"injectables/ErrorlogService.html":{},"injectables/GroupService.html":{},"injectables/ListService.html":{},"injectables/MenuService.html":{},"injectables/ProfileService.html":{},"injectables/RoleService.html":{},"injectables/SiteService.html":{},"classes/ToIntegerPipe.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{},"miscellaneous/variables.html":{}}}],["constraint[0",{"_index":1762,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["constraint[1",{"_index":1763,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["constructor",{"_index":354,"title":{},"body":{"injectables/ArticleService.html":{},"injectables/AuthMiddleware.html":{},"classes/BaseController.html":{},"injectables/CorporationService.html":{},"injectables/DatabaseConfig.html":{},"injectables/ErrorlogService.html":{},"injectables/GroupService.html":{},"injectables/ListService.html":{},"injectables/MenuService.html":{},"injectables/ProfileService.html":{},"injectables/RoleService.html":{},"injectables/SiteService.html":{},"injectables/TagService.html":{},"injectables/UserService.html":{}}}],["constructor(articlerepository",{"_index":355,"title":{},"body":{"injectables/ArticleService.html":{}}}],["constructor(configservice",{"_index":524,"title":{},"body":{"classes/BaseController.html":{},"injectables/DatabaseConfig.html":{}}}],["constructor(corporationrepository",{"_index":621,"title":{},"body":{"injectables/CorporationService.html":{}}}],["constructor(errorlogrepository",{"_index":836,"title":{},"body":{"injectables/ErrorlogService.html":{}}}],["constructor(grouprepository",{"_index":934,"title":{},"body":{"injectables/GroupService.html":{}}}],["constructor(listrepository",{"_index":1035,"title":{},"body":{"injectables/ListService.html":{}}}],["constructor(menurepository",{"_index":1167,"title":{},"body":{"injectables/MenuService.html":{}}}],["constructor(private",{"_index":195,"title":{},"body":{"controllers/ArticleController.html":{},"injectables/AuthMiddleware.html":{},"classes/BaseController.html":{},"controllers/CorporationController.html":{},"injectables/DatabaseConfig.html":{},"controllers/ErrorlogController.html":{},"controllers/GroupController.html":{},"controllers/ListController.html":{},"controllers/MenuController.html":{},"controllers/ProfileController.html":{},"controllers/RoleController.html":{},"controllers/SiteController.html":{},"controllers/TagController.html":{},"controllers/UserController.html":{}}}],["constructor(rolerepository",{"_index":1422,"title":{},"body":{"injectables/RoleService.html":{}}}],["constructor(siterepository",{"_index":1505,"title":{},"body":{"injectables/SiteService.html":{}}}],["constructor(tagrepository",{"_index":1574,"title":{},"body":{"injectables/TagService.html":{}}}],["constructor(userrepository",{"_index":1270,"title":{},"body":{"injectables/ProfileService.html":{},"injectables/UserService.html":{}}}],["constructor(userservice",{"_index":476,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["consumer",{"_index":324,"title":{},"body":{"modules/ArticleModule.html":{},"modules/CorporationModule.html":{},"modules/ErrorlogModule.html":{},"modules/GroupModule.html":{},"modules/ListModule.html":{},"modules/MenuModule.html":{},"modules/ProfileModule.html":{},"modules/RoleModule.html":{},"modules/SiteModule.html":{},"modules/TagModule.html":{},"modules/UserModule.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/ArticleController.html":{},"controllers/CommentController.html":{},"controllers/CorporationController.html":{},"controllers/ErrorlogController.html":{},"controllers/GroupController.html":{},"controllers/ListController.html":{},"controllers/MenuController.html":{},"controllers/ProfileController.html":{},"controllers/RoleController.html":{},"controllers/SiteController.html":{},"controllers/SqldirectController.html":{},"controllers/TagController.html":{},"controllers/UserController.html":{},"controllers/ViewController.html":{}},"body":{"controllers/AppController.html":{},"controllers/ArticleController.html":{},"controllers/CommentController.html":{},"controllers/CorporationController.html":{},"controllers/ErrorlogController.html":{},"controllers/GroupController.html":{},"controllers/ListController.html":{},"controllers/MenuController.html":{},"controllers/ProfileController.html":{},"controllers/RoleController.html":{},"controllers/SiteController.html":{},"controllers/SqldirectController.html":{},"controllers/TagController.html":{},"controllers/UserController.html":{},"controllers/ViewController.html":{},"coverage.html":{}}}],["controller('articles",{"_index":194,"title":{},"body":{"controllers/ArticleController.html":{}}}],["controller('comment",{"_index":538,"title":{},"body":{"controllers/CommentController.html":{}}}],["controller('corporations",{"_index":575,"title":{},"body":{"controllers/CorporationController.html":{}}}],["controller('errorlog",{"_index":819,"title":{},"body":{"controllers/ErrorlogController.html":{}}}],["controller('group",{"_index":900,"title":{},"body":{"controllers/GroupController.html":{}}}],["controller('lists",{"_index":989,"title":{},"body":{"controllers/ListController.html":{}}}],["controller('menus",{"_index":1120,"title":{},"body":{"controllers/MenuController.html":{}}}],["controller('profiles",{"_index":1240,"title":{},"body":{"controllers/ProfileController.html":{}}}],["controller('role",{"_index":1343,"title":{},"body":{"controllers/RoleController.html":{}}}],["controller('sites",{"_index":1470,"title":{},"body":{"controllers/SiteController.html":{}}}],["controller('sqldirect",{"_index":1538,"title":{},"body":{"controllers/SqldirectController.html":{}}}],["controller('tags",{"_index":1556,"title":{},"body":{"controllers/TagController.html":{}}}],["controller('view",{"_index":1769,"title":{},"body":{"controllers/ViewController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/ArticleController.html":{},"modules/ArticleModule.html":{},"controllers/CommentController.html":{},"modules/CommentModule.html":{},"controllers/CorporationController.html":{},"modules/CorporationModule.html":{},"controllers/ErrorlogController.html":{},"modules/ErrorlogModule.html":{},"controllers/GroupController.html":{},"modules/GroupModule.html":{},"controllers/ListController.html":{},"modules/ListModule.html":{},"controllers/MenuController.html":{},"modules/MenuModule.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"controllers/RoleController.html":{},"modules/RoleModule.html":{},"controllers/SiteController.html":{},"modules/SiteModule.html":{},"controllers/SqldirectController.html":{},"modules/SqldirectModule.html":{},"controllers/TagController.html":{},"modules/TagModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"controllers/ViewController.html":{},"overview.html":{}}}],["conversion",{"_index":1593,"title":{},"body":{"classes/ToIntegerPipe.html":{}}}],["corporation",{"_index":550,"title":{},"body":{"controllers/CorporationController.html":{},"interfaces/CorporationData.html":{},"interfaces/CorporationRO.html":{},"injectables/CorporationService.html":{},"interfaces/SiteData.html":{},"classes/SiteEntity.html":{},"interfaces/SiteRO.html":{}}}],["corporation'})@apiresponse({status",{"_index":549,"title":{},"body":{"controllers/CorporationController.html":{}}}],["corporation.controller",{"_index":616,"title":{},"body":{"modules/CorporationModule.html":{}}}],["corporation.costcenter",{"_index":672,"title":{},"body":{"injectables/CorporationService.html":{}}}],["corporation.description",{"_index":673,"title":{},"body":{"injectables/CorporationService.html":{}}}],["corporation.dto.ts",{"_index":683,"title":{},"body":{"classes/CreateCorporationDto.html":{},"coverage.html":{}}}],["corporation.dto.ts:11",{"_index":689,"title":{},"body":{"classes/CreateCorporationDto.html":{}}}],["corporation.dto.ts:14",{"_index":685,"title":{},"body":{"classes/CreateCorporationDto.html":{}}}],["corporation.dto.ts:17",{"_index":686,"title":{},"body":{"classes/CreateCorporationDto.html":{}}}],["corporation.dto.ts:7",{"_index":687,"title":{},"body":{"classes/CreateCorporationDto.html":{}}}],["corporation.entity",{"_index":573,"title":{},"body":{"controllers/CorporationController.html":{},"modules/CorporationModule.html":{},"injectables/CorporationService.html":{}}}],["corporation.id",{"_index":669,"title":{},"body":{"injectables/CorporationService.html":{}}}],["corporation.interface",{"_index":571,"title":{},"body":{"controllers/CorporationController.html":{},"injectables/CorporationService.html":{}}}],["corporation.name",{"_index":671,"title":{},"body":{"injectables/CorporationService.html":{}}}],["corporation.service",{"_index":569,"title":{},"body":{"controllers/CorporationController.html":{},"modules/CorporationModule.html":{}}}],["corporation.sites",{"_index":1495,"title":{},"body":{"classes/SiteEntity.html":{}}}],["corporation.slug",{"_index":670,"title":{},"body":{"injectables/CorporationService.html":{}}}],["corporation/corporation.controller",{"_index":64,"title":{},"body":{"modules/AppModule.html":{}}}],["corporation/corporation.entity",{"_index":1493,"title":{},"body":{"classes/SiteEntity.html":{}}}],["corporation/corporation.interface",{"_index":1479,"title":{},"body":{"interfaces/SiteData.html":{},"interfaces/SiteRO.html":{}}}],["corporation/corporation.module",{"_index":62,"title":{},"body":{"modules/AppModule.html":{}}}],["corporationcontroller",{"_index":63,"title":{"controllers/CorporationController.html":{}},"body":{"modules/AppModule.html":{},"controllers/CorporationController.html":{},"modules/CorporationModule.html":{},"coverage.html":{}}}],["corporationdata",{"_index":553,"title":{"interfaces/CorporationData.html":{}},"body":{"controllers/CorporationController.html":{},"interfaces/CorporationData.html":{},"interfaces/CorporationRO.html":{},"interfaces/SiteData.html":{},"interfaces/SiteRO.html":{},"coverage.html":{}}}],["corporationentity",{"_index":572,"title":{"classes/CorporationEntity.html":{}},"body":{"controllers/CorporationController.html":{},"classes/CorporationEntity.html":{},"modules/CorporationModule.html":{},"injectables/CorporationService.html":{},"classes/SiteEntity.html":{},"coverage.html":{}}}],["corporationmodule",{"_index":39,"title":{"modules/CorporationModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CorporationModule.html":{},"modules.html":{},"overview.html":{}}}],["corporationrepository",{"_index":623,"title":{},"body":{"injectables/CorporationService.html":{}}}],["corporationro",{"_index":570,"title":{"interfaces/CorporationRO.html":{}},"body":{"controllers/CorporationController.html":{},"interfaces/CorporationData.html":{},"interfaces/CorporationRO.html":{},"injectables/CorporationService.html":{},"coverage.html":{}}}],["corporations",{"_index":545,"title":{},"body":{"controllers/CorporationController.html":{}}}],["corporations'})@apiresponse({status",{"_index":562,"title":{},"body":{"controllers/CorporationController.html":{}}}],["corporationservice",{"_index":568,"title":{"injectables/CorporationService.html":{}},"body":{"controllers/CorporationController.html":{},"modules/CorporationModule.html":{},"injectables/CorporationService.html":{},"coverage.html":{},"overview.html":{}}}],["costcenter",{"_index":592,"title":{},"body":{"interfaces/CorporationData.html":{},"classes/CorporationEntity.html":{},"interfaces/CorporationRO.html":{},"injectables/CorporationService.html":{},"classes/CreateCorporationDto.html":{},"classes/CreateSiteDto.html":{},"interfaces/SiteData.html":{},"classes/SiteEntity.html":{},"interfaces/SiteRO.html":{},"injectables/SiteService.html":{}}}],["coverage",{"_index":1777,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":90,"title":{},"body":{"controllers/ArticleController.html":{},"injectables/ArticleService.html":{},"controllers/CorporationController.html":{},"injectables/CorporationService.html":{},"controllers/ErrorlogController.html":{},"injectables/ErrorlogService.html":{},"controllers/GroupController.html":{},"injectables/GroupService.html":{},"controllers/ListController.html":{},"injectables/ListService.html":{},"controllers/MenuController.html":{},"injectables/MenuService.html":{},"controllers/ProfileController.html":{},"controllers/RoleController.html":{},"injectables/RoleService.html":{},"controllers/SiteController.html":{},"injectables/SiteService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["create(@body",{"_index":824,"title":{},"body":{"controllers/ErrorlogController.html":{}}}],["create(@body('corporation",{"_index":581,"title":{},"body":{"controllers/CorporationController.html":{}}}],["create(@body('group",{"_index":903,"title":{},"body":{"controllers/GroupController.html":{}}}],["create(@body('list",{"_index":992,"title":{},"body":{"controllers/ListController.html":{}}}],["create(@body('menu",{"_index":1124,"title":{},"body":{"controllers/MenuController.html":{}}}],["create(@body('role",{"_index":1347,"title":{},"body":{"controllers/RoleController.html":{}}}],["create(@body('site",{"_index":1473,"title":{},"body":{"controllers/SiteController.html":{}}}],["create(@body('user",{"_index":1627,"title":{},"body":{"controllers/UserController.html":{}}}],["create(@user('id",{"_index":214,"title":{},"body":{"controllers/ArticleController.html":{}}}],["create(corporationdata",{"_index":547,"title":{},"body":{"controllers/CorporationController.html":{}}}],["create(dto",{"_index":626,"title":{},"body":{"injectables/CorporationService.html":{},"injectables/ErrorlogService.html":{},"injectables/GroupService.html":{},"injectables/ListService.html":{},"injectables/MenuService.html":{},"injectables/RoleService.html":{},"injectables/SiteService.html":{},"injectables/UserService.html":{}}}],["create(errorlogdata",{"_index":799,"title":{},"body":{"controllers/ErrorlogController.html":{}}}],["create(groupdata",{"_index":877,"title":{},"body":{"controllers/GroupController.html":{}}}],["create(listdata",{"_index":968,"title":{},"body":{"controllers/ListController.html":{}}}],["create(menudata",{"_index":1103,"title":{},"body":{"controllers/MenuController.html":{}}}],["create(roledata",{"_index":1320,"title":{},"body":{"controllers/RoleController.html":{}}}],["create(sitedata",{"_index":1452,"title":{},"body":{"controllers/SiteController.html":{}}}],["create(userdata",{"_index":1601,"title":{},"body":{"controllers/UserController.html":{}}}],["create(userid",{"_index":101,"title":{},"body":{"controllers/ArticleController.html":{},"injectables/ArticleService.html":{}}}],["createarticledto",{"_index":104,"title":{"classes/CreateArticleDto.html":{}},"body":{"controllers/ArticleController.html":{},"injectables/ArticleService.html":{},"classes/CreateArticleDto.html":{},"coverage.html":{}}}],["createarticledto})@delete(':slug",{"_index":131,"title":{},"body":{"controllers/ArticleController.html":{}}}],["createarticledto})@post",{"_index":114,"title":{},"body":{"controllers/ArticleController.html":{}}}],["createarticledto})@put(':slug",{"_index":170,"title":{},"body":{"controllers/ArticleController.html":{}}}],["createcomment",{"_index":91,"title":{},"body":{"controllers/ArticleController.html":{}}}],["createcomment(@param('slug",{"_index":230,"title":{},"body":{"controllers/ArticleController.html":{}}}],["createcomment(slug",{"_index":121,"title":{},"body":{"controllers/ArticleController.html":{}}}],["createcommentdto",{"_index":123,"title":{"classes/CreateCommentDto.html":{}},"body":{"controllers/ArticleController.html":{},"classes/CreateCommentDto.html":{},"coverage.html":{}}}],["createcommentdto})@delete(':slug/comments/:id",{"_index":135,"title":{},"body":{"controllers/ArticleController.html":{}}}],["createcommentdto})@post(':slug/comments",{"_index":126,"title":{},"body":{"controllers/ArticleController.html":{}}}],["createcorporationdto",{"_index":548,"title":{"classes/CreateCorporationDto.html":{}},"body":{"controllers/CorporationController.html":{},"injectables/CorporationService.html":{},"classes/CreateCorporationDto.html":{},"coverage.html":{}}}],["createcorporationdto})@post('corporation",{"_index":551,"title":{},"body":{"controllers/CorporationController.html":{}}}],["created",{"_index":212,"title":{},"body":{"controllers/ArticleController.html":{},"controllers/CorporationController.html":{},"controllers/ErrorlogController.html":{},"controllers/GroupController.html":{},"controllers/ListController.html":{},"controllers/MenuController.html":{},"controllers/ProfileController.html":{},"controllers/RoleController.html":{},"controllers/SiteController.html":{}}}],["created.'})@apiresponse({status",{"_index":111,"title":{},"body":{"controllers/ArticleController.html":{}}}],["createdat",{"_index":252,"title":{},"body":{"interfaces/ArticleData.html":{},"interfaces/ArticleRO.html":{},"interfaces/ArticlesRO.html":{},"interfaces/CommentsRO.html":{},"interfaces/CorporationData.html":{},"interfaces/CorporationRO.html":{},"interfaces/ErrorLogData.html":{},"interfaces/ErrorLogRO.html":{},"interfaces/GroupData.html":{},"interfaces/GroupRO.html":{},"interfaces/ListData.html":{},"interfaces/ListEntry.html":{},"interfaces/ListEntryRO.html":{},"interfaces/ListRO.html":{},"interfaces/RoleData.html":{},"interfaces/RoleRO.html":{},"interfaces/SiteData.html":{},"interfaces/SiteRO.html":{}}}],["createdatecolumn",{"_index":1142,"title":{},"body":{"classes/MenuEntryEntity.html":{}}}],["createdby",{"_index":265,"title":{},"body":{"classes/ArticleEntity.html":{},"interfaces/CorporationData.html":{},"classes/CorporationEntity.html":{},"interfaces/CorporationRO.html":{},"interfaces/ErrorLogData.html":{},"classes/ErrorLogEntity.html":{},"interfaces/ErrorLogRO.html":{},"interfaces/GroupData.html":{},"classes/GroupEntity.html":{},"interfaces/GroupRO.html":{},"interfaces/ListData.html":{},"classes/ListEntity.html":{},"interfaces/ListEntry.html":{},"interfaces/ListEntryRO.html":{},"interfaces/ListRO.html":{},"interfaces/MenuAppData.html":{},"classes/MenuAppEntity.html":{},"interfaces/MenuAppEntry.html":{},"classes/MenuEntryEntity.html":{},"interfaces/MenuEntryRO.html":{},"interfaces/MenuRO.html":{},"interfaces/RoleData.html":{},"classes/RoleEntity.html":{},"interfaces/RoleRO.html":{},"interfaces/SiteData.html":{},"classes/SiteEntity.html":{},"interfaces/SiteRO.html":{},"classes/TagEntity.html":{},"classes/UserEntity.html":{}}}],["createddate",{"_index":266,"title":{},"body":{"classes/ArticleEntity.html":{},"classes/CorporationEntity.html":{},"classes/ErrorLogEntity.html":{},"classes/GroupEntity.html":{},"classes/ListEntity.html":{},"interfaces/MenuAppData.html":{},"classes/MenuAppEntity.html":{},"interfaces/MenuAppEntry.html":{},"classes/MenuEntryEntity.html":{},"interfaces/MenuEntryRO.html":{},"interfaces/MenuRO.html":{},"classes/RoleEntity.html":{},"classes/SiteEntity.html":{},"classes/TagEntity.html":{},"classes/UserEntity.html":{}}}],["createerrorlogdto",{"_index":692,"title":{"classes/CreateErrorLogDto.html":{}},"body":{"classes/CreateErrorLogDto.html":{},"controllers/ErrorlogController.html":{},"injectables/ErrorlogService.html":{},"coverage.html":{}}}],["createerrorlogdto})@post(':id",{"_index":801,"title":{},"body":{"controllers/ErrorlogController.html":{}}}],["createerrorlogdto})@put(':id",{"_index":808,"title":{},"body":{"controllers/ErrorlogController.html":{}}}],["creategroupdto",{"_index":706,"title":{"classes/CreateGroupDto.html":{}},"body":{"classes/CreateGroupDto.html":{},"controllers/GroupController.html":{},"injectables/GroupService.html":{},"coverage.html":{}}}],["creategroupdto})@post(':id')@apibody({type",{"_index":880,"title":{},"body":{"controllers/GroupController.html":{}}}],["creategroupdto})@put(':id')@apibody({type",{"_index":891,"title":{},"body":{"controllers/GroupController.html":{}}}],["createlistdto",{"_index":712,"title":{"classes/CreateListDto.html":{}},"body":{"classes/CreateListDto.html":{},"controllers/ListController.html":{},"injectables/ListService.html":{},"coverage.html":{}}}],["createlistdto})@delete(':id",{"_index":974,"title":{},"body":{"controllers/ListController.html":{}}}],["createlistdto})@post(':id",{"_index":971,"title":{},"body":{"controllers/ListController.html":{}}}],["createlistdto})@put(':id",{"_index":979,"title":{},"body":{"controllers/ListController.html":{}}}],["createlistentrydto",{"_index":718,"title":{"classes/CreateListEntryDto.html":{}},"body":{"classes/CreateListEntryDto.html":{},"coverage.html":{}}}],["createmenudto",{"_index":726,"title":{"classes/CreateMenuDto.html":{}},"body":{"classes/CreateMenuDto.html":{},"controllers/MenuController.html":{},"injectables/MenuService.html":{},"coverage.html":{}}}],["createmenudto})@delete(':id",{"_index":1108,"title":{},"body":{"controllers/MenuController.html":{}}}],["createmenudto})@post(':id",{"_index":1105,"title":{},"body":{"controllers/MenuController.html":{}}}],["createmenudto})@put(':id",{"_index":1114,"title":{},"body":{"controllers/MenuController.html":{}}}],["createmenuentrydto",{"_index":734,"title":{"classes/CreateMenuEntryDto.html":{}},"body":{"classes/CreateMenuEntryDto.html":{},"coverage.html":{}}}],["createparamdecorator((data",{"_index":1877,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createquerybuilder('article",{"_index":394,"title":{},"body":{"injectables/ArticleService.html":{}}}],["createquerybuilder('user",{"_index":1707,"title":{},"body":{"injectables/UserService.html":{}}}],["createroleappdto",{"_index":744,"title":{"classes/CreateRoleAppDto.html":{}},"body":{"classes/CreateRoleAppDto.html":{},"coverage.html":{}}}],["createroledto",{"_index":752,"title":{"classes/CreateRoleDto.html":{}},"body":{"classes/CreateRoleDto.html":{},"controllers/RoleController.html":{},"injectables/RoleService.html":{},"coverage.html":{}}}],["createroledto})@delete(':id",{"_index":1325,"title":{},"body":{"controllers/RoleController.html":{}}}],["createroledto})@post(':id",{"_index":1322,"title":{},"body":{"controllers/RoleController.html":{}}}],["createroledto})@put(':id",{"_index":1332,"title":{},"body":{"controllers/RoleController.html":{}}}],["createsitedto",{"_index":757,"title":{"classes/CreateSiteDto.html":{}},"body":{"classes/CreateSiteDto.html":{},"controllers/SiteController.html":{},"injectables/SiteService.html":{},"coverage.html":{}}}],["createsitedto})@delete(':id",{"_index":1457,"title":{},"body":{"controllers/SiteController.html":{}}}],["createsitedto})@post(':id",{"_index":1454,"title":{},"body":{"controllers/SiteController.html":{}}}],["createsitedto})@put(':id",{"_index":1462,"title":{},"body":{"controllers/SiteController.html":{}}}],["createtypeormoptions",{"_index":774,"title":{},"body":{"injectables/DatabaseConfig.html":{}}}],["createuserdto",{"_index":764,"title":{"classes/CreateUserDto.html":{}},"body":{"classes/CreateUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["createuserdto})@delete('users/:slug",{"_index":1606,"title":{},"body":{"controllers/UserController.html":{}}}],["createuserdto})@usepipes(new",{"_index":1603,"title":{},"body":{"controllers/UserController.html":{}}}],["crud",{"_index":960,"title":{},"body":{"injectables/GroupService.html":{}}}],["crypto",{"_index":1818,"title":{},"body":{"dependencies.html":{}}}],["ctx",{"_index":1878,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ctx.switchtohttp().getrequest",{"_index":1880,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data",{"_index":659,"title":{},"body":{"injectables/CorporationService.html":{},"injectables/ErrorlogService.html":{},"controllers/GroupController.html":{},"injectables/GroupService.html":{},"injectables/ListService.html":{},"injectables/MenuService.html":{},"classes/RoleEntity.html":{},"injectables/RoleService.html":{},"injectables/SiteService.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{},"miscellaneous/variables.html":{}}}],["database",{"_index":1868,"title":{},"body":{"miscellaneous/variables.html":{}}}],["databaseconfig",{"_index":77,"title":{"injectables/DatabaseConfig.html":{}},"body":{"modules/AppModule.html":{},"injectables/DatabaseConfig.html":{},"coverage.html":{}}}],["date",{"_index":257,"title":{},"body":{"interfaces/ArticleData.html":{},"classes/ArticleEntity.html":{},"interfaces/ArticleRO.html":{},"interfaces/ArticlesRO.html":{},"interfaces/CommentsRO.html":{},"interfaces/CorporationData.html":{},"classes/CorporationEntity.html":{},"interfaces/CorporationRO.html":{},"interfaces/ErrorLogData.html":{},"classes/ErrorLogEntity.html":{},"interfaces/ErrorLogRO.html":{},"interfaces/GroupData.html":{},"classes/GroupEntity.html":{},"interfaces/GroupRO.html":{},"interfaces/ListData.html":{},"classes/ListEntity.html":{},"interfaces/ListEntry.html":{},"interfaces/ListEntryRO.html":{},"interfaces/ListRO.html":{},"interfaces/MenuAppData.html":{},"classes/MenuAppEntity.html":{},"interfaces/MenuAppEntry.html":{},"classes/MenuEntryEntity.html":{},"interfaces/MenuEntryRO.html":{},"interfaces/MenuRO.html":{},"interfaces/RoleData.html":{},"classes/RoleEntity.html":{},"interfaces/RoleRO.html":{},"interfaces/SiteData.html":{},"classes/SiteEntity.html":{},"interfaces/SiteRO.html":{},"classes/TagEntity.html":{},"classes/UserEntity.html":{},"injectables/UserService.html":{}}}],["date(today",{"_index":1728,"title":{},"body":{"injectables/UserService.html":{}}}],["debug",{"_index":1200,"title":{},"body":{"classes/MyLogger.html":{}}}],["debug(message",{"_index":1205,"title":{},"body":{"classes/MyLogger.html":{}}}],["declarations",{"_index":32,"title":{},"body":{"modules/AppModule.html":{},"modules/ArticleModule.html":{},"modules/CorporationModule.html":{},"modules/ErrorlogModule.html":{},"modules/GroupModule.html":{},"modules/ListModule.html":{},"modules/MenuModule.html":{},"modules/ProfileModule.html":{},"modules/RoleModule.html":{},"modules/SiteModule.html":{},"modules/SqldirectModule.html":{},"modules/TagModule.html":{},"modules/UserModule.html":{},"modules/ViewModule.html":{},"overview.html":{}}}],["decoded",{"_index":507,"title":{},"body":{"injectables/AuthMiddleware.html":{},"classes/BaseController.html":{},"miscellaneous/variables.html":{}}}],["decoded.id",{"_index":531,"title":{},"body":{"classes/BaseController.html":{}}}],["decoded.user",{"_index":1891,"title":{},"body":{"miscellaneous/variables.html":{}}}],["decoded[data",{"_index":1890,"title":{},"body":{"miscellaneous/variables.html":{}}}],["decorators",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"controllers/ArticleController.html":{},"classes/ArticleEntity.html":{},"classes/Comment.html":{},"controllers/CorporationController.html":{},"classes/CorporationEntity.html":{},"classes/CreateCorporationDto.html":{},"classes/CreateErrorLogDto.html":{},"classes/CreateGroupDto.html":{},"classes/CreateListDto.html":{},"classes/CreateListEntryDto.html":{},"classes/CreateMenuDto.html":{},"classes/CreateMenuEntryDto.html":{},"classes/CreateRoleAppDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSiteDto.html":{},"classes/CreateUserDto.html":{},"classes/ErrorLogEntity.html":{},"controllers/ErrorlogController.html":{},"classes/FollowsEntity.html":{},"controllers/GroupController.html":{},"classes/GroupEntity.html":{},"controllers/ListController.html":{},"classes/ListEntity.html":{},"classes/ListEntryEntity.html":{},"classes/LoginUserDto.html":{},"classes/MenuAppEntity.html":{},"controllers/MenuController.html":{},"classes/MenuEntryEntity.html":{},"controllers/ProfileController.html":{},"controllers/RoleController.html":{},"classes/RoleEntity.html":{},"classes/RoleMenuAppEntity.html":{},"classes/RoleMenuEntryEntity.html":{},"controllers/SiteController.html":{},"classes/SiteEntity.html":{},"controllers/TagController.html":{},"classes/TagEntity.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"classes/UserEntity.html":{}}}],["deeppartial",{"_index":1274,"title":{},"body":{"injectables/ProfileService.html":{}}}],["default",{"_index":284,"title":{},"body":{"classes/ArticleEntity.html":{},"classes/GroupEntity.html":{},"miscellaneous/variables.html":{}}}],["define",{"_index":1379,"title":{},"body":{"classes/RoleEntity.html":{}}}],["defined",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"controllers/ArticleController.html":{},"classes/ArticleEntity.html":{},"modules/ArticleModule.html":{},"injectables/ArticleService.html":{},"injectables/AuthMiddleware.html":{},"classes/BaseController.html":{},"classes/Comment.html":{},"controllers/CorporationController.html":{},"classes/CorporationEntity.html":{},"modules/CorporationModule.html":{},"injectables/CorporationService.html":{},"classes/CreateArticleDto.html":{},"classes/CreateCommentDto.html":{},"classes/CreateCorporationDto.html":{},"classes/CreateErrorLogDto.html":{},"classes/CreateGroupDto.html":{},"classes/CreateListDto.html":{},"classes/CreateListEntryDto.html":{},"classes/CreateMenuDto.html":{},"classes/CreateMenuEntryDto.html":{},"classes/CreateRoleAppDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSiteDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabaseConfig.html":{},"classes/ErrorLogEntity.html":{},"controllers/ErrorlogController.html":{},"modules/ErrorlogModule.html":{},"injectables/ErrorlogService.html":{},"classes/FollowsEntity.html":{},"controllers/GroupController.html":{},"classes/GroupEntity.html":{},"modules/GroupModule.html":{},"injectables/GroupService.html":{},"controllers/ListController.html":{},"classes/ListEntity.html":{},"classes/ListEntryEntity.html":{},"modules/ListModule.html":{},"injectables/ListService.html":{},"classes/LoginUserDto.html":{},"classes/MenuAppEntity.html":{},"controllers/MenuController.html":{},"classes/MenuEntryEntity.html":{},"modules/MenuModule.html":{},"injectables/MenuService.html":{},"classes/MyLogger.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"controllers/RoleController.html":{},"classes/RoleEntity.html":{},"classes/RoleMenuAppEntity.html":{},"classes/RoleMenuEntryEntity.html":{},"modules/RoleModule.html":{},"injectables/RoleService.html":{},"controllers/SiteController.html":{},"classes/SiteEntity.html":{},"modules/SiteModule.html":{},"injectables/SiteService.html":{},"controllers/TagController.html":{},"classes/TagEntity.html":{},"modules/TagModule.html":{},"injectables/TagService.html":{},"classes/ToIntegerPipe.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"classes/UserEntity.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{}}}],["delete",{"_index":92,"title":{},"body":{"controllers/ArticleController.html":{},"injectables/ArticleService.html":{},"controllers/CorporationController.html":{},"injectables/CorporationService.html":{},"controllers/ErrorlogController.html":{},"injectables/ErrorlogService.html":{},"controllers/GroupController.html":{},"injectables/GroupService.html":{},"controllers/ListController.html":{},"injectables/ListService.html":{},"controllers/MenuController.html":{},"injectables/MenuService.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"controllers/RoleController.html":{},"injectables/RoleService.html":{},"controllers/SiteController.html":{},"injectables/SiteService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["delete(':id",{"_index":587,"title":{},"body":{"controllers/CorporationController.html":{},"controllers/ErrorlogController.html":{},"controllers/GroupController.html":{},"controllers/ListController.html":{},"controllers/MenuController.html":{},"controllers/RoleController.html":{},"controllers/SiteController.html":{}}}],["delete(':slug",{"_index":226,"title":{},"body":{"controllers/ArticleController.html":{}}}],["delete(':slug/comments/:id",{"_index":233,"title":{},"body":{"controllers/ArticleController.html":{}}}],["delete(':slug/favorite",{"_index":244,"title":{},"body":{"controllers/ArticleController.html":{}}}],["delete(':username/follow",{"_index":1249,"title":{},"body":{"controllers/ProfileController.html":{}}}],["delete('users/:slug",{"_index":1638,"title":{},"body":{"controllers/UserController.html":{}}}],["delete(@param",{"_index":227,"title":{},"body":{"controllers/ArticleController.html":{},"controllers/ListController.html":{},"controllers/MenuController.html":{},"controllers/RoleController.html":{},"controllers/SiteController.html":{},"controllers/UserController.html":{}}}],["delete(@param('id",{"_index":588,"title":{},"body":{"controllers/CorporationController.html":{},"controllers/ErrorlogController.html":{},"controllers/GroupController.html":{}}}],["delete(email",{"_index":1692,"title":{},"body":{"injectables/UserService.html":{}}}],["delete(id",{"_index":554,"title":{},"body":{"controllers/CorporationController.html":{},"injectables/CorporationService.html":{},"controllers/ErrorlogController.html":{},"injectables/ErrorlogService.html":{},"controllers/GroupController.html":{},"injectables/GroupService.html":{},"injectables/ListService.html":{},"injectables/MenuService.html":{},"injectables/RoleService.html":{},"injectables/SiteService.html":{}}}],["delete(params",{"_index":129,"title":{},"body":{"controllers/ArticleController.html":{},"controllers/ListController.html":{},"controllers/MenuController.html":{},"controllers/RoleController.html":{},"controllers/SiteController.html":{},"controllers/UserController.html":{}}}],["delete(slug",{"_index":365,"title":{},"body":{"injectables/ArticleService.html":{}}}],["deletecomment",{"_index":93,"title":{},"body":{"controllers/ArticleController.html":{},"injectables/ArticleService.html":{}}}],["deletecomment(@param",{"_index":234,"title":{},"body":{"controllers/ArticleController.html":{}}}],["deletecomment(params",{"_index":134,"title":{},"body":{"controllers/ArticleController.html":{}}}],["deletecomment(slug",{"_index":367,"title":{},"body":{"injectables/ArticleService.html":{}}}],["deletecomments",{"_index":438,"title":{},"body":{"injectables/ArticleService.html":{}}}],["deleted",{"_index":225,"title":{},"body":{"controllers/ArticleController.html":{},"controllers/ErrorlogController.html":{},"controllers/GroupController.html":{},"controllers/ListController.html":{},"controllers/MenuController.html":{},"controllers/ProfileController.html":{},"controllers/RoleController.html":{},"controllers/SiteController.html":{},"controllers/UserController.html":{}}}],["deleted.'})@apiresponse({status",{"_index":130,"title":{},"body":{"controllers/ArticleController.html":{}}}],["deleteindex",{"_index":434,"title":{},"body":{"injectables/ArticleService.html":{}}}],["deleteresult",{"_index":385,"title":{},"body":{"injectables/ArticleService.html":{},"injectables/CorporationService.html":{},"injectables/ErrorlogService.html":{},"injectables/GroupService.html":{},"injectables/ListService.html":{},"injectables/MenuService.html":{},"injectables/RoleService.html":{},"injectables/SiteService.html":{},"injectables/UserService.html":{}}}],["delted",{"_index":555,"title":{},"body":{"controllers/CorporationController.html":{}}}],["dependencies",{"_index":30,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/ArticleModule.html":{},"modules/CorporationModule.html":{},"modules/ErrorlogModule.html":{},"modules/GroupModule.html":{},"modules/ListModule.html":{},"modules/MenuModule.html":{},"modules/ProfileModule.html":{},"modules/RoleModule.html":{},"modules/SiteModule.html":{},"modules/SqldirectModule.html":{},"modules/TagModule.html":{},"modules/UserModule.html":{},"modules/ViewModule.html":{},"dependencies.html":{},"overview.html":{}}}],["desc",{"_index":410,"title":{},"body":{"injectables/ArticleService.html":{}}}],["description",{"_index":108,"title":{},"body":{"controllers/ArticleController.html":{},"interfaces/ArticleData.html":{},"classes/ArticleEntity.html":{},"interfaces/ArticleRO.html":{},"interfaces/ArticlesRO.html":{},"interfaces/CommentsRO.html":{},"controllers/CorporationController.html":{},"interfaces/CorporationData.html":{},"classes/CorporationEntity.html":{},"interfaces/CorporationRO.html":{},"injectables/CorporationService.html":{},"classes/CreateArticleDto.html":{},"classes/CreateCorporationDto.html":{},"classes/CreateErrorLogDto.html":{},"classes/CreateGroupDto.html":{},"classes/CreateListDto.html":{},"classes/CreateListEntryDto.html":{},"classes/CreateMenuDto.html":{},"classes/CreateMenuEntryDto.html":{},"classes/CreateRoleAppDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSiteDto.html":{},"interfaces/ErrorLogData.html":{},"classes/ErrorLogEntity.html":{},"interfaces/ErrorLogRO.html":{},"controllers/ErrorlogController.html":{},"injectables/ErrorlogService.html":{},"controllers/GroupController.html":{},"interfaces/GroupData.html":{},"classes/GroupEntity.html":{},"interfaces/GroupRO.html":{},"injectables/GroupService.html":{},"controllers/ListController.html":{},"interfaces/ListData.html":{},"classes/ListEntity.html":{},"interfaces/ListEntry.html":{},"classes/ListEntryEntity.html":{},"interfaces/ListEntryRO.html":{},"interfaces/ListRO.html":{},"injectables/ListService.html":{},"classes/LoginUserDto.html":{},"classes/MenuAppEntity.html":{},"controllers/MenuController.html":{},"classes/MenuEntryEntity.html":{},"injectables/MenuService.html":{},"controllers/ProfileController.html":{},"controllers/RoleController.html":{},"interfaces/RoleData.html":{},"classes/RoleEntity.html":{},"interfaces/RoleRO.html":{},"injectables/RoleService.html":{},"controllers/SiteController.html":{},"interfaces/SiteData.html":{},"classes/SiteEntity.html":{},"interfaces/SiteRO.html":{},"injectables/SiteService.html":{},"controllers/TagController.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{}}}],["description,errorcode",{"_index":851,"title":{},"body":{"injectables/ErrorlogService.html":{}}}],["desription",{"_index":720,"title":{},"body":{"classes/CreateListEntryDto.html":{}}}],["dev",{"_index":1872,"title":{},"body":{"miscellaneous/variables.html":{}}}],["different",{"_index":1371,"title":{},"body":{"classes/RoleEntity.html":{}}}],["documentation",{"_index":1778,"title":{},"body":{"coverage.html":{}}}],["dotenv",{"_index":1822,"title":{},"body":{"dependencies.html":{}}}],["dto",{"_index":180,"title":{},"body":{"controllers/ArticleController.html":{},"injectables/ArticleService.html":{},"controllers/CorporationController.html":{},"injectables/CorporationService.html":{},"controllers/ErrorlogController.html":{},"injectables/ErrorlogService.html":{},"controllers/GroupController.html":{},"injectables/GroupService.html":{},"controllers/ListController.html":{},"injectables/ListService.html":{},"controllers/MenuController.html":{},"injectables/MenuService.html":{},"controllers/RoleController.html":{},"injectables/RoleService.html":{},"controllers/SiteController.html":{},"injectables/SiteService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["eager",{"_index":277,"title":{},"body":{"classes/ArticleEntity.html":{},"classes/ListEntity.html":{}}}],["el.followingid",{"_index":423,"title":{},"body":{"injectables/ArticleService.html":{}}}],["el.id",{"_index":408,"title":{},"body":{"injectables/ArticleService.html":{}}}],["el.property",{"_index":1759,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["email",{"_index":767,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginUserDto.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"interfaces/UserData.html":{},"classes/UserEntity.html":{},"interfaces/UserRO.html":{},"injectables/UserService.html":{}}}],["end",{"_index":959,"title":{},"body":{"injectables/GroupService.html":{}}}],["entities",{"_index":1874,"title":{},"body":{"miscellaneous/variables.html":{}}}],["entity",{"_index":300,"title":{},"body":{"classes/ArticleEntity.html":{},"classes/Comment.html":{},"classes/CorporationEntity.html":{},"classes/ErrorLogEntity.html":{},"classes/FollowsEntity.html":{},"classes/GroupEntity.html":{},"classes/ListEntity.html":{},"classes/ListEntryEntity.html":{},"classes/MenuAppEntity.html":{},"classes/MenuEntryEntity.html":{},"classes/RoleEntity.html":{},"classes/RoleMenuAppEntity.html":{},"classes/RoleMenuEntryEntity.html":{},"classes/SiteEntity.html":{},"classes/TagEntity.html":{},"classes/UserEntity.html":{}}}],["entity('article",{"_index":309,"title":{},"body":{"classes/ArticleEntity.html":{}}}],["entity('corporation",{"_index":609,"title":{},"body":{"classes/CorporationEntity.html":{}}}],["entity('errorlog",{"_index":795,"title":{},"body":{"classes/ErrorLogEntity.html":{}}}],["entity('follows",{"_index":874,"title":{},"body":{"classes/FollowsEntity.html":{}}}],["entity('group",{"_index":924,"title":{},"body":{"classes/GroupEntity.html":{}}}],["entity('list",{"_index":1017,"title":{},"body":{"classes/ListEntity.html":{}}}],["entity('listentry",{"_index":1025,"title":{},"body":{"classes/ListEntryEntity.html":{}}}],["entity('menuapp",{"_index":1096,"title":{},"body":{"classes/MenuAppEntity.html":{}}}],["entity('menuentry",{"_index":1155,"title":{},"body":{"classes/MenuEntryEntity.html":{}}}],["entity('role",{"_index":1369,"title":{},"body":{"classes/RoleEntity.html":{}}}],["entity('rolemenuapp",{"_index":1395,"title":{},"body":{"classes/RoleMenuAppEntity.html":{}}}],["entity('rolemenuentry",{"_index":1411,"title":{},"body":{"classes/RoleMenuEntryEntity.html":{}}}],["entity('site",{"_index":1494,"title":{},"body":{"classes/SiteEntity.html":{}}}],["entity('tag",{"_index":1565,"title":{},"body":{"classes/TagEntity.html":{}}}],["entity('user",{"_index":1667,"title":{},"body":{"classes/UserEntity.html":{}}}],["entry",{"_index":852,"title":{},"body":{"injectables/ErrorlogService.html":{}}}],["equal",{"_index":1307,"title":{},"body":{"injectables/ProfileService.html":{}}}],["error",{"_index":1201,"title":{},"body":{"classes/MyLogger.html":{}}}],["error(message",{"_index":1208,"title":{},"body":{"classes/MyLogger.html":{}}}],["errorcode",{"_index":695,"title":{},"body":{"classes/CreateErrorLogDto.html":{},"interfaces/ErrorLogData.html":{},"classes/ErrorLogEntity.html":{},"interfaces/ErrorLogRO.html":{},"injectables/ErrorlogService.html":{}}}],["errorcodehtml",{"_index":696,"title":{},"body":{"classes/CreateErrorLogDto.html":{},"interfaces/ErrorLogData.html":{},"classes/ErrorLogEntity.html":{},"interfaces/ErrorLogRO.html":{},"injectables/ErrorlogService.html":{}}}],["errorlog",{"_index":666,"title":{},"body":{"injectables/CorporationService.html":{},"interfaces/ErrorLogData.html":{},"interfaces/ErrorLogRO.html":{},"controllers/ErrorlogController.html":{},"injectables/ErrorlogService.html":{}}}],["errorlog'})@apiresponse({status",{"_index":800,"title":{},"body":{"controllers/ErrorlogController.html":{}}}],["errorlog.controller",{"_index":832,"title":{},"body":{"modules/ErrorlogModule.html":{}}}],["errorlog.description",{"_index":866,"title":{},"body":{"injectables/ErrorlogService.html":{}}}],["errorlog.dto.ts",{"_index":694,"title":{},"body":{"classes/CreateErrorLogDto.html":{},"coverage.html":{}}}],["errorlog.dto.ts:11",{"_index":703,"title":{},"body":{"classes/CreateErrorLogDto.html":{}}}],["errorlog.dto.ts:15",{"_index":698,"title":{},"body":{"classes/CreateErrorLogDto.html":{}}}],["errorlog.dto.ts:19",{"_index":700,"title":{},"body":{"classes/CreateErrorLogDto.html":{}}}],["errorlog.dto.ts:22",{"_index":701,"title":{},"body":{"classes/CreateErrorLogDto.html":{}}}],["errorlog.dto.ts:7",{"_index":702,"title":{},"body":{"classes/CreateErrorLogDto.html":{}}}],["errorlog.entity",{"_index":814,"title":{},"body":{"controllers/ErrorlogController.html":{},"modules/ErrorlogModule.html":{},"injectables/ErrorlogService.html":{}}}],["errorlog.errorcode",{"_index":867,"title":{},"body":{"injectables/ErrorlogService.html":{}}}],["errorlog.errorcodehtml",{"_index":868,"title":{},"body":{"injectables/ErrorlogService.html":{}}}],["errorlog.id",{"_index":864,"title":{},"body":{"injectables/ErrorlogService.html":{}}}],["errorlog.interface",{"_index":813,"title":{},"body":{"controllers/ErrorlogController.html":{},"injectables/ErrorlogService.html":{}}}],["errorlog.service",{"_index":812,"title":{},"body":{"controllers/ErrorlogController.html":{},"modules/ErrorlogModule.html":{}}}],["errorlog.siteid",{"_index":865,"title":{},"body":{"injectables/ErrorlogService.html":{}}}],["errorlog/errorlog.module",{"_index":71,"title":{},"body":{"modules/AppModule.html":{}}}],["errorlogcontroller",{"_index":797,"title":{"controllers/ErrorlogController.html":{}},"body":{"controllers/ErrorlogController.html":{},"modules/ErrorlogModule.html":{},"coverage.html":{}}}],["errorlogdata",{"_index":779,"title":{"interfaces/ErrorLogData.html":{}},"body":{"interfaces/ErrorLogData.html":{},"interfaces/ErrorLogRO.html":{},"controllers/ErrorlogController.html":{},"coverage.html":{}}}],["errorlogentity",{"_index":782,"title":{"classes/ErrorLogEntity.html":{}},"body":{"classes/ErrorLogEntity.html":{},"controllers/ErrorlogController.html":{},"modules/ErrorlogModule.html":{},"injectables/ErrorlogService.html":{},"coverage.html":{}}}],["errorlogmodule",{"_index":40,"title":{"modules/ErrorlogModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ErrorlogModule.html":{},"modules.html":{},"overview.html":{}}}],["errorlogrepository",{"_index":838,"title":{},"body":{"injectables/ErrorlogService.html":{}}}],["errorlogro",{"_index":781,"title":{"interfaces/ErrorLogRO.html":{}},"body":{"interfaces/ErrorLogData.html":{},"interfaces/ErrorLogRO.html":{},"controllers/ErrorlogController.html":{},"injectables/ErrorlogService.html":{},"coverage.html":{}}}],["errorlogs",{"_index":805,"title":{},"body":{"controllers/ErrorlogController.html":{}}}],["errorlogs'})@apiresponse({status",{"_index":804,"title":{},"body":{"controllers/ErrorlogController.html":{}}}],["errorlogservice",{"_index":811,"title":{"injectables/ErrorlogService.html":{}},"body":{"controllers/ErrorlogController.html":{},"modules/ErrorlogModule.html":{},"injectables/ErrorlogService.html":{},"coverage.html":{},"overview.html":{}}}],["errors",{"_index":643,"title":{},"body":{"injectables/CorporationService.html":{},"injectables/ErrorlogService.html":{},"injectables/GroupService.html":{},"injectables/ListService.html":{},"injectables/MenuService.html":{},"injectables/RoleService.html":{},"injectables/SiteService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{}}}],["errors.foreach(el",{"_index":1757,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["errors.length",{"_index":653,"title":{},"body":{"injectables/CorporationService.html":{},"injectables/ErrorlogService.html":{},"injectables/GroupService.html":{},"injectables/ListService.html":{},"injectables/MenuService.html":{},"injectables/RoleService.html":{},"injectables/SiteService.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{}}}],["executioncontext",{"_index":1879,"title":{},"body":{"miscellaneous/variables.html":{}}}],["exp",{"_index":1727,"title":{},"body":{"injectables/UserService.html":{}}}],["exp.gettime",{"_index":1734,"title":{},"body":{"injectables/UserService.html":{}}}],["exp.setdate(today.getdate",{"_index":1729,"title":{},"body":{"injectables/UserService.html":{}}}],["export",{"_index":18,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/ArticleController.html":{},"interfaces/ArticleData.html":{},"classes/ArticleEntity.html":{},"modules/ArticleModule.html":{},"interfaces/ArticleRO.html":{},"injectables/ArticleService.html":{},"interfaces/ArticlesRO.html":{},"injectables/AuthMiddleware.html":{},"classes/BaseController.html":{},"classes/Comment.html":{},"controllers/CommentController.html":{},"modules/CommentModule.html":{},"injectables/CommentService.html":{},"interfaces/CommentsRO.html":{},"controllers/CorporationController.html":{},"interfaces/CorporationData.html":{},"classes/CorporationEntity.html":{},"modules/CorporationModule.html":{},"interfaces/CorporationRO.html":{},"injectables/CorporationService.html":{},"classes/CreateArticleDto.html":{},"classes/CreateCommentDto.html":{},"classes/CreateCorporationDto.html":{},"classes/CreateErrorLogDto.html":{},"classes/CreateGroupDto.html":{},"classes/CreateListDto.html":{},"classes/CreateListEntryDto.html":{},"classes/CreateMenuDto.html":{},"classes/CreateMenuEntryDto.html":{},"classes/CreateRoleAppDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSiteDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabaseConfig.html":{},"interfaces/ErrorLogData.html":{},"classes/ErrorLogEntity.html":{},"interfaces/ErrorLogRO.html":{},"controllers/ErrorlogController.html":{},"modules/ErrorlogModule.html":{},"injectables/ErrorlogService.html":{},"classes/FollowsEntity.html":{},"controllers/GroupController.html":{},"interfaces/GroupData.html":{},"classes/GroupEntity.html":{},"modules/GroupModule.html":{},"interfaces/GroupRO.html":{},"injectables/GroupService.html":{},"controllers/ListController.html":{},"interfaces/ListData.html":{},"classes/ListEntity.html":{},"interfaces/ListEntry.html":{},"classes/ListEntryEntity.html":{},"interfaces/ListEntryRO.html":{},"modules/ListModule.html":{},"interfaces/ListRO.html":{},"injectables/ListService.html":{},"classes/LoginUserDto.html":{},"interfaces/MenuAppData.html":{},"classes/MenuAppEntity.html":{},"interfaces/MenuAppEntry.html":{},"controllers/MenuController.html":{},"classes/MenuEntryEntity.html":{},"interfaces/MenuEntryRO.html":{},"modules/MenuModule.html":{},"interfaces/MenuRO.html":{},"injectables/MenuService.html":{},"classes/MyLogger.html":{},"controllers/ProfileController.html":{},"interfaces/ProfileData.html":{},"modules/ProfileModule.html":{},"interfaces/ProfileRO.html":{},"injectables/ProfileService.html":{},"controllers/RoleController.html":{},"interfaces/RoleData.html":{},"classes/RoleEntity.html":{},"classes/RoleMenuAppEntity.html":{},"classes/RoleMenuEntryEntity.html":{},"modules/RoleModule.html":{},"interfaces/RoleRO.html":{},"injectables/RoleService.html":{},"controllers/SiteController.html":{},"interfaces/SiteData.html":{},"classes/SiteEntity.html":{},"modules/SiteModule.html":{},"interfaces/SiteRO.html":{},"injectables/SiteService.html":{},"controllers/SqldirectController.html":{},"modules/SqldirectModule.html":{},"injectables/SqldirectService.html":{},"controllers/TagController.html":{},"classes/TagEntity.html":{},"modules/TagModule.html":{},"injectables/TagService.html":{},"classes/ToIntegerPipe.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"interfaces/UserData.html":{},"classes/UserEntity.html":{},"modules/UserModule.html":{},"interfaces/UserRO.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{},"controllers/ViewController.html":{},"modules/ViewModule.html":{},"injectables/ViewService.html":{}}}],["exports",{"_index":35,"title":{},"body":{"modules/AppModule.html":{},"modules/ArticleModule.html":{},"modules/CorporationModule.html":{},"modules/ErrorlogModule.html":{},"modules/GroupModule.html":{},"modules/ListModule.html":{},"modules/MenuModule.html":{},"modules/ProfileModule.html":{},"modules/RoleModule.html":{},"modules/SiteModule.html":{},"modules/SqldirectModule.html":{},"modules/TagModule.html":{},"modules/UserModule.html":{},"modules/ViewModule.html":{},"overview.html":{}}}],["express",{"_index":177,"title":{},"body":{"controllers/ArticleController.html":{},"injectables/AuthMiddleware.html":{},"controllers/CorporationController.html":{},"controllers/ErrorlogController.html":{},"controllers/GroupController.html":{},"controllers/ListController.html":{},"controllers/MenuController.html":{},"controllers/ProfileController.html":{},"controllers/RoleController.html":{},"controllers/SiteController.html":{},"controllers/UserController.html":{},"dependencies.html":{}}}],["extends",{"_index":1670,"title":{},"body":{"classes/UserEntity.html":{}}}],["extractjwt",{"_index":490,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["failed",{"_index":661,"title":{},"body":{"injectables/CorporationService.html":{},"injectables/ErrorlogService.html":{},"injectables/GroupService.html":{},"injectables/ListService.html":{},"injectables/MenuService.html":{},"injectables/RoleService.html":{},"injectables/SiteService.html":{},"classes/ToIntegerPipe.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{}}}],["false",{"_index":595,"title":{},"body":{"classes/CorporationEntity.html":{},"classes/MenuAppEntity.html":{},"classes/MenuEntryEntity.html":{},"injectables/ProfileService.html":{},"classes/RoleEntity.html":{},"classes/SiteEntity.html":{},"miscellaneous/variables.html":{}}}],["favorite",{"_index":94,"title":{},"body":{"controllers/ArticleController.html":{},"injectables/ArticleService.html":{}}}],["favorite(@user('id",{"_index":240,"title":{},"body":{"controllers/ArticleController.html":{}}}],["favorite(id",{"_index":369,"title":{},"body":{"injectables/ArticleService.html":{}}}],["favorite(userid",{"_index":137,"title":{},"body":{"controllers/ArticleController.html":{}}}],["favoritecount",{"_index":267,"title":{},"body":{"classes/ArticleEntity.html":{}}}],["favorited",{"_index":238,"title":{},"body":{"controllers/ArticleController.html":{},"interfaces/ArticleData.html":{},"interfaces/ArticleRO.html":{},"injectables/ArticleService.html":{},"interfaces/ArticlesRO.html":{},"interfaces/CommentsRO.html":{}}}],["favorited.'})@apiresponse({status",{"_index":138,"title":{},"body":{"controllers/ArticleController.html":{}}}],["favorites",{"_index":1642,"title":{},"body":{"classes/UserEntity.html":{}}}],["favoritescount",{"_index":253,"title":{},"body":{"interfaces/ArticleData.html":{},"interfaces/ArticleRO.html":{},"interfaces/ArticlesRO.html":{},"interfaces/CommentsRO.html":{}}}],["feed",{"_index":161,"title":{},"body":{"controllers/ArticleController.html":{}}}],["feed'})@apiresponse({status",{"_index":160,"title":{},"body":{"controllers/ArticleController.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/ArticleController.html":{},"interfaces/ArticleData.html":{},"classes/ArticleEntity.html":{},"modules/ArticleModule.html":{},"interfaces/ArticleRO.html":{},"injectables/ArticleService.html":{},"interfaces/ArticlesRO.html":{},"injectables/AuthMiddleware.html":{},"classes/BaseController.html":{},"classes/Comment.html":{},"controllers/CommentController.html":{},"modules/CommentModule.html":{},"injectables/CommentService.html":{},"interfaces/CommentsRO.html":{},"controllers/CorporationController.html":{},"interfaces/CorporationData.html":{},"classes/CorporationEntity.html":{},"modules/CorporationModule.html":{},"interfaces/CorporationRO.html":{},"injectables/CorporationService.html":{},"classes/CreateArticleDto.html":{},"classes/CreateCommentDto.html":{},"classes/CreateCorporationDto.html":{},"classes/CreateErrorLogDto.html":{},"classes/CreateGroupDto.html":{},"classes/CreateListDto.html":{},"classes/CreateListEntryDto.html":{},"classes/CreateMenuDto.html":{},"classes/CreateMenuEntryDto.html":{},"classes/CreateRoleAppDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSiteDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabaseConfig.html":{},"interfaces/ErrorLogData.html":{},"classes/ErrorLogEntity.html":{},"interfaces/ErrorLogRO.html":{},"controllers/ErrorlogController.html":{},"modules/ErrorlogModule.html":{},"injectables/ErrorlogService.html":{},"classes/FollowsEntity.html":{},"controllers/GroupController.html":{},"interfaces/GroupData.html":{},"classes/GroupEntity.html":{},"modules/GroupModule.html":{},"interfaces/GroupRO.html":{},"injectables/GroupService.html":{},"controllers/ListController.html":{},"interfaces/ListData.html":{},"classes/ListEntity.html":{},"interfaces/ListEntry.html":{},"classes/ListEntryEntity.html":{},"interfaces/ListEntryRO.html":{},"modules/ListModule.html":{},"interfaces/ListRO.html":{},"injectables/ListService.html":{},"classes/LoginUserDto.html":{},"interfaces/MenuAppData.html":{},"classes/MenuAppEntity.html":{},"interfaces/MenuAppEntry.html":{},"controllers/MenuController.html":{},"classes/MenuEntryEntity.html":{},"interfaces/MenuEntryRO.html":{},"modules/MenuModule.html":{},"interfaces/MenuRO.html":{},"injectables/MenuService.html":{},"classes/MyLogger.html":{},"controllers/ProfileController.html":{},"interfaces/ProfileData.html":{},"modules/ProfileModule.html":{},"interfaces/ProfileRO.html":{},"injectables/ProfileService.html":{},"controllers/RoleController.html":{},"interfaces/RoleData.html":{},"classes/RoleEntity.html":{},"classes/RoleMenuAppEntity.html":{},"classes/RoleMenuEntryEntity.html":{},"modules/RoleModule.html":{},"interfaces/RoleRO.html":{},"injectables/RoleService.html":{},"controllers/SiteController.html":{},"interfaces/SiteData.html":{},"classes/SiteEntity.html":{},"modules/SiteModule.html":{},"interfaces/SiteRO.html":{},"injectables/SiteService.html":{},"controllers/SqldirectController.html":{},"modules/SqldirectModule.html":{},"injectables/SqldirectService.html":{},"controllers/TagController.html":{},"classes/TagEntity.html":{},"modules/TagModule.html":{},"injectables/TagService.html":{},"classes/ToIntegerPipe.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"interfaces/UserData.html":{},"classes/UserEntity.html":{},"modules/UserModule.html":{},"interfaces/UserRO.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{},"controllers/ViewController.html":{},"modules/ViewModule.html":{},"injectables/ViewService.html":{},"coverage.html":{}}}],["findall",{"_index":95,"title":{},"body":{"controllers/ArticleController.html":{},"injectables/ArticleService.html":{},"controllers/CorporationController.html":{},"injectables/CorporationService.html":{},"controllers/ErrorlogController.html":{},"injectables/ErrorlogService.html":{},"controllers/GroupController.html":{},"injectables/GroupService.html":{},"controllers/ListController.html":{},"injectables/ListService.html":{},"controllers/MenuController.html":{},"injectables/MenuService.html":{},"injectables/ProfileService.html":{},"controllers/RoleController.html":{},"injectables/RoleService.html":{},"controllers/SiteController.html":{},"injectables/SiteService.html":{},"controllers/TagController.html":{},"injectables/TagService.html":{},"injectables/UserService.html":{}}}],["findall(@query",{"_index":199,"title":{},"body":{"controllers/ArticleController.html":{}}}],["findall(query",{"_index":141,"title":{},"body":{"controllers/ArticleController.html":{},"injectables/ArticleService.html":{}}}],["findbyemail",{"_index":1686,"title":{},"body":{"injectables/UserService.html":{}}}],["findbyemail(email",{"_index":1695,"title":{},"body":{"injectables/UserService.html":{}}}],["findbyid",{"_index":620,"title":{},"body":{"injectables/CorporationService.html":{},"injectables/ErrorlogService.html":{},"injectables/GroupService.html":{},"injectables/ListService.html":{},"injectables/MenuService.html":{},"injectables/RoleService.html":{},"injectables/SiteService.html":{},"injectables/UserService.html":{}}}],["findbyid(id",{"_index":630,"title":{},"body":{"injectables/CorporationService.html":{},"injectables/ErrorlogService.html":{},"injectables/GroupService.html":{},"injectables/ListService.html":{},"injectables/MenuService.html":{},"injectables/RoleService.html":{},"injectables/SiteService.html":{},"injectables/UserService.html":{}}}],["findcomments",{"_index":96,"title":{},"body":{"controllers/ArticleController.html":{},"injectables/ArticleService.html":{}}}],["findcomments(@param('slug",{"_index":210,"title":{},"body":{"controllers/ArticleController.html":{}}}],["findcomments(slug",{"_index":149,"title":{},"body":{"controllers/ArticleController.html":{},"injectables/ArticleService.html":{}}}],["findfeed",{"_index":352,"title":{},"body":{"injectables/ArticleService.html":{}}}],["findfeed(userid",{"_index":373,"title":{},"body":{"injectables/ArticleService.html":{}}}],["findlistentries(@param('slug",{"_index":998,"title":{},"body":{"controllers/ListController.html":{}}}],["findlistentry(slug",{"_index":1061,"title":{},"body":{"injectables/ListService.html":{}}}],["findme",{"_index":1599,"title":{},"body":{"controllers/UserController.html":{}}}],["findme(@user('email",{"_index":1624,"title":{},"body":{"controllers/UserController.html":{}}}],["findme(email",{"_index":1608,"title":{},"body":{"controllers/UserController.html":{}}}],["findmenuentries(@param('slug",{"_index":1130,"title":{},"body":{"controllers/MenuController.html":{}}}],["findmlist",{"_index":546,"title":{},"body":{"controllers/CorporationController.html":{},"controllers/ErrorlogController.html":{},"controllers/GroupController.html":{},"controllers/ListController.html":{},"controllers/RoleController.html":{},"controllers/SiteController.html":{}}}],["findmlist(@param('id",{"_index":578,"title":{},"body":{"controllers/CorporationController.html":{},"controllers/ErrorlogController.html":{},"controllers/GroupController.html":{},"controllers/ListController.html":{},"controllers/RoleController.html":{},"controllers/SiteController.html":{}}}],["findmlist(id",{"_index":565,"title":{},"body":{"controllers/CorporationController.html":{},"controllers/ErrorlogController.html":{},"controllers/GroupController.html":{},"controllers/ListController.html":{},"controllers/RoleController.html":{},"controllers/SiteController.html":{}}}],["findmmenu",{"_index":1102,"title":{},"body":{"controllers/MenuController.html":{}}}],["findmmenu(@param('id",{"_index":1122,"title":{},"body":{"controllers/MenuController.html":{}}}],["findmmenu(id",{"_index":1112,"title":{},"body":{"controllers/MenuController.html":{}}}],["findone",{"_index":97,"title":{},"body":{"controllers/ArticleController.html":{},"injectables/ArticleService.html":{},"injectables/CorporationService.html":{},"injectables/GroupService.html":{},"injectables/ListService.html":{},"injectables/MenuService.html":{},"injectables/ProfileService.html":{},"injectables/RoleService.html":{},"injectables/SiteService.html":{},"injectables/UserService.html":{}}}],["findone(@param('slug",{"_index":207,"title":{},"body":{"controllers/ArticleController.html":{}}}],["findone(options",{"_index":1273,"title":{},"body":{"injectables/ProfileService.html":{}}}],["findone(slug",{"_index":155,"title":{},"body":{"controllers/ArticleController.html":{}}}],["findone(undefined",{"_index":632,"title":{},"body":{"injectables/CorporationService.html":{},"injectables/GroupService.html":{},"injectables/ListService.html":{},"injectables/MenuService.html":{},"injectables/RoleService.html":{},"injectables/SiteService.html":{},"injectables/UserService.html":{}}}],["findone(where",{"_index":375,"title":{},"body":{"injectables/ArticleService.html":{}}}],["findone({email",{"_index":1704,"title":{},"body":{"injectables/UserService.html":{}}}],["findone({id",{"_index":640,"title":{},"body":{"injectables/CorporationService.html":{},"injectables/GroupService.html":{},"injectables/ListService.html":{},"injectables/MenuService.html":{},"injectables/RoleService.html":{},"injectables/SiteService.html":{}}}],["findprofile",{"_index":1269,"title":{},"body":{"injectables/ProfileService.html":{}}}],["findprofile(id",{"_index":1278,"title":{},"body":{"injectables/ProfileService.html":{}}}],["follow",{"_index":1221,"title":{},"body":{"controllers/ProfileController.html":{},"injectables/ProfileService.html":{}}}],["follow(@user('email",{"_index":1246,"title":{},"body":{"controllers/ProfileController.html":{}}}],["follow(email",{"_index":1224,"title":{},"body":{"controllers/ProfileController.html":{}}}],["follow(followeremail",{"_index":1281,"title":{},"body":{"injectables/ProfileService.html":{}}}],["followeremail",{"_index":1283,"title":{},"body":{"injectables/ProfileService.html":{}}}],["followerid",{"_index":419,"title":{},"body":{"injectables/ArticleService.html":{},"classes/FollowsEntity.html":{},"injectables/ProfileService.html":{}}}],["followeruser",{"_index":1303,"title":{},"body":{"injectables/ProfileService.html":{}}}],["followeruser.id",{"_index":1308,"title":{},"body":{"injectables/ProfileService.html":{}}}],["following",{"_index":1255,"title":{},"body":{"interfaces/ProfileData.html":{},"interfaces/ProfileRO.html":{},"injectables/ProfileService.html":{}}}],["followingid",{"_index":870,"title":{},"body":{"classes/FollowsEntity.html":{},"injectables/ProfileService.html":{}}}],["followinguser",{"_index":1302,"title":{},"body":{"injectables/ProfileService.html":{}}}],["followinguser.bio",{"_index":1314,"title":{},"body":{"injectables/ProfileService.html":{}}}],["followinguser.email",{"_index":1305,"title":{},"body":{"injectables/ProfileService.html":{}}}],["followinguser.id",{"_index":1309,"title":{},"body":{"injectables/ProfileService.html":{}}}],["followinguser.image",{"_index":1315,"title":{},"body":{"injectables/ProfileService.html":{}}}],["followinguser.username",{"_index":1313,"title":{},"body":{"injectables/ProfileService.html":{}}}],["followingusername",{"_index":1279,"title":{},"body":{"injectables/ProfileService.html":{}}}],["follows",{"_index":1296,"title":{},"body":{"injectables/ProfileService.html":{}}}],["follows.entity",{"_index":1263,"title":{},"body":{"modules/ProfileModule.html":{},"injectables/ProfileService.html":{}}}],["follows.followerid",{"_index":1310,"title":{},"body":{"injectables/ProfileService.html":{}}}],["follows.followingid",{"_index":1311,"title":{},"body":{"injectables/ProfileService.html":{}}}],["followsentity",{"_index":329,"title":{"classes/FollowsEntity.html":{}},"body":{"modules/ArticleModule.html":{},"injectables/ArticleService.html":{},"classes/FollowsEntity.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"coverage.html":{}}}],["followsrepository",{"_index":359,"title":{},"body":{"injectables/ArticleService.html":{},"injectables/ProfileService.html":{}}}],["forbidden",{"_index":202,"title":{},"body":{"controllers/ArticleController.html":{},"controllers/CorporationController.html":{},"controllers/ErrorlogController.html":{},"controllers/GroupController.html":{},"controllers/ListController.html":{},"controllers/MenuController.html":{},"controllers/ProfileController.html":{},"controllers/RoleController.html":{},"controllers/SiteController.html":{},"controllers/TagController.html":{},"controllers/UserController.html":{}}}],["forbidden.'})@apibody({type",{"_index":113,"title":{},"body":{"controllers/ArticleController.html":{},"controllers/CorporationController.html":{},"controllers/ErrorlogController.html":{},"controllers/ListController.html":{},"controllers/MenuController.html":{},"controllers/RoleController.html":{},"controllers/SiteController.html":{},"controllers/UserController.html":{}}}],["forbidden.'})@apiresponse({status",{"_index":558,"title":{},"body":{"controllers/CorporationController.html":{},"controllers/ErrorlogController.html":{},"controllers/GroupController.html":{}}}],["forbidden.'})@delete(':slug/favorite",{"_index":166,"title":{},"body":{"controllers/ArticleController.html":{}}}],["forbidden.'})@delete(':username/follow",{"_index":1233,"title":{},"body":{"controllers/ProfileController.html":{}}}],["forbidden.'})@get",{"_index":563,"title":{},"body":{"controllers/CorporationController.html":{},"controllers/ErrorlogController.html":{},"controllers/ListController.html":{},"controllers/MenuController.html":{},"controllers/SiteController.html":{},"controllers/TagController.html":{}}}],["forbidden.'})@get(':id",{"_index":566,"title":{},"body":{"controllers/CorporationController.html":{},"controllers/ErrorlogController.html":{},"controllers/ListController.html":{},"controllers/MenuController.html":{},"controllers/RoleController.html":{},"controllers/SiteController.html":{}}}],["forbidden.'})@get(':slug",{"_index":157,"title":{},"body":{"controllers/ArticleController.html":{}}}],["forbidden.'})@get(':slug/comments",{"_index":153,"title":{},"body":{"controllers/ArticleController.html":{}}}],["forbidden.'})@get(':username",{"_index":1230,"title":{},"body":{"controllers/ProfileController.html":{}}}],["forbidden.'})@get('feed",{"_index":162,"title":{},"body":{"controllers/ArticleController.html":{}}}],["forbidden.'})@get('findall",{"_index":1329,"title":{},"body":{"controllers/RoleController.html":{}}}],["forbidden.'})@get('user",{"_index":1610,"title":{},"body":{"controllers/UserController.html":{}}}],["forbidden.'})@post(':slug/favorite",{"_index":139,"title":{},"body":{"controllers/ArticleController.html":{}}}],["forbidden.'})@post(':username/follow",{"_index":1227,"title":{},"body":{"controllers/ProfileController.html":{}}}],["forroutes",{"_index":336,"title":{},"body":{"modules/ArticleModule.html":{}}}],["forroutes({path",{"_index":1265,"title":{},"body":{"modules/ProfileModule.html":{},"modules/UserModule.html":{}}}],["found",{"_index":514,"title":{},"body":{"injectables/AuthMiddleware.html":{},"controllers/CorporationController.html":{},"injectables/CorporationService.html":{},"controllers/ErrorlogController.html":{},"injectables/ErrorlogService.html":{},"controllers/GroupController.html":{},"injectables/GroupService.html":{},"injectables/ListService.html":{},"injectables/MenuService.html":{},"injectables/RoleService.html":{},"injectables/SiteService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["found.'})@apibody({type",{"_index":879,"title":{},"body":{"controllers/GroupController.html":{}}}],["found.'})@delete(':id",{"_index":560,"title":{},"body":{"controllers/CorporationController.html":{},"controllers/ErrorlogController.html":{},"controllers/GroupController.html":{}}}],["found.'})@get",{"_index":886,"title":{},"body":{"controllers/GroupController.html":{}}}],["found.'})@get(':id",{"_index":888,"title":{},"body":{"controllers/GroupController.html":{}}}],["function",{"_index":1796,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":1840,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["general",{"_index":1846,"title":{},"body":{"index.html":{}}}],["generatejwt",{"_index":1687,"title":{},"body":{"injectables/UserService.html":{}}}],["generatejwt(user",{"_index":1699,"title":{},"body":{"injectables/UserService.html":{}}}],["get(':id",{"_index":577,"title":{},"body":{"controllers/CorporationController.html":{},"controllers/ErrorlogController.html":{},"controllers/GroupController.html":{},"controllers/ListController.html":{},"controllers/MenuController.html":{},"controllers/RoleController.html":{},"controllers/SiteController.html":{}}}],["get(':slug",{"_index":206,"title":{},"body":{"controllers/ArticleController.html":{}}}],["get(':slug/comments",{"_index":209,"title":{},"body":{"controllers/ArticleController.html":{}}}],["get(':slug/listentries",{"_index":997,"title":{},"body":{"controllers/ListController.html":{}}}],["get(':slug/menuentries",{"_index":1129,"title":{},"body":{"controllers/MenuController.html":{}}}],["get(':username",{"_index":1241,"title":{},"body":{"controllers/ProfileController.html":{}}}],["get('feed",{"_index":203,"title":{},"body":{"controllers/ArticleController.html":{}}}],["get('findall",{"_index":1344,"title":{},"body":{"controllers/RoleController.html":{}}}],["get('user",{"_index":1623,"title":{},"body":{"controllers/UserController.html":{}}}],["getfeed",{"_index":98,"title":{},"body":{"controllers/ArticleController.html":{}}}],["getfeed(@user('id",{"_index":204,"title":{},"body":{"controllers/ArticleController.html":{}}}],["getfeed(userid",{"_index":159,"title":{},"body":{"controllers/ArticleController.html":{}}}],["getprofile",{"_index":1222,"title":{},"body":{"controllers/ProfileController.html":{}}}],["getprofile(@user('id",{"_index":1242,"title":{},"body":{"controllers/ProfileController.html":{}}}],["getprofile(userid",{"_index":1229,"title":{},"body":{"controllers/ProfileController.html":{}}}],["getrepository",{"_index":384,"title":{},"body":{"injectables/ArticleService.html":{},"injectables/CorporationService.html":{},"injectables/ErrorlogService.html":{},"injectables/GroupService.html":{},"injectables/ListService.html":{},"injectables/MenuService.html":{},"injectables/RoleService.html":{},"injectables/SiteService.html":{},"injectables/UserService.html":{}}}],["getrepository(articleentity",{"_index":393,"title":{},"body":{"injectables/ArticleService.html":{}}}],["getrepository(userentity",{"_index":1706,"title":{},"body":{"injectables/UserService.html":{}}}],["gets",{"_index":222,"title":{},"body":{"controllers/ArticleController.html":{}}}],["getting",{"_index":1842,"title":{"index.html":{}},"body":{}}],["getuseridfromtoken",{"_index":523,"title":{},"body":{"classes/BaseController.html":{}}}],["getuseridfromtoken(authorization",{"_index":526,"title":{},"body":{"classes/BaseController.html":{}}}],["graph",{"_index":1852,"title":{},"body":{"modules.html":{}}}],["group",{"_index":850,"title":{},"body":{"injectables/ErrorlogService.html":{},"controllers/GroupController.html":{},"interfaces/GroupData.html":{},"interfaces/GroupRO.html":{},"injectables/GroupService.html":{},"classes/RoleEntity.html":{}}}],["group'})@apiresponse({status",{"_index":878,"title":{},"body":{"controllers/GroupController.html":{}}}],["group.controller",{"_index":930,"title":{},"body":{"modules/GroupModule.html":{}}}],["group.description",{"_index":964,"title":{},"body":{"injectables/GroupService.html":{}}}],["group.dto.ts",{"_index":708,"title":{},"body":{"classes/CreateGroupDto.html":{},"coverage.html":{}}}],["group.dto.ts:12",{"_index":711,"title":{},"body":{"classes/CreateGroupDto.html":{}}}],["group.dto.ts:15",{"_index":709,"title":{},"body":{"classes/CreateGroupDto.html":{}}}],["group.dto.ts:8",{"_index":710,"title":{},"body":{"classes/CreateGroupDto.html":{}}}],["group.entity",{"_index":898,"title":{},"body":{"controllers/GroupController.html":{},"modules/GroupModule.html":{},"injectables/GroupService.html":{}}}],["group.id",{"_index":962,"title":{},"body":{"injectables/GroupService.html":{}}}],["group.interface",{"_index":896,"title":{},"body":{"controllers/GroupController.html":{},"injectables/GroupService.html":{}}}],["group.name",{"_index":963,"title":{},"body":{"injectables/GroupService.html":{}}}],["group.role",{"_index":1381,"title":{},"body":{"classes/RoleEntity.html":{}}}],["group.service",{"_index":894,"title":{},"body":{"controllers/GroupController.html":{},"modules/GroupModule.html":{}}}],["group/group.entity",{"_index":1367,"title":{},"body":{"classes/RoleEntity.html":{}}}],["group/group.module",{"_index":66,"title":{},"body":{"modules/AppModule.html":{}}}],["groupcontroller",{"_index":875,"title":{"controllers/GroupController.html":{}},"body":{"controllers/GroupController.html":{},"modules/GroupModule.html":{},"coverage.html":{}}}],["groupdata",{"_index":882,"title":{"interfaces/GroupData.html":{}},"body":{"controllers/GroupController.html":{},"interfaces/GroupData.html":{},"interfaces/GroupRO.html":{},"coverage.html":{}}}],["groupentity",{"_index":897,"title":{"classes/GroupEntity.html":{}},"body":{"controllers/GroupController.html":{},"classes/GroupEntity.html":{},"modules/GroupModule.html":{},"injectables/GroupService.html":{},"classes/RoleEntity.html":{},"coverage.html":{}}}],["groupmodule",{"_index":41,"title":{"modules/GroupModule.html":{}},"body":{"modules/AppModule.html":{},"modules/GroupModule.html":{},"modules.html":{},"overview.html":{}}}],["grouprepository",{"_index":936,"title":{},"body":{"injectables/GroupService.html":{}}}],["groupro",{"_index":895,"title":{"interfaces/GroupRO.html":{}},"body":{"controllers/GroupController.html":{},"interfaces/GroupData.html":{},"interfaces/GroupRO.html":{},"injectables/GroupService.html":{},"coverage.html":{}}}],["groups",{"_index":885,"title":{},"body":{"controllers/GroupController.html":{},"classes/RoleEntity.html":{}}}],["groups'})@apiresponse({status",{"_index":884,"title":{},"body":{"controllers/GroupController.html":{}}}],["groupservice",{"_index":893,"title":{"injectables/GroupService.html":{}},"body":{"controllers/GroupController.html":{},"modules/GroupModule.html":{},"injectables/GroupService.html":{},"coverage.html":{},"overview.html":{}}}],["hashpassword",{"_index":1643,"title":{},"body":{"classes/UserEntity.html":{}}}],["header",{"_index":1341,"title":{},"body":{"controllers/RoleController.html":{}}}],["host",{"_index":1869,"title":{},"body":{"miscellaneous/variables.html":{}}}],["httpexception",{"_index":486,"title":{},"body":{"injectables/AuthMiddleware.html":{},"injectables/CorporationService.html":{},"controllers/ErrorlogController.html":{},"injectables/ErrorlogService.html":{},"controllers/GroupController.html":{},"injectables/GroupService.html":{},"controllers/ListController.html":{},"injectables/ListService.html":{},"controllers/MenuController.html":{},"injectables/MenuService.html":{},"injectables/ProfileService.html":{},"controllers/RoleController.html":{},"injectables/RoleService.html":{},"controllers/SiteController.html":{},"injectables/SiteService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{}}}],["httpexception('follower",{"_index":1300,"title":{},"body":{"injectables/ProfileService.html":{}}}],["httpexception('followeremail",{"_index":1306,"title":{},"body":{"injectables/ProfileService.html":{}}}],["httpexception('followerid",{"_index":1316,"title":{},"body":{"injectables/ProfileService.html":{}}}],["httpexception('not",{"_index":518,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["httpexception('user",{"_index":513,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["httpexception({errors",{"_index":644,"title":{},"body":{"injectables/CorporationService.html":{},"injectables/ErrorlogService.html":{},"injectables/GroupService.html":{},"injectables/ListService.html":{},"injectables/MenuService.html":{},"injectables/RoleService.html":{},"injectables/SiteService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["httpexception({message",{"_index":657,"title":{},"body":{"injectables/CorporationService.html":{},"injectables/ErrorlogService.html":{},"injectables/GroupService.html":{},"injectables/ListService.html":{},"injectables/MenuService.html":{},"injectables/RoleService.html":{},"injectables/SiteService.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{}}}],["httpstatus",{"_index":489,"title":{},"body":{"injectables/AuthMiddleware.html":{},"injectables/CorporationService.html":{},"injectables/ErrorlogService.html":{},"injectables/GroupService.html":{},"injectables/ListService.html":{},"injectables/MenuService.html":{},"injectables/ProfileService.html":{},"injectables/RoleService.html":{},"injectables/SiteService.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{}}}],["httpstatus.bad_request",{"_index":662,"title":{},"body":{"injectables/CorporationService.html":{},"injectables/ErrorlogService.html":{},"injectables/GroupService.html":{},"injectables/ListService.html":{},"injectables/MenuService.html":{},"injectables/ProfileService.html":{},"injectables/RoleService.html":{},"injectables/SiteService.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{}}}],["httpstatus.unauthorized",{"_index":515,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["id",{"_index":236,"title":{},"body":{"controllers/ArticleController.html":{},"classes/ArticleEntity.html":{},"injectables/ArticleService.html":{},"classes/Comment.html":{},"controllers/CorporationController.html":{},"classes/CorporationEntity.html":{},"injectables/CorporationService.html":{},"classes/CreateCorporationDto.html":{},"classes/CreateErrorLogDto.html":{},"classes/CreateGroupDto.html":{},"classes/CreateListDto.html":{},"classes/CreateListEntryDto.html":{},"classes/CreateMenuDto.html":{},"classes/CreateMenuEntryDto.html":{},"classes/CreateRoleAppDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSiteDto.html":{},"classes/ErrorLogEntity.html":{},"controllers/ErrorlogController.html":{},"injectables/ErrorlogService.html":{},"classes/FollowsEntity.html":{},"controllers/GroupController.html":{},"classes/GroupEntity.html":{},"injectables/GroupService.html":{},"controllers/ListController.html":{},"classes/ListEntity.html":{},"classes/ListEntryEntity.html":{},"injectables/ListService.html":{},"classes/MenuAppEntity.html":{},"controllers/MenuController.html":{},"classes/MenuEntryEntity.html":{},"injectables/MenuService.html":{},"injectables/ProfileService.html":{},"controllers/RoleController.html":{},"classes/RoleEntity.html":{},"classes/RoleMenuAppEntity.html":{},"injectables/RoleService.html":{},"controllers/SiteController.html":{},"classes/SiteEntity.html":{},"injectables/SiteService.html":{},"classes/TagEntity.html":{},"classes/UserEntity.html":{},"injectables/UserService.html":{}}}],["identifier",{"_index":1779,"title":{},"body":{"coverage.html":{}}}],["ids",{"_index":406,"title":{},"body":{"injectables/ArticleService.html":{}}}],["if(!_profile",{"_index":1292,"title":{},"body":{"injectables/ProfileService.html":{}}}],["image",{"_index":1256,"title":{},"body":{"interfaces/ProfileData.html":{},"interfaces/ProfileRO.html":{},"injectables/ProfileService.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"interfaces/UserData.html":{},"classes/UserEntity.html":{},"interfaces/UserRO.html":{},"injectables/UserService.html":{}}}],["implementation",{"_index":1217,"title":{},"body":{"classes/MyLogger.html":{}}}],["implements",{"_index":334,"title":{},"body":{"modules/ArticleModule.html":{},"injectables/AuthMiddleware.html":{},"modules/CorporationModule.html":{},"injectables/DatabaseConfig.html":{},"modules/ErrorlogModule.html":{},"modules/GroupModule.html":{},"modules/ListModule.html":{},"modules/MenuModule.html":{},"classes/MyLogger.html":{},"modules/ProfileModule.html":{},"modules/RoleModule.html":{},"modules/SiteModule.html":{},"modules/TagModule.html":{},"classes/ToIntegerPipe.html":{},"modules/UserModule.html":{},"injectables/ValidationPipe.html":{}}}],["import",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/ArticleController.html":{},"interfaces/ArticleData.html":{},"classes/ArticleEntity.html":{},"modules/ArticleModule.html":{},"interfaces/ArticleRO.html":{},"injectables/ArticleService.html":{},"interfaces/ArticlesRO.html":{},"injectables/AuthMiddleware.html":{},"classes/BaseController.html":{},"classes/Comment.html":{},"controllers/CommentController.html":{},"modules/CommentModule.html":{},"injectables/CommentService.html":{},"interfaces/CommentsRO.html":{},"controllers/CorporationController.html":{},"classes/CorporationEntity.html":{},"modules/CorporationModule.html":{},"injectables/CorporationService.html":{},"classes/CreateCorporationDto.html":{},"classes/CreateErrorLogDto.html":{},"classes/CreateGroupDto.html":{},"classes/CreateListDto.html":{},"classes/CreateListEntryDto.html":{},"classes/CreateMenuDto.html":{},"classes/CreateMenuEntryDto.html":{},"classes/CreateRoleAppDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSiteDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabaseConfig.html":{},"classes/ErrorLogEntity.html":{},"controllers/ErrorlogController.html":{},"modules/ErrorlogModule.html":{},"injectables/ErrorlogService.html":{},"classes/FollowsEntity.html":{},"controllers/GroupController.html":{},"classes/GroupEntity.html":{},"modules/GroupModule.html":{},"injectables/GroupService.html":{},"controllers/ListController.html":{},"interfaces/ListData.html":{},"classes/ListEntity.html":{},"interfaces/ListEntry.html":{},"classes/ListEntryEntity.html":{},"interfaces/ListEntryRO.html":{},"modules/ListModule.html":{},"interfaces/ListRO.html":{},"injectables/ListService.html":{},"classes/LoginUserDto.html":{},"interfaces/MenuAppData.html":{},"classes/MenuAppEntity.html":{},"interfaces/MenuAppEntry.html":{},"controllers/MenuController.html":{},"classes/MenuEntryEntity.html":{},"interfaces/MenuEntryRO.html":{},"modules/MenuModule.html":{},"interfaces/MenuRO.html":{},"injectables/MenuService.html":{},"classes/MyLogger.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"controllers/RoleController.html":{},"classes/RoleEntity.html":{},"classes/RoleMenuAppEntity.html":{},"classes/RoleMenuEntryEntity.html":{},"modules/RoleModule.html":{},"injectables/RoleService.html":{},"controllers/SiteController.html":{},"interfaces/SiteData.html":{},"classes/SiteEntity.html":{},"modules/SiteModule.html":{},"interfaces/SiteRO.html":{},"injectables/SiteService.html":{},"controllers/SqldirectController.html":{},"modules/SqldirectModule.html":{},"injectables/SqldirectService.html":{},"controllers/TagController.html":{},"classes/TagEntity.html":{},"modules/TagModule.html":{},"injectables/TagService.html":{},"classes/ToIntegerPipe.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"classes/UserEntity.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{},"controllers/ViewController.html":{},"modules/ViewModule.html":{},"injectables/ViewService.html":{}}}],["imports",{"_index":53,"title":{},"body":{"modules/AppModule.html":{},"modules/ArticleModule.html":{},"modules/CorporationModule.html":{},"modules/ErrorlogModule.html":{},"modules/GroupModule.html":{},"modules/ListModule.html":{},"modules/MenuModule.html":{},"modules/ProfileModule.html":{},"modules/RoleModule.html":{},"modules/SiteModule.html":{},"modules/TagModule.html":{},"modules/UserModule.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"controllers/ArticleController.html":{},"interfaces/ArticleData.html":{},"classes/ArticleEntity.html":{},"interfaces/ArticleRO.html":{},"injectables/ArticleService.html":{},"interfaces/ArticlesRO.html":{},"injectables/AuthMiddleware.html":{},"classes/BaseController.html":{},"classes/Comment.html":{},"interfaces/CommentsRO.html":{},"controllers/CorporationController.html":{},"interfaces/CorporationData.html":{},"classes/CorporationEntity.html":{},"interfaces/CorporationRO.html":{},"injectables/CorporationService.html":{},"classes/CreateArticleDto.html":{},"classes/CreateCommentDto.html":{},"classes/CreateCorporationDto.html":{},"classes/CreateErrorLogDto.html":{},"classes/CreateGroupDto.html":{},"classes/CreateListDto.html":{},"classes/CreateListEntryDto.html":{},"classes/CreateMenuDto.html":{},"classes/CreateMenuEntryDto.html":{},"classes/CreateRoleAppDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSiteDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabaseConfig.html":{},"interfaces/ErrorLogData.html":{},"classes/ErrorLogEntity.html":{},"interfaces/ErrorLogRO.html":{},"controllers/ErrorlogController.html":{},"injectables/ErrorlogService.html":{},"classes/FollowsEntity.html":{},"controllers/GroupController.html":{},"interfaces/GroupData.html":{},"classes/GroupEntity.html":{},"interfaces/GroupRO.html":{},"injectables/GroupService.html":{},"controllers/ListController.html":{},"interfaces/ListData.html":{},"classes/ListEntity.html":{},"interfaces/ListEntry.html":{},"classes/ListEntryEntity.html":{},"interfaces/ListEntryRO.html":{},"interfaces/ListRO.html":{},"injectables/ListService.html":{},"classes/LoginUserDto.html":{},"interfaces/MenuAppData.html":{},"classes/MenuAppEntity.html":{},"interfaces/MenuAppEntry.html":{},"controllers/MenuController.html":{},"classes/MenuEntryEntity.html":{},"interfaces/MenuEntryRO.html":{},"interfaces/MenuRO.html":{},"injectables/MenuService.html":{},"classes/MyLogger.html":{},"controllers/ProfileController.html":{},"interfaces/ProfileData.html":{},"interfaces/ProfileRO.html":{},"injectables/ProfileService.html":{},"controllers/RoleController.html":{},"interfaces/RoleData.html":{},"classes/RoleEntity.html":{},"classes/RoleMenuAppEntity.html":{},"classes/RoleMenuEntryEntity.html":{},"interfaces/RoleRO.html":{},"injectables/RoleService.html":{},"controllers/SiteController.html":{},"interfaces/SiteData.html":{},"classes/SiteEntity.html":{},"interfaces/SiteRO.html":{},"injectables/SiteService.html":{},"controllers/TagController.html":{},"classes/TagEntity.html":{},"injectables/TagService.html":{},"classes/ToIntegerPipe.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"interfaces/UserData.html":{},"classes/UserEntity.html":{},"interfaces/UserRO.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/ArticleController.html":{},"interfaces/ArticleData.html":{},"classes/ArticleEntity.html":{},"modules/ArticleModule.html":{},"interfaces/ArticleRO.html":{},"injectables/ArticleService.html":{},"interfaces/ArticlesRO.html":{},"injectables/AuthMiddleware.html":{},"classes/BaseController.html":{},"classes/Comment.html":{},"controllers/CommentController.html":{},"modules/CommentModule.html":{},"injectables/CommentService.html":{},"interfaces/CommentsRO.html":{},"controllers/CorporationController.html":{},"interfaces/CorporationData.html":{},"classes/CorporationEntity.html":{},"modules/CorporationModule.html":{},"interfaces/CorporationRO.html":{},"injectables/CorporationService.html":{},"classes/CreateArticleDto.html":{},"classes/CreateCommentDto.html":{},"classes/CreateCorporationDto.html":{},"classes/CreateErrorLogDto.html":{},"classes/CreateGroupDto.html":{},"classes/CreateListDto.html":{},"classes/CreateListEntryDto.html":{},"classes/CreateMenuDto.html":{},"classes/CreateMenuEntryDto.html":{},"classes/CreateRoleAppDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSiteDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabaseConfig.html":{},"interfaces/ErrorLogData.html":{},"classes/ErrorLogEntity.html":{},"interfaces/ErrorLogRO.html":{},"controllers/ErrorlogController.html":{},"modules/ErrorlogModule.html":{},"injectables/ErrorlogService.html":{},"classes/FollowsEntity.html":{},"controllers/GroupController.html":{},"interfaces/GroupData.html":{},"classes/GroupEntity.html":{},"modules/GroupModule.html":{},"interfaces/GroupRO.html":{},"injectables/GroupService.html":{},"controllers/ListController.html":{},"interfaces/ListData.html":{},"classes/ListEntity.html":{},"interfaces/ListEntry.html":{},"classes/ListEntryEntity.html":{},"interfaces/ListEntryRO.html":{},"modules/ListModule.html":{},"interfaces/ListRO.html":{},"injectables/ListService.html":{},"classes/LoginUserDto.html":{},"interfaces/MenuAppData.html":{},"classes/MenuAppEntity.html":{},"interfaces/MenuAppEntry.html":{},"controllers/MenuController.html":{},"classes/MenuEntryEntity.html":{},"interfaces/MenuEntryRO.html":{},"modules/MenuModule.html":{},"interfaces/MenuRO.html":{},"injectables/MenuService.html":{},"classes/MyLogger.html":{},"controllers/ProfileController.html":{},"interfaces/ProfileData.html":{},"modules/ProfileModule.html":{},"interfaces/ProfileRO.html":{},"injectables/ProfileService.html":{},"controllers/RoleController.html":{},"interfaces/RoleData.html":{},"classes/RoleEntity.html":{},"classes/RoleMenuAppEntity.html":{},"classes/RoleMenuEntryEntity.html":{},"modules/RoleModule.html":{},"interfaces/RoleRO.html":{},"injectables/RoleService.html":{},"controllers/SiteController.html":{},"interfaces/SiteData.html":{},"classes/SiteEntity.html":{},"modules/SiteModule.html":{},"interfaces/SiteRO.html":{},"injectables/SiteService.html":{},"controllers/SqldirectController.html":{},"modules/SqldirectModule.html":{},"injectables/SqldirectService.html":{},"controllers/TagController.html":{},"classes/TagEntity.html":{},"modules/TagModule.html":{},"injectables/TagService.html":{},"classes/ToIntegerPipe.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"interfaces/UserData.html":{},"classes/UserEntity.html":{},"modules/UserModule.html":{},"interfaces/UserRO.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{},"controllers/ViewController.html":{},"modules/ViewModule.html":{},"injectables/ViewService.html":{}}}],["injectable",{"_index":348,"title":{"injectables/ArticleService.html":{},"injectables/AuthMiddleware.html":{},"injectables/CommentService.html":{},"injectables/CorporationService.html":{},"injectables/DatabaseConfig.html":{},"injectables/ErrorlogService.html":{},"injectables/GroupService.html":{},"injectables/ListService.html":{},"injectables/MenuService.html":{},"injectables/ProfileService.html":{},"injectables/RoleService.html":{},"injectables/SiteService.html":{},"injectables/SqldirectService.html":{},"injectables/TagService.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{},"injectables/ViewService.html":{}},"body":{"injectables/ArticleService.html":{},"injectables/AuthMiddleware.html":{},"injectables/CommentService.html":{},"injectables/CorporationService.html":{},"injectables/DatabaseConfig.html":{},"injectables/ErrorlogService.html":{},"injectables/GroupService.html":{},"injectables/ListService.html":{},"injectables/MenuService.html":{},"injectables/ProfileService.html":{},"injectables/RoleService.html":{},"injectables/SiteService.html":{},"injectables/SqldirectService.html":{},"injectables/TagService.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{},"injectables/ViewService.html":{},"coverage.html":{}}}],["injectables",{"_index":349,"title":{},"body":{"injectables/ArticleService.html":{},"injectables/AuthMiddleware.html":{},"injectables/CommentService.html":{},"injectables/CorporationService.html":{},"injectables/DatabaseConfig.html":{},"injectables/ErrorlogService.html":{},"injectables/GroupService.html":{},"injectables/ListService.html":{},"injectables/MenuService.html":{},"injectables/ProfileService.html":{},"injectables/RoleService.html":{},"injectables/SiteService.html":{},"injectables/SqldirectService.html":{},"injectables/TagService.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{},"injectables/ViewService.html":{},"overview.html":{}}}],["injectrepository",{"_index":383,"title":{},"body":{"injectables/ArticleService.html":{},"injectables/CorporationService.html":{},"injectables/ErrorlogService.html":{},"injectables/GroupService.html":{},"injectables/ListService.html":{},"injectables/MenuService.html":{},"injectables/ProfileService.html":{},"injectables/RoleService.html":{},"injectables/SiteService.html":{},"injectables/TagService.html":{},"injectables/UserService.html":{}}}],["injectrepository(articleentity",{"_index":387,"title":{},"body":{"injectables/ArticleService.html":{}}}],["injectrepository(comment",{"_index":389,"title":{},"body":{"injectables/ArticleService.html":{}}}],["injectrepository(corporationentity",{"_index":638,"title":{},"body":{"injectables/CorporationService.html":{}}}],["injectrepository(errorlogentity",{"_index":846,"title":{},"body":{"injectables/ErrorlogService.html":{}}}],["injectrepository(followsentity",{"_index":391,"title":{},"body":{"injectables/ArticleService.html":{},"injectables/ProfileService.html":{}}}],["injectrepository(groupentity",{"_index":945,"title":{},"body":{"injectables/GroupService.html":{}}}],["injectrepository(listentity",{"_index":1046,"title":{},"body":{"injectables/ListService.html":{}}}],["injectrepository(menuappentity",{"_index":1178,"title":{},"body":{"injectables/MenuService.html":{}}}],["injectrepository(roleentity",{"_index":1433,"title":{},"body":{"injectables/RoleService.html":{}}}],["injectrepository(siteentity",{"_index":1516,"title":{},"body":{"injectables/SiteService.html":{}}}],["injectrepository(tagentity",{"_index":1578,"title":{},"body":{"injectables/TagService.html":{}}}],["injectrepository(userentity",{"_index":390,"title":{},"body":{"injectables/ArticleService.html":{},"injectables/ProfileService.html":{},"injectables/UserService.html":{}}}],["input",{"_index":658,"title":{},"body":{"injectables/CorporationService.html":{},"injectables/ErrorlogService.html":{},"injectables/GroupService.html":{},"injectables/ListService.html":{},"injectables/MenuService.html":{},"injectables/RoleService.html":{},"injectables/SiteService.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{}}}],["integer.pipe.ts",{"_index":1582,"title":{},"body":{"classes/ToIntegerPipe.html":{},"coverage.html":{}}}],["integer.pipe.ts:6",{"_index":1588,"title":{},"body":{"classes/ToIntegerPipe.html":{}}}],["interface",{"_index":247,"title":{"interfaces/ArticleData.html":{},"interfaces/ArticleRO.html":{},"interfaces/ArticlesRO.html":{},"interfaces/CommentsRO.html":{},"interfaces/CorporationData.html":{},"interfaces/CorporationRO.html":{},"interfaces/ErrorLogData.html":{},"interfaces/ErrorLogRO.html":{},"interfaces/GroupData.html":{},"interfaces/GroupRO.html":{},"interfaces/ListData.html":{},"interfaces/ListEntry.html":{},"interfaces/ListEntryRO.html":{},"interfaces/ListRO.html":{},"interfaces/MenuAppData.html":{},"interfaces/MenuAppEntry.html":{},"interfaces/MenuEntryRO.html":{},"interfaces/MenuRO.html":{},"interfaces/ProfileData.html":{},"interfaces/ProfileRO.html":{},"interfaces/RoleData.html":{},"interfaces/RoleRO.html":{},"interfaces/SiteData.html":{},"interfaces/SiteRO.html":{},"interfaces/UserData.html":{},"interfaces/UserRO.html":{}},"body":{"interfaces/ArticleData.html":{},"interfaces/ArticleRO.html":{},"interfaces/ArticlesRO.html":{},"interfaces/CommentsRO.html":{},"interfaces/CorporationData.html":{},"interfaces/CorporationRO.html":{},"interfaces/ErrorLogData.html":{},"interfaces/ErrorLogRO.html":{},"interfaces/GroupData.html":{},"interfaces/GroupRO.html":{},"interfaces/ListData.html":{},"interfaces/ListEntry.html":{},"interfaces/ListEntryRO.html":{},"interfaces/ListRO.html":{},"interfaces/MenuAppData.html":{},"interfaces/MenuAppEntry.html":{},"interfaces/MenuEntryRO.html":{},"interfaces/MenuRO.html":{},"interfaces/ProfileData.html":{},"interfaces/ProfileRO.html":{},"interfaces/RoleData.html":{},"interfaces/RoleRO.html":{},"interfaces/SiteData.html":{},"interfaces/SiteRO.html":{},"interfaces/UserData.html":{},"interfaces/UserRO.html":{},"coverage.html":{}}}],["interfaces",{"_index":248,"title":{},"body":{"interfaces/ArticleData.html":{},"interfaces/ArticleRO.html":{},"interfaces/ArticlesRO.html":{},"interfaces/CommentsRO.html":{},"interfaces/CorporationData.html":{},"interfaces/CorporationRO.html":{},"interfaces/ErrorLogData.html":{},"interfaces/ErrorLogRO.html":{},"interfaces/GroupData.html":{},"interfaces/GroupRO.html":{},"interfaces/ListData.html":{},"interfaces/ListEntry.html":{},"interfaces/ListEntryRO.html":{},"interfaces/ListRO.html":{},"interfaces/MenuAppData.html":{},"interfaces/MenuAppEntry.html":{},"interfaces/MenuEntryRO.html":{},"interfaces/MenuRO.html":{},"interfaces/ProfileData.html":{},"interfaces/ProfileRO.html":{},"interfaces/RoleData.html":{},"interfaces/RoleRO.html":{},"interfaces/SiteData.html":{},"interfaces/SiteRO.html":{},"interfaces/UserData.html":{},"interfaces/UserRO.html":{},"overview.html":{}}}],["isboolean",{"_index":751,"title":{},"body":{"classes/CreateRoleAppDto.html":{}}}],["isemail",{"_index":1664,"title":{},"body":{"classes/UserEntity.html":{}}}],["isglobal",{"_index":80,"title":{},"body":{"modules/AppModule.html":{}}}],["isnan(val",{"_index":1592,"title":{},"body":{"classes/ToIntegerPipe.html":{}}}],["isnewfavorite",{"_index":442,"title":{},"body":{"injectables/ArticleService.html":{}}}],["isnotempty",{"_index":690,"title":{},"body":{"classes/CreateCorporationDto.html":{},"classes/CreateErrorLogDto.html":{},"classes/CreateGroupDto.html":{},"classes/CreateListDto.html":{},"classes/CreateListEntryDto.html":{},"classes/CreateMenuDto.html":{},"classes/CreateMenuEntryDto.html":{},"classes/CreateRoleAppDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSiteDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginUserDto.html":{}}}],["isnotempty()@apiproperty({type",{"_index":688,"title":{},"body":{"classes/CreateCorporationDto.html":{},"classes/CreateErrorLogDto.html":{},"classes/CreateListDto.html":{},"classes/CreateListEntryDto.html":{},"classes/CreateMenuDto.html":{},"classes/CreateMenuEntryDto.html":{},"classes/CreateRoleAppDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSiteDto.html":{},"classes/LoginUserDto.html":{}}}],["isnumber",{"_index":704,"title":{},"body":{"classes/CreateErrorLogDto.html":{}}}],["isnumber()@apiproperty({type",{"_index":699,"title":{},"body":{"classes/CreateErrorLogDto.html":{}}}],["isnumberoptions",{"_index":705,"title":{},"body":{"classes/CreateErrorLogDto.html":{}}}],["joincolumn",{"_index":304,"title":{},"body":{"classes/ArticleEntity.html":{},"classes/CorporationEntity.html":{},"classes/ListEntity.html":{},"classes/MenuAppEntity.html":{},"classes/MenuEntryEntity.html":{},"classes/RoleEntity.html":{},"classes/RoleMenuAppEntity.html":{},"classes/RoleMenuEntryEntity.html":{},"classes/SiteEntity.html":{}}}],["jointable",{"_index":1662,"title":{},"body":{"classes/UserEntity.html":{}}}],["js",{"_index":1820,"title":{},"body":{"dependencies.html":{}}}],["jsonwebtoken",{"_index":494,"title":{},"body":{"injectables/AuthMiddleware.html":{},"classes/BaseController.html":{},"dependencies.html":{}}}],["jwt",{"_index":493,"title":{},"body":{"injectables/AuthMiddleware.html":{},"classes/BaseController.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["jwt.sign",{"_index":1731,"title":{},"body":{"injectables/UserService.html":{}}}],["jwt.verify(token",{"_index":508,"title":{},"body":{"injectables/AuthMiddleware.html":{},"classes/BaseController.html":{}}}],["jwt.verify(token[1",{"_index":1889,"title":{},"body":{"miscellaneous/variables.html":{}}}],["jwtsecret",{"_index":1867,"title":{},"body":{"miscellaneous/variables.html":{}}}],["labware",{"_index":1380,"title":{},"body":{"classes/RoleEntity.html":{}}}],["leftjoinandselect('article.author",{"_index":395,"title":{},"body":{"injectables/ArticleService.html":{}}}],["legend",{"_index":31,"title":{},"body":{"modules/AppModule.html":{},"modules/ArticleModule.html":{},"modules/CorporationModule.html":{},"modules/ErrorlogModule.html":{},"modules/GroupModule.html":{},"modules/ListModule.html":{},"modules/MenuModule.html":{},"modules/ProfileModule.html":{},"modules/RoleModule.html":{},"modules/SiteModule.html":{},"modules/SqldirectModule.html":{},"modules/TagModule.html":{},"modules/UserModule.html":{},"modules/ViewModule.html":{},"overview.html":{}}}],["length",{"_index":291,"title":{},"body":{"classes/ArticleEntity.html":{},"classes/CorporationEntity.html":{},"classes/ErrorLogEntity.html":{},"classes/GroupEntity.html":{},"classes/ListEntity.html":{},"classes/ListEntryEntity.html":{},"classes/MenuAppEntity.html":{},"classes/MenuEntryEntity.html":{},"classes/RoleEntity.html":{},"classes/SiteEntity.html":{},"classes/TagEntity.html":{}}}],["limit",{"_index":412,"title":{},"body":{"injectables/ArticleService.html":{}}}],["list",{"_index":970,"title":{},"body":{"controllers/ListController.html":{},"interfaces/ListData.html":{},"interfaces/ListEntry.html":{},"classes/ListEntryEntity.html":{},"interfaces/ListEntryRO.html":{},"interfaces/ListRO.html":{},"injectables/ListService.html":{}}}],["list'})@apiresponse({status",{"_index":969,"title":{},"body":{"controllers/ListController.html":{}}}],["list.controller",{"_index":1031,"title":{},"body":{"modules/ListModule.html":{}}}],["list.description",{"_index":1065,"title":{},"body":{"injectables/ListService.html":{}}}],["list.dto.ts",{"_index":714,"title":{},"body":{"classes/CreateListDto.html":{},"coverage.html":{}}}],["list.dto.ts:11",{"_index":717,"title":{},"body":{"classes/CreateListDto.html":{}}}],["list.dto.ts:15",{"_index":715,"title":{},"body":{"classes/CreateListDto.html":{}}}],["list.dto.ts:7",{"_index":716,"title":{},"body":{"classes/CreateListDto.html":{}}}],["list.entity",{"_index":987,"title":{},"body":{"controllers/ListController.html":{},"interfaces/ListData.html":{},"interfaces/ListEntry.html":{},"classes/ListEntryEntity.html":{},"interfaces/ListEntryRO.html":{},"modules/ListModule.html":{},"interfaces/ListRO.html":{},"injectables/ListService.html":{}}}],["list.id",{"_index":1063,"title":{},"body":{"injectables/ListService.html":{}}}],["list.interface",{"_index":984,"title":{},"body":{"controllers/ListController.html":{},"injectables/ListService.html":{}}}],["list.listentries",{"_index":1026,"title":{},"body":{"classes/ListEntryEntity.html":{},"injectables/ListService.html":{}}}],["list.name",{"_index":1064,"title":{},"body":{"injectables/ListService.html":{}}}],["list.service",{"_index":982,"title":{},"body":{"controllers/ListController.html":{},"modules/ListModule.html":{}}}],["list/list.module",{"_index":68,"title":{},"body":{"modules/AppModule.html":{}}}],["listcontroller",{"_index":965,"title":{"controllers/ListController.html":{}},"body":{"controllers/ListController.html":{},"modules/ListModule.html":{},"coverage.html":{}}}],["listdata",{"_index":973,"title":{"interfaces/ListData.html":{}},"body":{"controllers/ListController.html":{},"interfaces/ListData.html":{},"interfaces/ListEntry.html":{},"interfaces/ListEntryRO.html":{},"interfaces/ListRO.html":{},"coverage.html":{}}}],["listentity",{"_index":986,"title":{"classes/ListEntity.html":{}},"body":{"controllers/ListController.html":{},"interfaces/ListData.html":{},"classes/ListEntity.html":{},"interfaces/ListEntry.html":{},"classes/ListEntryEntity.html":{},"interfaces/ListEntryRO.html":{},"modules/ListModule.html":{},"interfaces/ListRO.html":{},"injectables/ListService.html":{},"coverage.html":{}}}],["listentries",{"_index":1002,"title":{},"body":{"interfaces/ListData.html":{},"classes/ListEntity.html":{},"interfaces/ListEntry.html":{},"interfaces/ListEntryRO.html":{},"interfaces/ListRO.html":{},"injectables/ListService.html":{}}}],["listentry",{"_index":1001,"title":{"interfaces/ListEntry.html":{}},"body":{"interfaces/ListData.html":{},"classes/ListEntity.html":{},"interfaces/ListEntry.html":{},"interfaces/ListEntryRO.html":{},"interfaces/ListRO.html":{},"coverage.html":{}}}],["listentry.dto.ts",{"_index":719,"title":{},"body":{"classes/CreateListEntryDto.html":{},"coverage.html":{}}}],["listentry.dto.ts:11",{"_index":724,"title":{},"body":{"classes/CreateListEntryDto.html":{}}}],["listentry.dto.ts:15",{"_index":722,"title":{},"body":{"classes/CreateListEntryDto.html":{}}}],["listentry.dto.ts:19",{"_index":725,"title":{},"body":{"classes/CreateListEntryDto.html":{}}}],["listentry.dto.ts:7",{"_index":723,"title":{},"body":{"classes/CreateListEntryDto.html":{}}}],["listentry.entity",{"_index":1016,"title":{},"body":{"classes/ListEntity.html":{}}}],["listentry.list",{"_index":1018,"title":{},"body":{"classes/ListEntity.html":{}}}],["listentryentity",{"_index":1009,"title":{"classes/ListEntryEntity.html":{}},"body":{"classes/ListEntity.html":{},"classes/ListEntryEntity.html":{},"coverage.html":{}}}],["listentryro",{"_index":985,"title":{"interfaces/ListEntryRO.html":{}},"body":{"controllers/ListController.html":{},"interfaces/ListData.html":{},"interfaces/ListEntry.html":{},"interfaces/ListEntryRO.html":{},"interfaces/ListRO.html":{},"injectables/ListService.html":{},"coverage.html":{}}}],["listmodule",{"_index":42,"title":{"modules/ListModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ListModule.html":{},"modules.html":{},"overview.html":{}}}],["listrepository",{"_index":1037,"title":{},"body":{"injectables/ListService.html":{}}}],["listro",{"_index":983,"title":{"interfaces/ListRO.html":{}},"body":{"controllers/ListController.html":{},"interfaces/ListData.html":{},"interfaces/ListEntry.html":{},"interfaces/ListEntryRO.html":{},"interfaces/ListRO.html":{},"injectables/ListService.html":{},"coverage.html":{}}}],["lists",{"_index":967,"title":{},"body":{"controllers/ListController.html":{}}}],["lists'})@apiresponse({status",{"_index":976,"title":{},"body":{"controllers/ListController.html":{}}}],["listservice",{"_index":981,"title":{"injectables/ListService.html":{}},"body":{"controllers/ListController.html":{},"modules/ListModule.html":{},"injectables/ListService.html":{},"coverage.html":{},"overview.html":{}}}],["load",{"_index":82,"title":{},"body":{"modules/AppModule.html":{}}}],["log",{"_index":1202,"title":{},"body":{"classes/MyLogger.html":{}}}],["log(message",{"_index":1211,"title":{},"body":{"classes/MyLogger.html":{}}}],["logged",{"_index":1613,"title":{},"body":{"controllers/UserController.html":{}}}],["loggerservice",{"_index":1199,"title":{},"body":{"classes/MyLogger.html":{}}}],["logging",{"_index":1873,"title":{},"body":{"miscellaneous/variables.html":{}}}],["login",{"_index":1600,"title":{},"body":{"controllers/UserController.html":{}}}],["login(@body('user",{"_index":1630,"title":{},"body":{"controllers/UserController.html":{}}}],["login(loginuserdto",{"_index":1612,"title":{},"body":{"controllers/UserController.html":{}}}],["loginuserdto",{"_index":1066,"title":{"classes/LoginUserDto.html":{}},"body":{"classes/LoginUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["loginuserdto})@usepipes(new",{"_index":1614,"title":{},"body":{"controllers/UserController.html":{}}}],["lower",{"_index":469,"title":{},"body":{"injectables/ArticleService.html":{}}}],["manytomany",{"_index":1663,"title":{},"body":{"classes/UserEntity.html":{}}}],["manytomany(type",{"_index":1673,"title":{},"body":{"classes/UserEntity.html":{}}}],["manytomany(undefined)@jointable",{"_index":1651,"title":{},"body":{"classes/UserEntity.html":{}}}],["manytoone",{"_index":302,"title":{},"body":{"classes/ArticleEntity.html":{},"classes/Comment.html":{},"classes/CorporationEntity.html":{},"classes/GroupEntity.html":{},"classes/ListEntryEntity.html":{},"classes/MenuAppEntity.html":{},"classes/MenuEntryEntity.html":{},"classes/RoleEntity.html":{},"classes/RoleMenuAppEntity.html":{},"classes/RoleMenuEntryEntity.html":{},"classes/SiteEntity.html":{}}}],["manytoone(type",{"_index":311,"title":{},"body":{"classes/ArticleEntity.html":{},"classes/Comment.html":{},"classes/GroupEntity.html":{},"classes/ListEntryEntity.html":{},"classes/MenuEntryEntity.html":{},"classes/RoleEntity.html":{},"classes/RoleMenuAppEntity.html":{},"classes/RoleMenuEntryEntity.html":{},"classes/SiteEntity.html":{}}}],["manytoone(undefined",{"_index":271,"title":{},"body":{"classes/ArticleEntity.html":{},"classes/Comment.html":{},"classes/GroupEntity.html":{},"classes/ListEntryEntity.html":{},"classes/MenuEntryEntity.html":{},"classes/RoleEntity.html":{},"classes/RoleMenuAppEntity.html":{},"classes/RoleMenuEntryEntity.html":{},"classes/SiteEntity.html":{}}}],["matching",{"_index":25,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/ArticleController.html":{},"interfaces/ArticleData.html":{},"classes/ArticleEntity.html":{},"modules/ArticleModule.html":{},"interfaces/ArticleRO.html":{},"injectables/ArticleService.html":{},"interfaces/ArticlesRO.html":{},"injectables/AuthMiddleware.html":{},"classes/BaseController.html":{},"classes/Comment.html":{},"controllers/CommentController.html":{},"modules/CommentModule.html":{},"injectables/CommentService.html":{},"interfaces/CommentsRO.html":{},"controllers/CorporationController.html":{},"interfaces/CorporationData.html":{},"classes/CorporationEntity.html":{},"modules/CorporationModule.html":{},"interfaces/CorporationRO.html":{},"injectables/CorporationService.html":{},"classes/CreateArticleDto.html":{},"classes/CreateCommentDto.html":{},"classes/CreateCorporationDto.html":{},"classes/CreateErrorLogDto.html":{},"classes/CreateGroupDto.html":{},"classes/CreateListDto.html":{},"classes/CreateListEntryDto.html":{},"classes/CreateMenuDto.html":{},"classes/CreateMenuEntryDto.html":{},"classes/CreateRoleAppDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSiteDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabaseConfig.html":{},"interfaces/ErrorLogData.html":{},"classes/ErrorLogEntity.html":{},"interfaces/ErrorLogRO.html":{},"controllers/ErrorlogController.html":{},"modules/ErrorlogModule.html":{},"injectables/ErrorlogService.html":{},"classes/FollowsEntity.html":{},"controllers/GroupController.html":{},"interfaces/GroupData.html":{},"classes/GroupEntity.html":{},"modules/GroupModule.html":{},"interfaces/GroupRO.html":{},"injectables/GroupService.html":{},"controllers/ListController.html":{},"interfaces/ListData.html":{},"classes/ListEntity.html":{},"interfaces/ListEntry.html":{},"classes/ListEntryEntity.html":{},"interfaces/ListEntryRO.html":{},"modules/ListModule.html":{},"interfaces/ListRO.html":{},"injectables/ListService.html":{},"classes/LoginUserDto.html":{},"interfaces/MenuAppData.html":{},"classes/MenuAppEntity.html":{},"interfaces/MenuAppEntry.html":{},"controllers/MenuController.html":{},"classes/MenuEntryEntity.html":{},"interfaces/MenuEntryRO.html":{},"modules/MenuModule.html":{},"interfaces/MenuRO.html":{},"injectables/MenuService.html":{},"classes/MyLogger.html":{},"controllers/ProfileController.html":{},"interfaces/ProfileData.html":{},"modules/ProfileModule.html":{},"interfaces/ProfileRO.html":{},"injectables/ProfileService.html":{},"controllers/RoleController.html":{},"interfaces/RoleData.html":{},"classes/RoleEntity.html":{},"classes/RoleMenuAppEntity.html":{},"classes/RoleMenuEntryEntity.html":{},"modules/RoleModule.html":{},"interfaces/RoleRO.html":{},"injectables/RoleService.html":{},"controllers/SiteController.html":{},"interfaces/SiteData.html":{},"classes/SiteEntity.html":{},"modules/SiteModule.html":{},"interfaces/SiteRO.html":{},"injectables/SiteService.html":{},"controllers/SqldirectController.html":{},"modules/SqldirectModule.html":{},"injectables/SqldirectService.html":{},"controllers/TagController.html":{},"classes/TagEntity.html":{},"modules/TagModule.html":{},"injectables/TagService.html":{},"classes/ToIntegerPipe.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"interfaces/UserData.html":{},"classes/UserEntity.html":{},"modules/UserModule.html":{},"interfaces/UserRO.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{},"controllers/ViewController.html":{},"modules/ViewModule.html":{},"injectables/ViewService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["math.pow(36",{"_index":471,"title":{},"body":{"injectables/ArticleService.html":{}}}],["math.random",{"_index":470,"title":{},"body":{"injectables/ArticleService.html":{}}}],["menu",{"_index":1077,"title":{},"body":{"interfaces/MenuAppData.html":{},"classes/MenuAppEntity.html":{},"interfaces/MenuAppEntry.html":{},"controllers/MenuController.html":{},"interfaces/MenuEntryRO.html":{},"interfaces/MenuRO.html":{},"injectables/MenuService.html":{},"classes/RoleEntity.html":{}}}],["menu'})@apiresponse({status",{"_index":1104,"title":{},"body":{"controllers/MenuController.html":{}}}],["menu.abbreviation",{"_index":1196,"title":{},"body":{"injectables/MenuService.html":{}}}],["menu.controller",{"_index":1163,"title":{},"body":{"modules/MenuModule.html":{}}}],["menu.description",{"_index":1195,"title":{},"body":{"injectables/MenuService.html":{}}}],["menu.dto.ts",{"_index":728,"title":{},"body":{"classes/CreateMenuDto.html":{},"coverage.html":{}}}],["menu.dto.ts:11",{"_index":733,"title":{},"body":{"classes/CreateMenuDto.html":{}}}],["menu.dto.ts:15",{"_index":731,"title":{},"body":{"classes/CreateMenuDto.html":{}}}],["menu.dto.ts:19",{"_index":730,"title":{},"body":{"classes/CreateMenuDto.html":{}}}],["menu.dto.ts:7",{"_index":732,"title":{},"body":{"classes/CreateMenuDto.html":{}}}],["menu.id",{"_index":1193,"title":{},"body":{"injectables/MenuService.html":{}}}],["menu.interface",{"_index":1118,"title":{},"body":{"controllers/MenuController.html":{},"injectables/MenuService.html":{}}}],["menu.menuapp",{"_index":1097,"title":{},"body":{"classes/MenuAppEntity.html":{}}}],["menu.name",{"_index":1194,"title":{},"body":{"injectables/MenuService.html":{}}}],["menu.service",{"_index":1117,"title":{},"body":{"controllers/MenuController.html":{},"modules/MenuModule.html":{}}}],["menu/menu.module",{"_index":67,"title":{},"body":{"modules/AppModule.html":{}}}],["menu/menuapp.entity",{"_index":1394,"title":{},"body":{"classes/RoleMenuAppEntity.html":{}}}],["menu/menuentry.entity",{"_index":1410,"title":{},"body":{"classes/RoleMenuEntryEntity.html":{}}}],["menuapp",{"_index":1134,"title":{},"body":{"classes/MenuEntryEntity.html":{},"classes/RoleMenuAppEntity.html":{}}}],["menuapp.entity",{"_index":1072,"title":{},"body":{"interfaces/MenuAppData.html":{},"interfaces/MenuAppEntry.html":{},"controllers/MenuController.html":{},"classes/MenuEntryEntity.html":{},"interfaces/MenuEntryRO.html":{},"modules/MenuModule.html":{},"interfaces/MenuRO.html":{},"injectables/MenuService.html":{}}}],["menuapp.menuentries",{"_index":1156,"title":{},"body":{"classes/MenuEntryEntity.html":{}}}],["menuappdata",{"_index":1069,"title":{"interfaces/MenuAppData.html":{}},"body":{"interfaces/MenuAppData.html":{},"interfaces/MenuAppEntry.html":{},"interfaces/MenuEntryRO.html":{},"interfaces/MenuRO.html":{},"coverage.html":{}}}],["menuappentity",{"_index":1071,"title":{"classes/MenuAppEntity.html":{}},"body":{"interfaces/MenuAppData.html":{},"classes/MenuAppEntity.html":{},"interfaces/MenuAppEntry.html":{},"controllers/MenuController.html":{},"classes/MenuEntryEntity.html":{},"interfaces/MenuEntryRO.html":{},"modules/MenuModule.html":{},"interfaces/MenuRO.html":{},"injectables/MenuService.html":{},"classes/RoleMenuAppEntity.html":{},"coverage.html":{}}}],["menuappentry",{"_index":1075,"title":{"interfaces/MenuAppEntry.html":{}},"body":{"interfaces/MenuAppData.html":{},"interfaces/MenuAppEntry.html":{},"interfaces/MenuEntryRO.html":{},"interfaces/MenuRO.html":{},"coverage.html":{}}}],["menuappid",{"_index":1387,"title":{},"body":{"classes/RoleMenuAppEntity.html":{}}}],["menucontroller",{"_index":1099,"title":{"controllers/MenuController.html":{}},"body":{"controllers/MenuController.html":{},"modules/MenuModule.html":{},"coverage.html":{}}}],["menudata",{"_index":1107,"title":{},"body":{"controllers/MenuController.html":{}}}],["menuentries",{"_index":1079,"title":{},"body":{"interfaces/MenuAppData.html":{},"classes/MenuAppEntity.html":{},"interfaces/MenuAppEntry.html":{},"interfaces/MenuEntryRO.html":{},"interfaces/MenuRO.html":{}}}],["menuentry",{"_index":1400,"title":{},"body":{"classes/RoleMenuEntryEntity.html":{}}}],["menuentry.dto.ts",{"_index":735,"title":{},"body":{"classes/CreateMenuEntryDto.html":{},"coverage.html":{}}}],["menuentry.dto.ts:11",{"_index":740,"title":{},"body":{"classes/CreateMenuEntryDto.html":{}}}],["menuentry.dto.ts:15",{"_index":741,"title":{},"body":{"classes/CreateMenuEntryDto.html":{}}}],["menuentry.dto.ts:19",{"_index":743,"title":{},"body":{"classes/CreateMenuEntryDto.html":{}}}],["menuentry.dto.ts:7",{"_index":742,"title":{},"body":{"classes/CreateMenuEntryDto.html":{}}}],["menuentry.entity",{"_index":1074,"title":{},"body":{"interfaces/MenuAppData.html":{},"classes/MenuAppEntity.html":{},"interfaces/MenuAppEntry.html":{},"controllers/MenuController.html":{},"interfaces/MenuEntryRO.html":{},"interfaces/MenuRO.html":{}}}],["menuentry.menuentryconnection",{"_index":1413,"title":{},"body":{"classes/RoleMenuEntryEntity.html":{}}}],["menuentryconnection",{"_index":1135,"title":{},"body":{"classes/MenuEntryEntity.html":{}}}],["menuentryentity",{"_index":1073,"title":{"classes/MenuEntryEntity.html":{}},"body":{"interfaces/MenuAppData.html":{},"classes/MenuAppEntity.html":{},"interfaces/MenuAppEntry.html":{},"controllers/MenuController.html":{},"classes/MenuEntryEntity.html":{},"interfaces/MenuEntryRO.html":{},"interfaces/MenuRO.html":{},"classes/RoleMenuEntryEntity.html":{},"coverage.html":{}}}],["menuentryid",{"_index":1401,"title":{},"body":{"classes/RoleMenuEntryEntity.html":{}}}],["menuentryro",{"_index":1078,"title":{"interfaces/MenuEntryRO.html":{}},"body":{"interfaces/MenuAppData.html":{},"interfaces/MenuAppEntry.html":{},"controllers/MenuController.html":{},"interfaces/MenuEntryRO.html":{},"interfaces/MenuRO.html":{},"coverage.html":{}}}],["menumodule",{"_index":43,"title":{"modules/MenuModule.html":{}},"body":{"modules/AppModule.html":{},"modules/MenuModule.html":{},"modules.html":{},"overview.html":{}}}],["menurepository",{"_index":1169,"title":{},"body":{"injectables/MenuService.html":{}}}],["menuro",{"_index":1076,"title":{"interfaces/MenuRO.html":{}},"body":{"interfaces/MenuAppData.html":{},"interfaces/MenuAppEntry.html":{},"controllers/MenuController.html":{},"interfaces/MenuEntryRO.html":{},"interfaces/MenuRO.html":{},"injectables/MenuService.html":{},"coverage.html":{}}}],["menus",{"_index":1101,"title":{},"body":{"controllers/MenuController.html":{}}}],["menus'})@apiresponse({status",{"_index":1110,"title":{},"body":{"controllers/MenuController.html":{}}}],["menuservice",{"_index":1116,"title":{"injectables/MenuService.html":{}},"body":{"controllers/MenuController.html":{},"modules/MenuModule.html":{},"injectables/MenuService.html":{},"coverage.html":{},"overview.html":{}}}],["message",{"_index":1207,"title":{},"body":{"classes/MyLogger.html":{}}}],["metadata",{"_index":1586,"title":{},"body":{"classes/ToIntegerPipe.html":{},"injectables/ValidationPipe.html":{},"dependencies.html":{}}}],["metatype",{"_index":1746,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["method",{"_index":339,"title":{},"body":{"modules/ArticleModule.html":{},"modules/ProfileModule.html":{},"modules/UserModule.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"controllers/ArticleController.html":{},"modules/ArticleModule.html":{},"injectables/ArticleService.html":{},"injectables/AuthMiddleware.html":{},"classes/BaseController.html":{},"controllers/CorporationController.html":{},"modules/CorporationModule.html":{},"injectables/CorporationService.html":{},"injectables/DatabaseConfig.html":{},"controllers/ErrorlogController.html":{},"modules/ErrorlogModule.html":{},"injectables/ErrorlogService.html":{},"controllers/GroupController.html":{},"modules/GroupModule.html":{},"injectables/GroupService.html":{},"controllers/ListController.html":{},"modules/ListModule.html":{},"injectables/ListService.html":{},"controllers/MenuController.html":{},"modules/MenuModule.html":{},"injectables/MenuService.html":{},"classes/MyLogger.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"controllers/RoleController.html":{},"modules/RoleModule.html":{},"injectables/RoleService.html":{},"controllers/SiteController.html":{},"modules/SiteModule.html":{},"injectables/SiteService.html":{},"controllers/TagController.html":{},"modules/TagModule.html":{},"injectables/TagService.html":{},"classes/ToIntegerPipe.html":{},"controllers/UserController.html":{},"classes/UserEntity.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{}}}],["middlewareconsumer",{"_index":322,"title":{},"body":{"modules/ArticleModule.html":{},"modules/CorporationModule.html":{},"modules/ErrorlogModule.html":{},"modules/GroupModule.html":{},"modules/ListModule.html":{},"modules/MenuModule.html":{},"modules/ProfileModule.html":{},"modules/RoleModule.html":{},"modules/SiteModule.html":{},"modules/TagModule.html":{},"modules/UserModule.html":{}}}],["miscellaneous",{"_index":1839,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["missing",{"_index":1248,"title":{},"body":{"controllers/ProfileController.html":{}}}],["module",{"_index":27,"title":{"modules/AppModule.html":{},"modules/ArticleModule.html":{},"modules/CommentModule.html":{},"modules/CorporationModule.html":{},"modules/ErrorlogModule.html":{},"modules/GroupModule.html":{},"modules/ListModule.html":{},"modules/MenuModule.html":{},"modules/ProfileModule.html":{},"modules/RoleModule.html":{},"modules/SiteModule.html":{},"modules/SqldirectModule.html":{},"modules/TagModule.html":{},"modules/UserModule.html":{},"modules/ViewModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ArticleModule.html":{},"modules/CommentModule.html":{},"modules/CorporationModule.html":{},"modules/ErrorlogModule.html":{},"modules/GroupModule.html":{},"modules/ListModule.html":{},"modules/MenuModule.html":{},"modules/ProfileModule.html":{},"modules/RoleModule.html":{},"modules/SiteModule.html":{},"modules/SqldirectModule.html":{},"modules/TagModule.html":{},"modules/UserModule.html":{},"modules/ViewModule.html":{},"overview.html":{}}}],["modules",{"_index":29,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/ArticleModule.html":{},"modules/CommentModule.html":{},"modules/CorporationModule.html":{},"modules/ErrorlogModule.html":{},"modules/GroupModule.html":{},"modules/ListModule.html":{},"modules/MenuModule.html":{},"modules/ProfileModule.html":{},"modules/RoleModule.html":{},"modules/SiteModule.html":{},"modules/SqldirectModule.html":{},"modules/TagModule.html":{},"modules/UserModule.html":{},"modules/ViewModule.html":{},"modules.html":{},"overview.html":{}}}],["mouseover",{"_index":1136,"title":{},"body":{"classes/MenuEntryEntity.html":{}}}],["mssql",{"_index":1825,"title":{},"body":{"dependencies.html":{},"miscellaneous/variables.html":{}}}],["multiple",{"_index":1370,"title":{},"body":{"classes/RoleEntity.html":{}}}],["multiples",{"_index":1382,"title":{},"body":{"classes/RoleEntity.html":{}}}],["mylogger",{"_index":1197,"title":{"classes/MyLogger.html":{}},"body":{"classes/MyLogger.html":{},"coverage.html":{}}}],["name",{"_index":117,"title":{},"body":{"controllers/ArticleController.html":{},"modules/ArticleModule.html":{},"injectables/ArticleService.html":{},"injectables/AuthMiddleware.html":{},"classes/BaseController.html":{},"controllers/CorporationController.html":{},"interfaces/CorporationData.html":{},"classes/CorporationEntity.html":{},"modules/CorporationModule.html":{},"interfaces/CorporationRO.html":{},"injectables/CorporationService.html":{},"classes/CreateCorporationDto.html":{},"classes/CreateGroupDto.html":{},"classes/CreateListDto.html":{},"classes/CreateListEntryDto.html":{},"classes/CreateMenuDto.html":{},"classes/CreateRoleAppDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSiteDto.html":{},"injectables/DatabaseConfig.html":{},"controllers/ErrorlogController.html":{},"modules/ErrorlogModule.html":{},"injectables/ErrorlogService.html":{},"controllers/GroupController.html":{},"interfaces/GroupData.html":{},"classes/GroupEntity.html":{},"modules/GroupModule.html":{},"interfaces/GroupRO.html":{},"injectables/GroupService.html":{},"controllers/ListController.html":{},"interfaces/ListData.html":{},"classes/ListEntity.html":{},"interfaces/ListEntry.html":{},"classes/ListEntryEntity.html":{},"interfaces/ListEntryRO.html":{},"modules/ListModule.html":{},"interfaces/ListRO.html":{},"injectables/ListService.html":{},"classes/MenuAppEntity.html":{},"controllers/MenuController.html":{},"modules/MenuModule.html":{},"injectables/MenuService.html":{},"classes/MyLogger.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"controllers/RoleController.html":{},"interfaces/RoleData.html":{},"classes/RoleEntity.html":{},"classes/RoleMenuEntryEntity.html":{},"modules/RoleModule.html":{},"interfaces/RoleRO.html":{},"injectables/RoleService.html":{},"controllers/SiteController.html":{},"interfaces/SiteData.html":{},"classes/SiteEntity.html":{},"modules/SiteModule.html":{},"interfaces/SiteRO.html":{},"injectables/SiteService.html":{},"modules/TagModule.html":{},"injectables/TagService.html":{},"classes/ToIntegerPipe.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{}}}],["nestjs/common",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/ArticleController.html":{},"modules/ArticleModule.html":{},"injectables/ArticleService.html":{},"injectables/AuthMiddleware.html":{},"controllers/CommentController.html":{},"modules/CommentModule.html":{},"injectables/CommentService.html":{},"controllers/CorporationController.html":{},"modules/CorporationModule.html":{},"injectables/CorporationService.html":{},"injectables/DatabaseConfig.html":{},"controllers/ErrorlogController.html":{},"modules/ErrorlogModule.html":{},"injectables/ErrorlogService.html":{},"controllers/GroupController.html":{},"modules/GroupModule.html":{},"injectables/GroupService.html":{},"controllers/ListController.html":{},"modules/ListModule.html":{},"injectables/ListService.html":{},"controllers/MenuController.html":{},"modules/MenuModule.html":{},"injectables/MenuService.html":{},"classes/MyLogger.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"controllers/RoleController.html":{},"modules/RoleModule.html":{},"injectables/RoleService.html":{},"controllers/SiteController.html":{},"modules/SiteModule.html":{},"injectables/SiteService.html":{},"controllers/SqldirectController.html":{},"modules/SqldirectModule.html":{},"injectables/SqldirectService.html":{},"controllers/TagController.html":{},"modules/TagModule.html":{},"injectables/TagService.html":{},"classes/ToIntegerPipe.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{},"controllers/ViewController.html":{},"modules/ViewModule.html":{},"injectables/ViewService.html":{},"dependencies.html":{}}}],["nestjs/common/exceptions/http.exception",{"_index":487,"title":{},"body":{"injectables/AuthMiddleware.html":{},"injectables/CorporationService.html":{},"controllers/ErrorlogController.html":{},"injectables/ErrorlogService.html":{},"controllers/GroupController.html":{},"injectables/GroupService.html":{},"controllers/ListController.html":{},"injectables/ListService.html":{},"controllers/MenuController.html":{},"injectables/MenuService.html":{},"injectables/ProfileService.html":{},"controllers/RoleController.html":{},"injectables/RoleService.html":{},"controllers/SiteController.html":{},"injectables/SiteService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{}}}],["nestjs/config",{"_index":73,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthMiddleware.html":{},"classes/BaseController.html":{},"injectables/DatabaseConfig.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":1807,"title":{},"body":{"dependencies.html":{}}}],["nestjs/microservices",{"_index":1808,"title":{},"body":{"dependencies.html":{}}}],["nestjs/platform",{"_index":1809,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":192,"title":{},"body":{"controllers/ArticleController.html":{},"controllers/CorporationController.html":{},"classes/CreateCorporationDto.html":{},"classes/CreateErrorLogDto.html":{},"classes/CreateGroupDto.html":{},"classes/CreateListDto.html":{},"classes/CreateListEntryDto.html":{},"classes/CreateMenuDto.html":{},"classes/CreateMenuEntryDto.html":{},"classes/CreateRoleAppDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSiteDto.html":{},"classes/CreateUserDto.html":{},"controllers/ErrorlogController.html":{},"controllers/GroupController.html":{},"controllers/ListController.html":{},"classes/LoginUserDto.html":{},"controllers/MenuController.html":{},"controllers/ProfileController.html":{},"controllers/RoleController.html":{},"controllers/SiteController.html":{},"controllers/TagController.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"dependencies.html":{}}}],["nestjs/typeorm",{"_index":58,"title":{},"body":{"modules/AppModule.html":{},"modules/ArticleModule.html":{},"injectables/ArticleService.html":{},"modules/CorporationModule.html":{},"injectables/CorporationService.html":{},"injectables/DatabaseConfig.html":{},"modules/ErrorlogModule.html":{},"injectables/ErrorlogService.html":{},"modules/GroupModule.html":{},"injectables/GroupService.html":{},"modules/ListModule.html":{},"injectables/ListService.html":{},"modules/MenuModule.html":{},"injectables/MenuService.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"modules/RoleModule.html":{},"injectables/RoleService.html":{},"modules/SiteModule.html":{},"injectables/SiteService.html":{},"modules/TagModule.html":{},"injectables/TagService.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["nestjs/websockets",{"_index":1812,"title":{},"body":{"dependencies.html":{}}}],["nestmiddleware",{"_index":488,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["nestmodule",{"_index":326,"title":{},"body":{"modules/ArticleModule.html":{},"modules/CorporationModule.html":{},"modules/ErrorlogModule.html":{},"modules/GroupModule.html":{},"modules/ListModule.html":{},"modules/MenuModule.html":{},"modules/ProfileModule.html":{},"modules/RoleModule.html":{},"modules/SiteModule.html":{},"modules/TagModule.html":{},"modules/UserModule.html":{}}}],["new",{"_index":427,"title":{},"body":{"injectables/ArticleService.html":{},"injectables/AuthMiddleware.html":{},"injectables/CorporationService.html":{},"injectables/ErrorlogService.html":{},"injectables/GroupService.html":{},"injectables/ListService.html":{},"injectables/MenuService.html":{},"injectables/ProfileService.html":{},"injectables/RoleService.html":{},"injectables/SiteService.html":{},"classes/ToIntegerPipe.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{},"coverage.html":{}}}],["newarticle",{"_index":458,"title":{},"body":{"injectables/ArticleService.html":{}}}],["newcorporation",{"_index":648,"title":{},"body":{"injectables/CorporationService.html":{}}}],["newcorporation.costcenter",{"_index":650,"title":{},"body":{"injectables/CorporationService.html":{}}}],["newcorporation.description",{"_index":651,"title":{},"body":{"injectables/CorporationService.html":{}}}],["newcorporation.name",{"_index":649,"title":{},"body":{"injectables/CorporationService.html":{}}}],["newerrorlog",{"_index":853,"title":{},"body":{"injectables/ErrorlogService.html":{}}}],["newerrorlog.description",{"_index":855,"title":{},"body":{"injectables/ErrorlogService.html":{}}}],["newerrorlog.errorcode",{"_index":856,"title":{},"body":{"injectables/ErrorlogService.html":{}}}],["newerrorlog.errorcodehtml",{"_index":857,"title":{},"body":{"injectables/ErrorlogService.html":{}}}],["newerrorlog.siteid",{"_index":854,"title":{},"body":{"injectables/ErrorlogService.html":{}}}],["newgroup",{"_index":948,"title":{},"body":{"injectables/GroupService.html":{}}}],["newgroup.description",{"_index":950,"title":{},"body":{"injectables/GroupService.html":{}}}],["newgroup.name",{"_index":949,"title":{},"body":{"injectables/GroupService.html":{}}}],["newlist",{"_index":1050,"title":{},"body":{"injectables/ListService.html":{}}}],["newlist.description",{"_index":1052,"title":{},"body":{"injectables/ListService.html":{}}}],["newlist.name",{"_index":1051,"title":{},"body":{"injectables/ListService.html":{}}}],["newmenu",{"_index":1181,"title":{},"body":{"injectables/MenuService.html":{}}}],["newmenu.abbreviation",{"_index":1184,"title":{},"body":{"injectables/MenuService.html":{}}}],["newmenu.description",{"_index":1183,"title":{},"body":{"injectables/MenuService.html":{}}}],["newmenu.name",{"_index":1182,"title":{},"body":{"injectables/MenuService.html":{}}}],["newrole",{"_index":1436,"title":{},"body":{"injectables/RoleService.html":{}}}],["newrole.description",{"_index":1438,"title":{},"body":{"injectables/RoleService.html":{}}}],["newrole.name",{"_index":1437,"title":{},"body":{"injectables/RoleService.html":{}}}],["newsite",{"_index":1519,"title":{},"body":{"injectables/SiteService.html":{}}}],["newsite.costcenter",{"_index":1521,"title":{},"body":{"injectables/SiteService.html":{}}}],["newsite.description",{"_index":1522,"title":{},"body":{"injectables/SiteService.html":{}}}],["newsite.name",{"_index":1520,"title":{},"body":{"injectables/SiteService.html":{}}}],["newuser",{"_index":1712,"title":{},"body":{"injectables/UserService.html":{}}}],["newuser.articles",{"_index":1716,"title":{},"body":{"injectables/UserService.html":{}}}],["newuser.email",{"_index":1714,"title":{},"body":{"injectables/UserService.html":{}}}],["newuser.password",{"_index":1715,"title":{},"body":{"injectables/UserService.html":{}}}],["newuser.username",{"_index":1713,"title":{},"body":{"injectables/UserService.html":{}}}],["next",{"_index":482,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["nextfunction",{"_index":483,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["node",{"_index":22,"title":{},"body":{"controllers/AppController.html":{},"index.html":{}}}],["null",{"_index":529,"title":{},"body":{"classes/BaseController.html":{},"injectables/CorporationService.html":{},"injectables/GroupService.html":{},"injectables/ListService.html":{},"injectables/MenuService.html":{},"injectables/RoleService.html":{},"injectables/SiteService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["nullable",{"_index":789,"title":{},"body":{"classes/ErrorLogEntity.html":{}}}],["number",{"_index":102,"title":{},"body":{"controllers/ArticleController.html":{},"interfaces/ArticleData.html":{},"classes/ArticleEntity.html":{},"interfaces/ArticleRO.html":{},"injectables/ArticleService.html":{},"interfaces/ArticlesRO.html":{},"classes/Comment.html":{},"interfaces/CommentsRO.html":{},"controllers/CorporationController.html":{},"interfaces/CorporationData.html":{},"classes/CorporationEntity.html":{},"interfaces/CorporationRO.html":{},"injectables/CorporationService.html":{},"classes/CreateCorporationDto.html":{},"classes/CreateErrorLogDto.html":{},"classes/CreateGroupDto.html":{},"classes/CreateListDto.html":{},"classes/CreateListEntryDto.html":{},"classes/CreateMenuDto.html":{},"classes/CreateMenuEntryDto.html":{},"classes/CreateRoleAppDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSiteDto.html":{},"interfaces/ErrorLogData.html":{},"classes/ErrorLogEntity.html":{},"interfaces/ErrorLogRO.html":{},"controllers/ErrorlogController.html":{},"injectables/ErrorlogService.html":{},"classes/FollowsEntity.html":{},"controllers/GroupController.html":{},"interfaces/GroupData.html":{},"classes/GroupEntity.html":{},"interfaces/GroupRO.html":{},"injectables/GroupService.html":{},"controllers/ListController.html":{},"interfaces/ListData.html":{},"classes/ListEntity.html":{},"interfaces/ListEntry.html":{},"classes/ListEntryEntity.html":{},"interfaces/ListEntryRO.html":{},"interfaces/ListRO.html":{},"injectables/ListService.html":{},"interfaces/MenuAppData.html":{},"classes/MenuAppEntity.html":{},"interfaces/MenuAppEntry.html":{},"controllers/MenuController.html":{},"classes/MenuEntryEntity.html":{},"interfaces/MenuEntryRO.html":{},"interfaces/MenuRO.html":{},"injectables/MenuService.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"controllers/RoleController.html":{},"interfaces/RoleData.html":{},"classes/RoleEntity.html":{},"classes/RoleMenuAppEntity.html":{},"classes/RoleMenuEntryEntity.html":{},"interfaces/RoleRO.html":{},"injectables/RoleService.html":{},"controllers/SiteController.html":{},"interfaces/SiteData.html":{},"classes/SiteEntity.html":{},"interfaces/SiteRO.html":{},"injectables/SiteService.html":{},"classes/TagEntity.html":{},"classes/ToIntegerPipe.html":{},"controllers/UserController.html":{},"classes/UserEntity.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{}}}],["number(process.env.http_port",{"_index":1865,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object",{"_index":1753,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["object.assign(toupdate",{"_index":465,"title":{},"body":{"injectables/ArticleService.html":{},"injectables/CorporationService.html":{},"injectables/ErrorlogService.html":{},"injectables/GroupService.html":{},"injectables/ListService.html":{},"injectables/MenuService.html":{},"injectables/RoleService.html":{},"injectables/SiteService.html":{},"injectables/UserService.html":{}}}],["object.entries(el.constraints).foreach(constraint",{"_index":1760,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["offset",{"_index":414,"title":{},"body":{"injectables/ArticleService.html":{}}}],["one",{"_index":1375,"title":{},"body":{"classes/RoleEntity.html":{}}}],["onetomany",{"_index":303,"title":{},"body":{"classes/ArticleEntity.html":{},"classes/CorporationEntity.html":{},"classes/ListEntity.html":{},"classes/MenuAppEntity.html":{},"classes/MenuEntryEntity.html":{},"classes/RoleEntity.html":{},"classes/RoleMenuAppEntity.html":{},"classes/SiteEntity.html":{},"classes/UserEntity.html":{}}}],["onetomany(type",{"_index":313,"title":{},"body":{"classes/ArticleEntity.html":{},"classes/CorporationEntity.html":{},"classes/ListEntity.html":{},"classes/MenuAppEntity.html":{},"classes/MenuEntryEntity.html":{},"classes/RoleEntity.html":{},"classes/RoleMenuAppEntity.html":{},"classes/SiteEntity.html":{},"classes/UserEntity.html":{}}}],["onetomany(undefined",{"_index":276,"title":{},"body":{"classes/ArticleEntity.html":{},"classes/CorporationEntity.html":{},"classes/ListEntity.html":{},"classes/MenuAppEntity.html":{},"classes/MenuEntryEntity.html":{},"classes/RoleEntity.html":{},"classes/RoleMenuAppEntity.html":{},"classes/SiteEntity.html":{},"classes/UserEntity.html":{}}}],["onetoone",{"_index":301,"title":{},"body":{"classes/ArticleEntity.html":{},"classes/CorporationEntity.html":{},"classes/MenuAppEntity.html":{},"classes/MenuEntryEntity.html":{},"classes/RoleEntity.html":{},"classes/RoleMenuAppEntity.html":{},"classes/SiteEntity.html":{}}}],["onetoone(type",{"_index":1098,"title":{},"body":{"classes/MenuAppEntity.html":{},"classes/RoleMenuAppEntity.html":{}}}],["onetoone(undefined",{"_index":1091,"title":{},"body":{"classes/MenuAppEntity.html":{},"classes/RoleMenuAppEntity.html":{}}}],["onetoone,manytoone",{"_index":1015,"title":{},"body":{"classes/ListEntity.html":{}}}],["optional",{"_index":119,"title":{},"body":{"controllers/ArticleController.html":{},"interfaces/ArticleData.html":{},"modules/ArticleModule.html":{},"injectables/ArticleService.html":{},"injectables/AuthMiddleware.html":{},"classes/BaseController.html":{},"controllers/CorporationController.html":{},"interfaces/CorporationData.html":{},"modules/CorporationModule.html":{},"injectables/CorporationService.html":{},"injectables/DatabaseConfig.html":{},"interfaces/ErrorLogData.html":{},"controllers/ErrorlogController.html":{},"modules/ErrorlogModule.html":{},"injectables/ErrorlogService.html":{},"controllers/GroupController.html":{},"interfaces/GroupData.html":{},"modules/GroupModule.html":{},"injectables/GroupService.html":{},"controllers/ListController.html":{},"interfaces/ListData.html":{},"modules/ListModule.html":{},"injectables/ListService.html":{},"interfaces/MenuAppData.html":{},"controllers/MenuController.html":{},"modules/MenuModule.html":{},"injectables/MenuService.html":{},"classes/MyLogger.html":{},"controllers/ProfileController.html":{},"interfaces/ProfileData.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"controllers/RoleController.html":{},"interfaces/RoleData.html":{},"modules/RoleModule.html":{},"injectables/RoleService.html":{},"controllers/SiteController.html":{},"interfaces/SiteData.html":{},"modules/SiteModule.html":{},"injectables/SiteService.html":{},"modules/TagModule.html":{},"injectables/TagService.html":{},"classes/ToIntegerPipe.html":{},"controllers/UserController.html":{},"interfaces/UserData.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{},"miscellaneous/variables.html":{}}}],["options",{"_index":1276,"title":{},"body":{"injectables/ProfileService.html":{}}}],["orwhere('user.email",{"_index":1709,"title":{},"body":{"injectables/UserService.html":{}}}],["out",{"_index":51,"title":{},"body":{"modules/AppModule.html":{},"modules/ArticleModule.html":{},"modules/CorporationModule.html":{},"modules/ErrorlogModule.html":{},"modules/GroupModule.html":{},"modules/ListModule.html":{},"modules/MenuModule.html":{},"modules/ProfileModule.html":{},"modules/RoleModule.html":{},"modules/SiteModule.html":{},"modules/SqldirectModule.html":{},"modules/TagModule.html":{},"modules/UserModule.html":{},"modules/ViewModule.html":{},"overview.html":{}}}],["overview",{"_index":1854,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":1804,"title":{"dependencies.html":{}},"body":{}}],["param",{"_index":175,"title":{},"body":{"controllers/ArticleController.html":{},"controllers/CorporationController.html":{},"controllers/ErrorlogController.html":{},"controllers/GroupController.html":{},"controllers/ListController.html":{},"controllers/MenuController.html":{},"controllers/ProfileController.html":{},"controllers/RoleController.html":{},"controllers/SiteController.html":{},"controllers/UserController.html":{}}}],["param('slug",{"_index":241,"title":{},"body":{"controllers/ArticleController.html":{}}}],["param('username",{"_index":1243,"title":{},"body":{"controllers/ProfileController.html":{}}}],["parameters",{"_index":116,"title":{},"body":{"controllers/ArticleController.html":{},"modules/ArticleModule.html":{},"injectables/ArticleService.html":{},"injectables/AuthMiddleware.html":{},"classes/BaseController.html":{},"controllers/CorporationController.html":{},"modules/CorporationModule.html":{},"injectables/CorporationService.html":{},"injectables/DatabaseConfig.html":{},"controllers/ErrorlogController.html":{},"modules/ErrorlogModule.html":{},"injectables/ErrorlogService.html":{},"controllers/GroupController.html":{},"modules/GroupModule.html":{},"injectables/GroupService.html":{},"controllers/ListController.html":{},"modules/ListModule.html":{},"injectables/ListService.html":{},"controllers/MenuController.html":{},"modules/MenuModule.html":{},"injectables/MenuService.html":{},"classes/MyLogger.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"controllers/RoleController.html":{},"modules/RoleModule.html":{},"injectables/RoleService.html":{},"controllers/SiteController.html":{},"modules/SiteModule.html":{},"injectables/SiteService.html":{},"modules/TagModule.html":{},"injectables/TagService.html":{},"classes/ToIntegerPipe.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{}}}],["params",{"_index":133,"title":{},"body":{"controllers/ArticleController.html":{},"controllers/CorporationController.html":{},"controllers/ListController.html":{},"controllers/MenuController.html":{},"controllers/RoleController.html":{},"controllers/SiteController.html":{},"controllers/UserController.html":{}}}],["parseint(value",{"_index":1591,"title":{},"body":{"classes/ToIntegerPipe.html":{}}}],["passport",{"_index":492,"title":{},"body":{"injectables/AuthMiddleware.html":{},"dependencies.html":{}}}],["password",{"_index":768,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginUserDto.html":{},"classes/UserEntity.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["path",{"_index":337,"title":{},"body":{"modules/ArticleModule.html":{},"controllers/RoleController.html":{},"modules/UserModule.html":{}}}],["per",{"_index":1372,"title":{},"body":{"classes/RoleEntity.html":{}}}],["pipetransform",{"_index":1583,"title":{},"body":{"classes/ToIntegerPipe.html":{},"injectables/ValidationPipe.html":{}}}],["plaintoclass",{"_index":1748,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["plaintoclass(metatype",{"_index":1754,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["port",{"_index":1864,"title":{},"body":{"miscellaneous/variables.html":{}}}],["post",{"_index":172,"title":{},"body":{"controllers/ArticleController.html":{},"controllers/CorporationController.html":{},"controllers/ErrorlogController.html":{},"controllers/GroupController.html":{},"controllers/ListController.html":{},"controllers/MenuController.html":{},"controllers/ProfileController.html":{},"controllers/RoleController.html":{},"controllers/SiteController.html":{},"controllers/UserController.html":{}}}],["post(':id",{"_index":823,"title":{},"body":{"controllers/ErrorlogController.html":{},"controllers/GroupController.html":{},"controllers/ListController.html":{},"controllers/MenuController.html":{},"controllers/RoleController.html":{},"controllers/SiteController.html":{}}}],["post(':slug/comments",{"_index":229,"title":{},"body":{"controllers/ArticleController.html":{}}}],["post(':slug/favorite",{"_index":239,"title":{},"body":{"controllers/ArticleController.html":{}}}],["post(':username/follow",{"_index":1245,"title":{},"body":{"controllers/ProfileController.html":{}}}],["post('corporation",{"_index":580,"title":{},"body":{"controllers/CorporationController.html":{}}}],["post('users",{"_index":1626,"title":{},"body":{"controllers/UserController.html":{}}}],["post('users/login",{"_index":1629,"title":{},"body":{"controllers/UserController.html":{}}}],["prefix",{"_index":87,"title":{},"body":{"controllers/ArticleController.html":{},"controllers/CommentController.html":{},"controllers/CorporationController.html":{},"controllers/ErrorlogController.html":{},"controllers/GroupController.html":{},"controllers/ListController.html":{},"controllers/MenuController.html":{},"controllers/ProfileController.html":{},"controllers/RoleController.html":{},"controllers/SiteController.html":{},"controllers/SqldirectController.html":{},"controllers/TagController.html":{},"controllers/ViewController.html":{}}}],["primary",{"_index":1403,"title":{},"body":{"classes/RoleMenuEntryEntity.html":{}}}],["primarycolumn",{"_index":1406,"title":{},"body":{"classes/RoleMenuEntryEntity.html":{}}}],["primarygeneratedcolumn",{"_index":288,"title":{},"body":{"classes/ArticleEntity.html":{},"classes/Comment.html":{},"classes/CorporationEntity.html":{},"classes/ErrorLogEntity.html":{},"classes/FollowsEntity.html":{},"classes/GroupEntity.html":{},"classes/ListEntity.html":{},"classes/ListEntryEntity.html":{},"classes/MenuAppEntity.html":{},"classes/MenuEntryEntity.html":{},"classes/RoleEntity.html":{},"classes/RoleMenuAppEntity.html":{},"classes/SiteEntity.html":{},"classes/TagEntity.html":{},"classes/UserEntity.html":{}}}],["private",{"_index":388,"title":{},"body":{"injectables/ArticleService.html":{},"injectables/AuthMiddleware.html":{},"injectables/CorporationService.html":{},"injectables/ErrorlogService.html":{},"injectables/GroupService.html":{},"injectables/ListService.html":{},"injectables/MenuService.html":{},"injectables/ProfileService.html":{},"injectables/RoleService.html":{},"injectables/SiteService.html":{},"injectables/TagService.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{}}}],["profile",{"_index":1226,"title":{},"body":{"controllers/ProfileController.html":{},"interfaces/ProfileData.html":{},"interfaces/ProfileRO.html":{},"injectables/ProfileService.html":{}}}],["profile'})@apiresponse({status",{"_index":1225,"title":{},"body":{"controllers/ProfileController.html":{}}}],["profile.controller",{"_index":1262,"title":{},"body":{"modules/ProfileModule.html":{}}}],["profile.following",{"_index":1299,"title":{},"body":{"injectables/ProfileService.html":{}}}],["profile.interface",{"_index":1238,"title":{},"body":{"controllers/ProfileController.html":{},"injectables/ProfileService.html":{}}}],["profile.service",{"_index":1236,"title":{},"body":{"controllers/ProfileController.html":{},"modules/ProfileModule.html":{}}}],["profile/follows.entity",{"_index":330,"title":{},"body":{"modules/ArticleModule.html":{},"injectables/ArticleService.html":{}}}],["profile/profile.module",{"_index":70,"title":{},"body":{"modules/AppModule.html":{}}}],["profilecontroller",{"_index":1218,"title":{"controllers/ProfileController.html":{}},"body":{"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"coverage.html":{}}}],["profiledata",{"_index":1252,"title":{"interfaces/ProfileData.html":{}},"body":{"interfaces/ProfileData.html":{},"interfaces/ProfileRO.html":{},"injectables/ProfileService.html":{},"coverage.html":{}}}],["profilemodule",{"_index":44,"title":{"modules/ProfileModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ProfileModule.html":{},"modules.html":{},"overview.html":{}}}],["profilero",{"_index":1237,"title":{"interfaces/ProfileRO.html":{}},"body":{"controllers/ProfileController.html":{},"interfaces/ProfileData.html":{},"interfaces/ProfileRO.html":{},"injectables/ProfileService.html":{},"coverage.html":{}}}],["profiles",{"_index":1220,"title":{},"body":{"controllers/ProfileController.html":{}}}],["profiles/:username/follow",{"_index":1266,"title":{},"body":{"modules/ProfileModule.html":{}}}],["profileservice",{"_index":1235,"title":{"injectables/ProfileService.html":{}},"body":{"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"coverage.html":{},"overview.html":{}}}],["promise",{"_index":148,"title":{},"body":{"controllers/ArticleController.html":{},"injectables/ArticleService.html":{},"controllers/CorporationController.html":{},"injectables/CorporationService.html":{},"controllers/ErrorlogController.html":{},"injectables/ErrorlogService.html":{},"controllers/GroupController.html":{},"injectables/GroupService.html":{},"controllers/ListController.html":{},"injectables/ListService.html":{},"controllers/MenuController.html":{},"injectables/MenuService.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"controllers/RoleController.html":{},"injectables/RoleService.html":{},"controllers/SiteController.html":{},"injectables/SiteService.html":{},"controllers/TagController.html":{},"injectables/TagService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["prop",{"_index":1758,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["properties",{"_index":250,"title":{},"body":{"interfaces/ArticleData.html":{},"classes/ArticleEntity.html":{},"interfaces/ArticleRO.html":{},"interfaces/ArticlesRO.html":{},"classes/Comment.html":{},"interfaces/CommentsRO.html":{},"interfaces/CorporationData.html":{},"classes/CorporationEntity.html":{},"interfaces/CorporationRO.html":{},"classes/CreateArticleDto.html":{},"classes/CreateCommentDto.html":{},"classes/CreateCorporationDto.html":{},"classes/CreateErrorLogDto.html":{},"classes/CreateGroupDto.html":{},"classes/CreateListDto.html":{},"classes/CreateListEntryDto.html":{},"classes/CreateMenuDto.html":{},"classes/CreateMenuEntryDto.html":{},"classes/CreateRoleAppDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSiteDto.html":{},"classes/CreateUserDto.html":{},"interfaces/ErrorLogData.html":{},"classes/ErrorLogEntity.html":{},"interfaces/ErrorLogRO.html":{},"classes/FollowsEntity.html":{},"interfaces/GroupData.html":{},"classes/GroupEntity.html":{},"interfaces/GroupRO.html":{},"interfaces/ListData.html":{},"classes/ListEntity.html":{},"interfaces/ListEntry.html":{},"classes/ListEntryEntity.html":{},"interfaces/ListEntryRO.html":{},"interfaces/ListRO.html":{},"classes/LoginUserDto.html":{},"interfaces/MenuAppData.html":{},"classes/MenuAppEntity.html":{},"interfaces/MenuAppEntry.html":{},"classes/MenuEntryEntity.html":{},"interfaces/MenuEntryRO.html":{},"interfaces/MenuRO.html":{},"interfaces/ProfileData.html":{},"interfaces/ProfileRO.html":{},"interfaces/RoleData.html":{},"classes/RoleEntity.html":{},"classes/RoleMenuAppEntity.html":{},"classes/RoleMenuEntryEntity.html":{},"interfaces/RoleRO.html":{},"interfaces/SiteData.html":{},"classes/SiteEntity.html":{},"interfaces/SiteRO.html":{},"classes/TagEntity.html":{},"classes/UpdateUserDto.html":{},"interfaces/UserData.html":{},"classes/UserEntity.html":{},"interfaces/UserRO.html":{}}}],["protected",{"_index":522,"title":{},"body":{"classes/BaseController.html":{},"miscellaneous/variables.html":{}}}],["provided",{"_index":1301,"title":{},"body":{"injectables/ProfileService.html":{}}}],["providers",{"_index":34,"title":{},"body":{"modules/AppModule.html":{},"modules/ArticleModule.html":{},"modules/CorporationModule.html":{},"modules/ErrorlogModule.html":{},"modules/GroupModule.html":{},"modules/ListModule.html":{},"modules/MenuModule.html":{},"modules/ProfileModule.html":{},"modules/RoleModule.html":{},"modules/SiteModule.html":{},"modules/SqldirectModule.html":{},"modules/TagModule.html":{},"modules/UserModule.html":{},"modules/ViewModule.html":{},"overview.html":{}}}],["public",{"_index":319,"title":{},"body":{"modules/ArticleModule.html":{},"modules/CorporationModule.html":{},"modules/ErrorlogModule.html":{},"modules/GroupModule.html":{},"modules/ListModule.html":{},"modules/MenuModule.html":{},"modules/ProfileModule.html":{},"modules/RoleModule.html":{},"modules/SiteModule.html":{},"modules/TagModule.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["put",{"_index":174,"title":{},"body":{"controllers/ArticleController.html":{},"controllers/CorporationController.html":{},"controllers/ErrorlogController.html":{},"controllers/GroupController.html":{},"controllers/ListController.html":{},"controllers/MenuController.html":{},"controllers/RoleController.html":{},"controllers/SiteController.html":{},"controllers/UserController.html":{}}}],["put(':id",{"_index":583,"title":{},"body":{"controllers/CorporationController.html":{},"controllers/ErrorlogController.html":{},"controllers/GroupController.html":{},"controllers/ListController.html":{},"controllers/MenuController.html":{},"controllers/RoleController.html":{},"controllers/SiteController.html":{}}}],["put(':slug",{"_index":218,"title":{},"body":{"controllers/ArticleController.html":{}}}],["put('user",{"_index":1634,"title":{},"body":{"controllers/UserController.html":{}}}],["qb",{"_index":392,"title":{},"body":{"injectables/ArticleService.html":{},"injectables/UserService.html":{}}}],["qb.andwhere(\"article.authorid",{"_index":403,"title":{},"body":{"injectables/ArticleService.html":{}}}],["qb.andwhere(\"article.taglist",{"_index":399,"title":{},"body":{"injectables/ArticleService.html":{}}}],["qb.getcount",{"_index":411,"title":{},"body":{"injectables/ArticleService.html":{}}}],["qb.getmany",{"_index":416,"title":{},"body":{"injectables/ArticleService.html":{}}}],["qb.getone",{"_index":1710,"title":{},"body":{"injectables/UserService.html":{}}}],["qb.limit(query.limit",{"_index":413,"title":{},"body":{"injectables/ArticleService.html":{}}}],["qb.offset(query.offset",{"_index":415,"title":{},"body":{"injectables/ArticleService.html":{}}}],["qb.orderby('article.created",{"_index":409,"title":{},"body":{"injectables/ArticleService.html":{}}}],["qb.where(\"1",{"_index":396,"title":{},"body":{"injectables/ArticleService.html":{}}}],["query",{"_index":147,"title":{},"body":{"controllers/ArticleController.html":{},"injectables/ArticleService.html":{},"controllers/CorporationController.html":{}}}],["query.author",{"_index":402,"title":{},"body":{"injectables/ArticleService.html":{}}}],["query.favorited",{"_index":405,"title":{},"body":{"injectables/ArticleService.html":{}}}],["query.tag",{"_index":400,"title":{},"body":{"injectables/ArticleService.html":{}}}],["readonly",{"_index":196,"title":{},"body":{"controllers/ArticleController.html":{},"injectables/ArticleService.html":{},"injectables/AuthMiddleware.html":{},"controllers/CorporationController.html":{},"injectables/CorporationService.html":{},"classes/CreateArticleDto.html":{},"classes/CreateCommentDto.html":{},"classes/CreateCorporationDto.html":{},"classes/CreateErrorLogDto.html":{},"classes/CreateGroupDto.html":{},"classes/CreateListDto.html":{},"classes/CreateListEntryDto.html":{},"classes/CreateMenuDto.html":{},"classes/CreateMenuEntryDto.html":{},"classes/CreateRoleAppDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSiteDto.html":{},"classes/CreateUserDto.html":{},"controllers/ErrorlogController.html":{},"injectables/ErrorlogService.html":{},"controllers/GroupController.html":{},"injectables/GroupService.html":{},"controllers/ListController.html":{},"injectables/ListService.html":{},"classes/LoginUserDto.html":{},"controllers/MenuController.html":{},"injectables/MenuService.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"controllers/RoleController.html":{},"injectables/RoleService.html":{},"controllers/SiteController.html":{},"injectables/SiteService.html":{},"controllers/TagController.html":{},"injectables/TagService.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["reflect",{"_index":1827,"title":{},"body":{"dependencies.html":{}}}],["relations",{"_index":460,"title":{},"body":{"injectables/ArticleService.html":{}}}],["repository",{"_index":356,"title":{},"body":{"injectables/ArticleService.html":{},"injectables/CorporationService.html":{},"injectables/ErrorlogService.html":{},"injectables/GroupService.html":{},"injectables/ListService.html":{},"injectables/MenuService.html":{},"injectables/ProfileService.html":{},"injectables/RoleService.html":{},"injectables/SiteService.html":{},"injectables/TagService.html":{},"injectables/UserService.html":{}}}],["req",{"_index":485,"title":{},"body":{"injectables/AuthMiddleware.html":{},"miscellaneous/variables.html":{}}}],["req.headers.authorization",{"_index":497,"title":{},"body":{"injectables/AuthMiddleware.html":{},"miscellaneous/variables.html":{}}}],["req.user",{"_index":516,"title":{},"body":{"injectables/AuthMiddleware.html":{},"miscellaneous/variables.html":{}}}],["req.user[data",{"_index":1883,"title":{},"body":{"miscellaneous/variables.html":{}}}],["request",{"_index":176,"title":{},"body":{"controllers/ArticleController.html":{},"injectables/AuthMiddleware.html":{},"controllers/CorporationController.html":{},"controllers/ErrorlogController.html":{},"controllers/GroupController.html":{},"controllers/ListController.html":{},"controllers/MenuController.html":{},"controllers/ProfileController.html":{},"controllers/RoleController.html":{},"controllers/SiteController.html":{},"controllers/UserController.html":{}}}],["requestmethod",{"_index":327,"title":{},"body":{"modules/ArticleModule.html":{},"modules/CorporationModule.html":{},"modules/ErrorlogModule.html":{},"modules/GroupModule.html":{},"modules/ListModule.html":{},"modules/MenuModule.html":{},"modules/ProfileModule.html":{},"modules/RoleModule.html":{},"modules/SiteModule.html":{},"modules/TagModule.html":{},"modules/UserModule.html":{}}}],["requestmethod.all",{"_index":1267,"title":{},"body":{"modules/ProfileModule.html":{}}}],["requestmethod.delete",{"_index":343,"title":{},"body":{"modules/ArticleModule.html":{}}}],["requestmethod.get",{"_index":340,"title":{},"body":{"modules/ArticleModule.html":{},"modules/UserModule.html":{}}}],["requestmethod.post",{"_index":341,"title":{},"body":{"modules/ArticleModule.html":{}}}],["requestmethod.put",{"_index":344,"title":{},"body":{"modules/ArticleModule.html":{},"modules/UserModule.html":{}}}],["require('jsonwebtoken",{"_index":1702,"title":{},"body":{"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["require('slug",{"_index":386,"title":{},"body":{"injectables/ArticleService.html":{},"miscellaneous/variables.html":{}}}],["res",{"_index":480,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["reset",{"_index":50,"title":{},"body":{"modules/AppModule.html":{},"modules/ArticleModule.html":{},"modules/CorporationModule.html":{},"modules/ErrorlogModule.html":{},"modules/GroupModule.html":{},"modules/ListModule.html":{},"modules/MenuModule.html":{},"modules/ProfileModule.html":{},"modules/RoleModule.html":{},"modules/SiteModule.html":{},"modules/SqldirectModule.html":{},"modules/TagModule.html":{},"modules/UserModule.html":{},"modules/ViewModule.html":{},"overview.html":{}}}],["response",{"_index":481,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["rest",{"_index":1847,"title":{},"body":{"index.html":{}}}],["result",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/ArticleController.html":{},"interfaces/ArticleData.html":{},"classes/ArticleEntity.html":{},"modules/ArticleModule.html":{},"interfaces/ArticleRO.html":{},"injectables/ArticleService.html":{},"interfaces/ArticlesRO.html":{},"injectables/AuthMiddleware.html":{},"classes/BaseController.html":{},"classes/Comment.html":{},"controllers/CommentController.html":{},"modules/CommentModule.html":{},"injectables/CommentService.html":{},"interfaces/CommentsRO.html":{},"controllers/CorporationController.html":{},"interfaces/CorporationData.html":{},"classes/CorporationEntity.html":{},"modules/CorporationModule.html":{},"interfaces/CorporationRO.html":{},"injectables/CorporationService.html":{},"classes/CreateArticleDto.html":{},"classes/CreateCommentDto.html":{},"classes/CreateCorporationDto.html":{},"classes/CreateErrorLogDto.html":{},"classes/CreateGroupDto.html":{},"classes/CreateListDto.html":{},"classes/CreateListEntryDto.html":{},"classes/CreateMenuDto.html":{},"classes/CreateMenuEntryDto.html":{},"classes/CreateRoleAppDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSiteDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabaseConfig.html":{},"interfaces/ErrorLogData.html":{},"classes/ErrorLogEntity.html":{},"interfaces/ErrorLogRO.html":{},"controllers/ErrorlogController.html":{},"modules/ErrorlogModule.html":{},"injectables/ErrorlogService.html":{},"classes/FollowsEntity.html":{},"controllers/GroupController.html":{},"interfaces/GroupData.html":{},"classes/GroupEntity.html":{},"modules/GroupModule.html":{},"interfaces/GroupRO.html":{},"injectables/GroupService.html":{},"controllers/ListController.html":{},"interfaces/ListData.html":{},"classes/ListEntity.html":{},"interfaces/ListEntry.html":{},"classes/ListEntryEntity.html":{},"interfaces/ListEntryRO.html":{},"modules/ListModule.html":{},"interfaces/ListRO.html":{},"injectables/ListService.html":{},"classes/LoginUserDto.html":{},"interfaces/MenuAppData.html":{},"classes/MenuAppEntity.html":{},"interfaces/MenuAppEntry.html":{},"controllers/MenuController.html":{},"classes/MenuEntryEntity.html":{},"interfaces/MenuEntryRO.html":{},"modules/MenuModule.html":{},"interfaces/MenuRO.html":{},"injectables/MenuService.html":{},"classes/MyLogger.html":{},"controllers/ProfileController.html":{},"interfaces/ProfileData.html":{},"modules/ProfileModule.html":{},"interfaces/ProfileRO.html":{},"injectables/ProfileService.html":{},"controllers/RoleController.html":{},"interfaces/RoleData.html":{},"classes/RoleEntity.html":{},"classes/RoleMenuAppEntity.html":{},"classes/RoleMenuEntryEntity.html":{},"modules/RoleModule.html":{},"interfaces/RoleRO.html":{},"injectables/RoleService.html":{},"controllers/SiteController.html":{},"interfaces/SiteData.html":{},"classes/SiteEntity.html":{},"modules/SiteModule.html":{},"interfaces/SiteRO.html":{},"injectables/SiteService.html":{},"controllers/SqldirectController.html":{},"modules/SqldirectModule.html":{},"injectables/SqldirectService.html":{},"controllers/TagController.html":{},"classes/TagEntity.html":{},"modules/TagModule.html":{},"injectables/TagService.html":{},"classes/ToIntegerPipe.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"interfaces/UserData.html":{},"classes/UserEntity.html":{},"modules/UserModule.html":{},"interfaces/UserRO.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{},"controllers/ViewController.html":{},"modules/ViewModule.html":{},"injectables/ViewService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["result[prop",{"_index":1761,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["results",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/ArticleController.html":{},"interfaces/ArticleData.html":{},"classes/ArticleEntity.html":{},"modules/ArticleModule.html":{},"interfaces/ArticleRO.html":{},"injectables/ArticleService.html":{},"interfaces/ArticlesRO.html":{},"injectables/AuthMiddleware.html":{},"classes/BaseController.html":{},"classes/Comment.html":{},"controllers/CommentController.html":{},"modules/CommentModule.html":{},"injectables/CommentService.html":{},"interfaces/CommentsRO.html":{},"controllers/CorporationController.html":{},"interfaces/CorporationData.html":{},"classes/CorporationEntity.html":{},"modules/CorporationModule.html":{},"interfaces/CorporationRO.html":{},"injectables/CorporationService.html":{},"classes/CreateArticleDto.html":{},"classes/CreateCommentDto.html":{},"classes/CreateCorporationDto.html":{},"classes/CreateErrorLogDto.html":{},"classes/CreateGroupDto.html":{},"classes/CreateListDto.html":{},"classes/CreateListEntryDto.html":{},"classes/CreateMenuDto.html":{},"classes/CreateMenuEntryDto.html":{},"classes/CreateRoleAppDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSiteDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabaseConfig.html":{},"interfaces/ErrorLogData.html":{},"classes/ErrorLogEntity.html":{},"interfaces/ErrorLogRO.html":{},"controllers/ErrorlogController.html":{},"modules/ErrorlogModule.html":{},"injectables/ErrorlogService.html":{},"classes/FollowsEntity.html":{},"controllers/GroupController.html":{},"interfaces/GroupData.html":{},"classes/GroupEntity.html":{},"modules/GroupModule.html":{},"interfaces/GroupRO.html":{},"injectables/GroupService.html":{},"controllers/ListController.html":{},"interfaces/ListData.html":{},"classes/ListEntity.html":{},"interfaces/ListEntry.html":{},"classes/ListEntryEntity.html":{},"interfaces/ListEntryRO.html":{},"modules/ListModule.html":{},"interfaces/ListRO.html":{},"injectables/ListService.html":{},"classes/LoginUserDto.html":{},"interfaces/MenuAppData.html":{},"classes/MenuAppEntity.html":{},"interfaces/MenuAppEntry.html":{},"controllers/MenuController.html":{},"classes/MenuEntryEntity.html":{},"interfaces/MenuEntryRO.html":{},"modules/MenuModule.html":{},"interfaces/MenuRO.html":{},"injectables/MenuService.html":{},"classes/MyLogger.html":{},"controllers/ProfileController.html":{},"interfaces/ProfileData.html":{},"modules/ProfileModule.html":{},"interfaces/ProfileRO.html":{},"injectables/ProfileService.html":{},"controllers/RoleController.html":{},"interfaces/RoleData.html":{},"classes/RoleEntity.html":{},"classes/RoleMenuAppEntity.html":{},"classes/RoleMenuEntryEntity.html":{},"modules/RoleModule.html":{},"interfaces/RoleRO.html":{},"injectables/RoleService.html":{},"controllers/SiteController.html":{},"interfaces/SiteData.html":{},"classes/SiteEntity.html":{},"modules/SiteModule.html":{},"interfaces/SiteRO.html":{},"injectables/SiteService.html":{},"controllers/SqldirectController.html":{},"modules/SqldirectModule.html":{},"injectables/SqldirectService.html":{},"controllers/TagController.html":{},"classes/TagEntity.html":{},"modules/TagModule.html":{},"injectables/TagService.html":{},"classes/ToIntegerPipe.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"interfaces/UserData.html":{},"classes/UserEntity.html":{},"modules/UserModule.html":{},"interfaces/UserRO.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{},"controllers/ViewController.html":{},"modules/ViewModule.html":{},"injectables/ViewService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"controllers/ArticleController.html":{},"injectables/ArticleService.html":{},"classes/BaseController.html":{},"controllers/CorporationController.html":{},"injectables/CorporationService.html":{},"injectables/DatabaseConfig.html":{},"controllers/ErrorlogController.html":{},"injectables/ErrorlogService.html":{},"controllers/GroupController.html":{},"injectables/GroupService.html":{},"controllers/ListController.html":{},"injectables/ListService.html":{},"controllers/MenuController.html":{},"injectables/MenuService.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"controllers/RoleController.html":{},"injectables/RoleService.html":{},"controllers/SiteController.html":{},"injectables/SiteService.html":{},"controllers/TagController.html":{},"injectables/TagService.html":{},"classes/ToIntegerPipe.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{},"miscellaneous/variables.html":{}}}],["returned",{"_index":144,"title":{},"body":{"controllers/ArticleController.html":{},"controllers/CorporationController.html":{},"controllers/ErrorlogController.html":{},"controllers/GroupController.html":{},"controllers/ListController.html":{},"controllers/MenuController.html":{},"controllers/ProfileController.html":{},"controllers/RoleController.html":{},"controllers/SiteController.html":{},"controllers/TagController.html":{},"controllers/UserController.html":{}}}],["returns",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"controllers/ArticleController.html":{},"modules/ArticleModule.html":{},"injectables/ArticleService.html":{},"injectables/AuthMiddleware.html":{},"classes/BaseController.html":{},"controllers/CorporationController.html":{},"modules/CorporationModule.html":{},"injectables/CorporationService.html":{},"injectables/DatabaseConfig.html":{},"controllers/ErrorlogController.html":{},"modules/ErrorlogModule.html":{},"injectables/ErrorlogService.html":{},"controllers/GroupController.html":{},"modules/GroupModule.html":{},"injectables/GroupService.html":{},"controllers/ListController.html":{},"modules/ListModule.html":{},"injectables/ListService.html":{},"controllers/MenuController.html":{},"modules/MenuModule.html":{},"injectables/MenuService.html":{},"classes/MyLogger.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"controllers/RoleController.html":{},"modules/RoleModule.html":{},"injectables/RoleService.html":{},"controllers/SiteController.html":{},"modules/SiteModule.html":{},"injectables/SiteService.html":{},"controllers/TagController.html":{},"modules/TagModule.html":{},"injectables/TagService.html":{},"classes/ToIntegerPipe.html":{},"controllers/UserController.html":{},"classes/UserEntity.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{}}}],["riantis",{"_index":21,"title":{},"body":{"controllers/AppController.html":{}}}],["rihsrv001",{"_index":1870,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rimraf",{"_index":1829,"title":{},"body":{"dependencies.html":{}}}],["risnode",{"_index":1844,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["role",{"_index":912,"title":{},"body":{"classes/GroupEntity.html":{},"controllers/RoleController.html":{},"interfaces/RoleData.html":{},"classes/RoleEntity.html":{},"classes/RoleMenuAppEntity.html":{},"interfaces/RoleRO.html":{},"injectables/RoleService.html":{},"classes/SiteEntity.html":{},"classes/UserEntity.html":{}}}],["role'})@apiresponse({status",{"_index":1321,"title":{},"body":{"controllers/RoleController.html":{}}}],["role.controller",{"_index":1418,"title":{},"body":{"modules/RoleModule.html":{}}}],["role.description",{"_index":1449,"title":{},"body":{"injectables/RoleService.html":{}}}],["role.dto.ts",{"_index":753,"title":{},"body":{"classes/CreateRoleDto.html":{},"coverage.html":{}}}],["role.dto.ts:10",{"_index":756,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["role.dto.ts:14",{"_index":754,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["role.dto.ts:6",{"_index":755,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["role.entity",{"_index":1338,"title":{},"body":{"controllers/RoleController.html":{},"classes/RoleMenuAppEntity.html":{},"modules/RoleModule.html":{},"injectables/RoleService.html":{}}}],["role.groups",{"_index":925,"title":{},"body":{"classes/GroupEntity.html":{}}}],["role.id",{"_index":1447,"title":{},"body":{"injectables/RoleService.html":{}}}],["role.interface",{"_index":1337,"title":{},"body":{"controllers/RoleController.html":{},"injectables/RoleService.html":{}}}],["role.name",{"_index":1448,"title":{},"body":{"injectables/RoleService.html":{}}}],["role.rolemenuapps",{"_index":1397,"title":{},"body":{"classes/RoleMenuAppEntity.html":{}}}],["role.service",{"_index":1335,"title":{},"body":{"controllers/RoleController.html":{},"modules/RoleModule.html":{}}}],["role.site",{"_index":1496,"title":{},"body":{"classes/SiteEntity.html":{}}}],["role.user",{"_index":1675,"title":{},"body":{"classes/UserEntity.html":{}}}],["role/role.entity",{"_index":923,"title":{},"body":{"classes/GroupEntity.html":{},"classes/SiteEntity.html":{},"classes/UserEntity.html":{}}}],["role/role.module",{"_index":61,"title":{},"body":{"modules/AppModule.html":{}}}],["role/rolemenuapp.entity",{"_index":1095,"title":{},"body":{"classes/MenuAppEntity.html":{},"classes/RoleMenuEntryEntity.html":{}}}],["role/rolemenuentry.entity",{"_index":1154,"title":{},"body":{"classes/MenuEntryEntity.html":{},"classes/RoleMenuAppEntity.html":{}}}],["roleapp.dto.ts",{"_index":746,"title":{},"body":{"classes/CreateRoleAppDto.html":{},"coverage.html":{}}}],["roleapp.dto.ts:10",{"_index":750,"title":{},"body":{"classes/CreateRoleAppDto.html":{}}}],["roleapp.dto.ts:14",{"_index":747,"title":{},"body":{"classes/CreateRoleAppDto.html":{}}}],["roleapp.dto.ts:18",{"_index":748,"title":{},"body":{"classes/CreateRoleAppDto.html":{}}}],["roleapp.dto.ts:6",{"_index":749,"title":{},"body":{"classes/CreateRoleAppDto.html":{}}}],["rolecontroller",{"_index":1318,"title":{"controllers/RoleController.html":{}},"body":{"controllers/RoleController.html":{},"modules/RoleModule.html":{},"coverage.html":{}}}],["roledata",{"_index":1324,"title":{"interfaces/RoleData.html":{}},"body":{"controllers/RoleController.html":{},"interfaces/RoleData.html":{},"interfaces/RoleRO.html":{},"coverage.html":{}}}],["roleentity",{"_index":919,"title":{"classes/RoleEntity.html":{}},"body":{"classes/GroupEntity.html":{},"controllers/RoleController.html":{},"classes/RoleEntity.html":{},"classes/RoleMenuAppEntity.html":{},"modules/RoleModule.html":{},"injectables/RoleService.html":{},"classes/SiteEntity.html":{},"classes/UserEntity.html":{},"coverage.html":{}}}],["roleid",{"_index":1396,"title":{},"body":{"classes/RoleMenuAppEntity.html":{}}}],["rolemenuapp",{"_index":1081,"title":{},"body":{"classes/MenuAppEntity.html":{},"classes/RoleEntity.html":{},"classes/RoleMenuEntryEntity.html":{}}}],["rolemenuapp.entity",{"_index":1368,"title":{},"body":{"classes/RoleEntity.html":{}}}],["rolemenuapp.role",{"_index":1385,"title":{},"body":{"classes/RoleEntity.html":{}}}],["rolemenuapp.rolemenuappconnection",{"_index":1412,"title":{},"body":{"classes/RoleMenuEntryEntity.html":{}}}],["rolemenuappconnection",{"_index":1388,"title":{},"body":{"classes/RoleMenuAppEntity.html":{}}}],["rolemenuappentity",{"_index":1090,"title":{"classes/RoleMenuAppEntity.html":{}},"body":{"classes/MenuAppEntity.html":{},"classes/RoleEntity.html":{},"classes/RoleMenuAppEntity.html":{},"classes/RoleMenuEntryEntity.html":{},"coverage.html":{}}}],["rolemenuappid",{"_index":1402,"title":{},"body":{"classes/RoleMenuEntryEntity.html":{}}}],["rolemenuapps",{"_index":1354,"title":{},"body":{"classes/RoleEntity.html":{}}}],["rolemenuentry",{"_index":1157,"title":{},"body":{"classes/MenuEntryEntity.html":{},"classes/RoleMenuAppEntity.html":{}}}],["rolemenuentry.menuentryid",{"_index":1398,"title":{},"body":{"classes/RoleMenuAppEntity.html":{}}}],["rolemenuentry.rolemenuappid",{"_index":1158,"title":{},"body":{"classes/MenuEntryEntity.html":{}}}],["rolemenuentryentity",{"_index":1147,"title":{"classes/RoleMenuEntryEntity.html":{}},"body":{"classes/MenuEntryEntity.html":{},"classes/RoleMenuAppEntity.html":{},"classes/RoleMenuEntryEntity.html":{},"coverage.html":{}}}],["rolemodule",{"_index":45,"title":{"modules/RoleModule.html":{}},"body":{"modules/AppModule.html":{},"modules/RoleModule.html":{},"modules.html":{},"overview.html":{}}}],["rolerepository",{"_index":1424,"title":{},"body":{"injectables/RoleService.html":{}}}],["rolero",{"_index":1336,"title":{"interfaces/RoleRO.html":{}},"body":{"controllers/RoleController.html":{},"interfaces/RoleData.html":{},"interfaces/RoleRO.html":{},"injectables/RoleService.html":{},"coverage.html":{}}}],["roles",{"_index":1328,"title":{},"body":{"controllers/RoleController.html":{},"classes/RoleEntity.html":{},"classes/SiteEntity.html":{},"classes/UserEntity.html":{}}}],["roles'})@apiresponse({status",{"_index":1327,"title":{},"body":{"controllers/RoleController.html":{}}}],["roleservice",{"_index":1334,"title":{"injectables/RoleService.html":{}},"body":{"controllers/RoleController.html":{},"modules/RoleModule.html":{},"injectables/RoleService.html":{},"coverage.html":{},"overview.html":{}}}],["root",{"_index":9,"title":{},"body":{"controllers/AppController.html":{}}}],["route",{"_index":1881,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rwq",{"_index":958,"title":{},"body":{"injectables/GroupService.html":{},"controllers/ProfileController.html":{}}}],["rxjs",{"_index":1831,"title":{},"body":{"dependencies.html":{}}}],["sa",{"_index":1871,"title":{},"body":{"miscellaneous/variables.html":{}}}],["savedcorporation",{"_index":663,"title":{},"body":{"injectables/CorporationService.html":{}}}],["savederrorlog",{"_index":859,"title":{},"body":{"injectables/ErrorlogService.html":{}}}],["savedgroup",{"_index":952,"title":{},"body":{"injectables/GroupService.html":{}}}],["savedlist",{"_index":1054,"title":{},"body":{"injectables/ListService.html":{}}}],["savedmenu",{"_index":1186,"title":{},"body":{"injectables/MenuService.html":{}}}],["savedrole",{"_index":1440,"title":{},"body":{"injectables/RoleService.html":{}}}],["savedsite",{"_index":1524,"title":{},"body":{"injectables/SiteService.html":{}}}],["saveduser",{"_index":1718,"title":{},"body":{"injectables/UserService.html":{}}}],["secret",{"_index":500,"title":{},"body":{"injectables/AuthMiddleware.html":{},"classes/BaseController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["set",{"_index":1882,"title":{},"body":{"miscellaneous/variables.html":{}}}],["shared/pipes/validation.pipe",{"_index":817,"title":{},"body":{"controllers/ErrorlogController.html":{},"controllers/GroupController.html":{},"controllers/ListController.html":{},"controllers/MenuController.html":{},"controllers/RoleController.html":{},"controllers/SiteController.html":{},"controllers/UserController.html":{}}}],["single",{"_index":156,"title":{},"body":{"controllers/ArticleController.html":{},"controllers/CorporationController.html":{},"controllers/ErrorlogController.html":{},"controllers/GroupController.html":{},"controllers/ListController.html":{},"controllers/MenuController.html":{},"controllers/RoleController.html":{},"controllers/SiteController.html":{}}}],["site",{"_index":610,"title":{},"body":{"classes/CorporationEntity.html":{},"classes/RoleEntity.html":{},"controllers/SiteController.html":{},"interfaces/SiteData.html":{},"interfaces/SiteRO.html":{},"injectables/SiteService.html":{}}}],["site'})@apiresponse({status",{"_index":1453,"title":{},"body":{"controllers/SiteController.html":{}}}],["site.controller",{"_index":1501,"title":{},"body":{"modules/SiteModule.html":{}}}],["site.corporation",{"_index":611,"title":{},"body":{"classes/CorporationEntity.html":{}}}],["site.costcenter",{"_index":1533,"title":{},"body":{"injectables/SiteService.html":{}}}],["site.description",{"_index":1534,"title":{},"body":{"injectables/SiteService.html":{}}}],["site.dto.ts",{"_index":759,"title":{},"body":{"classes/CreateSiteDto.html":{},"coverage.html":{}}}],["site.dto.ts:10",{"_index":763,"title":{},"body":{"classes/CreateSiteDto.html":{}}}],["site.dto.ts:14",{"_index":760,"title":{},"body":{"classes/CreateSiteDto.html":{}}}],["site.dto.ts:18",{"_index":761,"title":{},"body":{"classes/CreateSiteDto.html":{}}}],["site.dto.ts:6",{"_index":762,"title":{},"body":{"classes/CreateSiteDto.html":{}}}],["site.entity",{"_index":1468,"title":{},"body":{"controllers/SiteController.html":{},"modules/SiteModule.html":{},"injectables/SiteService.html":{}}}],["site.id",{"_index":1531,"title":{},"body":{"injectables/SiteService.html":{}}}],["site.interface",{"_index":1467,"title":{},"body":{"controllers/SiteController.html":{},"injectables/SiteService.html":{}}}],["site.name",{"_index":1532,"title":{},"body":{"injectables/SiteService.html":{}}}],["site.roles",{"_index":1376,"title":{},"body":{"classes/RoleEntity.html":{}}}],["site.service",{"_index":1465,"title":{},"body":{"controllers/SiteController.html":{},"modules/SiteModule.html":{}}}],["site/site.entity",{"_index":608,"title":{},"body":{"classes/CorporationEntity.html":{},"classes/RoleEntity.html":{}}}],["site/site.module",{"_index":65,"title":{},"body":{"modules/AppModule.html":{}}}],["sitecontroller",{"_index":1450,"title":{"controllers/SiteController.html":{}},"body":{"controllers/SiteController.html":{},"modules/SiteModule.html":{},"coverage.html":{}}}],["sitedata",{"_index":1456,"title":{"interfaces/SiteData.html":{}},"body":{"controllers/SiteController.html":{},"interfaces/SiteData.html":{},"interfaces/SiteRO.html":{},"coverage.html":{}}}],["siteentity",{"_index":603,"title":{"classes/SiteEntity.html":{}},"body":{"classes/CorporationEntity.html":{},"classes/RoleEntity.html":{},"controllers/SiteController.html":{},"classes/SiteEntity.html":{},"modules/SiteModule.html":{},"injectables/SiteService.html":{},"coverage.html":{}}}],["siteid",{"_index":697,"title":{},"body":{"classes/CreateErrorLogDto.html":{},"interfaces/ErrorLogData.html":{},"classes/ErrorLogEntity.html":{},"interfaces/ErrorLogRO.html":{},"injectables/ErrorlogService.html":{}}}],["sitemodule",{"_index":46,"title":{"modules/SiteModule.html":{}},"body":{"modules/AppModule.html":{},"modules/SiteModule.html":{},"modules.html":{},"overview.html":{}}}],["siterepository",{"_index":1507,"title":{},"body":{"injectables/SiteService.html":{}}}],["sitero",{"_index":1466,"title":{"interfaces/SiteRO.html":{}},"body":{"controllers/SiteController.html":{},"interfaces/SiteData.html":{},"interfaces/SiteRO.html":{},"injectables/SiteService.html":{},"coverage.html":{}}}],["sites",{"_index":594,"title":{},"body":{"classes/CorporationEntity.html":{},"classes/RoleEntity.html":{},"controllers/SiteController.html":{}}}],["sites'})@apiresponse({status",{"_index":1459,"title":{},"body":{"controllers/SiteController.html":{}}}],["siteservice",{"_index":1464,"title":{"injectables/SiteService.html":{}},"body":{"controllers/SiteController.html":{},"modules/SiteModule.html":{},"injectables/SiteService.html":{},"coverage.html":{},"overview.html":{}}}],["slug",{"_index":128,"title":{},"body":{"controllers/ArticleController.html":{},"interfaces/ArticleData.html":{},"classes/ArticleEntity.html":{},"interfaces/ArticleRO.html":{},"injectables/ArticleService.html":{},"interfaces/ArticlesRO.html":{},"interfaces/CommentsRO.html":{},"interfaces/CorporationData.html":{},"classes/CorporationEntity.html":{},"interfaces/CorporationRO.html":{},"injectables/CorporationService.html":{},"controllers/ListController.html":{},"controllers/MenuController.html":{},"classes/SiteEntity.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["slug(title",{"_index":468,"title":{},"body":{"injectables/ArticleService.html":{}}}],["slugify",{"_index":353,"title":{},"body":{"injectables/ArticleService.html":{}}}],["slugify(title",{"_index":377,"title":{},"body":{"injectables/ArticleService.html":{}}}],["sortid",{"_index":738,"title":{},"body":{"classes/CreateMenuEntryDto.html":{},"interfaces/MenuAppData.html":{},"interfaces/MenuAppEntry.html":{},"classes/MenuEntryEntity.html":{},"interfaces/MenuEntryRO.html":{},"interfaces/MenuRO.html":{},"injectables/MenuService.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/ArticleController.html":{},"interfaces/ArticleData.html":{},"classes/ArticleEntity.html":{},"modules/ArticleModule.html":{},"interfaces/ArticleRO.html":{},"injectables/ArticleService.html":{},"interfaces/ArticlesRO.html":{},"injectables/AuthMiddleware.html":{},"classes/BaseController.html":{},"classes/Comment.html":{},"controllers/CommentController.html":{},"modules/CommentModule.html":{},"injectables/CommentService.html":{},"interfaces/CommentsRO.html":{},"controllers/CorporationController.html":{},"interfaces/CorporationData.html":{},"classes/CorporationEntity.html":{},"modules/CorporationModule.html":{},"interfaces/CorporationRO.html":{},"injectables/CorporationService.html":{},"classes/CreateArticleDto.html":{},"classes/CreateCommentDto.html":{},"classes/CreateCorporationDto.html":{},"classes/CreateErrorLogDto.html":{},"classes/CreateGroupDto.html":{},"classes/CreateListDto.html":{},"classes/CreateListEntryDto.html":{},"classes/CreateMenuDto.html":{},"classes/CreateMenuEntryDto.html":{},"classes/CreateRoleAppDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSiteDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabaseConfig.html":{},"interfaces/ErrorLogData.html":{},"classes/ErrorLogEntity.html":{},"interfaces/ErrorLogRO.html":{},"controllers/ErrorlogController.html":{},"modules/ErrorlogModule.html":{},"injectables/ErrorlogService.html":{},"classes/FollowsEntity.html":{},"controllers/GroupController.html":{},"interfaces/GroupData.html":{},"classes/GroupEntity.html":{},"modules/GroupModule.html":{},"interfaces/GroupRO.html":{},"injectables/GroupService.html":{},"controllers/ListController.html":{},"interfaces/ListData.html":{},"classes/ListEntity.html":{},"interfaces/ListEntry.html":{},"classes/ListEntryEntity.html":{},"interfaces/ListEntryRO.html":{},"modules/ListModule.html":{},"interfaces/ListRO.html":{},"injectables/ListService.html":{},"classes/LoginUserDto.html":{},"interfaces/MenuAppData.html":{},"classes/MenuAppEntity.html":{},"interfaces/MenuAppEntry.html":{},"controllers/MenuController.html":{},"classes/MenuEntryEntity.html":{},"interfaces/MenuEntryRO.html":{},"modules/MenuModule.html":{},"interfaces/MenuRO.html":{},"injectables/MenuService.html":{},"classes/MyLogger.html":{},"controllers/ProfileController.html":{},"interfaces/ProfileData.html":{},"modules/ProfileModule.html":{},"interfaces/ProfileRO.html":{},"injectables/ProfileService.html":{},"controllers/RoleController.html":{},"interfaces/RoleData.html":{},"classes/RoleEntity.html":{},"classes/RoleMenuAppEntity.html":{},"classes/RoleMenuEntryEntity.html":{},"modules/RoleModule.html":{},"interfaces/RoleRO.html":{},"injectables/RoleService.html":{},"controllers/SiteController.html":{},"interfaces/SiteData.html":{},"classes/SiteEntity.html":{},"modules/SiteModule.html":{},"interfaces/SiteRO.html":{},"injectables/SiteService.html":{},"controllers/SqldirectController.html":{},"modules/SqldirectModule.html":{},"injectables/SqldirectService.html":{},"controllers/TagController.html":{},"classes/TagEntity.html":{},"modules/TagModule.html":{},"injectables/TagService.html":{},"classes/ToIntegerPipe.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"interfaces/UserData.html":{},"classes/UserEntity.html":{},"modules/UserModule.html":{},"interfaces/UserRO.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{},"controllers/ViewController.html":{},"modules/ViewModule.html":{},"injectables/ViewService.html":{}}}],["sqldirect",{"_index":1537,"title":{},"body":{"controllers/SqldirectController.html":{}}}],["sqldirect.controller",{"_index":1544,"title":{},"body":{"modules/SqldirectModule.html":{}}}],["sqldirect.service",{"_index":1545,"title":{},"body":{"modules/SqldirectModule.html":{}}}],["sqldirectcontroller",{"_index":1535,"title":{"controllers/SqldirectController.html":{}},"body":{"controllers/SqldirectController.html":{},"modules/SqldirectModule.html":{},"coverage.html":{}}}],["sqldirectmodule",{"_index":1539,"title":{"modules/SqldirectModule.html":{}},"body":{"modules/SqldirectModule.html":{},"modules.html":{},"overview.html":{}}}],["sqldirectservice",{"_index":1542,"title":{"injectables/SqldirectService.html":{}},"body":{"modules/SqldirectModule.html":{},"injectables/SqldirectService.html":{},"coverage.html":{},"overview.html":{}}}],["src/**/**.entity{.ts,.js",{"_index":1875,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../article.service.ts",{"_index":1862,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../config.env.ts",{"_index":1860,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":1841,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../user.decorator.ts",{"_index":1863,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../user.service.ts",{"_index":1861,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:6",{"_index":13,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":52,"title":{},"body":{"modules/AppModule.html":{}}}],["src/article/article.controller.ts",{"_index":86,"title":{},"body":{"controllers/ArticleController.html":{},"coverage.html":{}}}],["src/article/article.controller.ts:106",{"_index":140,"title":{},"body":{"controllers/ArticleController.html":{}}}],["src/article/article.controller.ts:114",{"_index":167,"title":{},"body":{"controllers/ArticleController.html":{}}}],["src/article/article.controller.ts:27",{"_index":146,"title":{},"body":{"controllers/ArticleController.html":{}}}],["src/article/article.controller.ts:35",{"_index":163,"title":{},"body":{"controllers/ArticleController.html":{}}}],["src/article/article.controller.ts:43",{"_index":158,"title":{},"body":{"controllers/ArticleController.html":{}}}],["src/article/article.controller.ts:51",{"_index":154,"title":{},"body":{"controllers/ArticleController.html":{}}}],["src/article/article.controller.ts:60",{"_index":115,"title":{},"body":{"controllers/ArticleController.html":{}}}],["src/article/article.controller.ts:69",{"_index":171,"title":{},"body":{"controllers/ArticleController.html":{}}}],["src/article/article.controller.ts:79",{"_index":132,"title":{},"body":{"controllers/ArticleController.html":{}}}],["src/article/article.controller.ts:88",{"_index":127,"title":{},"body":{"controllers/ArticleController.html":{}}}],["src/article/article.controller.ts:97",{"_index":136,"title":{},"body":{"controllers/ArticleController.html":{}}}],["src/article/article.entity.ts",{"_index":264,"title":{},"body":{"classes/ArticleEntity.html":{},"coverage.html":{}}}],["src/article/article.entity.ts:12",{"_index":293,"title":{},"body":{"classes/ArticleEntity.html":{}}}],["src/article/article.entity.ts:15",{"_index":297,"title":{},"body":{"classes/ArticleEntity.html":{}}}],["src/article/article.entity.ts:18",{"_index":285,"title":{},"body":{"classes/ArticleEntity.html":{}}}],["src/article/article.entity.ts:21",{"_index":275,"title":{},"body":{"classes/ArticleEntity.html":{}}}],["src/article/article.entity.ts:24",{"_index":282,"title":{},"body":{"classes/ArticleEntity.html":{}}}],["src/article/article.entity.ts:27",{"_index":281,"title":{},"body":{"classes/ArticleEntity.html":{}}}],["src/article/article.entity.ts:30",{"_index":299,"title":{},"body":{"classes/ArticleEntity.html":{}}}],["src/article/article.entity.ts:33",{"_index":298,"title":{},"body":{"classes/ArticleEntity.html":{}}}],["src/article/article.entity.ts:36",{"_index":296,"title":{},"body":{"classes/ArticleEntity.html":{}}}],["src/article/article.entity.ts:39",{"_index":273,"title":{},"body":{"classes/ArticleEntity.html":{}}}],["src/article/article.entity.ts:43",{"_index":279,"title":{},"body":{"classes/ArticleEntity.html":{}}}],["src/article/article.entity.ts:46",{"_index":287,"title":{},"body":{"classes/ArticleEntity.html":{}}}],["src/article/article.entity.ts:9",{"_index":289,"title":{},"body":{"classes/ArticleEntity.html":{}}}],["src/article/article.interface.ts",{"_index":249,"title":{},"body":{"interfaces/ArticleData.html":{},"interfaces/ArticleRO.html":{},"interfaces/ArticlesRO.html":{},"interfaces/CommentsRO.html":{},"coverage.html":{}}}],["src/article/article.module.ts",{"_index":318,"title":{},"body":{"modules/ArticleModule.html":{}}}],["src/article/article.module.ts:20",{"_index":323,"title":{},"body":{"modules/ArticleModule.html":{}}}],["src/article/article.service.ts",{"_index":350,"title":{},"body":{"injectables/ArticleService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/article/article.service.ts:101",{"_index":363,"title":{},"body":{"injectables/ArticleService.html":{}}}],["src/article/article.service.ts:114",{"_index":368,"title":{},"body":{"injectables/ArticleService.html":{}}}],["src/article/article.service.ts:131",{"_index":370,"title":{},"body":{"injectables/ArticleService.html":{}}}],["src/article/article.service.ts:14",{"_index":360,"title":{},"body":{"injectables/ArticleService.html":{}}}],["src/article/article.service.ts:147",{"_index":380,"title":{},"body":{"injectables/ArticleService.html":{}}}],["src/article/article.service.ts:165",{"_index":372,"title":{},"body":{"injectables/ArticleService.html":{}}}],["src/article/article.service.ts:170",{"_index":364,"title":{},"body":{"injectables/ArticleService.html":{}}}],["src/article/article.service.ts:190",{"_index":382,"title":{},"body":{"injectables/ArticleService.html":{}}}],["src/article/article.service.ts:197",{"_index":366,"title":{},"body":{"injectables/ArticleService.html":{}}}],["src/article/article.service.ts:201",{"_index":378,"title":{},"body":{"injectables/ArticleService.html":{}}}],["src/article/article.service.ts:26",{"_index":371,"title":{},"body":{"injectables/ArticleService.html":{}}}],["src/article/article.service.ts:66",{"_index":374,"title":{},"body":{"injectables/ArticleService.html":{}}}],["src/article/article.service.ts:96",{"_index":376,"title":{},"body":{"injectables/ArticleService.html":{}}}],["src/article/comment.entity.ts",{"_index":532,"title":{},"body":{"classes/Comment.html":{},"coverage.html":{}}}],["src/article/comment.entity.ts:11",{"_index":534,"title":{},"body":{"classes/Comment.html":{}}}],["src/article/comment.entity.ts:14",{"_index":533,"title":{},"body":{"classes/Comment.html":{}}}],["src/article/comment.entity.ts:8",{"_index":535,"title":{},"body":{"classes/Comment.html":{}}}],["src/article/dto/create",{"_index":674,"title":{},"body":{"classes/CreateArticleDto.html":{},"classes/CreateCommentDto.html":{},"coverage.html":{}}}],["src/config/config.env.ts",{"_index":1790,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/config/database.config.ts",{"_index":773,"title":{},"body":{"injectables/DatabaseConfig.html":{},"coverage.html":{}}}],["src/config/database.config.ts:6",{"_index":775,"title":{},"body":{"injectables/DatabaseConfig.html":{}}}],["src/config/database.config.ts:8",{"_index":776,"title":{},"body":{"injectables/DatabaseConfig.html":{}}}],["src/corporation/corporation.controller.ts",{"_index":544,"title":{},"body":{"controllers/CorporationController.html":{},"coverage.html":{}}}],["src/corporation/corporation.controller.ts:29",{"_index":564,"title":{},"body":{"controllers/CorporationController.html":{}}}],["src/corporation/corporation.controller.ts:37",{"_index":567,"title":{},"body":{"controllers/CorporationController.html":{}}}],["src/corporation/corporation.controller.ts:46",{"_index":552,"title":{},"body":{"controllers/CorporationController.html":{}}}],["src/corporation/corporation.controller.ts:66",{"_index":561,"title":{},"body":{"controllers/CorporationController.html":{}}}],["src/corporation/corporation.entity.ts",{"_index":593,"title":{},"body":{"classes/CorporationEntity.html":{},"coverage.html":{}}}],["src/corporation/corporation.entity.ts:11",{"_index":605,"title":{},"body":{"classes/CorporationEntity.html":{}}}],["src/corporation/corporation.entity.ts:14",{"_index":602,"title":{},"body":{"classes/CorporationEntity.html":{}}}],["src/corporation/corporation.entity.ts:17",{"_index":597,"title":{},"body":{"classes/CorporationEntity.html":{}}}],["src/corporation/corporation.entity.ts:20",{"_index":600,"title":{},"body":{"classes/CorporationEntity.html":{}}}],["src/corporation/corporation.entity.ts:23",{"_index":596,"title":{},"body":{"classes/CorporationEntity.html":{}}}],["src/corporation/corporation.entity.ts:26",{"_index":599,"title":{},"body":{"classes/CorporationEntity.html":{}}}],["src/corporation/corporation.entity.ts:29",{"_index":598,"title":{},"body":{"classes/CorporationEntity.html":{}}}],["src/corporation/corporation.entity.ts:32",{"_index":607,"title":{},"body":{"classes/CorporationEntity.html":{}}}],["src/corporation/corporation.entity.ts:35",{"_index":606,"title":{},"body":{"classes/CorporationEntity.html":{}}}],["src/corporation/corporation.entity.ts:38",{"_index":604,"title":{},"body":{"classes/CorporationEntity.html":{}}}],["src/corporation/corporation.entity.ts:8",{"_index":601,"title":{},"body":{"classes/CorporationEntity.html":{}}}],["src/corporation/corporation.interface.ts",{"_index":590,"title":{},"body":{"interfaces/CorporationData.html":{},"interfaces/CorporationRO.html":{},"coverage.html":{}}}],["src/corporation/corporation.module.ts",{"_index":614,"title":{},"body":{"modules/CorporationModule.html":{}}}],["src/corporation/corporation.module.ts:17",{"_index":615,"title":{},"body":{"modules/CorporationModule.html":{}}}],["src/corporation/corporation.service.ts",{"_index":618,"title":{},"body":{"injectables/CorporationService.html":{},"coverage.html":{}}}],["src/corporation/corporation.service.ts:13",{"_index":622,"title":{},"body":{"injectables/CorporationService.html":{}}}],["src/corporation/corporation.service.ts:19",{"_index":629,"title":{},"body":{"injectables/CorporationService.html":{}}}],["src/corporation/corporation.service.ts:23",{"_index":633,"title":{},"body":{"injectables/CorporationService.html":{}}}],["src/corporation/corporation.service.ts:31",{"_index":631,"title":{},"body":{"injectables/CorporationService.html":{}}}],["src/corporation/corporation.service.ts:42",{"_index":627,"title":{},"body":{"injectables/CorporationService.html":{}}}],["src/corporation/corporation.service.ts:64",{"_index":635,"title":{},"body":{"injectables/CorporationService.html":{}}}],["src/corporation/corporation.service.ts:79",{"_index":628,"title":{},"body":{"injectables/CorporationService.html":{}}}],["src/corporation/corporation.service.ts:83",{"_index":625,"title":{},"body":{"injectables/CorporationService.html":{}}}],["src/corporation/dto/create",{"_index":682,"title":{},"body":{"classes/CreateCorporationDto.html":{},"coverage.html":{}}}],["src/errorlog/dto/create",{"_index":693,"title":{},"body":{"classes/CreateErrorLogDto.html":{},"coverage.html":{}}}],["src/errorlog/errorlog.controller.ts",{"_index":798,"title":{},"body":{"controllers/ErrorlogController.html":{},"coverage.html":{}}}],["src/errorlog/errorlog.controller.ts:31",{"_index":806,"title":{},"body":{"controllers/ErrorlogController.html":{}}}],["src/errorlog/errorlog.controller.ts:39",{"_index":807,"title":{},"body":{"controllers/ErrorlogController.html":{}}}],["src/errorlog/errorlog.controller.ts:49",{"_index":802,"title":{},"body":{"controllers/ErrorlogController.html":{}}}],["src/errorlog/errorlog.controller.ts:58",{"_index":809,"title":{},"body":{"controllers/ErrorlogController.html":{}}}],["src/errorlog/errorlog.controller.ts:68",{"_index":803,"title":{},"body":{"controllers/ErrorlogController.html":{}}}],["src/errorlog/errorlog.entity.ts",{"_index":783,"title":{},"body":{"classes/ErrorLogEntity.html":{},"coverage.html":{}}}],["src/errorlog/errorlog.entity.ts:10",{"_index":792,"title":{},"body":{"classes/ErrorLogEntity.html":{}}}],["src/errorlog/errorlog.entity.ts:13",{"_index":786,"title":{},"body":{"classes/ErrorLogEntity.html":{}}}],["src/errorlog/errorlog.entity.ts:16",{"_index":788,"title":{},"body":{"classes/ErrorLogEntity.html":{}}}],["src/errorlog/errorlog.entity.ts:19",{"_index":790,"title":{},"body":{"classes/ErrorLogEntity.html":{}}}],["src/errorlog/errorlog.entity.ts:23",{"_index":785,"title":{},"body":{"classes/ErrorLogEntity.html":{}}}],["src/errorlog/errorlog.entity.ts:26",{"_index":784,"title":{},"body":{"classes/ErrorLogEntity.html":{}}}],["src/errorlog/errorlog.entity.ts:29",{"_index":794,"title":{},"body":{"classes/ErrorLogEntity.html":{}}}],["src/errorlog/errorlog.entity.ts:32",{"_index":793,"title":{},"body":{"classes/ErrorLogEntity.html":{}}}],["src/errorlog/errorlog.entity.ts:7",{"_index":791,"title":{},"body":{"classes/ErrorLogEntity.html":{}}}],["src/errorlog/errorlog.interface.ts",{"_index":780,"title":{},"body":{"interfaces/ErrorLogData.html":{},"interfaces/ErrorLogRO.html":{},"coverage.html":{}}}],["src/errorlog/errorlog.module.ts",{"_index":830,"title":{},"body":{"modules/ErrorlogModule.html":{}}}],["src/errorlog/errorlog.module.ts:17",{"_index":831,"title":{},"body":{"modules/ErrorlogModule.html":{}}}],["src/errorlog/errorlog.service.ts",{"_index":834,"title":{},"body":{"injectables/ErrorlogService.html":{},"coverage.html":{}}}],["src/errorlog/errorlog.service.ts:13",{"_index":837,"title":{},"body":{"injectables/ErrorlogService.html":{}}}],["src/errorlog/errorlog.service.ts:19",{"_index":843,"title":{},"body":{"injectables/ErrorlogService.html":{}}}],["src/errorlog/errorlog.service.ts:23",{"_index":844,"title":{},"body":{"injectables/ErrorlogService.html":{}}}],["src/errorlog/errorlog.service.ts:34",{"_index":841,"title":{},"body":{"injectables/ErrorlogService.html":{}}}],["src/errorlog/errorlog.service.ts:57",{"_index":845,"title":{},"body":{"injectables/ErrorlogService.html":{}}}],["src/errorlog/errorlog.service.ts:72",{"_index":842,"title":{},"body":{"injectables/ErrorlogService.html":{}}}],["src/errorlog/errorlog.service.ts:76",{"_index":840,"title":{},"body":{"injectables/ErrorlogService.html":{}}}],["src/group/dto/create",{"_index":707,"title":{},"body":{"classes/CreateGroupDto.html":{},"coverage.html":{}}}],["src/group/group.controller.ts",{"_index":876,"title":{},"body":{"controllers/GroupController.html":{},"coverage.html":{}}}],["src/group/group.controller.ts:33",{"_index":887,"title":{},"body":{"controllers/GroupController.html":{}}}],["src/group/group.controller.ts:43",{"_index":889,"title":{},"body":{"controllers/GroupController.html":{}}}],["src/group/group.controller.ts:56",{"_index":881,"title":{},"body":{"controllers/GroupController.html":{}}}],["src/group/group.controller.ts:71",{"_index":892,"title":{},"body":{"controllers/GroupController.html":{}}}],["src/group/group.controller.ts:82",{"_index":883,"title":{},"body":{"controllers/GroupController.html":{}}}],["src/group/group.entity.ts",{"_index":911,"title":{},"body":{"classes/GroupEntity.html":{},"coverage.html":{}}}],["src/group/group.entity.ts:11",{"_index":918,"title":{},"body":{"classes/GroupEntity.html":{}}}],["src/group/group.entity.ts:14",{"_index":916,"title":{},"body":{"classes/GroupEntity.html":{}}}],["src/group/group.entity.ts:17",{"_index":913,"title":{},"body":{"classes/GroupEntity.html":{}}}],["src/group/group.entity.ts:20",{"_index":915,"title":{},"body":{"classes/GroupEntity.html":{}}}],["src/group/group.entity.ts:23",{"_index":914,"title":{},"body":{"classes/GroupEntity.html":{}}}],["src/group/group.entity.ts:26",{"_index":922,"title":{},"body":{"classes/GroupEntity.html":{}}}],["src/group/group.entity.ts:29",{"_index":921,"title":{},"body":{"classes/GroupEntity.html":{}}}],["src/group/group.entity.ts:32",{"_index":920,"title":{},"body":{"classes/GroupEntity.html":{}}}],["src/group/group.entity.ts:8",{"_index":917,"title":{},"body":{"classes/GroupEntity.html":{}}}],["src/group/group.interface.ts",{"_index":910,"title":{},"body":{"interfaces/GroupData.html":{},"interfaces/GroupRO.html":{},"coverage.html":{}}}],["src/group/group.module.ts",{"_index":928,"title":{},"body":{"modules/GroupModule.html":{}}}],["src/group/group.module.ts:17",{"_index":929,"title":{},"body":{"modules/GroupModule.html":{}}}],["src/group/group.service.ts",{"_index":932,"title":{},"body":{"injectables/GroupService.html":{},"coverage.html":{}}}],["src/group/group.service.ts:13",{"_index":935,"title":{},"body":{"injectables/GroupService.html":{}}}],["src/group/group.service.ts:19",{"_index":941,"title":{},"body":{"injectables/GroupService.html":{}}}],["src/group/group.service.ts:23",{"_index":943,"title":{},"body":{"injectables/GroupService.html":{}}}],["src/group/group.service.ts:31",{"_index":939,"title":{},"body":{"injectables/GroupService.html":{}}}],["src/group/group.service.ts:52",{"_index":944,"title":{},"body":{"injectables/GroupService.html":{}}}],["src/group/group.service.ts:60",{"_index":940,"title":{},"body":{"injectables/GroupService.html":{}}}],["src/group/group.service.ts:67",{"_index":942,"title":{},"body":{"injectables/GroupService.html":{}}}],["src/group/group.service.ts:78",{"_index":938,"title":{},"body":{"injectables/GroupService.html":{}}}],["src/list/dto/create",{"_index":713,"title":{},"body":{"classes/CreateListDto.html":{},"classes/CreateListEntryDto.html":{},"coverage.html":{}}}],["src/list/list.controller.ts",{"_index":966,"title":{},"body":{"controllers/ListController.html":{},"coverage.html":{}}}],["src/list/list.controller.ts:33",{"_index":977,"title":{},"body":{"controllers/ListController.html":{}}}],["src/list/list.controller.ts:41",{"_index":978,"title":{},"body":{"controllers/ListController.html":{}}}],["src/list/list.controller.ts:51",{"_index":972,"title":{},"body":{"controllers/ListController.html":{}}}],["src/list/list.controller.ts:60",{"_index":980,"title":{},"body":{"controllers/ListController.html":{}}}],["src/list/list.controller.ts:69",{"_index":975,"title":{},"body":{"controllers/ListController.html":{}}}],["src/list/list.entity.ts",{"_index":1003,"title":{},"body":{"classes/ListEntity.html":{},"coverage.html":{}}}],["src/list/list.entity.ts:11",{"_index":1012,"title":{},"body":{"classes/ListEntity.html":{}}}],["src/list/list.entity.ts:14",{"_index":1007,"title":{},"body":{"classes/ListEntity.html":{}}}],["src/list/list.entity.ts:17",{"_index":1004,"title":{},"body":{"classes/ListEntity.html":{}}}],["src/list/list.entity.ts:20",{"_index":1006,"title":{},"body":{"classes/ListEntity.html":{}}}],["src/list/list.entity.ts:23",{"_index":1005,"title":{},"body":{"classes/ListEntity.html":{}}}],["src/list/list.entity.ts:26",{"_index":1014,"title":{},"body":{"classes/ListEntity.html":{}}}],["src/list/list.entity.ts:29",{"_index":1013,"title":{},"body":{"classes/ListEntity.html":{}}}],["src/list/list.entity.ts:32",{"_index":1010,"title":{},"body":{"classes/ListEntity.html":{}}}],["src/list/list.entity.ts:8",{"_index":1008,"title":{},"body":{"classes/ListEntity.html":{}}}],["src/list/list.interface.ts",{"_index":1000,"title":{},"body":{"interfaces/ListData.html":{},"interfaces/ListEntry.html":{},"interfaces/ListEntryRO.html":{},"interfaces/ListRO.html":{},"coverage.html":{}}}],["src/list/list.module.ts",{"_index":1029,"title":{},"body":{"modules/ListModule.html":{}}}],["src/list/list.module.ts:17",{"_index":1030,"title":{},"body":{"modules/ListModule.html":{}}}],["src/list/list.service.ts",{"_index":1033,"title":{},"body":{"injectables/ListService.html":{},"coverage.html":{}}}],["src/list/list.service.ts:15",{"_index":1036,"title":{},"body":{"injectables/ListService.html":{}}}],["src/list/list.service.ts:21",{"_index":1042,"title":{},"body":{"injectables/ListService.html":{}}}],["src/list/list.service.ts:26",{"_index":1044,"title":{},"body":{"injectables/ListService.html":{}}}],["src/list/list.service.ts:34",{"_index":1040,"title":{},"body":{"injectables/ListService.html":{}}}],["src/list/list.service.ts:55",{"_index":1045,"title":{},"body":{"injectables/ListService.html":{}}}],["src/list/list.service.ts:62",{"_index":1041,"title":{},"body":{"injectables/ListService.html":{}}}],["src/list/list.service.ts:66",{"_index":1043,"title":{},"body":{"injectables/ListService.html":{}}}],["src/list/list.service.ts:84",{"_index":1039,"title":{},"body":{"injectables/ListService.html":{}}}],["src/list/listentry.entity.ts",{"_index":1019,"title":{},"body":{"classes/ListEntryEntity.html":{},"coverage.html":{}}}],["src/list/listentry.entity.ts:11",{"_index":1023,"title":{},"body":{"classes/ListEntryEntity.html":{}}}],["src/list/listentry.entity.ts:14",{"_index":1020,"title":{},"body":{"classes/ListEntryEntity.html":{}}}],["src/list/listentry.entity.ts:17",{"_index":1024,"title":{},"body":{"classes/ListEntryEntity.html":{}}}],["src/list/listentry.entity.ts:20",{"_index":1022,"title":{},"body":{"classes/ListEntryEntity.html":{}}}],["src/list/listentry.entity.ts:8",{"_index":1021,"title":{},"body":{"classes/ListEntryEntity.html":{}}}],["src/main.ts",{"_index":1795,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/menu/dto/create",{"_index":727,"title":{},"body":{"classes/CreateMenuDto.html":{},"classes/CreateMenuEntryDto.html":{},"coverage.html":{}}}],["src/menu/menu.controller.ts",{"_index":1100,"title":{},"body":{"controllers/MenuController.html":{},"coverage.html":{}}}],["src/menu/menu.controller.ts:33",{"_index":1111,"title":{},"body":{"controllers/MenuController.html":{}}}],["src/menu/menu.controller.ts:41",{"_index":1113,"title":{},"body":{"controllers/MenuController.html":{}}}],["src/menu/menu.controller.ts:51",{"_index":1106,"title":{},"body":{"controllers/MenuController.html":{}}}],["src/menu/menu.controller.ts:60",{"_index":1115,"title":{},"body":{"controllers/MenuController.html":{}}}],["src/menu/menu.controller.ts:69",{"_index":1109,"title":{},"body":{"controllers/MenuController.html":{}}}],["src/menu/menu.interface.ts",{"_index":1070,"title":{},"body":{"interfaces/MenuAppData.html":{},"interfaces/MenuAppEntry.html":{},"interfaces/MenuEntryRO.html":{},"interfaces/MenuRO.html":{},"coverage.html":{}}}],["src/menu/menu.module.ts",{"_index":1161,"title":{},"body":{"modules/MenuModule.html":{}}}],["src/menu/menu.module.ts:17",{"_index":1162,"title":{},"body":{"modules/MenuModule.html":{}}}],["src/menu/menu.service.ts",{"_index":1165,"title":{},"body":{"injectables/MenuService.html":{},"coverage.html":{}}}],["src/menu/menu.service.ts:14",{"_index":1168,"title":{},"body":{"injectables/MenuService.html":{}}}],["src/menu/menu.service.ts:20",{"_index":1174,"title":{},"body":{"injectables/MenuService.html":{}}}],["src/menu/menu.service.ts:24",{"_index":1176,"title":{},"body":{"injectables/MenuService.html":{}}}],["src/menu/menu.service.ts:32",{"_index":1172,"title":{},"body":{"injectables/MenuService.html":{}}}],["src/menu/menu.service.ts:54",{"_index":1177,"title":{},"body":{"injectables/MenuService.html":{}}}],["src/menu/menu.service.ts:61",{"_index":1173,"title":{},"body":{"injectables/MenuService.html":{}}}],["src/menu/menu.service.ts:65",{"_index":1175,"title":{},"body":{"injectables/MenuService.html":{}}}],["src/menu/menu.service.ts:77",{"_index":1171,"title":{},"body":{"injectables/MenuService.html":{}}}],["src/menu/menuapp.entity.ts",{"_index":1080,"title":{},"body":{"classes/MenuAppEntity.html":{},"coverage.html":{}}}],["src/menu/menuapp.entity.ts:12",{"_index":1089,"title":{},"body":{"classes/MenuAppEntity.html":{}}}],["src/menu/menuapp.entity.ts:15",{"_index":1086,"title":{},"body":{"classes/MenuAppEntity.html":{}}}],["src/menu/menuapp.entity.ts:18",{"_index":1082,"title":{},"body":{"classes/MenuAppEntity.html":{}}}],["src/menu/menuapp.entity.ts:21",{"_index":1083,"title":{},"body":{"classes/MenuAppEntity.html":{}}}],["src/menu/menuapp.entity.ts:24",{"_index":1085,"title":{},"body":{"classes/MenuAppEntity.html":{}}}],["src/menu/menuapp.entity.ts:27",{"_index":1084,"title":{},"body":{"classes/MenuAppEntity.html":{}}}],["src/menu/menuapp.entity.ts:30",{"_index":1094,"title":{},"body":{"classes/MenuAppEntity.html":{}}}],["src/menu/menuapp.entity.ts:33",{"_index":1093,"title":{},"body":{"classes/MenuAppEntity.html":{}}}],["src/menu/menuapp.entity.ts:36",{"_index":1088,"title":{},"body":{"classes/MenuAppEntity.html":{}}}],["src/menu/menuapp.entity.ts:39",{"_index":1092,"title":{},"body":{"classes/MenuAppEntity.html":{}}}],["src/menu/menuapp.entity.ts:9",{"_index":1087,"title":{},"body":{"classes/MenuAppEntity.html":{}}}],["src/menu/menuentry.entity.ts",{"_index":1132,"title":{},"body":{"classes/MenuEntryEntity.html":{},"coverage.html":{}}}],["src/menu/menuentry.entity.ts:12",{"_index":1139,"title":{},"body":{"classes/MenuEntryEntity.html":{}}}],["src/menu/menuentry.entity.ts:15",{"_index":1150,"title":{},"body":{"classes/MenuEntryEntity.html":{}}}],["src/menu/menuentry.entity.ts:18",{"_index":1140,"title":{},"body":{"classes/MenuEntryEntity.html":{}}}],["src/menu/menuentry.entity.ts:21",{"_index":1144,"title":{},"body":{"classes/MenuEntryEntity.html":{}}}],["src/menu/menuentry.entity.ts:24",{"_index":1138,"title":{},"body":{"classes/MenuEntryEntity.html":{}}}],["src/menu/menuentry.entity.ts:27",{"_index":1137,"title":{},"body":{"classes/MenuEntryEntity.html":{}}}],["src/menu/menuentry.entity.ts:30",{"_index":1149,"title":{},"body":{"classes/MenuEntryEntity.html":{}}}],["src/menu/menuentry.entity.ts:33",{"_index":1143,"title":{},"body":{"classes/MenuEntryEntity.html":{}}}],["src/menu/menuentry.entity.ts:36",{"_index":1141,"title":{},"body":{"classes/MenuEntryEntity.html":{}}}],["src/menu/menuentry.entity.ts:39",{"_index":1153,"title":{},"body":{"classes/MenuEntryEntity.html":{}}}],["src/menu/menuentry.entity.ts:42",{"_index":1151,"title":{},"body":{"classes/MenuEntryEntity.html":{}}}],["src/menu/menuentry.entity.ts:45",{"_index":1146,"title":{},"body":{"classes/MenuEntryEntity.html":{}}}],["src/menu/menuentry.entity.ts:48",{"_index":1148,"title":{},"body":{"classes/MenuEntryEntity.html":{}}}],["src/menu/menuentry.entity.ts:9",{"_index":1145,"title":{},"body":{"classes/MenuEntryEntity.html":{}}}],["src/middleware/logger.service.ts",{"_index":1198,"title":{},"body":{"classes/MyLogger.html":{},"coverage.html":{}}}],["src/middleware/logger.service.ts:10",{"_index":1216,"title":{},"body":{"classes/MyLogger.html":{}}}],["src/middleware/logger.service.ts:13",{"_index":1206,"title":{},"body":{"classes/MyLogger.html":{}}}],["src/middleware/logger.service.ts:16",{"_index":1214,"title":{},"body":{"classes/MyLogger.html":{}}}],["src/middleware/logger.service.ts:4",{"_index":1212,"title":{},"body":{"classes/MyLogger.html":{}}}],["src/middleware/logger.service.ts:7",{"_index":1210,"title":{},"body":{"classes/MyLogger.html":{}}}],["src/profile/follows.entity.ts",{"_index":869,"title":{},"body":{"classes/FollowsEntity.html":{},"coverage.html":{}}}],["src/profile/follows.entity.ts:10",{"_index":871,"title":{},"body":{"classes/FollowsEntity.html":{}}}],["src/profile/follows.entity.ts:13",{"_index":872,"title":{},"body":{"classes/FollowsEntity.html":{}}}],["src/profile/follows.entity.ts:7",{"_index":873,"title":{},"body":{"classes/FollowsEntity.html":{}}}],["src/profile/profile.controller.ts",{"_index":1219,"title":{},"body":{"controllers/ProfileController.html":{},"coverage.html":{}}}],["src/profile/profile.controller.ts:26",{"_index":1231,"title":{},"body":{"controllers/ProfileController.html":{}}}],["src/profile/profile.controller.ts:34",{"_index":1228,"title":{},"body":{"controllers/ProfileController.html":{}}}],["src/profile/profile.controller.ts:45",{"_index":1234,"title":{},"body":{"controllers/ProfileController.html":{}}}],["src/profile/profile.interface.ts",{"_index":1253,"title":{},"body":{"interfaces/ProfileData.html":{},"interfaces/ProfileRO.html":{},"coverage.html":{}}}],["src/profile/profile.module.ts",{"_index":1260,"title":{},"body":{"modules/ProfileModule.html":{}}}],["src/profile/profile.module.ts:19",{"_index":1261,"title":{},"body":{"modules/ProfileModule.html":{}}}],["src/profile/profile.service.ts",{"_index":1268,"title":{},"body":{"injectables/ProfileService.html":{},"coverage.html":{}}}],["src/profile/profile.service.ts:11",{"_index":1271,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/profile/profile.service.ts:19",{"_index":1272,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/profile/profile.service.ts:23",{"_index":1275,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/profile/profile.service.ts:30",{"_index":1280,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/profile/profile.service.ts:50",{"_index":1282,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/profile/profile.service.ts:81",{"_index":1285,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/role/dto/create",{"_index":745,"title":{},"body":{"classes/CreateRoleAppDto.html":{},"classes/CreateRoleDto.html":{},"coverage.html":{}}}],["src/role/role.controller.ts",{"_index":1319,"title":{},"body":{"controllers/RoleController.html":{},"coverage.html":{}}}],["src/role/role.controller.ts:31",{"_index":1330,"title":{},"body":{"controllers/RoleController.html":{}}}],["src/role/role.controller.ts:39",{"_index":1331,"title":{},"body":{"controllers/RoleController.html":{}}}],["src/role/role.controller.ts:49",{"_index":1323,"title":{},"body":{"controllers/RoleController.html":{}}}],["src/role/role.controller.ts:58",{"_index":1333,"title":{},"body":{"controllers/RoleController.html":{}}}],["src/role/role.controller.ts:67",{"_index":1326,"title":{},"body":{"controllers/RoleController.html":{}}}],["src/role/role.entity.ts",{"_index":1353,"title":{},"body":{"classes/RoleEntity.html":{},"coverage.html":{}}}],["src/role/role.entity.ts:11",{"_index":1360,"title":{},"body":{"classes/RoleEntity.html":{}}}],["src/role/role.entity.ts:14",{"_index":1361,"title":{},"body":{"classes/RoleEntity.html":{}}}],["src/role/role.entity.ts:17",{"_index":1358,"title":{},"body":{"classes/RoleEntity.html":{}}}],["src/role/role.entity.ts:20",{"_index":1355,"title":{},"body":{"classes/RoleEntity.html":{}}}],["src/role/role.entity.ts:23",{"_index":1357,"title":{},"body":{"classes/RoleEntity.html":{}}}],["src/role/role.entity.ts:26",{"_index":1356,"title":{},"body":{"classes/RoleEntity.html":{}}}],["src/role/role.entity.ts:29",{"_index":1365,"title":{},"body":{"classes/RoleEntity.html":{}}}],["src/role/role.entity.ts:32",{"_index":1364,"title":{},"body":{"classes/RoleEntity.html":{}}}],["src/role/role.entity.ts:36",{"_index":1366,"title":{},"body":{"classes/RoleEntity.html":{}}}],["src/role/role.entity.ts:40",{"_index":1363,"title":{},"body":{"classes/RoleEntity.html":{}}}],["src/role/role.entity.ts:44",{"_index":1359,"title":{},"body":{"classes/RoleEntity.html":{}}}],["src/role/role.entity.ts:48",{"_index":1362,"title":{},"body":{"classes/RoleEntity.html":{}}}],["src/role/role.interface.ts",{"_index":1352,"title":{},"body":{"interfaces/RoleData.html":{},"interfaces/RoleRO.html":{},"coverage.html":{}}}],["src/role/role.module.ts",{"_index":1416,"title":{},"body":{"modules/RoleModule.html":{}}}],["src/role/role.module.ts:17",{"_index":1417,"title":{},"body":{"modules/RoleModule.html":{}}}],["src/role/role.service.ts",{"_index":1420,"title":{},"body":{"injectables/RoleService.html":{},"coverage.html":{}}}],["src/role/role.service.ts:13",{"_index":1423,"title":{},"body":{"injectables/RoleService.html":{}}}],["src/role/role.service.ts:19",{"_index":1429,"title":{},"body":{"injectables/RoleService.html":{}}}],["src/role/role.service.ts:23",{"_index":1431,"title":{},"body":{"injectables/RoleService.html":{}}}],["src/role/role.service.ts:31",{"_index":1427,"title":{},"body":{"injectables/RoleService.html":{}}}],["src/role/role.service.ts:52",{"_index":1432,"title":{},"body":{"injectables/RoleService.html":{}}}],["src/role/role.service.ts:59",{"_index":1428,"title":{},"body":{"injectables/RoleService.html":{}}}],["src/role/role.service.ts:63",{"_index":1430,"title":{},"body":{"injectables/RoleService.html":{}}}],["src/role/role.service.ts:75",{"_index":1426,"title":{},"body":{"injectables/RoleService.html":{}}}],["src/role/rolemenuapp.entity.ts",{"_index":1386,"title":{},"body":{"classes/RoleMenuAppEntity.html":{},"coverage.html":{}}}],["src/role/rolemenuapp.entity.ts:10",{"_index":1389,"title":{},"body":{"classes/RoleMenuAppEntity.html":{}}}],["src/role/rolemenuapp.entity.ts:16",{"_index":1391,"title":{},"body":{"classes/RoleMenuAppEntity.html":{}}}],["src/role/rolemenuapp.entity.ts:19",{"_index":1392,"title":{},"body":{"classes/RoleMenuAppEntity.html":{}}}],["src/role/rolemenuapp.entity.ts:22",{"_index":1390,"title":{},"body":{"classes/RoleMenuAppEntity.html":{}}}],["src/role/rolemenuapp.entity.ts:25",{"_index":1393,"title":{},"body":{"classes/RoleMenuAppEntity.html":{}}}],["src/role/rolemenuentry.entity.ts",{"_index":1399,"title":{},"body":{"classes/RoleMenuEntryEntity.html":{},"coverage.html":{}}}],["src/role/rolemenuentry.entity.ts:12",{"_index":1407,"title":{},"body":{"classes/RoleMenuEntryEntity.html":{}}}],["src/role/rolemenuentry.entity.ts:16",{"_index":1408,"title":{},"body":{"classes/RoleMenuEntryEntity.html":{}}}],["src/role/rolemenuentry.entity.ts:20",{"_index":1405,"title":{},"body":{"classes/RoleMenuEntryEntity.html":{}}}],["src/role/rolemenuentry.entity.ts:9",{"_index":1409,"title":{},"body":{"classes/RoleMenuEntryEntity.html":{}}}],["src/services/comment/comment.controller.ts",{"_index":537,"title":{},"body":{"controllers/CommentController.html":{},"coverage.html":{}}}],["src/services/comment/comment.module.ts",{"_index":540,"title":{},"body":{"modules/CommentModule.html":{}}}],["src/services/comment/comment.service.ts",{"_index":543,"title":{},"body":{"injectables/CommentService.html":{},"coverage.html":{}}}],["src/services/sqldirect/sqldirect.controller.ts",{"_index":1536,"title":{},"body":{"controllers/SqldirectController.html":{},"coverage.html":{}}}],["src/services/sqldirect/sqldirect.module.ts",{"_index":1543,"title":{},"body":{"modules/SqldirectModule.html":{}}}],["src/services/sqldirect/sqldirect.service.ts",{"_index":1546,"title":{},"body":{"injectables/SqldirectService.html":{},"coverage.html":{}}}],["src/services/view/view.controller.ts",{"_index":1767,"title":{},"body":{"controllers/ViewController.html":{},"coverage.html":{}}}],["src/services/view/view.module.ts",{"_index":1774,"title":{},"body":{"modules/ViewModule.html":{}}}],["src/services/view/view.service.ts",{"_index":1776,"title":{},"body":{"injectables/ViewService.html":{},"coverage.html":{}}}],["src/shared/base.controller.ts",{"_index":521,"title":{},"body":{"classes/BaseController.html":{},"coverage.html":{}}}],["src/shared/base.controller.ts:4",{"_index":525,"title":{},"body":{"classes/BaseController.html":{}}}],["src/shared/base.controller.ts:8",{"_index":527,"title":{},"body":{"classes/BaseController.html":{}}}],["src/shared/pipes/to",{"_index":1581,"title":{},"body":{"classes/ToIntegerPipe.html":{},"coverage.html":{}}}],["src/shared/pipes/validation.pipe.ts",{"_index":1739,"title":{},"body":{"injectables/ValidationPipe.html":{},"coverage.html":{}}}],["src/shared/pipes/validation.pipe.ts:26",{"_index":1743,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["src/shared/pipes/validation.pipe.ts:37",{"_index":1745,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["src/shared/pipes/validation.pipe.ts:8",{"_index":1747,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["src/site/dto/create",{"_index":758,"title":{},"body":{"classes/CreateSiteDto.html":{},"coverage.html":{}}}],["src/site/site.controller.ts",{"_index":1451,"title":{},"body":{"controllers/SiteController.html":{},"coverage.html":{}}}],["src/site/site.controller.ts:31",{"_index":1460,"title":{},"body":{"controllers/SiteController.html":{}}}],["src/site/site.controller.ts:39",{"_index":1461,"title":{},"body":{"controllers/SiteController.html":{}}}],["src/site/site.controller.ts:49",{"_index":1455,"title":{},"body":{"controllers/SiteController.html":{}}}],["src/site/site.controller.ts:58",{"_index":1463,"title":{},"body":{"controllers/SiteController.html":{}}}],["src/site/site.controller.ts:67",{"_index":1458,"title":{},"body":{"controllers/SiteController.html":{}}}],["src/site/site.entity.ts",{"_index":1480,"title":{},"body":{"classes/SiteEntity.html":{},"coverage.html":{}}}],["src/site/site.entity.ts:12",{"_index":1490,"title":{},"body":{"classes/SiteEntity.html":{}}}],["src/site/site.entity.ts:15",{"_index":1488,"title":{},"body":{"classes/SiteEntity.html":{}}}],["src/site/site.entity.ts:18",{"_index":1483,"title":{},"body":{"classes/SiteEntity.html":{}}}],["src/site/site.entity.ts:21",{"_index":1486,"title":{},"body":{"classes/SiteEntity.html":{}}}],["src/site/site.entity.ts:24",{"_index":1481,"title":{},"body":{"classes/SiteEntity.html":{}}}],["src/site/site.entity.ts:27",{"_index":1485,"title":{},"body":{"classes/SiteEntity.html":{}}}],["src/site/site.entity.ts:30",{"_index":1484,"title":{},"body":{"classes/SiteEntity.html":{}}}],["src/site/site.entity.ts:33",{"_index":1492,"title":{},"body":{"classes/SiteEntity.html":{}}}],["src/site/site.entity.ts:36",{"_index":1491,"title":{},"body":{"classes/SiteEntity.html":{}}}],["src/site/site.entity.ts:39",{"_index":1482,"title":{},"body":{"classes/SiteEntity.html":{}}}],["src/site/site.entity.ts:42",{"_index":1489,"title":{},"body":{"classes/SiteEntity.html":{}}}],["src/site/site.entity.ts:9",{"_index":1487,"title":{},"body":{"classes/SiteEntity.html":{}}}],["src/site/site.interface.ts",{"_index":1478,"title":{},"body":{"interfaces/SiteData.html":{},"interfaces/SiteRO.html":{},"coverage.html":{}}}],["src/site/site.module.ts",{"_index":1499,"title":{},"body":{"modules/SiteModule.html":{}}}],["src/site/site.module.ts:17",{"_index":1500,"title":{},"body":{"modules/SiteModule.html":{}}}],["src/site/site.service.ts",{"_index":1503,"title":{},"body":{"injectables/SiteService.html":{},"coverage.html":{}}}],["src/site/site.service.ts:13",{"_index":1506,"title":{},"body":{"injectables/SiteService.html":{}}}],["src/site/site.service.ts:19",{"_index":1512,"title":{},"body":{"injectables/SiteService.html":{}}}],["src/site/site.service.ts:23",{"_index":1514,"title":{},"body":{"injectables/SiteService.html":{}}}],["src/site/site.service.ts:31",{"_index":1510,"title":{},"body":{"injectables/SiteService.html":{}}}],["src/site/site.service.ts:53",{"_index":1515,"title":{},"body":{"injectables/SiteService.html":{}}}],["src/site/site.service.ts:60",{"_index":1511,"title":{},"body":{"injectables/SiteService.html":{}}}],["src/site/site.service.ts:64",{"_index":1513,"title":{},"body":{"injectables/SiteService.html":{}}}],["src/site/site.service.ts:76",{"_index":1509,"title":{},"body":{"injectables/SiteService.html":{}}}],["src/tag/tag.controller.ts",{"_index":1548,"title":{},"body":{"controllers/TagController.html":{},"coverage.html":{}}}],["src/tag/tag.controller.ts:25",{"_index":1550,"title":{},"body":{"controllers/TagController.html":{}}}],["src/tag/tag.entity.ts",{"_index":1558,"title":{},"body":{"classes/TagEntity.html":{},"coverage.html":{}}}],["src/tag/tag.entity.ts:10",{"_index":1562,"title":{},"body":{"classes/TagEntity.html":{}}}],["src/tag/tag.entity.ts:13",{"_index":1560,"title":{},"body":{"classes/TagEntity.html":{}}}],["src/tag/tag.entity.ts:16",{"_index":1559,"title":{},"body":{"classes/TagEntity.html":{}}}],["src/tag/tag.entity.ts:19",{"_index":1564,"title":{},"body":{"classes/TagEntity.html":{}}}],["src/tag/tag.entity.ts:22",{"_index":1563,"title":{},"body":{"classes/TagEntity.html":{}}}],["src/tag/tag.entity.ts:7",{"_index":1561,"title":{},"body":{"classes/TagEntity.html":{}}}],["src/tag/tag.module.ts",{"_index":1569,"title":{},"body":{"modules/TagModule.html":{}}}],["src/tag/tag.module.ts:17",{"_index":1570,"title":{},"body":{"modules/TagModule.html":{}}}],["src/tag/tag.service.ts",{"_index":1573,"title":{},"body":{"injectables/TagService.html":{},"coverage.html":{}}}],["src/tag/tag.service.ts:13",{"_index":1577,"title":{},"body":{"injectables/TagService.html":{}}}],["src/tag/tag.service.ts:7",{"_index":1575,"title":{},"body":{"injectables/TagService.html":{}}}],["src/user/auth.middleware.ts",{"_index":474,"title":{},"body":{"injectables/AuthMiddleware.html":{},"coverage.html":{}}}],["src/user/auth.middleware.ts:11",{"_index":478,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["src/user/auth.middleware.ts:14",{"_index":484,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["src/user/dto/create",{"_index":765,"title":{},"body":{"classes/CreateUserDto.html":{},"coverage.html":{}}}],["src/user/dto/login",{"_index":1067,"title":{},"body":{"classes/LoginUserDto.html":{},"coverage.html":{}}}],["src/user/dto/update",{"_index":1595,"title":{},"body":{"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["src/user/user.controller.ts",{"_index":1598,"title":{},"body":{"controllers/UserController.html":{},"coverage.html":{}}}],["src/user/user.controller.ts:29",{"_index":1611,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:39",{"_index":1605,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:49",{"_index":1616,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:66",{"_index":1619,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:75",{"_index":1607,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.decorator.ts",{"_index":1800,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/user/user.entity.ts",{"_index":1641,"title":{},"body":{"classes/UserEntity.html":{},"coverage.html":{}}}],["src/user/user.entity.ts:15",{"_index":1653,"title":{},"body":{"classes/UserEntity.html":{}}}],["src/user/user.entity.ts:18",{"_index":1659,"title":{},"body":{"classes/UserEntity.html":{}}}],["src/user/user.entity.ts:22",{"_index":1650,"title":{},"body":{"classes/UserEntity.html":{}}}],["src/user/user.entity.ts:25",{"_index":1646,"title":{},"body":{"classes/UserEntity.html":{}}}],["src/user/user.entity.ts:28",{"_index":1654,"title":{},"body":{"classes/UserEntity.html":{}}}],["src/user/user.entity.ts:31",{"_index":1655,"title":{},"body":{"classes/UserEntity.html":{}}}],["src/user/user.entity.ts:34",{"_index":1644,"title":{},"body":{"classes/UserEntity.html":{}}}],["src/user/user.entity.ts:37",{"_index":1648,"title":{},"body":{"classes/UserEntity.html":{}}}],["src/user/user.entity.ts:40",{"_index":1647,"title":{},"body":{"classes/UserEntity.html":{}}}],["src/user/user.entity.ts:43",{"_index":1658,"title":{},"body":{"classes/UserEntity.html":{}}}],["src/user/user.entity.ts:46",{"_index":1657,"title":{},"body":{"classes/UserEntity.html":{}}}],["src/user/user.entity.ts:49",{"_index":1661,"title":{},"body":{"classes/UserEntity.html":{}}}],["src/user/user.entity.ts:55",{"_index":1652,"title":{},"body":{"classes/UserEntity.html":{}}}],["src/user/user.entity.ts:58",{"_index":1645,"title":{},"body":{"classes/UserEntity.html":{}}}],["src/user/user.entity.ts:61",{"_index":1656,"title":{},"body":{"classes/UserEntity.html":{}}}],["src/user/user.interface.ts",{"_index":1640,"title":{},"body":{"interfaces/UserData.html":{},"interfaces/UserRO.html":{},"coverage.html":{}}}],["src/user/user.module.ts",{"_index":1679,"title":{},"body":{"modules/UserModule.html":{}}}],["src/user/user.module.ts:17",{"_index":1680,"title":{},"body":{"modules/UserModule.html":{}}}],["src/user/user.service.ts",{"_index":1684,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/user/user.service.ts:101",{"_index":1696,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:106",{"_index":1700,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:120",{"_index":1690,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:17",{"_index":1688,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:24",{"_index":1694,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:28",{"_index":1698,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:41",{"_index":1691,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:77",{"_index":1701,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:86",{"_index":1693,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:90",{"_index":1697,"title":{},"body":{"injectables/UserService.html":{}}}],["started",{"_index":1843,"title":{"index.html":{}},"body":{}}],["statements",{"_index":1780,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":198,"title":{},"body":{"controllers/ArticleController.html":{},"controllers/CorporationController.html":{},"controllers/ErrorlogController.html":{},"controllers/GroupController.html":{},"controllers/ListController.html":{},"controllers/MenuController.html":{},"controllers/ProfileController.html":{},"controllers/RoleController.html":{},"controllers/SiteController.html":{},"controllers/TagController.html":{},"controllers/UserController.html":{}}}],["still",{"_index":1885,"title":{},"body":{"miscellaneous/variables.html":{}}}],["strategy",{"_index":491,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["string",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"interfaces/ArticleData.html":{},"classes/ArticleEntity.html":{},"interfaces/ArticleRO.html":{},"injectables/ArticleService.html":{},"interfaces/ArticlesRO.html":{},"classes/Comment.html":{},"interfaces/CommentsRO.html":{},"interfaces/CorporationData.html":{},"classes/CorporationEntity.html":{},"interfaces/CorporationRO.html":{},"classes/CreateArticleDto.html":{},"classes/CreateCommentDto.html":{},"classes/CreateCorporationDto.html":{},"classes/CreateErrorLogDto.html":{},"classes/CreateGroupDto.html":{},"classes/CreateListDto.html":{},"classes/CreateListEntryDto.html":{},"classes/CreateMenuDto.html":{},"classes/CreateMenuEntryDto.html":{},"classes/CreateRoleAppDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSiteDto.html":{},"classes/CreateUserDto.html":{},"interfaces/ErrorLogData.html":{},"classes/ErrorLogEntity.html":{},"interfaces/ErrorLogRO.html":{},"interfaces/GroupData.html":{},"classes/GroupEntity.html":{},"interfaces/GroupRO.html":{},"interfaces/ListData.html":{},"classes/ListEntity.html":{},"interfaces/ListEntry.html":{},"classes/ListEntryEntity.html":{},"interfaces/ListEntryRO.html":{},"interfaces/ListRO.html":{},"injectables/ListService.html":{},"classes/LoginUserDto.html":{},"interfaces/MenuAppData.html":{},"classes/MenuAppEntity.html":{},"interfaces/MenuAppEntry.html":{},"classes/MenuEntryEntity.html":{},"interfaces/MenuEntryRO.html":{},"interfaces/MenuRO.html":{},"classes/MyLogger.html":{},"controllers/ProfileController.html":{},"interfaces/ProfileData.html":{},"interfaces/ProfileRO.html":{},"injectables/ProfileService.html":{},"interfaces/RoleData.html":{},"classes/RoleEntity.html":{},"interfaces/RoleRO.html":{},"interfaces/SiteData.html":{},"classes/SiteEntity.html":{},"interfaces/SiteRO.html":{},"classes/TagEntity.html":{},"classes/ToIntegerPipe.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"interfaces/UserData.html":{},"classes/UserEntity.html":{},"interfaces/UserRO.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{}}}],["string).split",{"_index":498,"title":{},"body":{"injectables/AuthMiddleware.html":{},"miscellaneous/variables.html":{}}}],["submitted",{"_index":1751,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["successfully",{"_index":110,"title":{},"body":{"controllers/ArticleController.html":{},"controllers/CorporationController.html":{},"controllers/ErrorlogController.html":{},"controllers/GroupController.html":{},"controllers/ListController.html":{},"controllers/MenuController.html":{},"controllers/ProfileController.html":{},"controllers/RoleController.html":{},"controllers/SiteController.html":{},"controllers/TagController.html":{},"controllers/UserController.html":{}}}],["successfully.'})@apiresponse({status",{"_index":152,"title":{},"body":{"controllers/ArticleController.html":{},"controllers/CorporationController.html":{},"controllers/ErrorlogController.html":{},"controllers/GroupController.html":{},"controllers/ListController.html":{},"controllers/MenuController.html":{},"controllers/ProfileController.html":{},"controllers/RoleController.html":{},"controllers/SiteController.html":{},"controllers/TagController.html":{},"controllers/UserController.html":{}}}],["successfully.'})@get",{"_index":145,"title":{},"body":{"controllers/ArticleController.html":{}}}],["summary",{"_index":197,"title":{},"body":{"controllers/ArticleController.html":{},"controllers/CorporationController.html":{},"controllers/ErrorlogController.html":{},"controllers/GroupController.html":{},"controllers/ListController.html":{},"controllers/MenuController.html":{},"controllers/ProfileController.html":{},"controllers/RoleController.html":{},"controllers/SiteController.html":{},"controllers/TagController.html":{},"controllers/UserController.html":{}}}],["supersecret",{"_index":502,"title":{},"body":{"injectables/AuthMiddleware.html":{},"miscellaneous/variables.html":{}}}],["support",{"_index":1849,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":1850,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":1340,"title":{},"body":{"controllers/RoleController.html":{},"dependencies.html":{}}}],["synchronize",{"_index":1876,"title":{},"body":{"miscellaneous/variables.html":{}}}],["table",{"_index":1803,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1802,"title":{},"body":{"coverage.html":{}}}],["tag",{"_index":398,"title":{},"body":{"injectables/ArticleService.html":{},"classes/TagEntity.html":{}}}],["tag.controller",{"_index":1571,"title":{},"body":{"modules/TagModule.html":{}}}],["tag.entity",{"_index":1552,"title":{},"body":{"controllers/TagController.html":{},"modules/TagModule.html":{},"injectables/TagService.html":{}}}],["tag.service",{"_index":1554,"title":{},"body":{"controllers/TagController.html":{},"modules/TagModule.html":{}}}],["tag/tag.module",{"_index":69,"title":{},"body":{"modules/AppModule.html":{}}}],["tagcontroller",{"_index":1547,"title":{"controllers/TagController.html":{}},"body":{"controllers/TagController.html":{},"modules/TagModule.html":{},"coverage.html":{}}}],["tagentity",{"_index":1551,"title":{"classes/TagEntity.html":{}},"body":{"controllers/TagController.html":{},"classes/TagEntity.html":{},"modules/TagModule.html":{},"injectables/TagService.html":{},"coverage.html":{}}}],["taglist",{"_index":254,"title":{},"body":{"interfaces/ArticleData.html":{},"classes/ArticleEntity.html":{},"interfaces/ArticleRO.html":{},"interfaces/ArticlesRO.html":{},"interfaces/CommentsRO.html":{},"classes/CreateArticleDto.html":{}}}],["tagmodule",{"_index":47,"title":{"modules/TagModule.html":{}},"body":{"modules/AppModule.html":{},"modules/TagModule.html":{},"modules.html":{},"overview.html":{}}}],["tagrepository",{"_index":1576,"title":{},"body":{"injectables/TagService.html":{}}}],["tags",{"_index":1339,"title":{},"body":{"controllers/RoleController.html":{},"controllers/TagController.html":{}}}],["tags'})@apiresponse({status",{"_index":1549,"title":{},"body":{"controllers/TagController.html":{}}}],["tagservice",{"_index":1553,"title":{"injectables/TagService.html":{}},"body":{"controllers/TagController.html":{},"modules/TagModule.html":{},"injectables/TagService.html":{},"coverage.html":{},"overview.html":{}}}],["this.articlerepository.delete",{"_index":467,"title":{},"body":{"injectables/ArticleService.html":{}}}],["this.articlerepository.findone",{"_index":464,"title":{},"body":{"injectables/ArticleService.html":{}}}],["this.articlerepository.findone(where",{"_index":425,"title":{},"body":{"injectables/ArticleService.html":{}}}],["this.articlerepository.findone({slug",{"_index":426,"title":{},"body":{"injectables/ArticleService.html":{}}}],["this.articlerepository.save(article",{"_index":432,"title":{},"body":{"injectables/ArticleService.html":{}}}],["this.articlerepository.save(updated",{"_index":466,"title":{},"body":{"injectables/ArticleService.html":{}}}],["this.articleservice.addcomment(slug",{"_index":232,"title":{},"body":{"controllers/ArticleController.html":{}}}],["this.articleservice.create(userid",{"_index":216,"title":{},"body":{"controllers/ArticleController.html":{}}}],["this.articleservice.delete(params.slug",{"_index":228,"title":{},"body":{"controllers/ArticleController.html":{}}}],["this.articleservice.deletecomment(slug",{"_index":237,"title":{},"body":{"controllers/ArticleController.html":{}}}],["this.articleservice.favorite(userid",{"_index":242,"title":{},"body":{"controllers/ArticleController.html":{}}}],["this.articleservice.findall(query",{"_index":201,"title":{},"body":{"controllers/ArticleController.html":{}}}],["this.articleservice.findcomments(slug",{"_index":211,"title":{},"body":{"controllers/ArticleController.html":{}}}],["this.articleservice.findfeed(userid",{"_index":205,"title":{},"body":{"controllers/ArticleController.html":{}}}],["this.articleservice.findone({slug",{"_index":208,"title":{},"body":{"controllers/ArticleController.html":{}}}],["this.articleservice.unfavorite(userid",{"_index":246,"title":{},"body":{"controllers/ArticleController.html":{}}}],["this.articleservice.update(params.slug",{"_index":224,"title":{},"body":{"controllers/ArticleController.html":{}}}],["this.buildcorporationro(corporation",{"_index":645,"title":{},"body":{"injectables/CorporationService.html":{}}}],["this.buildcorporationro(savedcorporation",{"_index":665,"title":{},"body":{"injectables/CorporationService.html":{}}}],["this.builderror(errors",{"_index":1756,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["this.builderrorlogro(errorlog",{"_index":849,"title":{},"body":{"injectables/ErrorlogService.html":{}}}],["this.builderrorlogro(savederrorlog",{"_index":861,"title":{},"body":{"injectables/ErrorlogService.html":{}}}],["this.buildgroupro(group",{"_index":961,"title":{},"body":{"injectables/GroupService.html":{}}}],["this.buildgroupro(savedgroup",{"_index":954,"title":{},"body":{"injectables/GroupService.html":{}}}],["this.buildlistro(list",{"_index":1060,"title":{},"body":{"injectables/ListService.html":{}}}],["this.buildlistro(savedlist",{"_index":1056,"title":{},"body":{"injectables/ListService.html":{}}}],["this.buildmenuro(menu",{"_index":1192,"title":{},"body":{"injectables/MenuService.html":{}}}],["this.buildmenuro(savedmenu",{"_index":1188,"title":{},"body":{"injectables/MenuService.html":{}}}],["this.buildrolero(role",{"_index":1446,"title":{},"body":{"injectables/RoleService.html":{}}}],["this.buildrolero(savedrole",{"_index":1442,"title":{},"body":{"injectables/RoleService.html":{}}}],["this.buildsitero(savedsite",{"_index":1526,"title":{},"body":{"injectables/SiteService.html":{}}}],["this.buildsitero(site",{"_index":1530,"title":{},"body":{"injectables/SiteService.html":{}}}],["this.builduserro(saveduser",{"_index":1720,"title":{},"body":{"injectables/UserService.html":{}}}],["this.builduserro(user",{"_index":1725,"title":{},"body":{"injectables/UserService.html":{}}}],["this.commentrepository.delete(deletecomments[0].id",{"_index":440,"title":{},"body":{"injectables/ArticleService.html":{}}}],["this.commentrepository.findone(id",{"_index":433,"title":{},"body":{"injectables/ArticleService.html":{}}}],["this.commentrepository.save(comment",{"_index":431,"title":{},"body":{"injectables/ArticleService.html":{}}}],["this.configservice.get('database",{"_index":778,"title":{},"body":{"injectables/DatabaseConfig.html":{}}}],["this.configservice.get('jwt_secret",{"_index":501,"title":{},"body":{"injectables/AuthMiddleware.html":{},"classes/BaseController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["this.corporationrepository.delete",{"_index":668,"title":{},"body":{"injectables/CorporationService.html":{}}}],["this.corporationrepository.find",{"_index":639,"title":{},"body":{"injectables/CorporationService.html":{}}}],["this.corporationrepository.findone(id",{"_index":642,"title":{},"body":{"injectables/CorporationService.html":{}}}],["this.corporationrepository.findone({id",{"_index":641,"title":{},"body":{"injectables/CorporationService.html":{}}}],["this.corporationrepository.save(newcorporation",{"_index":664,"title":{},"body":{"injectables/CorporationService.html":{}}}],["this.corporationrepository.save(updated",{"_index":667,"title":{},"body":{"injectables/CorporationService.html":{}}}],["this.corporationservice.create(corporationdata",{"_index":582,"title":{},"body":{"controllers/CorporationController.html":{}}}],["this.corporationservice.delete(id",{"_index":589,"title":{},"body":{"controllers/CorporationController.html":{}}}],["this.corporationservice.findall",{"_index":576,"title":{},"body":{"controllers/CorporationController.html":{}}}],["this.corporationservice.findbyid(id",{"_index":579,"title":{},"body":{"controllers/CorporationController.html":{}}}],["this.corporationservice.update(id",{"_index":585,"title":{},"body":{"controllers/CorporationController.html":{}}}],["this.errorlogrepository.delete",{"_index":863,"title":{},"body":{"injectables/ErrorlogService.html":{}}}],["this.errorlogrepository.find",{"_index":847,"title":{},"body":{"injectables/ErrorlogService.html":{}}}],["this.errorlogrepository.findone(id",{"_index":848,"title":{},"body":{"injectables/ErrorlogService.html":{}}}],["this.errorlogrepository.save(newerrorlog",{"_index":860,"title":{},"body":{"injectables/ErrorlogService.html":{}}}],["this.errorlogrepository.save(updated",{"_index":862,"title":{},"body":{"injectables/ErrorlogService.html":{}}}],["this.errorlogservice.create(errorlogdata",{"_index":825,"title":{},"body":{"controllers/ErrorlogController.html":{}}}],["this.errorlogservice.delete(id",{"_index":827,"title":{},"body":{"controllers/ErrorlogController.html":{}}}],["this.errorlogservice.findall",{"_index":820,"title":{},"body":{"controllers/ErrorlogController.html":{}}}],["this.errorlogservice.findbyid(id",{"_index":821,"title":{},"body":{"controllers/ErrorlogController.html":{}}}],["this.errorlogservice.update(id",{"_index":826,"title":{},"body":{"controllers/ErrorlogController.html":{}}}],["this.followsrepository.delete({followerid",{"_index":1317,"title":{},"body":{"injectables/ProfileService.html":{}}}],["this.followsrepository.find",{"_index":418,"title":{},"body":{"injectables/ArticleService.html":{}}}],["this.followsrepository.findone",{"_index":1297,"title":{},"body":{"injectables/ProfileService.html":{}}}],["this.followsrepository.save(follows",{"_index":1312,"title":{},"body":{"injectables/ProfileService.html":{}}}],["this.generatejwt(user",{"_index":1737,"title":{},"body":{"injectables/UserService.html":{}}}],["this.grouprepository.delete({id",{"_index":957,"title":{},"body":{"injectables/GroupService.html":{}}}],["this.grouprepository.find",{"_index":946,"title":{},"body":{"injectables/GroupService.html":{}}}],["this.grouprepository.findone(id",{"_index":955,"title":{},"body":{"injectables/GroupService.html":{}}}],["this.grouprepository.findone({id",{"_index":947,"title":{},"body":{"injectables/GroupService.html":{}}}],["this.grouprepository.save(newgroup",{"_index":953,"title":{},"body":{"injectables/GroupService.html":{}}}],["this.grouprepository.save(updated",{"_index":956,"title":{},"body":{"injectables/GroupService.html":{}}}],["this.groupservice.create(groupdata",{"_index":906,"title":{},"body":{"controllers/GroupController.html":{}}}],["this.groupservice.delete(id",{"_index":909,"title":{},"body":{"controllers/GroupController.html":{}}}],["this.groupservice.findall",{"_index":901,"title":{},"body":{"controllers/GroupController.html":{}}}],["this.groupservice.findbyid(id",{"_index":902,"title":{},"body":{"controllers/GroupController.html":{}}}],["this.groupservice.update(id",{"_index":908,"title":{},"body":{"controllers/GroupController.html":{}}}],["this.listrepository.delete",{"_index":1059,"title":{},"body":{"injectables/ListService.html":{}}}],["this.listrepository.find",{"_index":1047,"title":{},"body":{"injectables/ListService.html":{}}}],["this.listrepository.findone(id",{"_index":1057,"title":{},"body":{"injectables/ListService.html":{}}}],["this.listrepository.findone({id",{"_index":1048,"title":{},"body":{"injectables/ListService.html":{}}}],["this.listrepository.findone({slug",{"_index":1062,"title":{},"body":{"injectables/ListService.html":{}}}],["this.listrepository.save(newlist",{"_index":1055,"title":{},"body":{"injectables/ListService.html":{}}}],["this.listrepository.save(updated",{"_index":1058,"title":{},"body":{"injectables/ListService.html":{}}}],["this.listservice.create(listdata",{"_index":993,"title":{},"body":{"controllers/ListController.html":{}}}],["this.listservice.delete(params.slug",{"_index":996,"title":{},"body":{"controllers/ListController.html":{}}}],["this.listservice.findall",{"_index":990,"title":{},"body":{"controllers/ListController.html":{}}}],["this.listservice.findbyid(id",{"_index":991,"title":{},"body":{"controllers/ListController.html":{}}}],["this.listservice.findlistentry(slug",{"_index":999,"title":{},"body":{"controllers/ListController.html":{}}}],["this.listservice.update(id",{"_index":995,"title":{},"body":{"controllers/ListController.html":{}}}],["this.menurepository.delete",{"_index":1191,"title":{},"body":{"injectables/MenuService.html":{}}}],["this.menurepository.find",{"_index":1179,"title":{},"body":{"injectables/MenuService.html":{}}}],["this.menurepository.findone(id",{"_index":1189,"title":{},"body":{"injectables/MenuService.html":{}}}],["this.menurepository.findone({id",{"_index":1180,"title":{},"body":{"injectables/MenuService.html":{}}}],["this.menurepository.save(newmenu",{"_index":1187,"title":{},"body":{"injectables/MenuService.html":{}}}],["this.menurepository.save(updated",{"_index":1190,"title":{},"body":{"injectables/MenuService.html":{}}}],["this.menuservice.create(menudata",{"_index":1125,"title":{},"body":{"controllers/MenuController.html":{}}}],["this.menuservice.delete(params.slug",{"_index":1128,"title":{},"body":{"controllers/MenuController.html":{}}}],["this.menuservice.findall",{"_index":1121,"title":{},"body":{"controllers/MenuController.html":{}}}],["this.menuservice.findbyid(id",{"_index":1123,"title":{},"body":{"controllers/MenuController.html":{}}}],["this.menuservice.findmenuentry(slug",{"_index":1131,"title":{},"body":{"controllers/MenuController.html":{}}}],["this.menuservice.update(id",{"_index":1127,"title":{},"body":{"controllers/MenuController.html":{}}}],["this.password",{"_index":1671,"title":{},"body":{"classes/UserEntity.html":{}}}],["this.profileservice.findprofile(userid",{"_index":1244,"title":{},"body":{"controllers/ProfileController.html":{}}}],["this.profileservice.follow(email",{"_index":1247,"title":{},"body":{"controllers/ProfileController.html":{}}}],["this.profileservice.unfollow(userid",{"_index":1251,"title":{},"body":{"controllers/ProfileController.html":{}}}],["this.rolerepository.delete",{"_index":1445,"title":{},"body":{"injectables/RoleService.html":{}}}],["this.rolerepository.find",{"_index":1434,"title":{},"body":{"injectables/RoleService.html":{}}}],["this.rolerepository.findone(id",{"_index":1443,"title":{},"body":{"injectables/RoleService.html":{}}}],["this.rolerepository.findone({id",{"_index":1435,"title":{},"body":{"injectables/RoleService.html":{}}}],["this.rolerepository.save(newrole",{"_index":1441,"title":{},"body":{"injectables/RoleService.html":{}}}],["this.rolerepository.save(updated",{"_index":1444,"title":{},"body":{"injectables/RoleService.html":{}}}],["this.roleservice.create(roledata",{"_index":1348,"title":{},"body":{"controllers/RoleController.html":{}}}],["this.roleservice.delete(params.slug",{"_index":1351,"title":{},"body":{"controllers/RoleController.html":{}}}],["this.roleservice.findall",{"_index":1345,"title":{},"body":{"controllers/RoleController.html":{}}}],["this.roleservice.findbyid(id",{"_index":1346,"title":{},"body":{"controllers/RoleController.html":{}}}],["this.roleservice.update(id",{"_index":1350,"title":{},"body":{"controllers/RoleController.html":{}}}],["this.siterepository.delete",{"_index":1529,"title":{},"body":{"injectables/SiteService.html":{}}}],["this.siterepository.find",{"_index":1517,"title":{},"body":{"injectables/SiteService.html":{}}}],["this.siterepository.findone(id",{"_index":1527,"title":{},"body":{"injectables/SiteService.html":{}}}],["this.siterepository.findone({id",{"_index":1518,"title":{},"body":{"injectables/SiteService.html":{}}}],["this.siterepository.save(newsite",{"_index":1525,"title":{},"body":{"injectables/SiteService.html":{}}}],["this.siterepository.save(updated",{"_index":1528,"title":{},"body":{"injectables/SiteService.html":{}}}],["this.siteservice.create(sitedata",{"_index":1474,"title":{},"body":{"controllers/SiteController.html":{}}}],["this.siteservice.delete(params.slug",{"_index":1477,"title":{},"body":{"controllers/SiteController.html":{}}}],["this.siteservice.findall",{"_index":1471,"title":{},"body":{"controllers/SiteController.html":{}}}],["this.siteservice.findbyid(id",{"_index":1472,"title":{},"body":{"controllers/SiteController.html":{}}}],["this.siteservice.update(id",{"_index":1476,"title":{},"body":{"controllers/SiteController.html":{}}}],["this.slugify(articledata.title",{"_index":455,"title":{},"body":{"injectables/ArticleService.html":{}}}],["this.tagrepository.find",{"_index":1579,"title":{},"body":{"injectables/TagService.html":{}}}],["this.tagservice.findall",{"_index":1557,"title":{},"body":{"controllers/TagController.html":{}}}],["this.tovalidate(metatype",{"_index":1752,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["this.userrepository.delete",{"_index":1724,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userrepository.find",{"_index":1287,"title":{},"body":{"injectables/ProfileService.html":{},"injectables/UserService.html":{}}}],["this.userrepository.findone",{"_index":459,"title":{},"body":{"injectables/ArticleService.html":{},"injectables/ProfileService.html":{}}}],["this.userrepository.findone(id",{"_index":441,"title":{},"body":{"injectables/ArticleService.html":{},"injectables/UserService.html":{}}}],["this.userrepository.findone(options",{"_index":1288,"title":{},"body":{"injectables/ProfileService.html":{}}}],["this.userrepository.findone({email",{"_index":1304,"title":{},"body":{"injectables/ProfileService.html":{},"injectables/UserService.html":{}}}],["this.userrepository.findone({username",{"_index":401,"title":{},"body":{"injectables/ArticleService.html":{},"injectables/ProfileService.html":{}}}],["this.userrepository.save(author",{"_index":462,"title":{},"body":{"injectables/ArticleService.html":{}}}],["this.userrepository.save(newuser",{"_index":1719,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userrepository.save(updated",{"_index":1723,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userrepository.save(user",{"_index":448,"title":{},"body":{"injectables/ArticleService.html":{}}}],["this.userservice.create(userdata",{"_index":1628,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.delete(params.slug",{"_index":1639,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.findbyemail(email",{"_index":1625,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.findbyid(decoded.id",{"_index":509,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["this.userservice.findone(loginuserdto",{"_index":1632,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.generatejwt(_user",{"_index":1633,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.update(userid",{"_index":1637,"title":{},"body":{"controllers/UserController.html":{}}}],["throw",{"_index":512,"title":{},"body":{"injectables/AuthMiddleware.html":{},"injectables/CorporationService.html":{},"injectables/ErrorlogService.html":{},"injectables/GroupService.html":{},"injectables/ListService.html":{},"injectables/MenuService.html":{},"injectables/ProfileService.html":{},"injectables/RoleService.html":{},"injectables/SiteService.html":{},"classes/ToIntegerPipe.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{}}}],["title",{"_index":221,"title":{},"body":{"controllers/ArticleController.html":{},"interfaces/ArticleData.html":{},"classes/ArticleEntity.html":{},"interfaces/ArticleRO.html":{},"injectables/ArticleService.html":{},"interfaces/ArticlesRO.html":{},"interfaces/CommentsRO.html":{},"classes/CreateArticleDto.html":{}}}],["today",{"_index":1726,"title":{},"body":{"injectables/UserService.html":{}}}],["todo",{"_index":220,"title":{},"body":{"controllers/ArticleController.html":{}}}],["tointegerpipe",{"_index":1580,"title":{"classes/ToIntegerPipe.html":{}},"body":{"classes/ToIntegerPipe.html":{},"coverage.html":{}}}],["token",{"_index":499,"title":{},"body":{"injectables/AuthMiddleware.html":{},"classes/BaseController.html":{},"controllers/UserController.html":{},"interfaces/UserData.html":{},"interfaces/UserRO.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["token[1",{"_index":1888,"title":{},"body":{"miscellaneous/variables.html":{}}}],["toupdate",{"_index":463,"title":{},"body":{"injectables/ArticleService.html":{},"injectables/CorporationService.html":{},"injectables/ErrorlogService.html":{},"injectables/GroupService.html":{},"injectables/ListService.html":{},"injectables/MenuService.html":{},"injectables/RoleService.html":{},"injectables/SiteService.html":{},"injectables/UserService.html":{}}}],["toupdate.favorites",{"_index":1722,"title":{},"body":{"injectables/UserService.html":{}}}],["toupdate.password",{"_index":1721,"title":{},"body":{"injectables/UserService.html":{}}}],["tovalidate",{"_index":1741,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["tovalidate(metatype",{"_index":1744,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["trace",{"_index":1209,"title":{},"body":{"classes/MyLogger.html":{}}}],["transform",{"_index":1584,"title":{},"body":{"classes/ToIntegerPipe.html":{},"injectables/ValidationPipe.html":{}}}],["transform(value",{"_index":1585,"title":{},"body":{"classes/ToIntegerPipe.html":{},"injectables/ValidationPipe.html":{}}}],["transformer",{"_index":1749,"title":{},"body":{"injectables/ValidationPipe.html":{},"dependencies.html":{}}}],["true",{"_index":81,"title":{},"body":{"modules/AppModule.html":{},"classes/ArticleEntity.html":{},"injectables/ArticleService.html":{},"classes/CorporationEntity.html":{},"classes/ErrorLogEntity.html":{},"classes/GroupEntity.html":{},"classes/ListEntity.html":{},"classes/ListEntryEntity.html":{},"classes/MenuAppEntity.html":{},"classes/MenuEntryEntity.html":{},"injectables/ProfileService.html":{},"classes/RoleEntity.html":{},"classes/RoleMenuEntryEntity.html":{},"classes/SiteEntity.html":{},"miscellaneous/variables.html":{}}}],["true})@joincolumn",{"_index":278,"title":{},"body":{"classes/ArticleEntity.html":{}}}],["true})@joincolumn({name",{"_index":1404,"title":{},"body":{"classes/RoleMenuEntryEntity.html":{}}}],["type",{"_index":118,"title":{},"body":{"controllers/ArticleController.html":{},"interfaces/ArticleData.html":{},"classes/ArticleEntity.html":{},"modules/ArticleModule.html":{},"interfaces/ArticleRO.html":{},"injectables/ArticleService.html":{},"interfaces/ArticlesRO.html":{},"injectables/AuthMiddleware.html":{},"classes/BaseController.html":{},"classes/Comment.html":{},"interfaces/CommentsRO.html":{},"controllers/CorporationController.html":{},"interfaces/CorporationData.html":{},"classes/CorporationEntity.html":{},"modules/CorporationModule.html":{},"interfaces/CorporationRO.html":{},"injectables/CorporationService.html":{},"classes/CreateArticleDto.html":{},"classes/CreateCommentDto.html":{},"classes/CreateCorporationDto.html":{},"classes/CreateErrorLogDto.html":{},"classes/CreateGroupDto.html":{},"classes/CreateListDto.html":{},"classes/CreateListEntryDto.html":{},"classes/CreateMenuDto.html":{},"classes/CreateMenuEntryDto.html":{},"classes/CreateRoleAppDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSiteDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabaseConfig.html":{},"interfaces/ErrorLogData.html":{},"classes/ErrorLogEntity.html":{},"interfaces/ErrorLogRO.html":{},"controllers/ErrorlogController.html":{},"modules/ErrorlogModule.html":{},"injectables/ErrorlogService.html":{},"classes/FollowsEntity.html":{},"controllers/GroupController.html":{},"interfaces/GroupData.html":{},"classes/GroupEntity.html":{},"modules/GroupModule.html":{},"interfaces/GroupRO.html":{},"injectables/GroupService.html":{},"controllers/ListController.html":{},"interfaces/ListData.html":{},"classes/ListEntity.html":{},"interfaces/ListEntry.html":{},"classes/ListEntryEntity.html":{},"interfaces/ListEntryRO.html":{},"modules/ListModule.html":{},"interfaces/ListRO.html":{},"injectables/ListService.html":{},"classes/LoginUserDto.html":{},"interfaces/MenuAppData.html":{},"classes/MenuAppEntity.html":{},"interfaces/MenuAppEntry.html":{},"controllers/MenuController.html":{},"classes/MenuEntryEntity.html":{},"interfaces/MenuEntryRO.html":{},"modules/MenuModule.html":{},"interfaces/MenuRO.html":{},"injectables/MenuService.html":{},"classes/MyLogger.html":{},"controllers/ProfileController.html":{},"interfaces/ProfileData.html":{},"modules/ProfileModule.html":{},"interfaces/ProfileRO.html":{},"injectables/ProfileService.html":{},"controllers/RoleController.html":{},"interfaces/RoleData.html":{},"classes/RoleEntity.html":{},"classes/RoleMenuAppEntity.html":{},"classes/RoleMenuEntryEntity.html":{},"modules/RoleModule.html":{},"interfaces/RoleRO.html":{},"injectables/RoleService.html":{},"controllers/SiteController.html":{},"interfaces/SiteData.html":{},"classes/SiteEntity.html":{},"modules/SiteModule.html":{},"interfaces/SiteRO.html":{},"injectables/SiteService.html":{},"classes/TagEntity.html":{},"modules/TagModule.html":{},"injectables/TagService.html":{},"classes/ToIntegerPipe.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"interfaces/UserData.html":{},"classes/UserEntity.html":{},"modules/UserModule.html":{},"interfaces/UserRO.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typeorm",{"_index":60,"title":{},"body":{"modules/AppModule.html":{},"classes/ArticleEntity.html":{},"injectables/ArticleService.html":{},"classes/Comment.html":{},"classes/CorporationEntity.html":{},"injectables/CorporationService.html":{},"classes/ErrorLogEntity.html":{},"injectables/ErrorlogService.html":{},"classes/FollowsEntity.html":{},"classes/GroupEntity.html":{},"injectables/GroupService.html":{},"classes/ListEntity.html":{},"classes/ListEntryEntity.html":{},"injectables/ListService.html":{},"classes/MenuAppEntity.html":{},"classes/MenuEntryEntity.html":{},"injectables/MenuService.html":{},"injectables/ProfileService.html":{},"classes/RoleEntity.html":{},"classes/RoleMenuAppEntity.html":{},"classes/RoleMenuEntryEntity.html":{},"injectables/RoleService.html":{},"classes/SiteEntity.html":{},"injectables/SiteService.html":{},"classes/TagEntity.html":{},"injectables/TagService.html":{},"classes/UserEntity.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["typeorm/common/deeppartial",{"_index":1286,"title":{},"body":{"injectables/ProfileService.html":{}}}],["typeormmodule",{"_index":57,"title":{},"body":{"modules/AppModule.html":{},"modules/ArticleModule.html":{},"modules/CorporationModule.html":{},"modules/ErrorlogModule.html":{},"modules/GroupModule.html":{},"modules/ListModule.html":{},"modules/MenuModule.html":{},"modules/ProfileModule.html":{},"modules/RoleModule.html":{},"modules/SiteModule.html":{},"modules/TagModule.html":{},"modules/UserModule.html":{}}}],["typeormmodule.forfeature([articleentity",{"_index":333,"title":{},"body":{"modules/ArticleModule.html":{}}}],["typeormmodule.forfeature([corporationentity",{"_index":617,"title":{},"body":{"modules/CorporationModule.html":{}}}],["typeormmodule.forfeature([errorlogentity",{"_index":833,"title":{},"body":{"modules/ErrorlogModule.html":{}}}],["typeormmodule.forfeature([groupentity",{"_index":931,"title":{},"body":{"modules/GroupModule.html":{}}}],["typeormmodule.forfeature([listentity",{"_index":1032,"title":{},"body":{"modules/ListModule.html":{}}}],["typeormmodule.forfeature([menuappentity",{"_index":1164,"title":{},"body":{"modules/MenuModule.html":{}}}],["typeormmodule.forfeature([roleentity",{"_index":1419,"title":{},"body":{"modules/RoleModule.html":{}}}],["typeormmodule.forfeature([siteentity",{"_index":1502,"title":{},"body":{"modules/SiteModule.html":{}}}],["typeormmodule.forfeature([tagentity",{"_index":1572,"title":{},"body":{"modules/TagModule.html":{}}}],["typeormmodule.forfeature([userentity",{"_index":1264,"title":{},"body":{"modules/ProfileModule.html":{},"modules/UserModule.html":{}}}],["typeormmodule.forrootasync",{"_index":83,"title":{},"body":{"modules/AppModule.html":{}}}],["typeormoptionsfactory",{"_index":777,"title":{},"body":{"injectables/DatabaseConfig.html":{}}}],["types",{"_index":1764,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["types.find((type",{"_index":1765,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["types/jsonwebtoken",{"_index":1813,"title":{},"body":{"dependencies.html":{}}}],["typescript",{"_index":1837,"title":{},"body":{"dependencies.html":{}}}],["typorm",{"_index":1669,"title":{},"body":{"classes/UserEntity.html":{}}}],["ui",{"_index":1834,"title":{},"body":{"dependencies.html":{}}}],["unauthorized",{"_index":586,"title":{},"body":{"controllers/CorporationController.html":{},"controllers/ErrorlogController.html":{},"controllers/GroupController.html":{}}}],["unauthorized.'})@apiresponse({status",{"_index":557,"title":{},"body":{"controllers/CorporationController.html":{},"controllers/ErrorlogController.html":{},"controllers/GroupController.html":{}}}],["undefined",{"_index":272,"title":{},"body":{"classes/ArticleEntity.html":{},"classes/Comment.html":{},"classes/CorporationEntity.html":{},"classes/GroupEntity.html":{},"classes/ListEntity.html":{},"classes/ListEntryEntity.html":{},"classes/MenuAppEntity.html":{},"classes/MenuEntryEntity.html":{},"classes/RoleEntity.html":{},"classes/RoleMenuAppEntity.html":{},"classes/RoleMenuEntryEntity.html":{},"classes/SiteEntity.html":{},"classes/UserEntity.html":{}}}],["unfavorite",{"_index":99,"title":{},"body":{"controllers/ArticleController.html":{},"injectables/ArticleService.html":{}}}],["unfavorite(@user('id",{"_index":245,"title":{},"body":{"controllers/ArticleController.html":{}}}],["unfavorite(id",{"_index":379,"title":{},"body":{"injectables/ArticleService.html":{}}}],["unfavorite(userid",{"_index":164,"title":{},"body":{"controllers/ArticleController.html":{}}}],["unfavorited",{"_index":243,"title":{},"body":{"controllers/ArticleController.html":{}}}],["unfavorited.'})@apiresponse({status",{"_index":165,"title":{},"body":{"controllers/ArticleController.html":{}}}],["unfollow",{"_index":1223,"title":{},"body":{"controllers/ProfileController.html":{},"injectables/ProfileService.html":{}}}],["unfollow(@user('id",{"_index":1250,"title":{},"body":{"controllers/ProfileController.html":{}}}],["unfollow(followerid",{"_index":1284,"title":{},"body":{"injectables/ProfileService.html":{}}}],["unfollow(userid",{"_index":1232,"title":{},"body":{"controllers/ProfileController.html":{}}}],["unique",{"_index":1711,"title":{},"body":{"injectables/UserService.html":{}}}],["uniqueness",{"_index":647,"title":{},"body":{"injectables/CorporationService.html":{},"injectables/ErrorlogService.html":{},"injectables/GroupService.html":{},"injectables/ListService.html":{},"injectables/MenuService.html":{},"injectables/RoleService.html":{},"injectables/SiteService.html":{},"injectables/UserService.html":{}}}],["update",{"_index":100,"title":{},"body":{"controllers/ArticleController.html":{},"injectables/ArticleService.html":{},"controllers/CorporationController.html":{},"injectables/CorporationService.html":{},"controllers/ErrorlogController.html":{},"injectables/ErrorlogService.html":{},"controllers/GroupController.html":{},"injectables/GroupService.html":{},"controllers/ListController.html":{},"injectables/ListService.html":{},"controllers/MenuController.html":{},"injectables/MenuService.html":{},"controllers/RoleController.html":{},"injectables/RoleService.html":{},"controllers/SiteController.html":{},"injectables/SiteService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["update(@param",{"_index":219,"title":{},"body":{"controllers/ArticleController.html":{}}}],["update(@param('id",{"_index":584,"title":{},"body":{"controllers/CorporationController.html":{},"controllers/ErrorlogController.html":{},"controllers/GroupController.html":{},"controllers/ListController.html":{},"controllers/MenuController.html":{},"controllers/RoleController.html":{},"controllers/SiteController.html":{}}}],["update(@user('id",{"_index":1635,"title":{},"body":{"controllers/UserController.html":{}}}],["update(id",{"_index":634,"title":{},"body":{"injectables/CorporationService.html":{},"controllers/ErrorlogController.html":{},"injectables/ErrorlogService.html":{},"controllers/GroupController.html":{},"injectables/GroupService.html":{},"controllers/ListController.html":{},"injectables/ListService.html":{},"controllers/MenuController.html":{},"injectables/MenuService.html":{},"controllers/RoleController.html":{},"injectables/RoleService.html":{},"controllers/SiteController.html":{},"injectables/SiteService.html":{},"injectables/UserService.html":{}}}],["update(params",{"_index":168,"title":{},"body":{"controllers/ArticleController.html":{}}}],["update(slug",{"_index":381,"title":{},"body":{"injectables/ArticleService.html":{}}}],["update(userid",{"_index":1617,"title":{},"body":{"controllers/UserController.html":{}}}],["updated",{"_index":217,"title":{},"body":{"controllers/ArticleController.html":{},"injectables/ArticleService.html":{},"controllers/CorporationController.html":{},"injectables/CorporationService.html":{},"injectables/ErrorlogService.html":{},"injectables/GroupService.html":{},"controllers/ListController.html":{},"injectables/ListService.html":{},"controllers/MenuController.html":{},"injectables/MenuService.html":{},"controllers/ProfileController.html":{},"controllers/RoleController.html":{},"injectables/RoleService.html":{},"controllers/SiteController.html":{},"injectables/SiteService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["updated.'})@apiresponse({status",{"_index":169,"title":{},"body":{"controllers/ArticleController.html":{}}}],["updatedat",{"_index":255,"title":{},"body":{"interfaces/ArticleData.html":{},"interfaces/ArticleRO.html":{},"interfaces/ArticlesRO.html":{},"interfaces/CommentsRO.html":{},"interfaces/CorporationData.html":{},"interfaces/CorporationRO.html":{},"interfaces/ErrorLogData.html":{},"interfaces/ErrorLogRO.html":{},"interfaces/GroupData.html":{},"interfaces/GroupRO.html":{},"interfaces/ListData.html":{},"interfaces/ListEntry.html":{},"interfaces/ListEntryRO.html":{},"interfaces/ListRO.html":{},"interfaces/RoleData.html":{},"interfaces/RoleRO.html":{},"interfaces/SiteData.html":{},"interfaces/SiteRO.html":{}}}],["updatedatecolumn",{"_index":1152,"title":{},"body":{"classes/MenuEntryEntity.html":{}}}],["updatedby",{"_index":268,"title":{},"body":{"classes/ArticleEntity.html":{},"interfaces/CorporationData.html":{},"classes/CorporationEntity.html":{},"interfaces/CorporationRO.html":{},"interfaces/ErrorLogData.html":{},"classes/ErrorLogEntity.html":{},"interfaces/ErrorLogRO.html":{},"interfaces/GroupData.html":{},"classes/GroupEntity.html":{},"interfaces/GroupRO.html":{},"interfaces/ListData.html":{},"classes/ListEntity.html":{},"interfaces/ListEntry.html":{},"interfaces/ListEntryRO.html":{},"interfaces/ListRO.html":{},"interfaces/MenuAppData.html":{},"classes/MenuAppEntity.html":{},"interfaces/MenuAppEntry.html":{},"classes/MenuEntryEntity.html":{},"interfaces/MenuEntryRO.html":{},"interfaces/MenuRO.html":{},"interfaces/RoleData.html":{},"classes/RoleEntity.html":{},"interfaces/RoleRO.html":{},"interfaces/SiteData.html":{},"classes/SiteEntity.html":{},"interfaces/SiteRO.html":{},"classes/TagEntity.html":{},"classes/UserEntity.html":{}}}],["updateddate",{"_index":269,"title":{},"body":{"classes/ArticleEntity.html":{},"classes/CorporationEntity.html":{},"classes/ErrorLogEntity.html":{},"classes/GroupEntity.html":{},"classes/ListEntity.html":{},"interfaces/MenuAppData.html":{},"classes/MenuAppEntity.html":{},"interfaces/MenuAppEntry.html":{},"classes/MenuEntryEntity.html":{},"interfaces/MenuEntryRO.html":{},"interfaces/MenuRO.html":{},"classes/RoleEntity.html":{},"classes/SiteEntity.html":{},"classes/TagEntity.html":{},"classes/UserEntity.html":{}}}],["updateuserdto",{"_index":1594,"title":{"classes/UpdateUserDto.html":{}},"body":{"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["updateuserdto})@put('user",{"_index":1618,"title":{},"body":{"controllers/UserController.html":{}}}],["use",{"_index":475,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["use(req",{"_index":479,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["useclass",{"_index":84,"title":{},"body":{"modules/AppModule.html":{}}}],["used",{"_index":1377,"title":{},"body":{"classes/RoleEntity.html":{}}}],["usepipes",{"_index":810,"title":{},"body":{"controllers/ErrorlogController.html":{},"controllers/GroupController.html":{},"controllers/ListController.html":{},"controllers/MenuController.html":{},"controllers/RoleController.html":{},"controllers/SiteController.html":{},"controllers/UserController.html":{}}}],["usepipes(new",{"_index":822,"title":{},"body":{"controllers/ErrorlogController.html":{},"controllers/GroupController.html":{},"controllers/ListController.html":{},"controllers/MenuController.html":{},"controllers/RoleController.html":{},"controllers/SiteController.html":{},"controllers/UserController.html":{}}}],["user",{"_index":185,"title":{},"body":{"controllers/ArticleController.html":{},"classes/ArticleEntity.html":{},"injectables/ArticleService.html":{},"injectables/AuthMiddleware.html":{},"controllers/CorporationController.html":{},"controllers/ErrorlogController.html":{},"controllers/GroupController.html":{},"controllers/ListController.html":{},"controllers/MenuController.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"controllers/RoleController.html":{},"classes/RoleEntity.html":{},"controllers/SiteController.html":{},"controllers/UserController.html":{},"interfaces/UserData.html":{},"modules/UserModule.html":{},"interfaces/UserRO.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["user'})@apiresponse({status",{"_index":1602,"title":{},"body":{"controllers/UserController.html":{}}}],["user.'})@apiresponse({status",{"_index":1609,"title":{},"body":{"controllers/UserController.html":{}}}],["user.articles",{"_index":312,"title":{},"body":{"classes/ArticleEntity.html":{}}}],["user.bio",{"_index":1736,"title":{},"body":{"injectables/UserService.html":{}}}],["user.controller",{"_index":1681,"title":{},"body":{"modules/UserModule.html":{}}}],["user.decorator",{"_index":815,"title":{},"body":{"controllers/ErrorlogController.html":{},"controllers/GroupController.html":{},"controllers/ListController.html":{},"controllers/MenuController.html":{},"controllers/RoleController.html":{},"controllers/SiteController.html":{},"controllers/UserController.html":{}}}],["user.dto.ts",{"_index":766,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginUserDto.html":{},"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["user.dto.ts:12",{"_index":771,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["user.dto.ts:15",{"_index":1596,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["user.dto.ts:6",{"_index":772,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["user.dto.ts:8",{"_index":1068,"title":{},"body":{"classes/LoginUserDto.html":{}}}],["user.dto.ts:9",{"_index":770,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["user.email",{"_index":1733,"title":{},"body":{"injectables/UserService.html":{}}}],["user.entity",{"_index":1682,"title":{},"body":{"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["user.favorites.findindex(_article",{"_index":443,"title":{},"body":{"injectables/ArticleService.html":{}}}],["user.favorites.splice(deleteindex",{"_index":446,"title":{},"body":{"injectables/ArticleService.html":{}}}],["user.id",{"_index":1289,"title":{},"body":{"injectables/ProfileService.html":{},"injectables/UserService.html":{}}}],["user.image",{"_index":1738,"title":{},"body":{"injectables/UserService.html":{}}}],["user.interface",{"_index":1621,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["user.password",{"_index":1290,"title":{},"body":{"injectables/ProfileService.html":{}}}],["user.roles",{"_index":1373,"title":{},"body":{"classes/RoleEntity.html":{}}}],["user.service",{"_index":495,"title":{},"body":{"injectables/AuthMiddleware.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{}}}],["user.user",{"_index":517,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["user.username",{"_index":1732,"title":{},"body":{"injectables/UserService.html":{}}}],["user/auth.middleware",{"_index":332,"title":{},"body":{"modules/ArticleModule.html":{},"modules/ProfileModule.html":{}}}],["user/user.decorator",{"_index":186,"title":{},"body":{"controllers/ArticleController.html":{},"controllers/CorporationController.html":{},"controllers/ProfileController.html":{}}}],["user/user.entity",{"_index":307,"title":{},"body":{"classes/ArticleEntity.html":{},"modules/ArticleModule.html":{},"injectables/ArticleService.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"classes/RoleEntity.html":{}}}],["user/user.interface",{"_index":259,"title":{},"body":{"interfaces/ArticleData.html":{},"interfaces/ArticleRO.html":{},"interfaces/ArticlesRO.html":{},"interfaces/CommentsRO.html":{},"interfaces/ListData.html":{},"interfaces/ListEntry.html":{},"interfaces/ListEntryRO.html":{},"interfaces/ListRO.html":{},"interfaces/MenuAppData.html":{},"interfaces/MenuAppEntry.html":{},"interfaces/MenuEntryRO.html":{},"interfaces/MenuRO.html":{}}}],["user/user.module",{"_index":56,"title":{},"body":{"modules/AppModule.html":{},"modules/ArticleModule.html":{},"modules/ProfileModule.html":{},"modules/TagModule.html":{}}}],["usercontroller",{"_index":1597,"title":{"controllers/UserController.html":{}},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["userdata",{"_index":256,"title":{"interfaces/UserData.html":{}},"body":{"interfaces/ArticleData.html":{},"interfaces/ArticleRO.html":{},"interfaces/ArticlesRO.html":{},"interfaces/CommentsRO.html":{},"interfaces/ListData.html":{},"interfaces/ListEntry.html":{},"interfaces/ListEntryRO.html":{},"interfaces/ListRO.html":{},"interfaces/MenuAppData.html":{},"interfaces/MenuAppEntry.html":{},"interfaces/MenuEntryRO.html":{},"interfaces/MenuRO.html":{},"controllers/UserController.html":{},"interfaces/UserData.html":{},"interfaces/UserRO.html":{},"coverage.html":{}}}],["userentity",{"_index":270,"title":{"classes/UserEntity.html":{}},"body":{"classes/ArticleEntity.html":{},"modules/ArticleModule.html":{},"injectables/ArticleService.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"classes/RoleEntity.html":{},"classes/UserEntity.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["userid",{"_index":120,"title":{},"body":{"controllers/ArticleController.html":{},"injectables/ArticleService.html":{},"controllers/ProfileController.html":{},"controllers/UserController.html":{}}}],["userinput",{"_index":655,"title":{},"body":{"injectables/CorporationService.html":{},"injectables/ErrorlogService.html":{},"injectables/GroupService.html":{},"injectables/ListService.html":{},"injectables/MenuService.html":{},"injectables/RoleService.html":{},"injectables/SiteService.html":{},"injectables/UserService.html":{}}}],["usermodule",{"_index":48,"title":{"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ArticleModule.html":{},"modules/ProfileModule.html":{},"modules/TagModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["username",{"_index":769,"title":{},"body":{"classes/CreateUserDto.html":{},"controllers/ProfileController.html":{},"interfaces/ProfileData.html":{},"interfaces/ProfileRO.html":{},"injectables/ProfileService.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"interfaces/UserData.html":{},"classes/UserEntity.html":{},"interfaces/UserRO.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["username/email",{"_index":1049,"title":{},"body":{"injectables/ListService.html":{},"injectables/MenuService.html":{},"injectables/SiteService.html":{},"injectables/UserService.html":{}}}],["userrepository",{"_index":358,"title":{},"body":{"injectables/ArticleService.html":{},"injectables/ProfileService.html":{},"injectables/UserService.html":{}}}],["userro",{"_index":1620,"title":{"interfaces/UserRO.html":{}},"body":{"controllers/UserController.html":{},"interfaces/UserData.html":{},"interfaces/UserRO.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["userservice",{"_index":477,"title":{"injectables/UserService.html":{}},"body":{"injectables/AuthMiddleware.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["val",{"_index":1590,"title":{},"body":{"classes/ToIntegerPipe.html":{}}}],["valid",{"_index":656,"title":{},"body":{"injectables/CorporationService.html":{},"injectables/ErrorlogService.html":{},"injectables/GroupService.html":{},"injectables/ListService.html":{},"injectables/MenuService.html":{},"injectables/RoleService.html":{},"injectables/SiteService.html":{},"injectables/UserService.html":{}}}],["validate",{"_index":636,"title":{},"body":{"injectables/CorporationService.html":{},"injectables/ErrorlogService.html":{},"injectables/GroupService.html":{},"injectables/ListService.html":{},"injectables/MenuService.html":{},"injectables/RoleService.html":{},"injectables/SiteService.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{}}}],["validate(newcorporation",{"_index":652,"title":{},"body":{"injectables/CorporationService.html":{}}}],["validate(newerrorlog",{"_index":858,"title":{},"body":{"injectables/ErrorlogService.html":{}}}],["validate(newgroup",{"_index":951,"title":{},"body":{"injectables/GroupService.html":{}}}],["validate(newlist",{"_index":1053,"title":{},"body":{"injectables/ListService.html":{}}}],["validate(newmenu",{"_index":1185,"title":{},"body":{"injectables/MenuService.html":{}}}],["validate(newrole",{"_index":1439,"title":{},"body":{"injectables/RoleService.html":{}}}],["validate(newsite",{"_index":1523,"title":{},"body":{"injectables/SiteService.html":{}}}],["validate(newuser",{"_index":1717,"title":{},"body":{"injectables/UserService.html":{}}}],["validate(object",{"_index":1755,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["validation",{"_index":660,"title":{},"body":{"injectables/CorporationService.html":{},"injectables/ErrorlogService.html":{},"injectables/GroupService.html":{},"injectables/ListService.html":{},"injectables/MenuService.html":{},"injectables/RoleService.html":{},"injectables/SiteService.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{}}}],["validationpipe",{"_index":816,"title":{"injectables/ValidationPipe.html":{}},"body":{"controllers/ErrorlogController.html":{},"controllers/GroupController.html":{},"controllers/ListController.html":{},"controllers/MenuController.html":{},"controllers/RoleController.html":{},"controllers/SiteController.html":{},"controllers/UserController.html":{},"injectables/ValidationPipe.html":{},"coverage.html":{}}}],["validationpipe())@post('users",{"_index":1604,"title":{},"body":{"controllers/UserController.html":{}}}],["validationpipe())@post('users/login",{"_index":1615,"title":{},"body":{"controllers/UserController.html":{}}}],["validator",{"_index":637,"title":{},"body":{"injectables/CorporationService.html":{},"classes/CreateCorporationDto.html":{},"classes/CreateErrorLogDto.html":{},"classes/CreateGroupDto.html":{},"classes/CreateListDto.html":{},"classes/CreateListEntryDto.html":{},"classes/CreateMenuDto.html":{},"classes/CreateMenuEntryDto.html":{},"classes/CreateRoleAppDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSiteDto.html":{},"classes/CreateUserDto.html":{},"injectables/ErrorlogService.html":{},"injectables/GroupService.html":{},"injectables/ListService.html":{},"classes/LoginUserDto.html":{},"injectables/MenuService.html":{},"injectables/RoleService.html":{},"injectables/SiteService.html":{},"classes/UserEntity.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{},"dependencies.html":{}}}],["value",{"_index":721,"title":{},"body":{"classes/CreateListEntryDto.html":{},"classes/GroupEntity.html":{},"classes/ListEntryEntity.html":{},"classes/ToIntegerPipe.html":{},"injectables/ValidationPipe.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":1786,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1859,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["verbose",{"_index":1203,"title":{},"body":{"classes/MyLogger.html":{}}}],["verbose(message",{"_index":1213,"title":{},"body":{"classes/MyLogger.html":{}}}],["view",{"_index":1768,"title":{},"body":{"controllers/ViewController.html":{}}}],["view.service",{"_index":1775,"title":{},"body":{"modules/ViewModule.html":{}}}],["viewcontroller",{"_index":1766,"title":{"controllers/ViewController.html":{}},"body":{"controllers/ViewController.html":{},"coverage.html":{}}}],["viewmodule",{"_index":1770,"title":{"modules/ViewModule.html":{}},"body":{"modules/ViewModule.html":{},"modules.html":{},"overview.html":{}}}],["viewservice",{"_index":1773,"title":{"injectables/ViewService.html":{}},"body":{"modules/ViewModule.html":{},"injectables/ViewService.html":{},"coverage.html":{},"overview.html":{}}}],["void",{"_index":325,"title":{},"body":{"modules/ArticleModule.html":{},"modules/CorporationModule.html":{},"modules/ErrorlogModule.html":{},"modules/GroupModule.html":{},"modules/ListModule.html":{},"modules/MenuModule.html":{},"classes/MyLogger.html":{},"modules/ProfileModule.html":{},"modules/RoleModule.html":{},"modules/SiteModule.html":{},"modules/TagModule.html":{},"modules/UserModule.html":{}}}],["want",{"_index":1886,"title":{},"body":{"miscellaneous/variables.html":{}}}],["warn",{"_index":1204,"title":{},"body":{"classes/MyLogger.html":{}}}],["warn(message",{"_index":1215,"title":{},"body":{"classes/MyLogger.html":{}}}],["where('article.authorid",{"_index":424,"title":{},"body":{"injectables/ArticleService.html":{}}}],["where('user.username",{"_index":1708,"title":{},"body":{"injectables/UserService.html":{}}}],["yes",{"_index":1277,"title":{},"body":{"injectables/ProfileService.html":{}}}],["zoom",{"_index":49,"title":{},"body":{"modules/AppModule.html":{},"modules/ArticleModule.html":{},"modules/CorporationModule.html":{},"modules/ErrorlogModule.html":{},"modules/GroupModule.html":{},"modules/ListModule.html":{},"modules/MenuModule.html":{},"modules/ProfileModule.html":{},"modules/RoleModule.html":{},"modules/SiteModule.html":{},"modules/SqldirectModule.html":{},"modules/TagModule.html":{},"modules/UserModule.html":{},"modules/ViewModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                root\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            root\n                        \n                        \n                    \n                \n            \n            \n                \nroot()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Get, Controller } from '@nestjs/common';\n\n@Controller()\nexport class AppController {\n  @Get()\n  root(): string {\n    return 'The Riantis Node API!';\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\n\nArticleModule\n\nArticleModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nArticleModule->AppModule\n\n\n\n\n\nCorporationModule\n\nCorporationModule\n\nAppModule -->\n\nCorporationModule->AppModule\n\n\n\n\n\nErrorlogModule\n\nErrorlogModule\n\nAppModule -->\n\nErrorlogModule->AppModule\n\n\n\n\n\nGroupModule\n\nGroupModule\n\nAppModule -->\n\nGroupModule->AppModule\n\n\n\n\n\nListModule\n\nListModule\n\nAppModule -->\n\nListModule->AppModule\n\n\n\n\n\nMenuModule\n\nMenuModule\n\nAppModule -->\n\nMenuModule->AppModule\n\n\n\n\n\nProfileModule\n\nProfileModule\n\nAppModule -->\n\nProfileModule->AppModule\n\n\n\n\n\nRoleModule\n\nRoleModule\n\nAppModule -->\n\nRoleModule->AppModule\n\n\n\n\n\nSiteModule\n\nSiteModule\n\nAppModule -->\n\nSiteModule->AppModule\n\n\n\n\n\nTagModule\n\nTagModule\n\nAppModule -->\n\nTagModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ArticleModule\n                        \n                        \n                            CorporationModule\n                        \n                        \n                            ErrorlogModule\n                        \n                        \n                            GroupModule\n                        \n                        \n                            ListModule\n                        \n                        \n                            MenuModule\n                        \n                        \n                            ProfileModule\n                        \n                        \n                            RoleModule\n                        \n                        \n                            SiteModule\n                        \n                        \n                            TagModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { ArticleModule } from './article/article.module';\nimport { UserModule } from './user/user.module';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { Connection } from 'typeorm';\n\nimport { RoleModule } from './role/role.module';\nimport { CorporationModule } from './corporation/corporation.module';\nimport { CorporationController } from './corporation/corporation.controller';\nimport { SiteModule } from './site/site.module';\nimport { GroupModule } from './group/group.module';\nimport { MenuModule } from './menu/menu.module';\nimport { ListModule } from './list/list.module';\nimport { TagModule } from './tag/tag.module';\nimport { ProfileModule } from './profile/profile.module';\nimport { ErrorlogModule } from './errorlog/errorlog.module';\n\nimport { ConfigModule } from '@nestjs/config';\nimport { ConfigService } from '@nestjs/config';\nimport { configenv } from './config/config.env'\nimport { DatabaseConfig } from './config/database.config';\n\n\n@Module({\n  imports: [\n    ConfigModule.forRoot({\n      isGlobal: true,\n      load: [configenv],\n    }),\n    TypeOrmModule.forRootAsync({\n      imports: [ConfigModule],\n      useClass: DatabaseConfig,\n    }),\n    ArticleModule,\n    CorporationModule,\n    ErrorlogModule,\n    GroupModule,\n    ListModule,\n    MenuModule,\n    ProfileModule,\n    RoleModule,\n    SiteModule,\n    TagModule,\n    UserModule\n\n  ],\n  controllers: [ \n    AppController\n  ],\n  providers: [ConfigService]\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ArticleController.html":{"url":"controllers/ArticleController.html","title":"controller - ArticleController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ArticleController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/article/article.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                articles\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                createComment\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                deleteComment\n                            \n                            \n                                    Async\n                                favorite\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findComments\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                getFeed\n                            \n                            \n                                    Async\n                                unFavorite\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(userId: number, articleData: CreateArticleDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Create article'})@ApiResponse({status: 201, description: 'The article has been successfully created.'})@ApiResponse({status: 403, description: 'Forbidden.'})@ApiBody({type: CreateArticleDto})@Post()\n                \n            \n\n            \n                \n                    Defined in src/article/article.controller.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    articleData\n                                    \n                                                CreateArticleDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createComment\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createComment(slug, commentData: CreateCommentDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Create comment'})@ApiResponse({status: 201, description: 'The comment has been successfully created.'})@ApiResponse({status: 403, description: 'Forbidden.'})@ApiBody({type: CreateCommentDto})@Post(':slug/comments')\n                \n            \n\n            \n                \n                    Defined in src/article/article.controller.ts:88\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    slug\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    commentData\n                                    \n                                                CreateCommentDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(params)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Delete article'})@ApiResponse({status: 201, description: 'The article has been successfully deleted.'})@ApiResponse({status: 403, description: 'Forbidden.'})@ApiBody({type: CreateArticleDto})@Delete(':slug')\n                \n            \n\n            \n                \n                    Defined in src/article/article.controller.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteComment\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteComment(params)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Delete comment'})@ApiResponse({status: 201, description: 'The article has been successfully deleted.'})@ApiResponse({status: 403, description: 'Forbidden.'})@ApiBody({type: CreateCommentDto})@Delete(':slug/comments/:id')\n                \n            \n\n            \n                \n                    Defined in src/article/article.controller.ts:97\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            favorite\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    favorite(userId: number, slug)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Favorite article'})@ApiResponse({status: 201, description: 'The article has been successfully favorited.'})@ApiResponse({status: 403, description: 'Forbidden.'})@Post(':slug/favorite')\n                \n            \n\n            \n                \n                    Defined in src/article/article.controller.ts:106\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    slug\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(query)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Get all articles'})@ApiResponse({status: 200, description: 'Returned all articles successfully.'})@Get()\n                \n            \n\n            \n                \n                    Defined in src/article/article.controller.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findComments\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findComments(slug)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Get article comments'})@ApiResponse({status: 200, description: 'Returned article comments successfully.'})@ApiResponse({status: 403, description: 'Forbidden.'})@Get(':slug/comments')\n                \n            \n\n            \n                \n                    Defined in src/article/article.controller.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    slug\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(slug)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Get single article'})@ApiResponse({status: 200, description: 'Returned article successfully.'})@ApiResponse({status: 403, description: 'Forbidden.'})@Get(':slug')\n                \n            \n\n            \n                \n                    Defined in src/article/article.controller.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    slug\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getFeed\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getFeed(userId: number, query)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Get article feed'})@ApiResponse({status: 200, description: 'Returned article feed successfully.'})@ApiResponse({status: 403, description: 'Forbidden.'})@Get('feed')\n                \n            \n\n            \n                \n                    Defined in src/article/article.controller.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    query\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            unFavorite\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    unFavorite(userId: number, slug)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Unfavorite article'})@ApiResponse({status: 201, description: 'The article has been successfully unfavorited.'})@ApiResponse({status: 403, description: 'Forbidden.'})@Delete(':slug/favorite')\n                \n            \n\n            \n                \n                    Defined in src/article/article.controller.ts:114\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    slug\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update(params, articleData: CreateArticleDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Update article'})@ApiResponse({status: 201, description: 'The article has been successfully updated.'})@ApiResponse({status: 403, description: 'Forbidden.'})@ApiBody({type: CreateArticleDto})@Put(':slug')\n                \n            \n\n            \n                \n                    Defined in src/article/article.controller.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    articleData\n                                    \n                                                CreateArticleDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {Get, Post, Body, Put, Delete, Query, Param, Controller} from '@nestjs/common';\nimport { Request } from 'express';\nimport { ArticleService } from './article.service';\nimport { CreateArticleDto, CreateCommentDto } from './dto';\nimport { ArticlesRO, ArticleRO } from './article.interface';\nimport { CommentsRO } from './article.interface';\nimport { User } from '../user/user.decorator';\n\nimport {\n  ApiBearerAuth,\n  ApiResponse,\n  ApiOperation, \n  ApiTags,\n  ApiBody,\n} from '@nestjs/swagger';\n\n@ApiBearerAuth()\n@ApiTags('articles')\n@Controller('articles')\nexport class ArticleController {\n\n  constructor(private readonly articleService: ArticleService) {}\n\n  @ApiOperation({ summary: 'Get all articles' })\n  @ApiResponse({ status: 200, description: 'Returned all articles successfully.'})\n  @Get()\n  async findAll(@Query() query): Promise {\n    return await this.articleService.findAll(query);\n  }\n\n  @ApiOperation({ summary: 'Get article feed' })\n  @ApiResponse({ status: 200, description: 'Returned article feed successfully.'})\n  @ApiResponse({ status: 403, description: 'Forbidden.' })\n  @Get('feed')\n  async getFeed(@User('id') userId: number, @Query() query): Promise {\n    return await this.articleService.findFeed(userId, query);\n  }\n\n  @ApiOperation({ summary: 'Get single article' })\n  @ApiResponse({ status: 200, description: 'Returned article successfully.'})\n  @ApiResponse({ status: 403, description: 'Forbidden.' })\n  @Get(':slug')\n  async findOne(@Param('slug') slug): Promise {\n    return await this.articleService.findOne({slug});\n  }\n\n  @ApiOperation({ summary: 'Get article comments' })\n  @ApiResponse({ status: 200, description: 'Returned article comments successfully.'})\n  @ApiResponse({ status: 403, description: 'Forbidden.' })\n  @Get(':slug/comments')\n  async findComments(@Param('slug') slug): Promise {\n    return await this.articleService.findComments(slug);\n  }\n\n  @ApiOperation({ summary: 'Create article' })\n  @ApiResponse({ status: 201, description: 'The article has been successfully created.'})\n  @ApiResponse({ status: 403, description: 'Forbidden.' })\n  @ApiBody({type: CreateArticleDto})\n  @Post()\n  async create(@User('id') userId: number, @Body('article') articleData: CreateArticleDto) {\n    return this.articleService.create(userId, articleData);\n  }\n\n  @ApiOperation({ summary: 'Update article' })\n  @ApiResponse({ status: 201, description: 'The article has been successfully updated.'})\n  @ApiResponse({ status: 403, description: 'Forbidden.' })\n  @ApiBody({type: CreateArticleDto})\n  @Put(':slug')\n  async update(@Param() params, @Body('article') articleData: CreateArticleDto) {\n    // Todo: update slug also when title gets changed\n    return this.articleService.update(params.slug, articleData);\n  }\n\n  @ApiOperation({ summary: 'Delete article' })\n  @ApiResponse({ status: 201, description: 'The article has been successfully deleted.'})\n  @ApiResponse({ status: 403, description: 'Forbidden.' })\n  @ApiBody({type: CreateArticleDto})\n  @Delete(':slug')\n  async delete(@Param() params) {\n    return this.articleService.delete(params.slug);\n  }\n\n  @ApiOperation({ summary: 'Create comment' })\n  @ApiResponse({ status: 201, description: 'The comment has been successfully created.'})\n  @ApiResponse({ status: 403, description: 'Forbidden.' })\n  @ApiBody({type: CreateCommentDto})\n  @Post(':slug/comments')\n  async createComment(@Param('slug') slug, @Body('comment') commentData: CreateCommentDto) {\n    return await this.articleService.addComment(slug, commentData);\n  }\n\n  @ApiOperation({ summary: 'Delete comment' })\n  @ApiResponse({ status: 201, description: 'The article has been successfully deleted.'})\n  @ApiResponse({ status: 403, description: 'Forbidden.' })\n  @ApiBody({type: CreateCommentDto})\n  @Delete(':slug/comments/:id')\n  async deleteComment(@Param() params) {\n    const {slug, id} = params;\n    return await this.articleService.deleteComment(slug, id);\n  }\n\n  @ApiOperation({ summary: 'Favorite article' })\n  @ApiResponse({ status: 201, description: 'The article has been successfully favorited.'})\n  @ApiResponse({ status: 403, description: 'Forbidden.' })\n  @Post(':slug/favorite')\n  async favorite(@User('id') userId: number, @Param('slug') slug) {\n    return await this.articleService.favorite(userId, slug);\n  }\n\n  @ApiOperation({ summary: 'Unfavorite article' })\n  @ApiResponse({ status: 201, description: 'The article has been successfully unfavorited.'})\n  @ApiResponse({ status: 403, description: 'Forbidden.' })\n  @Delete(':slug/favorite')\n  async unFavorite(@User('id') userId: number, @Param('slug') slug) {\n    return await this.articleService.unFavorite(userId, slug);\n  }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ArticleData.html":{"url":"interfaces/ArticleData.html","title":"interface - ArticleData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ArticleData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/article/article.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        author\n                                \n                                \n                                            Optional\n                                        body\n                                \n                                \n                                            Optional\n                                        createdAt\n                                \n                                \n                                        description\n                                \n                                \n                                            Optional\n                                        favorited\n                                \n                                \n                                            Optional\n                                        favoritesCount\n                                \n                                \n                                        slug\n                                \n                                \n                                            Optional\n                                        tagList\n                                \n                                \n                                        title\n                                \n                                \n                                            Optional\n                                        updatedAt\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        author\n                                    \n                                \n                                \n                                    \n                                        author:         UserData\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         UserData\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        body\n                                    \n                                \n                                \n                                    \n                                        body:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                    \n                                \n                                \n                                    \n                                        createdAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        favorited\n                                    \n                                \n                                \n                                    \n                                        favorited:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        favoritesCount\n                                    \n                                \n                                \n                                    \n                                        favoritesCount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        slug\n                                    \n                                \n                                \n                                    \n                                        slug:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tagList\n                                    \n                                \n                                \n                                    \n                                        tagList:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                    \n                                \n                                \n                                    \n                                        updatedAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { UserData } from '../user/user.interface';\nimport { ArticleEntity } from './article.entity';\ninterface Comment {\n  body: string;\n}\n\ninterface ArticleData {\n  slug: string;\n  title: string;\n  description: string;\n  body?: string;\n  tagList?: string[];\n  createdAt?: Date\n  updatedAt?: Date\n  favorited?: boolean;\n  favoritesCount?: number;\n  author?: UserData;\n}\n\nexport interface CommentsRO {\n  comments: Comment[];\n}\n\nexport interface ArticleRO {\n  article: ArticleEntity;\n}\n\nexport interface ArticlesRO {\n  articles: ArticleEntity[];\n  articlesCount: number;\n}\n\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ArticleEntity.html":{"url":"classes/ArticleEntity.html","title":"class - ArticleEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ArticleEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/article/article.entity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                author\n                            \n                            \n                                body\n                            \n                            \n                                comments\n                            \n                            \n                                createdby\n                            \n                            \n                                createddate\n                            \n                            \n                                description\n                            \n                            \n                                favoriteCount\n                            \n                            \n                                id\n                            \n                            \n                                slug\n                            \n                            \n                                tagList\n                            \n                            \n                                title\n                            \n                            \n                                updatedby\n                            \n                            \n                                updateddate\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            author\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserEntity\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne(undefined, undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/article/article.entity.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            body\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({default: ''})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/article/article.entity.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            comments\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Comment[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @OneToMany(undefined, undefined, {eager: true})@JoinColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/article/article.entity.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdby\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/article/article.entity.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createddate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/article/article.entity.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({nullable: true, default: ''})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/article/article.entity.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            favoriteCount\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({default: 0})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/article/article.entity.ts:46\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/article/article.entity.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            slug\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column('nvarchar', {length: 100})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/article/article.entity.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tagList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column('simple-array')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/article/article.entity.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column('nvarchar', {length: 100})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/article/article.entity.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedby\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/article/article.entity.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateddate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/article/article.entity.ts:30\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, PrimaryGeneratedColumn, Column, OneToOne, ManyToOne, OneToMany, JoinColumn, AfterUpdate, BeforeUpdate } from 'typeorm';\nimport { UserEntity } from '../user/user.entity';\nimport { Comment } from './comment.entity';\n\n@Entity('article')\nexport class ArticleEntity {\n\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column(\"nvarchar\", { length: 100 })\n  slug: string;\n\n  @Column(\"nvarchar\", { length: 100 })\n  title: string;\n\n  @Column({nullable: true, default: ''})\n  description: string;\n\n  @Column({default: ''})\n  body: string;\n\n  @Column()\n  createddate: Date;\n\n  @Column()\n  createdby: number;\n\n  @Column()\n  updateddate: Date;\n\n  @Column()\n  updatedby: number;\n\n  @Column('simple-array')\n  tagList: string[];\n\n  @ManyToOne(type => UserEntity, user => user.articles)\n  author: UserEntity;\n\n  @OneToMany(type => Comment, comment => comment.article, {eager: true})\n  @JoinColumn()\n  comments: Comment[];\n\n  @Column({default: 0})\n  favoriteCount: number;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ArticleModule.html":{"url":"modules/ArticleModule.html","title":"module - ArticleModule","body":"\n                   \n\n\n\n\n    Modules\n    ArticleModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ArticleModule\n\n\n\ncluster_ArticleModule_imports\n\n\n\ncluster_ArticleModule_providers\n\n\n\n\nUserModule\n\nUserModule\n\n\n\nArticleModule\n\nArticleModule\n\nArticleModule -->\n\nUserModule->ArticleModule\n\n\n\n\n\nArticleService\n\nArticleService\n\nArticleModule -->\n\nArticleService->ArticleModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/article/article.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ArticleService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ArticleController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            configure\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    configure(consumer: MiddlewareConsumer)\n                \n            \n\n\n            \n                \n                    Defined in src/article/article.module.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    consumer\n                                    \n                                            MiddlewareConsumer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { MiddlewareConsumer, Module, NestModule, RequestMethod } from '@nestjs/common';\nimport { ArticleController } from './article.controller';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { ArticleEntity } from './article.entity';\nimport { Comment } from './comment.entity';\nimport { UserEntity } from '../user/user.entity';\nimport { FollowsEntity } from '../profile/follows.entity';\nimport { ArticleService } from './article.service';\nimport { AuthMiddleware } from '../user/auth.middleware';\nimport { UserModule } from '../user/user.module';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([ArticleEntity, Comment, UserEntity, FollowsEntity]), UserModule],\n  providers: [ArticleService],\n  controllers: [\n    ArticleController\n  ]\n})\nexport class ArticleModule implements NestModule {\n  public configure(consumer: MiddlewareConsumer) {\n    consumer\n      .apply(AuthMiddleware)\n      .forRoutes(\n        {path: 'articles/feed', method: RequestMethod.GET},\n        {path: 'articles', method: RequestMethod.POST},\n        {path: 'articles/:slug', method: RequestMethod.DELETE},\n        {path: 'articles/:slug', method: RequestMethod.PUT},\n        {path: 'articles/:slug/comments', method: RequestMethod.POST},\n        {path: 'articles/:slug/comments/:id', method: RequestMethod.DELETE},\n        {path: 'articles/:slug/favorite', method: RequestMethod.POST},\n        {path: 'articles/:slug/favorite', method: RequestMethod.DELETE});\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ArticleRO.html":{"url":"interfaces/ArticleRO.html","title":"interface - ArticleRO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ArticleRO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/article/article.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        article\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        article\n                                    \n                                \n                                \n                                    \n                                        article:         ArticleEntity\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ArticleEntity\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { UserData } from '../user/user.interface';\nimport { ArticleEntity } from './article.entity';\ninterface Comment {\n  body: string;\n}\n\ninterface ArticleData {\n  slug: string;\n  title: string;\n  description: string;\n  body?: string;\n  tagList?: string[];\n  createdAt?: Date\n  updatedAt?: Date\n  favorited?: boolean;\n  favoritesCount?: number;\n  author?: UserData;\n}\n\nexport interface CommentsRO {\n  comments: Comment[];\n}\n\nexport interface ArticleRO {\n  article: ArticleEntity;\n}\n\nexport interface ArticlesRO {\n  articles: ArticleEntity[];\n  articlesCount: number;\n}\n\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ArticleService.html":{"url":"injectables/ArticleService.html","title":"injectable - ArticleService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ArticleService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/article/article.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addComment\n                            \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                deleteComment\n                            \n                            \n                                    Async\n                                favorite\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findComments\n                            \n                            \n                                    Async\n                                findFeed\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                slugify\n                            \n                            \n                                    Async\n                                unFavorite\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(articleRepository: Repository, commentRepository: Repository, userRepository: Repository, followsRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/article/article.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        articleRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        commentRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        followsRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            addComment\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addComment(slug: string, commentData)\n                \n            \n\n\n            \n                \n                    Defined in src/article/article.service.ts:101\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    slug\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    commentData\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(userId: number, articleData: CreateArticleDto)\n                \n            \n\n\n            \n                \n                    Defined in src/article/article.service.ts:170\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    articleData\n                                    \n                                                CreateArticleDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(slug: string)\n                \n            \n\n\n            \n                \n                    Defined in src/article/article.service.ts:197\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    slug\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteComment\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteComment(slug: string, id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/article/article.service.ts:114\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    slug\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            favorite\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    favorite(id: number, slug: string)\n                \n            \n\n\n            \n                \n                    Defined in src/article/article.service.ts:131\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    slug\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(query)\n                \n            \n\n\n            \n                \n                    Defined in src/article/article.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findComments\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findComments(slug: string)\n                \n            \n\n\n            \n                \n                    Defined in src/article/article.service.ts:165\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    slug\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findFeed\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findFeed(userId: number, query)\n                \n            \n\n\n            \n                \n                    Defined in src/article/article.service.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    query\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(where)\n                \n            \n\n\n            \n                \n                    Defined in src/article/article.service.ts:96\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    where\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            slugify\n                        \n                        \n                    \n                \n            \n            \n                \nslugify(title: string)\n                \n            \n\n\n            \n                \n                    Defined in src/article/article.service.ts:201\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    title\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            unFavorite\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    unFavorite(id: number, slug: string)\n                \n            \n\n\n            \n                \n                    Defined in src/article/article.service.ts:147\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    slug\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update(slug: string, articleData: any)\n                \n            \n\n\n            \n                \n                    Defined in src/article/article.service.ts:190\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    slug\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    articleData\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository, getRepository, DeleteResult } from 'typeorm';\nimport { ArticleEntity } from './article.entity';\nimport { Comment } from './comment.entity';\nimport { UserEntity } from '../user/user.entity';\nimport { FollowsEntity } from '../profile/follows.entity';\nimport { CreateArticleDto } from './dto';\n\nimport {ArticleRO, ArticlesRO, CommentsRO} from './article.interface';\nconst slug = require('slug');\n\n@Injectable()\nexport class ArticleService {\n  constructor(\n    @InjectRepository(ArticleEntity)\n    private readonly articleRepository: Repository,\n    @InjectRepository(Comment)\n    private readonly commentRepository: Repository,\n    @InjectRepository(UserEntity)\n    private readonly userRepository: Repository,\n    @InjectRepository(FollowsEntity)\n    private readonly followsRepository: Repository\n  ) {}\n\n  async findAll(query): Promise {\n\n    const qb = await getRepository(ArticleEntity)\n      .createQueryBuilder('article')\n      .leftJoinAndSelect('article.author', 'author');\n\n    qb.where(\"1 = 1\");\n\n    if ('tag' in query) {\n      qb.andWhere(\"article.tagList LIKE :tag\", { tag: `%${query.tag}%` });\n    }\n\n    if ('author' in query) {\n      const author = await this.userRepository.findOne({username: query.author});\n      qb.andWhere(\"article.authorId = :id\", { id: author.id });\n    }\n\n    if ('favorited' in query) {\n      const author = await this.userRepository.findOne({username: query.favorited});\n      const ids = author.favorites.map(el => el.id);\n      qb.andWhere(\"article.authorId IN (:ids)\", { ids });\n    }\n\n    qb.orderBy('article.created', 'DESC');\n\n    const articlesCount = await qb.getCount();\n\n    if ('limit' in query) {\n      qb.limit(query.limit);\n    }\n\n    if ('offset' in query) {\n      qb.offset(query.offset);\n    }\n\n    const articles = await qb.getMany();\n\n    return {articles, articlesCount};\n  }\n\n  async findFeed(userId: number, query): Promise {\n    const _follows = await this.followsRepository.find( {followerId: userId});\n\n    if (!(Array.isArray(_follows) && _follows.length > 0)) {\n      return {articles: [], articlesCount: 0};\n    }\n\n    const ids = _follows.map(el => el.followingId);\n\n    const qb = await getRepository(ArticleEntity)\n      .createQueryBuilder('article')\n      .where('article.authorId IN (:ids)', { ids });\n\n    qb.orderBy('article.created', 'DESC');\n\n    const articlesCount = await qb.getCount();\n\n    if ('limit' in query) {\n      qb.limit(query.limit);\n    }\n\n    if ('offset' in query) {\n      qb.offset(query.offset);\n    }\n\n    const articles = await qb.getMany();\n\n    return {articles, articlesCount};\n  }\n\n  async findOne(where): Promise {\n    const article = await this.articleRepository.findOne(where);\n    return {article};\n  }\n\n  async addComment(slug: string, commentData): Promise {\n    let article = await this.articleRepository.findOne({slug});\n\n    const comment = new Comment();\n    comment.body = commentData.body;\n\n    article.comments.push(comment);\n\n    await this.commentRepository.save(comment);\n    article = await this.articleRepository.save(article);\n    return {article}\n  }\n\n  async deleteComment(slug: string, id: string): Promise {\n    let article = await this.articleRepository.findOne({slug});\n\n    const comment = await this.commentRepository.findOne(id);\n    const deleteIndex = article.comments.findIndex(_comment => _comment.id === comment.id);\n\n    if (deleteIndex >= 0) {\n      const deleteComments = article.comments.splice(deleteIndex, 1);\n      await this.commentRepository.delete(deleteComments[0].id);\n      article =  await this.articleRepository.save(article);\n      return {article};\n    } else {\n      return {article};\n    }\n\n  }\n\n  async favorite(id: number, slug: string): Promise {\n    let article = await this.articleRepository.findOne({slug});\n    const user = await this.userRepository.findOne(id);\n\n    const isNewFavorite = user.favorites.findIndex(_article => _article.id === article.id)  {\n    let article = await this.articleRepository.findOne({slug});\n    const user = await this.userRepository.findOne(id);\n\n    const deleteIndex = user.favorites.findIndex(_article => _article.id === article.id);\n\n    if (deleteIndex >= 0) {\n\n      user.favorites.splice(deleteIndex, 1);\n      article.favoriteCount--;\n\n      await this.userRepository.save(user);\n      article = await this.articleRepository.save(article);\n    }\n\n    return {article};\n  }\n\n  async findComments(slug: string): Promise {\n    const article = await this.articleRepository.findOne({slug});\n    return {comments: article.comments};\n  }\n\n  async create(userId: number, articleData: CreateArticleDto): Promise {\n\n    let article = new ArticleEntity();\n    article.title = articleData.title;\n    article.description = articleData.description;\n    article.slug = this.slugify(articleData.title);\n    article.tagList = articleData.tagList || [];\n    article.comments = [];\n\n    const newArticle = await this.articleRepository.save(article);\n\n    const author = await this.userRepository.findOne({ where: { id: userId }, relations: ['articles'] });\n    author.articles.push(article);\n\n    await this.userRepository.save(author);\n\n    return newArticle;\n\n  }\n\n  async update(slug: string, articleData: any): Promise {\n    let toUpdate = await this.articleRepository.findOne({ slug: slug});\n    let updated = Object.assign(toUpdate, articleData);\n    const article = await this.articleRepository.save(updated);\n    return {article};\n  }\n\n  async delete(slug: string): Promise {\n    return await this.articleRepository.delete({ slug: slug});\n  }\n\n  slugify(title: string) {\n    return slug(title, {lower: true}) + '-' + (Math.random() * Math.pow(36, 6) | 0).toString(36)\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ArticlesRO.html":{"url":"interfaces/ArticlesRO.html","title":"interface - ArticlesRO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ArticlesRO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/article/article.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        articles\n                                \n                                \n                                        articlesCount\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        articles\n                                    \n                                \n                                \n                                    \n                                        articles:         ArticleEntity[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ArticleEntity[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        articlesCount\n                                    \n                                \n                                \n                                    \n                                        articlesCount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { UserData } from '../user/user.interface';\nimport { ArticleEntity } from './article.entity';\ninterface Comment {\n  body: string;\n}\n\ninterface ArticleData {\n  slug: string;\n  title: string;\n  description: string;\n  body?: string;\n  tagList?: string[];\n  createdAt?: Date\n  updatedAt?: Date\n  favorited?: boolean;\n  favoritesCount?: number;\n  author?: UserData;\n}\n\nexport interface CommentsRO {\n  comments: Comment[];\n}\n\nexport interface ArticleRO {\n  article: ArticleEntity;\n}\n\nexport interface ArticlesRO {\n  articles: ArticleEntity[];\n  articlesCount: number;\n}\n\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthMiddleware.html":{"url":"injectables/AuthMiddleware.html","title":"injectable - AuthMiddleware","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthMiddleware\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/auth.middleware.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                use\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService, configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/user/auth.middleware.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            use\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    use(req: Request, res: Response, next: NextFunction)\n                \n            \n\n\n            \n                \n                    Defined in src/user/auth.middleware.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            NextFunction\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpException } from '@nestjs/common/exceptions/http.exception';\nimport { NestMiddleware, HttpStatus, Injectable } from '@nestjs/common';\nimport { ExtractJwt, Strategy } from 'passport-jwt';\nimport { Request, Response, NextFunction } from 'express';\nimport * as jwt from 'jsonwebtoken';\nimport { UserService } from './user.service';\n\nimport {ConfigService} from '@nestjs/config';\n\n@Injectable()\nexport class AuthMiddleware implements NestMiddleware {\n  constructor(private readonly userService: UserService, private configService: ConfigService) {}\n\n  async use(req: Request, res: Response, next: NextFunction) {\n    const authHeaders = req.headers.authorization;\n \n    if (authHeaders && (authHeaders as string).split(' ')[1]) {\n      const token = (authHeaders as string).split(' ')[1];\n      const secret = this.configService.get('JWT_SECRET');\n     // const secret = \"supersecret\";\n      console.log('token');\n      console.log(token);\n      console.log('secret');\n      console.log(secret);\n      \n      const decoded: any = jwt.verify(token, secret);\n      const user = await this.userService.findById(decoded.id);\n\n      console.log('decoded');\n      console.log(user);\n\n\n      if (!user) {\n        throw new HttpException('User not found.', HttpStatus.UNAUTHORIZED);\n      }\n\n      //req.user = user.user;\n      next();\n\n    } else {\n      throw new HttpException('Not authorized.', HttpStatus.UNAUTHORIZED);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseController.html":{"url":"classes/BaseController.html","title":"class - BaseController","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/base.controller.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                getUserIdFromToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/shared/base.controller.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            getUserIdFromToken\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserIdFromToken(authorization)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/base.controller.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    authorization\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import * as jwt from 'jsonwebtoken';\nimport {ConfigService} from '@nestjs/config'\nexport class BaseController {\n\n  constructor(private configService: ConfigService) {}\n\n  protected getUserIdFromToken(authorization) {\n    if (!authorization) return null;\n\n    const token = authorization.split(' ')[1];\n    const secret = this.configService.get('JWT_SECRET');\n    const decoded: any = jwt.verify(token, secret);\n    return decoded.id;\n  }\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Comment.html":{"url":"classes/Comment.html","title":"class - Comment","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Comment\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/article/comment.entity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                article\n                            \n                            \n                                body\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            article\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ArticleEntity\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne(undefined, undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/article/comment.entity.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            body\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/article/comment.entity.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/article/comment.entity.ts:8\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, PrimaryGeneratedColumn, Column, ManyToOne } from 'typeorm';\nimport { ArticleEntity } from './article.entity';\n\n@Entity()\nexport class Comment {\n\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column()\n  body: string;\n\n  @ManyToOne(type => ArticleEntity, article => article.comments)\n  article: ArticleEntity;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/CommentController.html":{"url":"controllers/CommentController.html","title":"controller - CommentController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  CommentController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/comment/comment.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                comment\n            \n\n\n\n\n\n\n    \n\n\n    \n        import { Controller } from '@nestjs/common';\n\n@Controller('comment')\nexport class CommentController {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CommentModule.html":{"url":"modules/CommentModule.html","title":"module - CommentModule","body":"\n                   \n\n\n\n\n    Modules\n    CommentModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/services/comment/comment.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Controllers\n                    \n                        \n                            CommentController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { CommentController } from './comment.controller';\n\n@Module({\n  controllers: [CommentController]\n})\nexport class CommentModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CommentService.html":{"url":"injectables/CommentService.html","title":"injectable - CommentService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CommentService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/comment/comment.service.ts\n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class CommentService {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CommentsRO.html":{"url":"interfaces/CommentsRO.html","title":"interface - CommentsRO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CommentsRO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/article/article.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        comments\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        comments\n                                    \n                                \n                                \n                                    \n                                        comments:         Comment[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Comment[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { UserData } from '../user/user.interface';\nimport { ArticleEntity } from './article.entity';\ninterface Comment {\n  body: string;\n}\n\ninterface ArticleData {\n  slug: string;\n  title: string;\n  description: string;\n  body?: string;\n  tagList?: string[];\n  createdAt?: Date\n  updatedAt?: Date\n  favorited?: boolean;\n  favoritesCount?: number;\n  author?: UserData;\n}\n\nexport interface CommentsRO {\n  comments: Comment[];\n}\n\nexport interface ArticleRO {\n  article: ArticleEntity;\n}\n\nexport interface ArticlesRO {\n  articles: ArticleEntity[];\n  articlesCount: number;\n}\n\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/CorporationController.html":{"url":"controllers/CorporationController.html","title":"controller - CorporationController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  CorporationController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/corporation/corporation.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                corporations\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findMList\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(corporationData: CreateCorporationDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Create corporation'})@ApiResponse({status: 201, description: 'The corporation created successfully.'})@ApiResponse({status: 403, description: 'Forbidden.'})@ApiBody({type: CreateCorporationDto})@Post('corporation')\n                \n            \n\n            \n                \n                    Defined in src/corporation/corporation.controller.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    corporationData\n                                    \n                                                CreateCorporationDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Delete corporation'})@ApiResponse({status: 201, description: 'The corporation delted successfully.'})@ApiResponse({status: 401, description: 'Unauthorized.'})@ApiResponse({status: 403, description: 'Forbidden.'})@ApiResponse({status: 404, description: 'Not found.'})@Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/corporation/corporation.controller.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Get all corporations'})@ApiResponse({status: 200, description: 'Returned all corporations successfully.'})@ApiResponse({status: 403, description: 'Forbidden.'})@Get()\n                \n            \n\n            \n                \n                    Defined in src/corporation/corporation.controller.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findMList\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findMList(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Get single corporation'})@ApiResponse({status: 200, description: 'Returned corporation successfully.'})@ApiResponse({status: 403, description: 'Forbidden.'})@Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/corporation/corporation.controller.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {Get, Post, Body, Put, Delete, Query, Param, Controller} from '@nestjs/common';\nimport { Request } from 'express';\nimport { CorporationService } from './corporation.service';\nimport { CreateCorporationDto } from './dto';\nimport { CorporationRO } from './corporation.interface';\nimport { CorporationEntity } from './corporation.entity';\n\n//import { CommentsRO } from './corporation.interface';\nimport { User } from '../user/user.decorator';\n\nimport {\n  ApiBearerAuth,\n  ApiResponse,\n  ApiOperation, \n  ApiTags,\n  ApiBody,\n} from '@nestjs/swagger';\n\n@ApiBearerAuth()\n@ApiTags('corporations')\n@Controller('corporations')\nexport class CorporationController {\n  constructor(private readonly corporationservice: CorporationService) {}\n\n  @ApiOperation({ summary: 'Get all corporations' })\n  @ApiResponse({ status: 200, description: 'Returned all corporations successfully.'})\n  @ApiResponse({ status: 403, description: 'Forbidden.' })\n  @Get()\n  async findAll(): Promise {\n    return await this.corporationservice.findAll();\n  }\n\n  @ApiOperation({ summary: 'Get single corporation' })\n  @ApiResponse({ status: 200, description: 'Returned corporation successfully.'})\n  @ApiResponse({ status: 403, description: 'Forbidden.' })\n  @Get(':id')\n   async findMList(@Param('id') id: number): Promise {\n    return await this.corporationservice.findById(id);\n  }\n\n  @ApiOperation({ summary: 'Create corporation' })\n  @ApiResponse({ status: 201, description: 'The corporation created successfully.'})\n  @ApiResponse({ status: 403, description: 'Forbidden.' })\n  @ApiBody({type: CreateCorporationDto})\n  @Post('corporation')\n  async create(@Body('corporation') corporationData: CreateCorporationDto) {\n    return this.corporationservice.create(corporationData);\n  }\n\n  // @ApiOperation({ summary: 'Update corporation' })\n  // @ApiResponse({ status: 201, description: 'The corporation updated successfully.'})\n  // @ApiResponse({ status: 403, description: 'Forbidden.' })\n  // @ApiBody({type: CreateCorporationDto})\n  // @Put(':id')\n  // async update(@Param('id') params, @Body() corporationData: CreateCorporationDto) {\n  //   return this.corporationservice.update(id, corporationData);\n  // }\n\n  @ApiOperation({ summary: 'Delete corporation' })\n  @ApiResponse({ status: 201, description: 'The corporation delted successfully.'})\n  @ApiResponse({ status: 401, description: 'Unauthorized.' })\n  @ApiResponse({ status: 403, description: 'Forbidden.' })\n  @ApiResponse({ status: 404, description: 'Not found.' })\n  //@ApiBody({type: CreateCorporationDto})\n  @Delete(':id')\n  async delete(@Param('id') id: number) {\n    return this.corporationservice.delete(id);\n\n  }\n\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CorporationData.html":{"url":"interfaces/CorporationData.html","title":"interface - CorporationData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CorporationData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/corporation/corporation.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        active\n                                \n                                \n                                            Optional\n                                        costcenter\n                                \n                                \n                                            Optional\n                                        createdat\n                                \n                                \n                                            Optional\n                                        createdby\n                                \n                                \n                                        description\n                                \n                                \n                                        name\n                                \n                                \n                                        slug\n                                \n                                \n                                            Optional\n                                        updatedat\n                                \n                                \n                                            Optional\n                                        updatedby\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        active\n                                    \n                                \n                                \n                                    \n                                        active:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        costcenter\n                                    \n                                \n                                \n                                    \n                                        costcenter:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createdat\n                                    \n                                \n                                \n                                    \n                                        createdat:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createdby\n                                    \n                                \n                                \n                                    \n                                        createdby:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        slug\n                                    \n                                \n                                \n                                    \n                                        slug:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedat\n                                    \n                                \n                                \n                                    \n                                        updatedat:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedby\n                                    \n                                \n                                \n                                    \n                                        updatedby:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface CorporationData {\n\n    slug: string;\n    name: string;\n    costcenter?: number;\n    description: string;\n    active?: boolean;\n    createdat?: Date;\n    createdby?: number;\n    updatedat?: Date;\n    updatedby?: number;\n\n  }\n  \n  export interface CorporationRO {\n    corporation: CorporationData;\n  }\n\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CorporationEntity.html":{"url":"classes/CorporationEntity.html","title":"class - CorporationEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CorporationEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/corporation/corporation.entity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                active\n                            \n                            \n                                costcenter\n                            \n                            \n                                createdby\n                            \n                            \n                                createddate\n                            \n                            \n                                description\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                sites\n                            \n                            \n                                slug\n                            \n                            \n                                updatedby\n                            \n                            \n                                updateddate\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            active\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({default: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/corporation/corporation.entity.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            costcenter\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/corporation/corporation.entity.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdby\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/corporation/corporation.entity.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createddate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/corporation/corporation.entity.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/corporation/corporation.entity.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/corporation/corporation.entity.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column('nvarchar', {length: 100})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/corporation/corporation.entity.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sites\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SiteEntity[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @OneToMany(undefined, undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/corporation/corporation.entity.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            slug\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/corporation/corporation.entity.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedby\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/corporation/corporation.entity.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateddate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/corporation/corporation.entity.ts:32\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, PrimaryGeneratedColumn, Column, OneToOne, ManyToOne, OneToMany, JoinColumn, AfterUpdate, BeforeUpdate } from 'typeorm';\nimport { SiteEntity } from '../site/site.entity';\n\n@Entity('corporation')\nexport class CorporationEntity {\n\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column()\n  slug: string;\n\n  @Column(\"nvarchar\", { length: 100 })\n  name: string;\n\n  @Column()\n  costcenter: number;\n\n  @Column({nullable: true})\n  description: string;\n\n  @Column({default: false})\n  active: boolean;\n\n  @Column()\n  createddate: Date;\n\n  @Column()\n  createdby: number;\n\n  @Column()\n  updateddate: Date;\n\n  @Column()\n  updatedby: number;\n\n  @OneToMany(type => SiteEntity, site => site.corporation)\n  sites: SiteEntity[];\n\n}\n\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CorporationModule.html":{"url":"modules/CorporationModule.html","title":"module - CorporationModule","body":"\n                   \n\n\n\n\n    Modules\n    CorporationModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CorporationModule\n\n\n\ncluster_CorporationModule_providers\n\n\n\n\nCorporationService\n\nCorporationService\n\n\n\nCorporationModule\n\nCorporationModule\n\nCorporationModule -->\n\nCorporationService->CorporationModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/corporation/corporation.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CorporationService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            CorporationController\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            configure\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    configure(consumer: MiddlewareConsumer)\n                \n            \n\n\n            \n                \n                    Defined in src/corporation/corporation.module.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    consumer\n                                    \n                                            MiddlewareConsumer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import {MiddlewareConsumer, Module, NestModule, RequestMethod} from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\n\nimport { CorporationService } from './corporation.service';\nimport { CorporationEntity } from './corporation.entity';\nimport { CorporationController } from './corporation.controller';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([CorporationEntity])],\n  providers: [CorporationService],\n  controllers: [\n    CorporationController\n  ],\n  exports: []\n})\nexport class CorporationModule implements NestModule {\n  public configure(consumer: MiddlewareConsumer) {\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CorporationRO.html":{"url":"interfaces/CorporationRO.html","title":"interface - CorporationRO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CorporationRO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/corporation/corporation.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        corporation\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        corporation\n                                    \n                                \n                                \n                                    \n                                        corporation:         CorporationData\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CorporationData\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface CorporationData {\n\n    slug: string;\n    name: string;\n    costcenter?: number;\n    description: string;\n    active?: boolean;\n    createdat?: Date;\n    createdby?: number;\n    updatedat?: Date;\n    updatedby?: number;\n\n  }\n  \n  export interface CorporationRO {\n    corporation: CorporationData;\n  }\n\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CorporationService.html":{"url":"injectables/CorporationService.html","title":"injectable - CorporationService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CorporationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/corporation/corporation.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                buildCorporationRO\n                            \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findById\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(CorporationRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/corporation/corporation.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        CorporationRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            buildCorporationRO\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    buildCorporationRO(corporation: CorporationEntity)\n                \n            \n\n\n            \n                \n                    Defined in src/corporation/corporation.service.ts:83\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    corporation\n                                    \n                                                CorporationEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         { corporation: { id: any; slug: any; name: any; costcenter: any; description: any; }; }\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(dto: CreateCorporationDto)\n                \n            \n\n\n            \n                \n                    Defined in src/corporation/corporation.service.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                CreateCorporationDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/corporation/corporation.service.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n\n            \n                \n                    Defined in src/corporation/corporation.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findById\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findById(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/corporation/corporation.service.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(undefined: CreateCorporationDto)\n                \n            \n\n\n            \n                \n                    Defined in src/corporation/corporation.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                CreateCorporationDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: number, dto: CreateCorporationDto)\n                \n            \n\n\n            \n                \n                    Defined in src/corporation/corporation.service.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dto\n                                    \n                                                CreateCorporationDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository, getRepository, DeleteResult } from 'typeorm';\nimport { HttpException } from '@nestjs/common/exceptions/http.exception';\nimport { HttpStatus } from '@nestjs/common';\nimport { validate } from 'class-validator';\n\nimport { CorporationEntity } from './corporation.entity';\nimport { CorporationRO } from './corporation.interface';\nimport { CreateCorporationDto } from './dto';\n\n@Injectable()\nexport class CorporationService {\n  constructor(\n    @InjectRepository(CorporationEntity)\n    private readonly CorporationRepository: Repository, \n  ) {}\n\n  async findAll(): Promise {\n    return await this.CorporationRepository.find();\n  }\n\n  async findOne({id}: CreateCorporationDto): Promise {\n    const corporation = await this.CorporationRepository.findOne({id});\n    if (!corporation) {\n      return null;\n    }\n    return null;\n  }\n\n  async findById(id: number): Promise{\n    const corporation = await this.CorporationRepository.findOne(id);\n\n    if (!corporation) {\n      const errors = {Corporation: ' not found'};\n      throw new HttpException({errors}, 401);\n    }\n\n    return this.buildCorporationRO(corporation);\n  }\n\n  async create(dto: CreateCorporationDto): Promise {\n\n    // check uniqueness of corporation\n    const {name, costcenter, description} = dto;\n\n    // create new corporation\n    let newCorporation = new CorporationEntity();\n    newCorporation.name = name;\n    newCorporation.costcenter = costcenter;\n    newCorporation.description = description;\n\n    const errors = await validate(newCorporation);\n    if (errors.length > 0) {\n      const _errors = {corporation: 'Userinput is not valid.'};\n      throw new HttpException({message: 'Input data validation failed', _errors}, HttpStatus.BAD_REQUEST);\n\n    } else {\n      const savedCorporation = await this.CorporationRepository.save(newCorporation);\n      return this.buildCorporationRO(savedCorporation);\n    }\n  }\n\n  async update(id: number, dto: CreateCorporationDto): Promise {\n    let toUpdate = await this.CorporationRepository.findOne(id);\n\n    let updated = Object.assign(toUpdate, dto);\n    const errorlog  = this.CorporationRepository.save(updated);\n\n    if (!errorlog) {\n      const errors = {ErrorLog: ' not found'};\n      throw new HttpException({errors}, 401);\n    }\n\n    return await this.CorporationRepository.save(updated);\n\n  }\n\n  async delete(id: number): Promise {\n    return await this.CorporationRepository.delete({ id: id});\n  }\n\n  private buildCorporationRO(corporation: CorporationEntity) {\n    const CorporationRO = {\n      id: corporation.id,\n      slug: corporation.slug,\n      name: corporation.name,\n      costcenter: corporation.costcenter,\n      description: corporation.description\n     \n    };\n\n    return {corporation: CorporationRO};\n  }\n}\n\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateArticleDto.html":{"url":"classes/CreateArticleDto.html","title":"class - CreateArticleDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateArticleDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/article/dto/create-article.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                body\n                            \n                            \n                                    Readonly\n                                description\n                            \n                            \n                                    Readonly\n                                tagList\n                            \n                            \n                                    Readonly\n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            body\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/article/dto/create-article.dto.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/article/dto/create-article.dto.ts:3\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            tagList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/article/dto/create-article.dto.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/article/dto/create-article.dto.ts:2\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateArticleDto {\n  readonly title: string;\n  readonly description: string;\n  readonly body: string;\n  readonly tagList: string[];\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateCommentDto.html":{"url":"classes/CreateCommentDto.html","title":"class - CreateCommentDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateCommentDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/article/dto/create-comment.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                body\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            body\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/article/dto/create-comment.ts:2\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateCommentDto {\n  readonly body: string;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateCorporationDto.html":{"url":"classes/CreateCorporationDto.html","title":"class - CreateCorporationDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateCorporationDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/corporation/dto/create-corporation.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                costcenter\n                            \n                            \n                                    Readonly\n                                description\n                            \n                            \n                                    Readonly\n                                id\n                            \n                            \n                                    Readonly\n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            costcenter\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({type: Number, description: 'costcenter'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/corporation/dto/create-corporation.dto.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({type: String, description: 'description'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/corporation/dto/create-corporation.dto.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({type: Number, description: 'id'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/corporation/dto/create-corporation.dto.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()@ApiProperty({type: String, description: 'name'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/corporation/dto/create-corporation.dto.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty } from 'class-validator';\nimport {ApiProperty} from '@nestjs/swagger';\n\nexport class CreateCorporationDto {\n\n  @ApiProperty({type: Number, description: 'id'})\n  readonly id: number;\n\n  @IsNotEmpty()\n  @ApiProperty({type: String, description: 'name'})\n  readonly name: string;\n\n  @ApiProperty({type: Number, description: 'costcenter'})\n  readonly costcenter: number;\n\n  @ApiProperty({type: String, description: 'description'})\n  readonly description: string;\n\n}\n\n\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateErrorLogDto.html":{"url":"classes/CreateErrorLogDto.html","title":"class - CreateErrorLogDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateErrorLogDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/errorlog/dto/create-errorlog.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                description\n                            \n                            \n                                    Readonly\n                                errorcode\n                            \n                            \n                                    Readonly\n                                errorcodehtml\n                            \n                            \n                                    Readonly\n                                id\n                            \n                            \n                                    Readonly\n                                siteid\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()@ApiProperty({type: String, description: 'description'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/errorlog/dto/create-errorlog.dto.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            errorcode\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNumber()@ApiProperty({type: String, description: 'errorcode'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/errorlog/dto/create-errorlog.dto.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            errorcodehtml\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({type: String, description: 'errorcodehtml'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/errorlog/dto/create-errorlog.dto.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({type: Number, description: 'id'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/errorlog/dto/create-errorlog.dto.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            siteid\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNumber()@ApiProperty({type: Number, description: 'siteid'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/errorlog/dto/create-errorlog.dto.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsNumber, IsNumberOptions } from 'class-validator';\nimport {ApiProperty} from '@nestjs/swagger';\n\nexport class CreateErrorLogDto {\n\n  @ApiProperty({type: Number, description: 'id'})\n  readonly id: number;\n\n  @IsNumber()\n  @ApiProperty({type: Number, description: 'siteid'})\n  readonly siteid: number;\n\n  @IsNotEmpty()\n  @ApiProperty({type: String, description: 'description'})\n  readonly description: string;\n\n  @IsNumber()\n  @ApiProperty({type: String, description: 'errorcode'})\n  readonly errorcode: string;\n\n  @ApiProperty({type: String, description: 'errorcodehtml'})\n  readonly errorcodehtml: string;\n\n\n\n\n\n}\n\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateGroupDto.html":{"url":"classes/CreateGroupDto.html","title":"class - CreateGroupDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateGroupDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/group/dto/create-group.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                description\n                            \n                            \n                                    Readonly\n                                id\n                            \n                            \n                                    Readonly\n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({type: String, description: 'description'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/group/dto/create-group.dto.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({type: Number, description: 'id'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/group/dto/create-group.dto.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({type: String, description: 'name'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/group/dto/create-group.dto.ts:12\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty } from 'class-validator';\nimport {ApiProperty} from '@nestjs/swagger';\n\n\nexport class CreateGroupDto {\n\n  @ApiProperty({type: Number, description: 'id'})\n  readonly id: number;\n\n//  @IsNotEmpty()\n  @ApiProperty({type: String, description: 'name'})\n  readonly name: string;\n\n  @ApiProperty({type: String, description: 'description'})\n  readonly description: string;\n\n}\n\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateListDto.html":{"url":"classes/CreateListDto.html","title":"class - CreateListDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateListDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/list/dto/create-list.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                description\n                            \n                            \n                                    Readonly\n                                id\n                            \n                            \n                                    Readonly\n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()@ApiProperty({type: String, description: 'description'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/list/dto/create-list.dto.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({type: Number, description: 'id'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/list/dto/create-list.dto.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()@ApiProperty({type: String, description: 'name'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/list/dto/create-list.dto.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty } from 'class-validator';\nimport {ApiProperty} from '@nestjs/swagger';\n\nexport class CreateListDto {\n\n  @ApiProperty({type: Number, description: 'id'})\n  readonly id: number;\n\n  @IsNotEmpty()\n  @ApiProperty({type: String, description: 'name'})\n  readonly name: string;\n\n  @IsNotEmpty()\n  @ApiProperty({type: String, description: 'description'})\n  readonly description: string;\n\n}\n\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateListEntryDto.html":{"url":"classes/CreateListEntryDto.html","title":"class - CreateListEntryDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateListEntryDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/list/dto/create-listentry.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                desription\n                            \n                            \n                                    Readonly\n                                id\n                            \n                            \n                                    Readonly\n                                name\n                            \n                            \n                                    Readonly\n                                value\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            desription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()@ApiProperty({type: String, description: 'description'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/list/dto/create-listentry.dto.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({type: Number, description: 'id'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/list/dto/create-listentry.dto.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()@ApiProperty({type: String, description: 'name'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/list/dto/create-listentry.dto.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            value\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()@ApiProperty({type: String, description: 'value'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/list/dto/create-listentry.dto.ts:19\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty } from 'class-validator';\nimport {ApiProperty} from '@nestjs/swagger';\n\nexport class CreateListEntryDto {\n  \n  @ApiProperty({type: Number, description: 'id'})\n  readonly id: number;\n\n  @IsNotEmpty()\n  @ApiProperty({type: String, description: 'name'})\n  readonly name: string;\n\n  @IsNotEmpty()\n  @ApiProperty({type: String, description: 'description'})\n  readonly desription: string;\n\n  @IsNotEmpty()\n  @ApiProperty({type: String, description: 'value'})\n  readonly value: string;\n\n}\n\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateMenuDto.html":{"url":"classes/CreateMenuDto.html","title":"class - CreateMenuDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateMenuDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/menu/dto/create-menu.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                abbreviation\n                            \n                            \n                                description\n                            \n                            \n                                    Readonly\n                                id\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            abbreviation\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()@ApiProperty({type: String, description: 'abbreviation'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/menu/dto/create-menu.dto.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()@ApiProperty({type: String, description: 'description'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/menu/dto/create-menu.dto.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({type: Number, description: 'id'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/menu/dto/create-menu.dto.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()@ApiProperty({type: String, description: 'name'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/menu/dto/create-menu.dto.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty } from 'class-validator';\nimport {ApiProperty} from '@nestjs/swagger';\n\nexport class CreateMenuDto {\n\n  @ApiProperty({type: Number, description: 'id'})\n  readonly id: number;\n\n  @IsNotEmpty()\n  @ApiProperty({type: String, description: 'name'})\n  name: string;\n\n  @IsNotEmpty()\n  @ApiProperty({type: String, description: 'description'})\n  description: string;\n\n  @IsNotEmpty()\n  @ApiProperty({type: String, description: 'abbreviation'})\n  abbreviation: string;\n\n}\n\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateMenuEntryDto.html":{"url":"classes/CreateMenuEntryDto.html","title":"class - CreateMenuEntryDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateMenuEntryDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/menu/dto/create-menuentry.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                appid\n                            \n                            \n                                    Readonly\n                                caption\n                            \n                            \n                                    Readonly\n                                id\n                            \n                            \n                                    Readonly\n                                sortid\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            appid\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()@ApiProperty({type: String, description: 'apappid'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/menu/dto/create-menuentry.dto.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            caption\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()@ApiProperty({type: String, description: 'caption'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/menu/dto/create-menuentry.dto.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({type: Number, description: 'id'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/menu/dto/create-menuentry.dto.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            sortid\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()@ApiProperty({type: String, description: 'sortid'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/menu/dto/create-menuentry.dto.ts:19\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty } from 'class-validator';\nimport {ApiProperty} from '@nestjs/swagger';\n\nexport class CreateMenuEntryDto {\n\n  @ApiProperty({type: Number, description: 'id'})\n  readonly id: number;\n\n  @IsNotEmpty()\n  @ApiProperty({type: String, description: 'apappid'})\n  appid: string;\n\n  @IsNotEmpty()\n  @ApiProperty({type: String, description: 'caption'})\n  readonly caption: string;\n\n  @IsNotEmpty()\n  @ApiProperty({type: String, description: 'sortid'})\n  readonly sortid: string;\n\n}\n\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateRoleAppDto.html":{"url":"classes/CreateRoleAppDto.html","title":"class - CreateRoleAppDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateRoleAppDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/role/dto/create-roleapp.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                abbreviation\n                            \n                            \n                                    Readonly\n                                description\n                            \n                            \n                                    Readonly\n                                id\n                            \n                            \n                                    Readonly\n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            abbreviation\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()@ApiProperty({type: String, description: 'abbreviation'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/role/dto/create-roleapp.dto.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()@ApiProperty({type: String, description: 'description'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/role/dto/create-roleapp.dto.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({type: Number, description: 'id'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/role/dto/create-roleapp.dto.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()@ApiProperty({type: String, description: 'name'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/role/dto/create-roleapp.dto.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsBoolean } from 'class-validator';\nimport {ApiProperty} from '@nestjs/swagger';\nexport class CreateRoleAppDto {\n\n  @ApiProperty({type: Number, description: 'id'})\n  readonly id: number;\n\n  @IsNotEmpty()\n  @ApiProperty({type: String, description: 'name'})\n  readonly name: string;\n\n  @IsNotEmpty()\n  @ApiProperty({type: String, description: 'abbreviation'})\n  readonly abbreviation: string;\n\n  @IsNotEmpty()\n  @ApiProperty({type: String, description: 'description'})\n  readonly description: string;\n\n}\n\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateRoleDto.html":{"url":"classes/CreateRoleDto.html","title":"class - CreateRoleDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateRoleDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/role/dto/create-role.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                description\n                            \n                            \n                                    Readonly\n                                id\n                            \n                            \n                                    Readonly\n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()@ApiProperty({type: String, description: 'description'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/role/dto/create-role.dto.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({type: Number, description: 'id'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/role/dto/create-role.dto.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()@ApiProperty({type: String, description: 'name'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/role/dto/create-role.dto.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty } from 'class-validator';\nimport {ApiProperty} from '@nestjs/swagger';\nexport class CreateRoleDto {\n\n  @ApiProperty({type: Number, description: 'id'})\n  readonly id: number;\n\n  @IsNotEmpty()\n  @ApiProperty({type: String, description: 'name'})\n  readonly name: string;\n\n  @IsNotEmpty()\n  @ApiProperty({type: String, description: 'description'})\n  readonly description: string;\n\n}\n\n\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateSiteDto.html":{"url":"classes/CreateSiteDto.html","title":"class - CreateSiteDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateSiteDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/site/dto/create-site.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                costcenter\n                            \n                            \n                                    Readonly\n                                description\n                            \n                            \n                                    Readonly\n                                id\n                            \n                            \n                                    Readonly\n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            costcenter\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()@ApiProperty({type: Number, description: 'costcenter'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/site/dto/create-site.dto.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()@ApiProperty({type: String, description: 'description'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/site/dto/create-site.dto.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({type: Number, description: 'id'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/site/dto/create-site.dto.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()@ApiProperty({type: String, description: 'name'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/site/dto/create-site.dto.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty } from 'class-validator';\nimport {ApiProperty} from '@nestjs/swagger';\nexport class CreateSiteDto {\n\n  @ApiProperty({type: Number, description: 'id'})\n  readonly id: number;\n\n  @IsNotEmpty()\n  @ApiProperty({type: String, description: 'name'})\n  readonly name: string;\n\n  @IsNotEmpty()\n  @ApiProperty({type: Number, description: 'costcenter'})\n  costcenter: number;\n\n  @IsNotEmpty()\n  @ApiProperty({type: String, description: 'description'})\n  readonly description: string;\n\n}\n\n//costcenter: number;\n// must > 0\n\n\n\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dto/create-user.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                email\n                            \n                            \n                                    Readonly\n                                password\n                            \n                            \n                                    Readonly\n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/dto/create-user.dto.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/dto/create-user.dto.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            username\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/dto/create-user.dto.ts:6\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty } from 'class-validator';\nimport {ApiProperty} from '@nestjs/swagger';\nexport class CreateUserDto {\n\n  @IsNotEmpty()\n  readonly username: string;\n\n  @IsNotEmpty()\n  readonly email: string;\n\n  @IsNotEmpty()\n  readonly password: string;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DatabaseConfig.html":{"url":"injectables/DatabaseConfig.html","title":"injectable - DatabaseConfig","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DatabaseConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/config/database.config.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createTypeOrmOptions\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/config/database.config.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createTypeOrmOptions\n                        \n                        \n                    \n                \n            \n            \n                \ncreateTypeOrmOptions()\n                \n            \n\n\n            \n                \n                    Defined in src/config/database.config.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { TypeOrmOptionsFactory } from '@nestjs/typeorm';\nimport { ConfigService } from '@nestjs/config';\n\n@Injectable()\nexport class DatabaseConfig implements TypeOrmOptionsFactory {\n  constructor(private configService: ConfigService) {}\n  createTypeOrmOptions() {\n   return this.configService.get('database');   \n  }\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ErrorLogData.html":{"url":"interfaces/ErrorLogData.html","title":"interface - ErrorLogData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ErrorLogData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/errorlog/errorlog.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        createdat\n                                \n                                \n                                            Optional\n                                        createdby\n                                \n                                \n                                        description\n                                \n                                \n                                        errorcode\n                                \n                                \n                                        errorcodehtml\n                                \n                                \n                                        siteid\n                                \n                                \n                                            Optional\n                                        updatedat\n                                \n                                \n                                            Optional\n                                        updatedby\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        createdat\n                                    \n                                \n                                \n                                    \n                                        createdat:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createdby\n                                    \n                                \n                                \n                                    \n                                        createdby:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        errorcode\n                                    \n                                \n                                \n                                    \n                                        errorcode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        errorcodehtml\n                                    \n                                \n                                \n                                    \n                                        errorcodehtml:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        siteid\n                                    \n                                \n                                \n                                    \n                                        siteid:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedat\n                                    \n                                \n                                \n                                    \n                                        updatedat:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedby\n                                    \n                                \n                                \n                                    \n                                        updatedby:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ErrorLogData {\n\n    siteid: number;\n    description: string;\n    errorcode: string;\n    errorcodehtml: string;\n    createdat?: Date;\n    createdby?: number;\n    updatedat?: Date;\n    updatedby?: number;\n\n  }\n  \n  export interface ErrorLogRO {\n    errorlog: ErrorLogData;\n  }\n\n\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ErrorLogEntity.html":{"url":"classes/ErrorLogEntity.html","title":"class - ErrorLogEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ErrorLogEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/errorlog/errorlog.entity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createdby\n                            \n                            \n                                createddate\n                            \n                            \n                                description\n                            \n                            \n                                errorcode\n                            \n                            \n                                errorcodehtml\n                            \n                            \n                                id\n                            \n                            \n                                siteid\n                            \n                            \n                                updatedby\n                            \n                            \n                                updateddate\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdby\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/errorlog/errorlog.entity.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createddate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/errorlog/errorlog.entity.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/errorlog/errorlog.entity.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            errorcode\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column('nvarchar', {length: 10})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/errorlog/errorlog.entity.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            errorcodehtml\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column('nvarchar', {length: 10, nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/errorlog/errorlog.entity.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/errorlog/errorlog.entity.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            siteid\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/errorlog/errorlog.entity.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedby\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/errorlog/errorlog.entity.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateddate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/errorlog/errorlog.entity.ts:29\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, PrimaryGeneratedColumn, Column } from 'typeorm';\n\n@Entity('errorlog')\nexport class ErrorLogEntity {\n\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column()\n  siteid: number;\n\n  @Column({nullable: true})\n  description: string;\n\n  @Column(\"nvarchar\", { length: 10 })\n  errorcode: string;\n\n  @Column(\"nvarchar\",{length: 10 , nullable: true})\n  errorcodehtml: string;\n\n  //@Column()\n  @Column({nullable: true})\n  createddate: Date;\n\n  @Column({nullable: true})\n  createdby: number\n\n  @Column({nullable: true})\n  updateddate: Date;\n\n  @Column({nullable: true})\n  updatedby: number;\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ErrorLogRO.html":{"url":"interfaces/ErrorLogRO.html","title":"interface - ErrorLogRO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ErrorLogRO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/errorlog/errorlog.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        errorlog\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        errorlog\n                                    \n                                \n                                \n                                    \n                                        errorlog:         ErrorLogData\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ErrorLogData\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ErrorLogData {\n\n    siteid: number;\n    description: string;\n    errorcode: string;\n    errorcodehtml: string;\n    createdat?: Date;\n    createdby?: number;\n    updatedat?: Date;\n    updatedby?: number;\n\n  }\n  \n  export interface ErrorLogRO {\n    errorlog: ErrorLogData;\n  }\n\n\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ErrorlogController.html":{"url":"controllers/ErrorlogController.html","title":"controller - ErrorlogController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ErrorlogController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/errorlog/errorlog.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                errorlog\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findMList\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(errorlogData: CreateErrorLogDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Create errorlog'})@ApiResponse({status: 200, description: 'Created errorlog successfully.'})@ApiResponse({status: 403, description: 'Forbidden.'})@ApiBody({type: CreateErrorLogDto})@Post(':id')\n                \n            \n\n            \n                \n                    Defined in src/errorlog/errorlog.controller.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    errorlogData\n                                    \n                                                CreateErrorLogDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Delete errorlog'})@ApiResponse({status: 200, description: 'Deleted errorlog successfully.'})@ApiResponse({status: 401, description: 'Unauthorized.'})@ApiResponse({status: 403, description: 'Forbidden.'})@ApiResponse({status: 404, description: 'Not found.'})@Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/errorlog/errorlog.controller.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Get all errorlogs'})@ApiResponse({status: 200, description: 'Returned all errorlogs successfully.'})@ApiResponse({status: 403, description: 'Forbidden.'})@Get()\n                \n            \n\n            \n                \n                    Defined in src/errorlog/errorlog.controller.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findMList\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findMList(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Get single errorlog'})@ApiResponse({status: 200, description: 'Returned errorlog successfully.'})@ApiResponse({status: 403, description: 'Forbidden.'})@Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/errorlog/errorlog.controller.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: number, errorlogData: CreateErrorLogDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Update errorlog'})@ApiResponse({status: 200, description: 'Changed errorlog successfully.'})@ApiResponse({status: 403, description: 'Forbidden.'})@ApiBody({type: CreateErrorLogDto})@Put(':id')\n                \n            \n\n            \n                \n                    Defined in src/errorlog/errorlog.controller.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    errorlogData\n                                    \n                                                CreateErrorLogDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Get, Post, Body, Put, Delete, Param, Controller, UsePipes } from '@nestjs/common';\nimport { Request } from 'express';\nimport { ErrorlogService } from './errorlog.service';\nimport { ErrorLogRO} from './errorlog.interface';\nimport { CreateErrorLogDto } from './dto';\nimport { ErrorLogEntity } from './errorlog.entity';\nimport { HttpException } from '@nestjs/common/exceptions/http.exception';\n\n//import { User } from './user.decorator';\nimport { ValidationPipe } from '../shared/pipes/validation.pipe';\n\n\nimport {\n  ApiBearerAuth,\n  ApiResponse,\n  ApiOperation, \n  ApiTags,\n  ApiBody,\n} from '@nestjs/swagger';\n\n@ApiBearerAuth()\n@ApiTags('errorlog')\n@Controller('errorlog')\nexport class ErrorlogController {\n  constructor(private readonly errorlogservice: ErrorlogService) {}\n\n  @ApiOperation({ summary: 'Get all errorlogs' })\n  @ApiResponse({ status: 200, description: 'Returned all errorlogs successfully.'})\n  @ApiResponse({ status: 403, description: 'Forbidden.' })\n  @Get()\n  async findAll(): Promise {\n    return await this.errorlogservice.findAll();\n  }\n\n  @ApiOperation({ summary: 'Get single errorlog' })\n  @ApiResponse({ status: 200, description: 'Returned errorlog successfully.'})\n  @ApiResponse({ status: 403, description: 'Forbidden.' })\n  @Get(':id')\n   async findMList(@Param('id') id: number): Promise {\n    return await this.errorlogservice.findById(id);\n  }\n\n  @ApiOperation({ summary: 'Create errorlog' })\n  @ApiResponse({ status: 200, description: 'Created errorlog successfully.'})\n  @ApiResponse({ status: 403, description: 'Forbidden.' })\n  @ApiBody({type: CreateErrorLogDto})\n  //@UsePipes(new ValidationPipe())\n  @Post(':id')\n  async create(@Body() errorlogData: CreateErrorLogDto) {\n    return this.errorlogservice.create(errorlogData);\n  }\n\n  @ApiOperation({ summary: 'Update errorlog' })\n  @ApiResponse({ status: 200, description: 'Changed errorlog successfully.'})\n  @ApiResponse({ status: 403, description: 'Forbidden.' })\n  @ApiBody({type: CreateErrorLogDto})\n  @Put(':id')\n  async update(@Param('id') id: number, @Body() errorlogData: CreateErrorLogDto) {\n    return await this.errorlogservice.update(id, errorlogData);\n  }\n\n  @ApiOperation({ summary: 'Delete errorlog' })\n  @ApiResponse({ status: 200, description: 'Deleted errorlog successfully.'})\n  @ApiResponse({ status: 401, description: 'Unauthorized.' })\n  @ApiResponse({ status: 403, description: 'Forbidden.' })\n  @ApiResponse({ status: 404, description: 'Not found.' })\n  @Delete(':id')\n  async delete(@Param('id') id: number) {\n    return this.errorlogservice.delete(id);\n\n  }\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ErrorlogModule.html":{"url":"modules/ErrorlogModule.html","title":"module - ErrorlogModule","body":"\n                   \n\n\n\n\n    Modules\n    ErrorlogModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ErrorlogModule\n\n\n\ncluster_ErrorlogModule_providers\n\n\n\n\nErrorlogService\n\nErrorlogService\n\n\n\nErrorlogModule\n\nErrorlogModule\n\nErrorlogModule -->\n\nErrorlogService->ErrorlogModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/errorlog/errorlog.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ErrorlogService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ErrorlogController\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            configure\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    configure(consumer: MiddlewareConsumer)\n                \n            \n\n\n            \n                \n                    Defined in src/errorlog/errorlog.module.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    consumer\n                                    \n                                            MiddlewareConsumer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import {MiddlewareConsumer, Module, NestModule, RequestMethod} from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\n\nimport { ErrorlogService } from './errorlog.service';\nimport { ErrorLogEntity } from './errorlog.entity';\nimport { ErrorlogController } from './errorlog.controller';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([ErrorLogEntity])],\n  providers: [ErrorlogService],\n  controllers: [\n    ErrorlogController\n  ],\n  exports: []\n})\nexport class ErrorlogModule implements NestModule {\n  public configure(consumer: MiddlewareConsumer) {\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ErrorlogService.html":{"url":"injectables/ErrorlogService.html","title":"injectable - ErrorlogService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ErrorlogService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/errorlog/errorlog.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                buildErrorLogRO\n                            \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findById\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(ErrorLogRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/errorlog/errorlog.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ErrorLogRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            buildErrorLogRO\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    buildErrorLogRO(errorlog: ErrorLogEntity)\n                \n            \n\n\n            \n                \n                    Defined in src/errorlog/errorlog.service.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    errorlog\n                                    \n                                                ErrorLogEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     { errorlog: { id: any; siteid: any; description: any; errorcode: any; errorcodehtml: any; }; }\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(dto: CreateErrorLogDto)\n                \n            \n\n\n            \n                \n                    Defined in src/errorlog/errorlog.service.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                CreateErrorLogDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/errorlog/errorlog.service.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n\n            \n                \n                    Defined in src/errorlog/errorlog.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findById\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findById(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/errorlog/errorlog.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: number, dto: CreateErrorLogDto)\n                \n            \n\n\n            \n                \n                    Defined in src/errorlog/errorlog.service.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dto\n                                    \n                                                CreateErrorLogDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository, getRepository, DeleteResult } from 'typeorm';\nimport { HttpException } from '@nestjs/common/exceptions/http.exception';\nimport { HttpStatus } from '@nestjs/common';\nimport { validate } from 'class-validator';\n\nimport { ErrorLogEntity } from './errorlog.entity';\nimport { ErrorLogRO } from './errorlog.interface';\nimport { CreateErrorLogDto } from './dto';\n\n@Injectable()\nexport class ErrorlogService {\n  constructor(\n    @InjectRepository(ErrorLogEntity)\n    private readonly ErrorLogRepository: Repository,\n  ) {}\n\n  async findAll(): Promise {\n    return await this.ErrorLogRepository.find();\n  }\n\n  async findById(id: number): Promise{\n    const errorlog = await this.ErrorLogRepository.findOne(id);\n\n    if (!errorlog) {\n      const errors = {ErrorLog: ' not found'};\n      throw new HttpException({errors}, 401);\n    }\n\n    return this.buildErrorLogRO(errorlog);\n  }\n\n  async create(dto: CreateErrorLogDto): Promise {\n\n    // check uniqueness of group\n    const {siteid, description,errorcode ,errorcodehtml } = dto;\n\n    // create new errorlog entry\n    let newErrorLog = new ErrorLogEntity();\n    newErrorLog.siteid = siteid;\n    newErrorLog.description = description;\n    newErrorLog.errorcode = errorcode;\n    newErrorLog.errorcodehtml = errorcodehtml;\n\n    const errors = await validate(newErrorLog);\n    if (errors.length > 0) {\n      const _errors = {ErrorLog: 'Userinput is not valid.'};\n      throw new HttpException({message: 'Input data validation failed', _errors}, HttpStatus.BAD_REQUEST);\n\n    } else {\n      const savedErrorLog = await this.ErrorLogRepository.save(newErrorLog);\n      return this.buildErrorLogRO(savedErrorLog);\n    }\n  }\n\n  async update(id: number, dto: CreateErrorLogDto): Promise {\n    let toUpdate = await this.ErrorLogRepository.findOne(id);\n\n    let updated = Object.assign(toUpdate, dto);\n    const errorlog  = this.ErrorLogRepository.save(updated);\n\n    if (!errorlog) {\n      const errors = {ErrorLog: ' not found'};\n      throw new HttpException({errors}, 401);\n    }\n\n    return await this.ErrorLogRepository.save(updated);\n\n  }\n \n   async delete(id: number): Promise {\n     return await this.ErrorLogRepository.delete({ id: id});\n   }\n\n  private buildErrorLogRO(errorlog: ErrorLogEntity) {\n    const ErrorLogRO = {\n      id: errorlog.id,\n      siteid: errorlog.siteid,\n      description: errorlog.description,\n      errorcode: errorlog.errorcode,\n      errorcodehtml: errorlog.errorcodehtml\n    \n    };\n\n    return {errorlog: ErrorLogRO};\n  }\n}\n\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FollowsEntity.html":{"url":"classes/FollowsEntity.html","title":"class - FollowsEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FollowsEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/profile/follows.entity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                followerId\n                            \n                            \n                                followingId\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            followerId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/profile/follows.entity.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            followingId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/profile/follows.entity.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/profile/follows.entity.ts:7\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, PrimaryGeneratedColumn, Column } from \"typeorm\";\n\n@Entity('follows')\nexport class FollowsEntity {\n\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column()\n  followerId: number;\n\n  @Column()\n  followingId: number;\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/GroupController.html":{"url":"controllers/GroupController.html","title":"controller - GroupController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  GroupController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/group/group.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                group\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findMList\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(groupData: CreateGroupDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Create group'})@ApiResponse({status: 200, description: 'Created group successfully.'})@ApiResponse({status: 401, description: 'Unauthorized.'})@ApiResponse({status: 403, description: 'Forbidden.'})@ApiResponse({status: 404, description: 'Not found.'})@ApiBody({type: CreateGroupDto})@Post(':id')@ApiBody({type: CreateGroupDto})\n                \n            \n\n            \n                \n                    Defined in src/group/group.controller.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    groupData\n                                    \n                                                CreateGroupDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Delete group'})@ApiResponse({status: 200, description: 'Deleted group successfully.'})@ApiResponse({status: 401, description: 'Unauthorized.'})@ApiResponse({status: 403, description: 'Forbidden.'})@ApiResponse({status: 404, description: 'Not found.'})@Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/group/group.controller.ts:82\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Get all groups'})@ApiResponse({status: 200, description: 'Returned all groups successfully.'})@ApiResponse({status: 401, description: 'Unauthorized.'})@ApiResponse({status: 403, description: 'Forbidden.'})@ApiResponse({status: 404, description: 'Not found.'})@Get()\n                \n            \n\n            \n                \n                    Defined in src/group/group.controller.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findMList\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findMList(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Get single group'})@ApiResponse({status: 200, description: 'Returned group successfully.'})@ApiResponse({status: 401, description: 'Unauthorized.'})@ApiResponse({status: 403, description: 'Forbidden.'})@ApiResponse({status: 404, description: 'Not found.'})@Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/group/group.controller.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: number, groupData: CreateGroupDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Change group'})@ApiResponse({status: 200, description: 'Changed group successfully.'})@ApiResponse({status: 401, description: 'Unauthorized.'})@ApiResponse({status: 403, description: 'Forbidden.'})@ApiResponse({status: 404, description: 'Not found.'})@ApiBody({type: CreateGroupDto})@Put(':id')@ApiBody({type: CreateGroupDto})\n                \n            \n\n            \n                \n                    Defined in src/group/group.controller.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    groupData\n                                    \n                                                CreateGroupDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Get, Post, Body, Put, Delete, Param, Controller, UsePipes } from '@nestjs/common';\nimport { Request } from 'express';\nimport { GroupService } from './group.service';\nimport { GroupRO } from './group.interface';\nimport { CreateGroupDto } from './dto';\nimport { GroupEntity } from './group.entity';\nimport { HttpException } from '@nestjs/common/exceptions/http.exception';\n\n//import { User } from './user.decorator';\nimport { ValidationPipe } from '../shared/pipes/validation.pipe';\n\n\nimport {\n  ApiBearerAuth,\n  ApiResponse,\n  ApiOperation, \n  ApiTags,\n  ApiBody,\n} from '@nestjs/swagger';\n\n@ApiBearerAuth()\n@ApiTags('groups')\n@Controller('group')\nexport class GroupController {\n  constructor(private readonly groupService: GroupService) {}\n\n  @ApiOperation({ summary: 'Get all groups' })\n  @ApiResponse({ status: 200, description: 'Returned all groups successfully.'})\n  @ApiResponse({ status: 401, description: 'Unauthorized.' })\n  @ApiResponse({ status: 403, description: 'Forbidden.' })\n  @ApiResponse({ status: 404, description: 'Not found.' })\n  @Get()\n  async findAll(): Promise {\n    return await this.groupService.findAll();\n  }\n\n  @ApiOperation({ summary: 'Get single group' })\n  @ApiResponse({ status: 200, description: 'Returned group successfully.'})\n  @ApiResponse({ status: 401, description: 'Unauthorized.' })\n  @ApiResponse({ status: 403, description: 'Forbidden.' })\n  @ApiResponse({ status: 404, description: 'Not found.' })\n  @Get(':id')\n   async findMList(@Param('id') id: number): Promise {\n    return await this.groupService.findById(id);\n  }\n\n  @ApiOperation({ summary: 'Create group' })\n  @ApiResponse({ status: 200, description: 'Created group successfully.'})\n  @ApiResponse({ status: 401, description: 'Unauthorized.' })\n  @ApiResponse({ status: 403, description: 'Forbidden.' })\n  @ApiResponse({ status: 404, description: 'Not found.' })\n  @ApiBody({type: CreateGroupDto})\n  //@UsePipes(new ValidationPipe())\n  @Post(':id')\n  @ApiBody({type: CreateGroupDto})\n  async create(@Body('group') groupData: CreateGroupDto) {\n    console.log('Group Data:');\n    console.log(groupData);\n     \n    return this.groupService.create(groupData);\n  }\n  @ApiOperation({ summary: 'Change group' })\n  @ApiResponse({ status: 200, description: 'Changed group successfully.'})\n  @ApiResponse({ status: 401, description: 'Unauthorized.' })\n  @ApiResponse({ status: 403, description: 'Forbidden.' })\n  @ApiResponse({ status: 404, description: 'Not found.' })\n  @ApiBody({type: CreateGroupDto})\n  //@ApiOperation()\n  @Put(':id')\n  @ApiBody({type: CreateGroupDto})\n  async update(@Param('id') id: number, @Body('group') groupData: CreateGroupDto) {\n    return await this.groupService.update(id, groupData);\n  }\n\n  @ApiOperation({ summary: 'Delete group' })\n  @ApiResponse({ status: 200, description: 'Deleted group successfully.'})\n  @ApiResponse({ status: 401, description: 'Unauthorized.' })\n  @ApiResponse({ status: 403, description: 'Forbidden.' })\n  @ApiResponse({ status: 404, description: 'Not found.' })\n  //@ApiBody({type: CreateGroupDto})\n  @Delete(':id')\n  async delete(@Param('id') id: number) {\n    this.groupService.delete(id);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GroupData.html":{"url":"interfaces/GroupData.html","title":"interface - GroupData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  GroupData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/group/group.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        active\n                                \n                                \n                                            Optional\n                                        createdat\n                                \n                                \n                                            Optional\n                                        createdby\n                                \n                                \n                                        description\n                                \n                                \n                                        name\n                                \n                                \n                                            Optional\n                                        updatedat\n                                \n                                \n                                            Optional\n                                        updatedby\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        active\n                                    \n                                \n                                \n                                    \n                                        active:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createdat\n                                    \n                                \n                                \n                                    \n                                        createdat:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createdby\n                                    \n                                \n                                \n                                    \n                                        createdby:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedat\n                                    \n                                \n                                \n                                    \n                                        updatedat:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedby\n                                    \n                                \n                                \n                                    \n                                        updatedby:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface GroupData {\n\n    name: string;\n    description: string;\n    active?: boolean;\n    createdat?: Date;\n    createdby?: number;\n    updatedat?: Date;\n    updatedby?: number;\n\n  }\n  \n  export interface GroupRO {\n    group: GroupData;\n  }\n\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GroupEntity.html":{"url":"classes/GroupEntity.html","title":"class - GroupEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GroupEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/group/group.entity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                active\n                            \n                            \n                                createdby\n                            \n                            \n                                createddate\n                            \n                            \n                                description\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                role\n                            \n                            \n                                updatedby\n                            \n                            \n                                updateddate\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            active\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({nullable: true, default: 1})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/group/group.entity.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdby\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/group/group.entity.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createddate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/group/group.entity.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/group/group.entity.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/group/group.entity.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column('nvarchar', {length: 100})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/group/group.entity.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            role\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         RoleEntity\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne(undefined, undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/group/group.entity.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedby\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/group/group.entity.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateddate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/group/group.entity.ts:26\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, PrimaryGeneratedColumn, Column, ManyToOne } from 'typeorm';\nimport { RoleEntity } from '../role/role.entity';\n\n@Entity('group')\nexport class GroupEntity {\n\n  @PrimaryGeneratedColumn()\n  id: number;\n  \n  @Column(\"nvarchar\", { length: 100 })\n  name: string;\n\n  @Column({nullable: true})\n  description: string;\n\n  @Column({nullable: true, default: 1})\n  active: boolean = true;\n\n  @Column({nullable: true})\n  createddate: Date;\n\n  @Column({nullable: true})\n  createdby: number\n\n  @Column({nullable: true})\n  updateddate: Date;\n\n  @Column({nullable: true})\n  updatedby: number;\n\n  @ManyToOne(type => RoleEntity, role => role.groups)\n  role: RoleEntity;\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/GroupModule.html":{"url":"modules/GroupModule.html","title":"module - GroupModule","body":"\n                   \n\n\n\n\n    Modules\n    GroupModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_GroupModule\n\n\n\ncluster_GroupModule_providers\n\n\n\n\nGroupService\n\nGroupService\n\n\n\nGroupModule\n\nGroupModule\n\nGroupModule -->\n\nGroupService->GroupModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/group/group.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            GroupService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            GroupController\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            configure\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    configure(consumer: MiddlewareConsumer)\n                \n            \n\n\n            \n                \n                    Defined in src/group/group.module.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    consumer\n                                    \n                                            MiddlewareConsumer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import {MiddlewareConsumer, Module, NestModule, RequestMethod} from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\n\nimport { GroupService } from './group.service';\nimport { GroupEntity } from './group.entity';\nimport { GroupController } from './group.controller';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([GroupEntity])],\n  providers: [GroupService],\n  controllers: [\n    GroupController\n  ],\n  exports: []\n})\nexport class GroupModule implements NestModule {\n  public configure(consumer: MiddlewareConsumer) {\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GroupRO.html":{"url":"interfaces/GroupRO.html","title":"interface - GroupRO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  GroupRO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/group/group.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        group\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        group\n                                    \n                                \n                                \n                                    \n                                        group:         GroupData\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         GroupData\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface GroupData {\n\n    name: string;\n    description: string;\n    active?: boolean;\n    createdat?: Date;\n    createdby?: number;\n    updatedat?: Date;\n    updatedby?: number;\n\n  }\n  \n  export interface GroupRO {\n    group: GroupData;\n  }\n\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GroupService.html":{"url":"injectables/GroupService.html","title":"injectable - GroupService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  GroupService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/group/group.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                buildGroupRO\n                            \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findById\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(groupRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/group/group.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        groupRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            buildGroupRO\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    buildGroupRO(group: GroupEntity)\n                \n            \n\n\n            \n                \n                    Defined in src/group/group.service.ts:78\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    group\n                                    \n                                                GroupEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     { group: { id: any; name: any; description: any; }; }\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(dto: CreateGroupDto)\n                \n            \n\n\n            \n                \n                    Defined in src/group/group.service.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                CreateGroupDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/group/group.service.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n\n            \n                \n                    Defined in src/group/group.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findById\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findById(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/group/group.service.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(undefined: CreateGroupDto)\n                \n            \n\n\n            \n                \n                    Defined in src/group/group.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                CreateGroupDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: number, dto: CreateGroupDto)\n                \n            \n\n\n            \n                \n                    Defined in src/group/group.service.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dto\n                                    \n                                                CreateGroupDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository, getRepository, DeleteResult } from 'typeorm';\nimport { HttpException } from '@nestjs/common/exceptions/http.exception';\nimport { HttpStatus } from '@nestjs/common';\nimport { validate } from 'class-validator';\n\nimport { GroupEntity } from './group.entity';\nimport { GroupRO } from './group.interface';\nimport { CreateGroupDto } from './dto';\n\n@Injectable()\nexport class GroupService {\n  constructor(\n    @InjectRepository(GroupEntity)\n    private readonly groupRepository: Repository,\n  ) {}\n\n  async findAll(): Promise {\n    return await this.groupRepository.find();\n  }\n\n  async findOne({id}: CreateGroupDto): Promise {\n    const group = await this.groupRepository.findOne({id});\n    if (!group) {\n      return null;\n    }\n    return null;\n  }\n\n  async create(dto: CreateGroupDto): Promise {\n\n    // check uniqueness of group\n    const {name, description} = dto;\n\n    // create new group\n    let newGroup = new GroupEntity();\n    newGroup.name = name;\n    newGroup.description = description;\n   \n    const errors = await validate(newGroup);\n    if (errors.length > 0) {\n      const _errors = {group: 'Userinput is not valid.'};\n      throw new HttpException({message: 'Input data validation failed', _errors}, HttpStatus.BAD_REQUEST);\n\n    } else {\n      const savedGroup = await this.groupRepository.save(newGroup);\n      return this.buildGroupRO(savedGroup);\n    }\n  }\n\n  async update(id: number, dto: CreateGroupDto): Promise {\n    let toUpdate = await this.groupRepository.findOne(id);\n\n    let updated = Object.assign(toUpdate, dto);\n    return await this.groupRepository.save(updated);\n  }\n\n // {id}\n async delete(id: number): Promise {\n   return await this.groupRepository.delete({id});\n }\n\n// RWQ end crud\n\n\n  async findById(id: number): Promise{\n    const group = await this.groupRepository.findOne(id);\n\n    if (!group) {\n      const errors = {Group: ' not found'};\n      throw new HttpException({errors}, 404);\n    }\n\n    return this.buildGroupRO(group);\n  }\n\n  private buildGroupRO(group: GroupEntity) {\n    const GroupRO = {\n      id: group.id,\n      name: group.name,\n      description: group.description\n     \n    };\n\n    return {group: GroupRO};\n  }\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ListController.html":{"url":"controllers/ListController.html","title":"controller - ListController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ListController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/list/list.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                lists\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findMList\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(listData: CreateListDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Create list'})@ApiResponse({status: 200, description: 'Created list successfully.'})@ApiResponse({status: 403, description: 'Forbidden.'})@ApiBody({type: CreateListDto})@Post(':id')\n                \n            \n\n            \n                \n                    Defined in src/list/list.controller.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    listData\n                                    \n                                                CreateListDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(params)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Delete list'})@ApiResponse({status: 200, description: 'Deleted list successfully.'})@ApiResponse({status: 403, description: 'Forbidden.'})@ApiBody({type: CreateListDto})@Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/list/list.controller.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Get all lists'})@ApiResponse({status: 200, description: 'Returned all lists successfully.'})@ApiResponse({status: 403, description: 'Forbidden.'})@Get()\n                \n            \n\n            \n                \n                    Defined in src/list/list.controller.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findMList\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findMList(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Get single list'})@ApiResponse({status: 200, description: 'Returned list successfully.'})@ApiResponse({status: 403, description: 'Forbidden.'})@Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/list/list.controller.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: number, listData: CreateListDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Update list'})@ApiResponse({status: 200, description: 'Updated list successfully.'})@ApiResponse({status: 403, description: 'Forbidden.'})@ApiBody({type: CreateListDto})@Put(':id')\n                \n            \n\n            \n                \n                    Defined in src/list/list.controller.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    listData\n                                    \n                                                CreateListDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Get, Post, Body, Put, Delete, Param, Controller, UsePipes } from '@nestjs/common';\nimport { Request } from 'express';\nimport { ListService } from './list.service';\nimport { ListRO } from './list.interface';\nimport { ListEntryRO } from './list.interface';\nimport { CreateListDto } from './dto';\nimport { ListEntity } from './list.entity';\nimport { HttpException } from '@nestjs/common/exceptions/http.exception';\n\n//import { User } from './user.decorator';\nimport { ValidationPipe } from '../shared/pipes/validation.pipe';\n\n\nimport {\n  ApiBearerAuth,\n  ApiResponse,\n  ApiOperation, \n  ApiTags,\n  ApiBody,\n} from '@nestjs/swagger';\n\n@ApiBearerAuth()\n@ApiTags('lists')\n@Controller('lists')\n\nexport class ListController {\n  constructor(private readonly listService: ListService) {}\n\n  @ApiOperation({ summary: 'Get all lists' })\n  @ApiResponse({ status: 200, description: 'Returned all lists successfully.'})\n  @ApiResponse({ status: 403, description: 'Forbidden.' })\n  @Get()\n  async findAll(): Promise {\n    return await this.listService.findAll();\n  }\n\n  @ApiOperation({ summary: 'Get single list' })\n  @ApiResponse({ status: 200, description: 'Returned list successfully.'})\n  @ApiResponse({ status: 403, description: 'Forbidden.' })\n  @Get(':id')\n  async findMList(@Param('id') id: number): Promise {\n    return await this.listService.findById(id);\n  }\n\n  @ApiOperation({ summary: 'Create list' })\n  @ApiResponse({ status: 200, description: 'Created list successfully.'})\n  @ApiResponse({ status: 403, description: 'Forbidden.' })\n  @ApiBody({type: CreateListDto})\n  //@UsePipes(new ValidationPipe())\n  @Post(':id')\n  async create(@Body('list') listData: CreateListDto) {\n    return this.listService.create(listData);\n  }\n\n  @ApiOperation({ summary: 'Update list' })\n  @ApiResponse({ status: 200, description: 'Updated list successfully.'})\n  @ApiResponse({ status: 403, description: 'Forbidden.' })\n  @ApiBody({type: CreateListDto})\n  @Put(':id')\n  async update(@Param('id') id: number, @Body('list') listData: CreateListDto) {\n    return await this.listService.update(id, listData);\n  }\n\n  @ApiOperation({ summary: 'Delete list' })\n  @ApiResponse({ status: 200, description: 'Deleted list successfully.'})\n  @ApiResponse({ status: 403, description: 'Forbidden.' })\n  @ApiBody({type: CreateListDto})\n  @Delete(':id')\n  async delete(@Param() params) {\n    return await this.listService.delete(params.slug);\n  }\n\n  // @Get(':slug/listentries')\n  // async findListEntries(@Param('slug') slug): Promise {\n  //   return await this.listService.findListEntry(slug);\n  // }\n\n \n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ListData.html":{"url":"interfaces/ListData.html","title":"interface - ListData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ListData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/list/list.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        active\n                                \n                                \n                                            Optional\n                                        createdat\n                                \n                                \n                                            Optional\n                                        createdby\n                                \n                                \n                                        description\n                                \n                                \n                                        name\n                                \n                                \n                                            Optional\n                                        updatedat\n                                \n                                \n                                            Optional\n                                        updatedby\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        active\n                                    \n                                \n                                \n                                    \n                                        active:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createdat\n                                    \n                                \n                                \n                                    \n                                        createdat:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createdby\n                                    \n                                \n                                \n                                    \n                                        createdby:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedat\n                                    \n                                \n                                \n                                    \n                                        updatedat:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedby\n                                    \n                                \n                                \n                                    \n                                        updatedby:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { UserData } from '../user/user.interface';\nimport { ListEntity } from './list.entity';\ninterface ListEntry {\n  body: string;\n}\n\n\nexport interface ListData {\n\n    name: string;\n    description: string;\n    active?: boolean;\n    createdat?: Date;\n    createdby?: number;\n    updatedat?: Date;\n    updatedby?: number;\n\n  }\n  \n  export interface ListRO {\n    list: ListData;\n  }\n\n  export interface ListEntryRO {\n    listentries: ListEntry[];\n  }\n\n  \n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ListEntity.html":{"url":"classes/ListEntity.html","title":"class - ListEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ListEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/list/list.entity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                active\n                            \n                            \n                                createdby\n                            \n                            \n                                createddate\n                            \n                            \n                                description\n                            \n                            \n                                id\n                            \n                            \n                                listentries\n                            \n                            \n                                name\n                            \n                            \n                                updatedby\n                            \n                            \n                                updateddate\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            active\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({default: 1})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/list/list.entity.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdby\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/list/list.entity.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createddate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/list/list.entity.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/list/list.entity.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/list/list.entity.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            listentries\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ListEntryEntity[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @OneToMany(undefined, undefined, {eager: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/list/list.entity.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column('nvarchar', {length: 50})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/list/list.entity.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedby\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/list/list.entity.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateddate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/list/list.entity.ts:26\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, PrimaryGeneratedColumn, Column, OneToOne,ManyToOne, OneToMany, JoinColumn, AfterUpdate, BeforeUpdate } from 'typeorm';\nimport { ListEntryEntity } from './listentry.entity';\n\n@Entity('list')\nexport class ListEntity {\n\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column(\"nvarchar\", { length: 50 })\n  name: string;\n\n  @Column({nullable: true})\n  description: string;\n\n  @Column({default: 1})\n  active: boolean;\n\n  @Column()\n  createddate: Date;\n\n  @Column()\n  createdby: number\n\n  @Column()\n  updateddate: Date;\n\n  @Column()\n  updatedby: number;\n\n  @OneToMany(type => ListEntryEntity, listentry => listentry.list, {eager: true})\n  listentries: ListEntryEntity[];\n\n\n}\n\n\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ListEntry.html":{"url":"interfaces/ListEntry.html","title":"interface - ListEntry","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ListEntry\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/list/list.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        body\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        body\n                                    \n                                \n                                \n                                    \n                                        body:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { UserData } from '../user/user.interface';\nimport { ListEntity } from './list.entity';\ninterface ListEntry {\n  body: string;\n}\n\n\nexport interface ListData {\n\n    name: string;\n    description: string;\n    active?: boolean;\n    createdat?: Date;\n    createdby?: number;\n    updatedat?: Date;\n    updatedby?: number;\n\n  }\n  \n  export interface ListRO {\n    list: ListData;\n  }\n\n  export interface ListEntryRO {\n    listentries: ListEntry[];\n  }\n\n  \n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ListEntryEntity.html":{"url":"classes/ListEntryEntity.html","title":"class - ListEntryEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ListEntryEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/list/listentry.entity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                description\n                            \n                            \n                                id\n                            \n                            \n                                list\n                            \n                            \n                                name\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/list/listentry.entity.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/list/listentry.entity.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            list\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ListEntity\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne(undefined, undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/list/listentry.entity.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column('nvarchar', {length: 50})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/list/listentry.entity.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            value\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/list/listentry.entity.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, PrimaryGeneratedColumn, Column, ManyToOne } from 'typeorm';\nimport { ListEntity } from './list.entity';\n\n@Entity('listentry')\nexport class ListEntryEntity {\n\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column(\"nvarchar\", { length: 50 })\n  name: string;\n\n  @Column({nullable: true})\n  description: string;\n  \n  @Column()\n  value: string;\n\n  @ManyToOne(type => ListEntity, list => list.listentries)\n  list: ListEntity;\n\n}\n\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ListEntryRO.html":{"url":"interfaces/ListEntryRO.html","title":"interface - ListEntryRO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ListEntryRO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/list/list.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        listentries\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        listentries\n                                    \n                                \n                                \n                                    \n                                        listentries:         ListEntry[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ListEntry[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { UserData } from '../user/user.interface';\nimport { ListEntity } from './list.entity';\ninterface ListEntry {\n  body: string;\n}\n\n\nexport interface ListData {\n\n    name: string;\n    description: string;\n    active?: boolean;\n    createdat?: Date;\n    createdby?: number;\n    updatedat?: Date;\n    updatedby?: number;\n\n  }\n  \n  export interface ListRO {\n    list: ListData;\n  }\n\n  export interface ListEntryRO {\n    listentries: ListEntry[];\n  }\n\n  \n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ListModule.html":{"url":"modules/ListModule.html","title":"module - ListModule","body":"\n                   \n\n\n\n\n    Modules\n    ListModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ListModule\n\n\n\ncluster_ListModule_providers\n\n\n\n\nListService\n\nListService\n\n\n\nListModule\n\nListModule\n\nListModule -->\n\nListService->ListModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/list/list.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ListService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ListController\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            configure\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    configure(consumer: MiddlewareConsumer)\n                \n            \n\n\n            \n                \n                    Defined in src/list/list.module.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    consumer\n                                    \n                                            MiddlewareConsumer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import {MiddlewareConsumer, Module, NestModule, RequestMethod} from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\n\nimport { ListService } from './list.service';\nimport { ListEntity } from './list.entity';\nimport { ListController } from './list.controller';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([ListEntity])],\n  providers: [ListService],\n  controllers: [\n    ListController\n  ],\n  exports: []\n})\nexport class ListModule implements NestModule {\n  public configure(consumer: MiddlewareConsumer) {\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ListRO.html":{"url":"interfaces/ListRO.html","title":"interface - ListRO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ListRO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/list/list.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        list\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        list\n                                    \n                                \n                                \n                                    \n                                        list:         ListData\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ListData\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { UserData } from '../user/user.interface';\nimport { ListEntity } from './list.entity';\ninterface ListEntry {\n  body: string;\n}\n\n\nexport interface ListData {\n\n    name: string;\n    description: string;\n    active?: boolean;\n    createdat?: Date;\n    createdby?: number;\n    updatedat?: Date;\n    updatedby?: number;\n\n  }\n  \n  export interface ListRO {\n    list: ListData;\n  }\n\n  export interface ListEntryRO {\n    listentries: ListEntry[];\n  }\n\n  \n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ListService.html":{"url":"injectables/ListService.html","title":"injectable - ListService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ListService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/list/list.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                buildListRO\n                            \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findById\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(listRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/list/list.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        listRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            buildListRO\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    buildListRO(list: ListEntity)\n                \n            \n\n\n            \n                \n                    Defined in src/list/list.service.ts:84\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    list\n                                    \n                                                ListEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     { list: { id: any; name: any; description: any; }; }\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(dto: CreateListDto)\n                \n            \n\n\n            \n                \n                    Defined in src/list/list.service.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                CreateListDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/list/list.service.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n\n            \n                \n                    Defined in src/list/list.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findById\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findById(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/list/list.service.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(undefined: CreateListDto)\n                \n            \n\n\n            \n                \n                    Defined in src/list/list.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                CreateListDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: number, dto: CreateListDto)\n                \n            \n\n\n            \n                \n                    Defined in src/list/list.service.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dto\n                                    \n                                                CreateListDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository, getRepository, DeleteResult } from 'typeorm';\nimport { HttpException } from '@nestjs/common/exceptions/http.exception';\nimport { HttpStatus } from '@nestjs/common';\nimport { validate } from 'class-validator';\n\nimport { ListEntity } from './list.entity';\nimport { ListRO, ListEntryRO } from './list.interface';\nimport { CreateListDto } from './dto';\n\n\n\n@Injectable()\nexport class ListService {\n  constructor(\n    @InjectRepository(ListEntity)\n    private readonly listRepository: Repository,\n  ) {}\n\n  async findAll(): Promise {\n    return await this.listRepository.find();\n\n  }\n\n  async findOne({id}: CreateListDto): Promise {\n    const list = await this.listRepository.findOne({id});\n    if (!list) {\n      return null;\n    }\n    return null;\n  }\n\n  async create(dto: CreateListDto): Promise {\n\n    // check uniqueness of username/email\n    const {name, description} = dto;\n\n    // create new list\n    let newList = new ListEntity();\n    newList.name = name;\n    newList.description = description;\n\n    const errors = await validate(newList);\n    if (errors.length > 0) {\n      const _errors = {list: 'Userinput is not valid.'};\n      throw new HttpException({message: 'Input data validation failed', _errors}, HttpStatus.BAD_REQUEST);\n\n    } else {\n      const savedList = await this.listRepository.save(newList);\n      return this.buildListRO(savedList);\n    }\n  }\n\n  async update(id: number, dto: CreateListDto): Promise {\n    let toUpdate = await this.listRepository.findOne(id);\n\n    let updated = Object.assign(toUpdate, dto);\n    return await this.listRepository.save(updated);\n  }\n\n  async delete(id: number): Promise {\n    return await this.listRepository.delete({ id: id});\n  }\n\n  async findById(id: number): Promise{\n    const list = await this.listRepository.findOne(id);\n\n    if (!list) {\n      const errors = {List: ' not found'};\n      throw new HttpException({errors}, 401);\n    }\n\n    return this.buildListRO(list);\n  }\n\n\n  // async findListEntry(slug: string): Promise {\n  //   const article = await this.listRepository.findOne({slug});\n  //   return {listentries: list.listentries};\n\n  // }\n\n  private buildListRO(list: ListEntity) {\n    const ListRO = {\n      id: list.id,\n      name: list.name,\n      description: list.description\n     \n    };\n\n    return {list: ListRO};\n  }\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginUserDto.html":{"url":"classes/LoginUserDto.html","title":"class - LoginUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dto/login-user.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                email\n                            \n                            \n                                    Readonly\n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()@ApiProperty({type: String, description: 'email'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/dto/login-user.dto.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()@ApiProperty({type: String, description: 'password'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/dto/login-user.dto.ts:12\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty } from 'class-validator';\nimport {ApiProperty} from '@nestjs/swagger';\n\nexport class LoginUserDto {\n\n  @IsNotEmpty()\n  @ApiProperty({type: String, description: 'email'})\n  readonly email: string;\n\n  @IsNotEmpty()\n  @ApiProperty({type: String, description: 'password'})\n  readonly password: string;\n}\n\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MenuAppData.html":{"url":"interfaces/MenuAppData.html","title":"interface - MenuAppData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MenuAppData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/menu/menu.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        active\n                                \n                                \n                                        appid\n                                \n                                \n                                        caption\n                                \n                                \n                                            Optional\n                                        createdby\n                                \n                                \n                                            Optional\n                                        createddate\n                                \n                                \n                                        sortid\n                                \n                                \n                                            Optional\n                                        updatedby\n                                \n                                \n                                            Optional\n                                        updateddate\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        active\n                                    \n                                \n                                \n                                    \n                                        active:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        appid\n                                    \n                                \n                                \n                                    \n                                        appid:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        caption\n                                    \n                                \n                                \n                                    \n                                        caption:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createdby\n                                    \n                                \n                                \n                                    \n                                        createdby:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createddate\n                                    \n                                \n                                \n                                    \n                                        createddate:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sortid\n                                    \n                                \n                                \n                                    \n                                        sortid:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedby\n                                    \n                                \n                                \n                                    \n                                        updatedby:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updateddate\n                                    \n                                \n                                \n                                    \n                                        updateddate:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { UserData } from '../user/user.interface';\nimport { MenuAppEntity } from './menuapp.entity';\nimport { MenuEntryEntity } from './menuentry.entity';\n\ninterface MenuAppEntry {\n  body: string;\n}\n\nexport interface MenuAppData {\n\n    appid: string,\n    caption: string,\n    sortid: string,\n    active?: boolean;\n    createddate?: Date;\n    createdby?: number;\n    updateddate?: Date;\n    updatedby?: number;\n\n  }\n  \n  export interface MenuRO {\n    menu: MenuAppData;\n  }\n\n  export interface MenuEntryRO {\n    menuentries: MenuEntryEntity;\n  }\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MenuAppEntity.html":{"url":"classes/MenuAppEntity.html","title":"class - MenuAppEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MenuAppEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/menu/menuapp.entity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                abbreviation\n                            \n                            \n                                active\n                            \n                            \n                                createdby\n                            \n                            \n                                createddate\n                            \n                            \n                                description\n                            \n                            \n                                id\n                            \n                            \n                                menuentries\n                            \n                            \n                                name\n                            \n                            \n                                rolemenuapp\n                            \n                            \n                                updatedby\n                            \n                            \n                                updateddate\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            abbreviation\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column('nvarchar', {length: 10})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/menu/menuapp.entity.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            active\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({default: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/menu/menuapp.entity.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdby\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/menu/menuapp.entity.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createddate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/menu/menuapp.entity.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/menu/menuapp.entity.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/menu/menuapp.entity.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            menuentries\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MenuEntryEntity[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @OneToMany(undefined, undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/menu/menuapp.entity.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column('nvarchar', {length: 50})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/menu/menuapp.entity.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rolemenuapp\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         RoleMenuAppEntity\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @OneToOne(undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/menu/menuapp.entity.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedby\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/menu/menuapp.entity.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateddate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/menu/menuapp.entity.ts:30\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, PrimaryGeneratedColumn, Column, OneToOne, ManyToOne, OneToMany, JoinColumn, AfterUpdate, BeforeUpdate } from 'typeorm';\nimport { RoleMenuAppEntity } from '../role/rolemenuapp.entity';\nimport { MenuEntryEntity } from './menuentry.entity';\n\n@Entity('menuapp')\nexport class MenuAppEntity {\n\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column(\"nvarchar\", { length: 50 })\n  name: string;\n\n  @Column({nullable: true})\n  description: string;\n\n  @Column(\"nvarchar\", { length: 10 })\n  abbreviation: string;\n\n  @Column({default: false})\n  active: boolean;\n\n  @Column()\n  createddate: Date;\n\n  @Column()\n  createdby: number\n\n  @Column()\n  updateddate: Date;\n\n  @Column()\n  updatedby: number;\n\n  @OneToMany(type => MenuEntryEntity, menu => menu.menuapp)\n  menuentries: MenuEntryEntity[];\n\n  @OneToOne(type => RoleMenuAppEntity)\n  rolemenuapp: RoleMenuAppEntity;\n\n}\n\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MenuAppEntry.html":{"url":"interfaces/MenuAppEntry.html","title":"interface - MenuAppEntry","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MenuAppEntry\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/menu/menu.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        body\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        body\n                                    \n                                \n                                \n                                    \n                                        body:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { UserData } from '../user/user.interface';\nimport { MenuAppEntity } from './menuapp.entity';\nimport { MenuEntryEntity } from './menuentry.entity';\n\ninterface MenuAppEntry {\n  body: string;\n}\n\nexport interface MenuAppData {\n\n    appid: string,\n    caption: string,\n    sortid: string,\n    active?: boolean;\n    createddate?: Date;\n    createdby?: number;\n    updateddate?: Date;\n    updatedby?: number;\n\n  }\n  \n  export interface MenuRO {\n    menu: MenuAppData;\n  }\n\n  export interface MenuEntryRO {\n    menuentries: MenuEntryEntity;\n  }\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/MenuController.html":{"url":"controllers/MenuController.html","title":"controller - MenuController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  MenuController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/menu/menu.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                menus\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findMMenu\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(menuData: CreateMenuDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Create menu'})@ApiResponse({status: 200, description: 'Created menu successfully.'})@ApiResponse({status: 403, description: 'Forbidden.'})@ApiBody({type: CreateMenuDto})@Post(':id')\n                \n            \n\n            \n                \n                    Defined in src/menu/menu.controller.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    menuData\n                                    \n                                                CreateMenuDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(params)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Delete menu'})@ApiResponse({status: 200, description: 'Deleted menu successfully.'})@ApiResponse({status: 403, description: 'Forbidden.'})@ApiBody({type: CreateMenuDto})@Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/menu/menu.controller.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Get all menus'})@ApiResponse({status: 200, description: 'Returned all menus successfully.'})@ApiResponse({status: 403, description: 'Forbidden.'})@Get()\n                \n            \n\n            \n                \n                    Defined in src/menu/menu.controller.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findMMenu\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findMMenu(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Get single menu'})@ApiResponse({status: 200, description: 'Returned menu successfully.'})@ApiResponse({status: 403, description: 'Forbidden.'})@Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/menu/menu.controller.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: number, menuData: CreateMenuDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Update menu'})@ApiResponse({status: 200, description: 'Updated menu successfully.'})@ApiResponse({status: 403, description: 'Forbidden.'})@ApiBody({type: CreateMenuDto})@Put(':id')\n                \n            \n\n            \n                \n                    Defined in src/menu/menu.controller.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    menuData\n                                    \n                                                CreateMenuDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Get, Post, Body, Put, Delete, Param, Controller, UsePipes } from '@nestjs/common';\nimport { Request } from 'express';\nimport { MenuService } from './menu.service';\nimport { MenuRO } from './menu.interface';\nimport { MenuEntryRO } from './menu.interface';\nimport { CreateMenuDto } from './dto';\nimport { MenuAppEntity } from './menuapp.entity';\nimport { MenuEntryEntity } from './menuentry.entity';\nimport { HttpException } from '@nestjs/common/exceptions/http.exception';\n\n//import { User } from './user.decorator';\nimport { ValidationPipe } from '../shared/pipes/validation.pipe';\n\nimport {\n  ApiBearerAuth,\n  ApiResponse,\n  ApiOperation, \n  ApiTags,\n  ApiBody,\n} from '@nestjs/swagger';\n\n@ApiBearerAuth()\n@ApiTags('menus')\n@Controller('menus')\n\nexport class MenuController {\n  constructor(private readonly menuService: MenuService) {}\n\n  @ApiOperation({ summary: 'Get all menus' })\n  @ApiResponse({ status: 200, description: 'Returned all menus successfully.'})\n  @ApiResponse({ status: 403, description: 'Forbidden.' })  \n  @Get()\n  async findAll(): Promise {\n    return await this.menuService.findAll();\n  }\n\n  @ApiOperation({ summary: 'Get single menu' })\n  @ApiResponse({ status: 200, description: 'Returned menu successfully.'})\n  @ApiResponse({ status: 403, description: 'Forbidden.' })\n  @Get(':id')\n  async findMMenu(@Param('id') id: number): Promise {\n    return await this.menuService.findById(id);\n  }\n\n  @ApiOperation({ summary: 'Create menu' })\n  @ApiResponse({ status: 200, description: 'Created menu successfully.'})\n  @ApiResponse({ status: 403, description: 'Forbidden.' })\n  @ApiBody({type: CreateMenuDto})\n  //@UsePipes(new ValidationPipe())\n  @Post(':id')\n  async create(@Body('menu') menuData: CreateMenuDto) {\n    return this.menuService.create(menuData);\n  }\n\n  @ApiOperation({ summary: 'Update menu' })\n  @ApiResponse({ status: 200, description: 'Updated menu successfully.'})\n  @ApiResponse({ status: 403, description: 'Forbidden.' })\n  @ApiBody({type: CreateMenuDto})\n  @Put(':id')\n  async update(@Param('id') id: number, @Body('menu') menuData: CreateMenuDto) {\n    return await this.menuService.update(id, menuData);\n  }\n\n  @ApiOperation({ summary: 'Delete menu' })\n  @ApiResponse({ status: 200, description: 'Deleted menu successfully.'})\n  @ApiResponse({ status: 403, description: 'Forbidden.' })\n  @ApiBody({type: CreateMenuDto})\n  @Delete(':id')\n  async delete(@Param() params) {\n    return await this.menuService.delete(params.slug);\n  }\n\n  // @Get(':slug/menuentries')\n  // async findMenuEntries(@Param('slug') slug): Promise {\n  //   return await this.menuService.findMenuEntry(slug);\n  // }\n\n \n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MenuEntryEntity.html":{"url":"classes/MenuEntryEntity.html","title":"class - MenuEntryEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MenuEntryEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/menu/menuentry.entity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                action\n                            \n                            \n                                active\n                            \n                            \n                                appid\n                            \n                            \n                                caption\n                            \n                            \n                                createdby\n                            \n                            \n                                createddate\n                            \n                            \n                                description\n                            \n                            \n                                id\n                            \n                            \n                                menuapp\n                            \n                            \n                                menuentryConnection\n                            \n                            \n                                mouseover\n                            \n                            \n                                sortid\n                            \n                            \n                                updatedby\n                            \n                            \n                                updateddate\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            action\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/menu/menuentry.entity.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            active\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({default: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/menu/menuentry.entity.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            appid\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column('nvarchar', {length: 10})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/menu/menuentry.entity.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            caption\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column('nvarchar', {length: 50})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/menu/menuentry.entity.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdby\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/menu/menuentry.entity.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createddate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @CreateDateColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/menu/menuentry.entity.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/menu/menuentry.entity.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/menu/menuentry.entity.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            menuapp\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MenuAppEntity\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne(undefined, undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/menu/menuentry.entity.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            menuentryConnection\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         RoleMenuEntryEntity\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @OneToMany(undefined, undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/menu/menuentry.entity.ts:48\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mouseover\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/menu/menuentry.entity.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sortid\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column('nvarchar', {length: 50})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/menu/menuentry.entity.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedby\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/menu/menuentry.entity.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateddate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @UpdateDateColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/menu/menuentry.entity.ts:39\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, PrimaryGeneratedColumn, Column, CreateDateColumn, UpdateDateColumn, OneToOne, ManyToOne, OneToMany, JoinColumn, AfterUpdate, BeforeUpdate } from 'typeorm';\nimport { MenuAppEntity } from './menuapp.entity';\nimport { RoleMenuEntryEntity } from '../role/rolemenuentry.entity';\n\n@Entity('menuentry')\nexport class MenuEntryEntity {\n\n  @PrimaryGeneratedColumn()\n  id: number;\n \n  @Column(\"nvarchar\", { length: 10 })\n  appid: string;\n  \n  @Column(\"nvarchar\", { length: 50 })\n  sortid: string;\n\n  @Column(\"nvarchar\", { length: 50 })\n  caption: string;\n\n  @Column({nullable: true})\n  description: string;\n\n  @Column({default: false})\n  active: boolean;\n\n  @Column()\n  action: string;\n\n  @Column()\n  mouseover: string;\n\n  @CreateDateColumn()\n  createddate: Date;\n\n  @Column()\n  createdby: number\n\n  @UpdateDateColumn()\n  updateddate: Date;\n\n  @Column()\n  updatedby: number;\n\n  @ManyToOne(type => MenuAppEntity, menuapp => menuapp.menuentries)\n  menuapp: MenuAppEntity;\n\n  @OneToMany(type => RoleMenuEntryEntity, rolemenuentry => rolemenuentry.RoleMenuAppId)\n  menuentryConnection: RoleMenuEntryEntity;\n\n\n\n\n\n}\n\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MenuEntryRO.html":{"url":"interfaces/MenuEntryRO.html","title":"interface - MenuEntryRO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MenuEntryRO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/menu/menu.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        menuentries\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        menuentries\n                                    \n                                \n                                \n                                    \n                                        menuentries:         MenuEntryEntity\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         MenuEntryEntity\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { UserData } from '../user/user.interface';\nimport { MenuAppEntity } from './menuapp.entity';\nimport { MenuEntryEntity } from './menuentry.entity';\n\ninterface MenuAppEntry {\n  body: string;\n}\n\nexport interface MenuAppData {\n\n    appid: string,\n    caption: string,\n    sortid: string,\n    active?: boolean;\n    createddate?: Date;\n    createdby?: number;\n    updateddate?: Date;\n    updatedby?: number;\n\n  }\n  \n  export interface MenuRO {\n    menu: MenuAppData;\n  }\n\n  export interface MenuEntryRO {\n    menuentries: MenuEntryEntity;\n  }\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MenuModule.html":{"url":"modules/MenuModule.html","title":"module - MenuModule","body":"\n                   \n\n\n\n\n    Modules\n    MenuModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MenuModule\n\n\n\ncluster_MenuModule_providers\n\n\n\n\nMenuService\n\nMenuService\n\n\n\nMenuModule\n\nMenuModule\n\nMenuModule -->\n\nMenuService->MenuModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/menu/menu.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            MenuService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            MenuController\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            configure\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    configure(consumer: MiddlewareConsumer)\n                \n            \n\n\n            \n                \n                    Defined in src/menu/menu.module.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    consumer\n                                    \n                                            MiddlewareConsumer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import {MiddlewareConsumer, Module, NestModule, RequestMethod} from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\n\nimport { MenuService } from './menu.service';\nimport { MenuAppEntity } from './menuapp.entity';\nimport { MenuController } from './menu.controller';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([MenuAppEntity])],\n  providers: [MenuService],\n  controllers: [\n    MenuController\n  ],\n  exports: []\n})\nexport class MenuModule implements NestModule {\n  public configure(consumer: MiddlewareConsumer) {\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MenuRO.html":{"url":"interfaces/MenuRO.html","title":"interface - MenuRO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MenuRO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/menu/menu.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        menu\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        menu\n                                    \n                                \n                                \n                                    \n                                        menu:         MenuAppData\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         MenuAppData\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { UserData } from '../user/user.interface';\nimport { MenuAppEntity } from './menuapp.entity';\nimport { MenuEntryEntity } from './menuentry.entity';\n\ninterface MenuAppEntry {\n  body: string;\n}\n\nexport interface MenuAppData {\n\n    appid: string,\n    caption: string,\n    sortid: string,\n    active?: boolean;\n    createddate?: Date;\n    createdby?: number;\n    updateddate?: Date;\n    updatedby?: number;\n\n  }\n  \n  export interface MenuRO {\n    menu: MenuAppData;\n  }\n\n  export interface MenuEntryRO {\n    menuentries: MenuEntryEntity;\n  }\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MenuService.html":{"url":"injectables/MenuService.html","title":"injectable - MenuService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MenuService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/menu/menu.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                buildMenuRO\n                            \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findById\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(menuRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/menu/menu.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        menuRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            buildMenuRO\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    buildMenuRO(menu: MenuAppEntity)\n                \n            \n\n\n            \n                \n                    Defined in src/menu/menu.service.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    menu\n                                    \n                                                MenuAppEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     { menu: { id: any; appid: any; caption: any; sortid: any; }; }\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(dto: CreateMenuDto)\n                \n            \n\n\n            \n                \n                    Defined in src/menu/menu.service.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                CreateMenuDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/menu/menu.service.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n\n            \n                \n                    Defined in src/menu/menu.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findById\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findById(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/menu/menu.service.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(undefined: CreateMenuDto)\n                \n            \n\n\n            \n                \n                    Defined in src/menu/menu.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                CreateMenuDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: number, dto: CreateMenuDto)\n                \n            \n\n\n            \n                \n                    Defined in src/menu/menu.service.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dto\n                                    \n                                                CreateMenuDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository, getRepository, DeleteResult } from 'typeorm';\nimport { HttpException } from '@nestjs/common/exceptions/http.exception';\nimport { HttpStatus } from '@nestjs/common';\nimport { validate } from 'class-validator';\n\nimport { MenuAppEntity } from './menuapp.entity';\n\nimport { MenuRO } from './menu.interface';\nimport { CreateMenuDto } from './dto';\n\n@Injectable()\nexport class MenuService {\n  constructor(\n    @InjectRepository(MenuAppEntity)\n    private readonly menuRepository: Repository,\n  ) {}\n\n  async findAll(): Promise {\n    return await this.menuRepository.find();\n  }\n\n  async findOne({id}: CreateMenuDto): Promise {\n    const menu = await this.menuRepository.findOne({id});\n    if (!menu) {\n      return null;\n    }\n    return null;\n  }\n\n  async create(dto: CreateMenuDto): Promise {\n\n    // check uniqueness of username/email\n    const {name, description, abbreviation} = dto;\n\n    // create new menu\n    let newMenu = new MenuAppEntity();\n    newMenu.name = name;\n    newMenu.description = description;\n    newMenu.abbreviation = abbreviation;\n\n    const errors = await validate(newMenu);\n    if (errors.length > 0) {\n      const _errors = {menu: 'Userinput is not valid.'};\n      throw new HttpException({message: 'Input data validation failed', _errors}, HttpStatus.BAD_REQUEST);\n\n    } else {\n      const savedMenu = await this.menuRepository.save(newMenu);\n      return this.buildMenuRO(savedMenu);\n    }\n  }\n\n  async update(id: number, dto: CreateMenuDto): Promise {\n    let toUpdate = await this.menuRepository.findOne(id);\n\n    let updated = Object.assign(toUpdate, dto);\n    return await this.menuRepository.save(updated);\n  }\n\n  async delete(id: number): Promise {\n    return await this.menuRepository.delete({ id: id});\n  }\n\n  async findById(id: number): Promise{\n    const menu = await this.menuRepository.findOne(id);\n\n    if (!menu) {\n      const errors = {Menu: ' not found'};\n      throw new HttpException({errors}, 401);\n    }\n\n    return this.buildMenuRO(menu);\n  }\n\n\n  private buildMenuRO(menu: MenuAppEntity) {\n    const MenuRO = {\n      id: menu.id,\n      appid: menu.name,\n      caption: menu.description,\n      sortid: menu.abbreviation\n     \n    };\n\n    return {menu: MenuRO};\n  }\n}\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MyLogger.html":{"url":"classes/MyLogger.html","title":"class - MyLogger","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MyLogger\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/middleware/logger.service.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        LoggerService\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                debug\n                            \n                            \n                                error\n                            \n                            \n                                log\n                            \n                            \n                                verbose\n                            \n                            \n                                warn\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            debug\n                        \n                        \n                    \n                \n            \n            \n                \ndebug(message: string)\n                \n            \n\n\n            \n                \n                    Defined in src/middleware/logger.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            error\n                        \n                        \n                    \n                \n            \n            \n                \nerror(message: string, trace: string)\n                \n            \n\n\n            \n                \n                    Defined in src/middleware/logger.service.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    trace\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            log\n                        \n                        \n                    \n                \n            \n            \n                \nlog(message: string)\n                \n            \n\n\n            \n                \n                    Defined in src/middleware/logger.service.ts:4\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            verbose\n                        \n                        \n                    \n                \n            \n            \n                \nverbose(message: string)\n                \n            \n\n\n            \n                \n                    Defined in src/middleware/logger.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            warn\n                        \n                        \n                    \n                \n            \n            \n                \nwarn(message: string)\n                \n            \n\n\n            \n                \n                    Defined in src/middleware/logger.service.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { LoggerService } from '@nestjs/common';\n\nexport class MyLogger implements LoggerService {\n  log(message: string) {\n    /* your implementation */\n  }\n  error(message: string, trace: string) {\n    /* your implementation */\n  }\n  warn(message: string) {\n    /* your implementation */\n  }\n  debug(message: string) {\n    /* your implementation */\n  }\n  verbose(message: string) {\n    /* your implementation */\n  }\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ProfileController.html":{"url":"controllers/ProfileController.html","title":"controller - ProfileController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ProfileController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/profile/profile.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                profiles\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                follow\n                            \n                            \n                                    Async\n                                getProfile\n                            \n                            \n                                    Async\n                                unFollow\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            follow\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    follow(email: string, username: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Create profile'})@ApiResponse({status: 200, description: 'Created profile successfully.'})@ApiResponse({status: 403, description: 'Forbidden.'})@Post(':username/follow')\n                \n            \n\n            \n                \n                    Defined in src/profile/profile.controller.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getProfile\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getProfile(userId: number, username: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Get profile'})@ApiResponse({status: 200, description: 'Returned profile successfully.'})@ApiResponse({status: 403, description: 'Forbidden.'})@Get(':username')\n                \n            \n\n            \n                \n                    Defined in src/profile/profile.controller.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            unFollow\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    unFollow(userId: number, username: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Delete profile'})@ApiResponse({status: 200, description: 'Deleted profile successfully.'})@ApiResponse({status: 403, description: 'Forbidden.'})@Delete(':username/follow')\n                \n            \n\n            \n                \n                    Defined in src/profile/profile.controller.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Get, Post, Delete, Param, Controller } from '@nestjs/common';\nimport { Request } from 'express';\nimport { ProfileService } from './profile.service';\nimport { ProfileRO } from './profile.interface';\nimport { User } from '../user/user.decorator';\n\nimport {\n  ApiBearerAuth,\n  ApiResponse,\n  ApiOperation, \n  ApiTags,\n  ApiBody,\n} from '@nestjs/swagger';\n\n@ApiBearerAuth()\n@ApiTags('profiles')\n@Controller('profiles')\nexport class ProfileController {\n\n  constructor(private readonly profileService: ProfileService) {}\n\n  @ApiOperation({ summary: 'Get profile' })\n  @ApiResponse({ status: 200, description: 'Returned profile successfully.'})\n  @ApiResponse({ status: 403, description: 'Forbidden.' })\n  @Get(':username')\n  async getProfile(@User('id') userId: number, @Param('username') username: string): Promise {\n    return await this.profileService.findProfile(userId, username);\n  }\n\n  @ApiOperation({ summary: 'Create profile' })\n  @ApiResponse({ status: 200, description: 'Created profile successfully.'})\n  @ApiResponse({ status: 403, description: 'Forbidden.' })\n  @Post(':username/follow')\n  async follow(@User('email') email: string, @Param('username') username: string): Promise {\n    return await this.profileService.follow(email, username);\n  }\n\n// RWQ: updated missing!!\n\n\n  @ApiOperation({ summary: 'Delete profile' })\n  @ApiResponse({ status: 200, description: 'Deleted profile successfully.'})\n  @ApiResponse({ status: 403, description: 'Forbidden.' })\n  @Delete(':username/follow')\n  async unFollow(@User('id') userId: number,  @Param('username') username: string): Promise {\n    return await this.profileService.unFollow(userId, username);\n  }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ProfileData.html":{"url":"interfaces/ProfileData.html","title":"interface - ProfileData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ProfileData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/profile/profile.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        bio\n                                \n                                \n                                            Optional\n                                        following\n                                \n                                \n                                            Optional\n                                        image\n                                \n                                \n                                        username\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        bio\n                                    \n                                \n                                \n                                    \n                                        bio:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        following\n                                    \n                                \n                                \n                                    \n                                        following:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        image\n                                    \n                                \n                                \n                                    \n                                        image:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ProfileData {\n  username: string;\n  bio: string;\n  image?: string;\n  following?: boolean;\n}\n\nexport interface ProfileRO {\n  profile: ProfileData;\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProfileModule.html":{"url":"modules/ProfileModule.html","title":"module - ProfileModule","body":"\n                   \n\n\n\n\n    Modules\n    ProfileModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ProfileModule\n\n\n\ncluster_ProfileModule_imports\n\n\n\ncluster_ProfileModule_providers\n\n\n\n\nUserModule\n\nUserModule\n\n\n\nProfileModule\n\nProfileModule\n\nProfileModule -->\n\nUserModule->ProfileModule\n\n\n\n\n\nProfileService\n\nProfileService\n\nProfileModule -->\n\nProfileService->ProfileModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/profile/profile.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ProfileService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ProfileController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            configure\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    configure(consumer: MiddlewareConsumer)\n                \n            \n\n\n            \n                \n                    Defined in src/profile/profile.module.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    consumer\n                                    \n                                            MiddlewareConsumer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import {MiddlewareConsumer, Module, NestModule, RequestMethod} from '@nestjs/common';\nimport { ProfileController } from './profile.controller';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { ProfileService } from './profile.service';\nimport { UserModule } from '../user/user.module';\nimport {UserEntity} from \"../user/user.entity\";\nimport {FollowsEntity} from \"./follows.entity\";\nimport {AuthMiddleware} from \"../user/auth.middleware\";\n\n@Module({\n  imports: [TypeOrmModule.forFeature([UserEntity, FollowsEntity]), UserModule],\n  providers: [ProfileService],\n  controllers: [\n    ProfileController\n  ],\n  exports: []\n})\nexport class ProfileModule implements NestModule {\n  public configure(consumer: MiddlewareConsumer) {\n    consumer\n      .apply(AuthMiddleware)\n      .forRoutes({path: 'profiles/:username/follow', method: RequestMethod.ALL});\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ProfileRO.html":{"url":"interfaces/ProfileRO.html","title":"interface - ProfileRO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ProfileRO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/profile/profile.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        profile\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        profile\n                                    \n                                \n                                \n                                    \n                                        profile:         ProfileData\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ProfileData\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ProfileData {\n  username: string;\n  bio: string;\n  image?: string;\n  following?: boolean;\n}\n\nexport interface ProfileRO {\n  profile: ProfileData;\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProfileService.html":{"url":"injectables/ProfileService.html","title":"injectable - ProfileService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ProfileService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/profile/profile.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                findProfile\n                            \n                            \n                                    Async\n                                follow\n                            \n                            \n                                    Async\n                                unFollow\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: Repository, followsRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/profile/profile.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        followsRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n\n            \n                \n                    Defined in src/profile/profile.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(options?: DeepPartial)\n                \n            \n\n\n            \n                \n                    Defined in src/profile/profile.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                DeepPartial\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findProfile\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findProfile(id: number, followingUsername: string)\n                \n            \n\n\n            \n                \n                    Defined in src/profile/profile.service.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    followingUsername\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            follow\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    follow(followerEmail: string, username: string)\n                \n            \n\n\n            \n                \n                    Defined in src/profile/profile.service.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    followerEmail\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            unFollow\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    unFollow(followerId: number, username: string)\n                \n            \n\n\n            \n                \n                    Defined in src/profile/profile.service.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    followerId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpStatus, Injectable} from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { UserEntity } from '../user/user.entity';\nimport { DeepPartial } from 'typeorm/common/DeepPartial';\nimport { ProfileRO, ProfileData } from './profile.interface';\nimport {FollowsEntity} from \"./follows.entity\";\nimport {HttpException} from \"@nestjs/common/exceptions/http.exception\";\n\n@Injectable()\nexport class ProfileService {\n  constructor(\n    @InjectRepository(UserEntity)\n    private readonly userRepository: Repository,\n    @InjectRepository(FollowsEntity)\n    private readonly followsRepository: Repository\n  ) {}\n\n  async findAll(): Promise {\n    return await this.userRepository.find();\n  }\n\n  async findOne(options?: DeepPartial): Promise {\n    const user = await this.userRepository.findOne(options);\n    delete user.id;\n    if (user) delete user.password;\n    return {profile: user};\n  }\n\n  async findProfile(id: number, followingUsername: string): Promise {\n    const _profile = await this.userRepository.findOne( {username: followingUsername});\n\n    if(!_profile) return;\n\n    let profile: ProfileData = {\n      username: _profile.username,\n      bio: _profile.bio,\n      image: _profile.image\n    };\n\n    const follows = await this.followsRepository.findOne( {followerId: id, followingId: _profile.id});\n\n    if (id) {\n      profile.following = !!follows;\n    }\n\n    return {profile};\n  }\n\n  async follow(followerEmail: string, username: string): Promise {\n    if (!followerEmail || !username) {\n      throw new HttpException('Follower email and username not provided.', HttpStatus.BAD_REQUEST);\n    }\n\n    const followingUser = await this.userRepository.findOne({username});\n    const followerUser = await this.userRepository.findOne({email: followerEmail});\n\n    if (followingUser.email === followerEmail) {\n      throw new HttpException('FollowerEmail and FollowingId cannot be equal.', HttpStatus.BAD_REQUEST);\n    }\n\n    const _follows = await this.followsRepository.findOne( {followerId: followerUser.id, followingId: followingUser.id});\n\n    if (!_follows) {\n      const follows = new FollowsEntity();\n      follows.followerId = followerUser.id;\n      follows.followingId = followingUser.id;\n      await this.followsRepository.save(follows);\n    }\n\n    let profile: ProfileData = {\n      username: followingUser.username,\n      bio: followingUser.bio,\n      image: followingUser.image,\n      following: true\n    };\n\n    return {profile};\n  }\n\n  async unFollow(followerId: number, username: string): Promise {\n    if (!followerId || !username) {\n      throw new HttpException('FollowerId and username not provided.', HttpStatus.BAD_REQUEST);\n    }\n\n    const followingUser = await this.userRepository.findOne({username});\n\n    if (followingUser.id === followerId) {\n      throw new HttpException('FollowerId and FollowingId cannot be equal.', HttpStatus.BAD_REQUEST);\n    }\n    const followingId = followingUser.id;\n    await this.followsRepository.delete({followerId, followingId});\n\n    let profile: ProfileData = {\n      username: followingUser.username,\n      bio: followingUser.bio,\n      image: followingUser.image,\n      following: false\n    };\n\n    return {profile};\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/RoleController.html":{"url":"controllers/RoleController.html","title":"controller - RoleController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  RoleController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/role/role.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                role\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findMList\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(roleData: CreateRoleDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Create role'})@ApiResponse({status: 200, description: 'Created role successfully.'})@ApiResponse({status: 403, description: 'Forbidden.'})@ApiBody({type: CreateRoleDto})@Post(':id')\n                \n            \n\n            \n                \n                    Defined in src/role/role.controller.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    roleData\n                                    \n                                                CreateRoleDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(params)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Delete role'})@ApiResponse({status: 200, description: 'Deleted role successfully.'})@ApiResponse({status: 403, description: 'Forbidden.'})@ApiBody({type: CreateRoleDto})@Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/role/role.controller.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Get all roles'})@ApiResponse({status: 200, description: 'Returned all roles successfully.'})@ApiResponse({status: 403, description: 'Forbidden.'})@Get('findall')\n                \n            \n\n            \n                \n                    Defined in src/role/role.controller.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findMList\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findMList(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Get single role'})@ApiResponse({status: 200, description: 'Returned role successfully.'})@ApiResponse({status: 403, description: 'Forbidden.'})@Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/role/role.controller.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: number, roleData: CreateRoleDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Update role'})@ApiResponse({status: 200, description: 'Updated role successfully.'})@ApiResponse({status: 403, description: 'Forbidden.'})@ApiBody({type: CreateRoleDto})@Put(':id')\n                \n            \n\n            \n                \n                    Defined in src/role/role.controller.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    roleData\n                                    \n                                                CreateRoleDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Get, Post, Body, Put, Delete, Param, Controller, UsePipes } from '@nestjs/common';\nimport { Request } from 'express';\nimport { RoleService } from './role.service';\nimport { RoleRO } from './role.interface';\nimport { CreateRoleDto } from './dto';\nimport { RoleEntity } from './role.entity';\nimport { HttpException } from '@nestjs/common/exceptions/http.exception';\n\n//import { User } from './user.decorator';\nimport { ValidationPipe } from '../shared/pipes/validation.pipe';\n\nimport {\n  ApiBearerAuth,\n  ApiResponse,\n  ApiOperation, \n  ApiTags,\n  ApiBody,\n} from '@nestjs/swagger';\n\n@ApiBearerAuth()\n//Tags is Swagger header, Controller is path\n@ApiTags('roles')\n@Controller('role')\nexport class RoleController {\n  constructor(private readonly roleService: RoleService) {}\n\n  @ApiOperation({ summary: 'Get all roles' })\n  @ApiResponse({ status: 200, description: 'Returned all roles successfully.'})\n  @ApiResponse({ status: 403, description: 'Forbidden.' })\n  @Get('findall')\n  async findAll(): Promise {\n    return await this.roleService.findAll();\n  }\n\n  @ApiOperation({ summary: 'Get single role' })\n  @ApiResponse({ status: 200, description: 'Returned role successfully.'})\n  @ApiResponse({ status: 403, description: 'Forbidden.' })\n  @Get(':id')\n  async findMList(@Param('id') id: number): Promise {\n    return await this.roleService.findById(id);\n  }\n\n  @ApiOperation({ summary: 'Create role' })\n  @ApiResponse({ status: 200, description: 'Created role successfully.'})\n  @ApiResponse({ status: 403, description: 'Forbidden.' })\n  @ApiBody({type: CreateRoleDto})\n  //@UsePipes(new ValidationPipe())\n  @Post(':id')\n  async create(@Body('role') roleData: CreateRoleDto) {\n    return this.roleService.create(roleData);\n  }\n\n  @ApiOperation({ summary: 'Update role' })\n  @ApiResponse({ status: 200, description: 'Updated role successfully.'})\n  @ApiResponse({ status: 403, description: 'Forbidden.' })\n  @ApiBody({type: CreateRoleDto})\n  @Put(':id')\n  async update(@Param('id') id: number, @Body('role') roleData: CreateRoleDto) {\n    return await this.roleService.update(id, roleData);\n  }\n\n  @ApiOperation({ summary: 'Delete role' })\n  @ApiResponse({ status: 200, description: 'Deleted role successfully.'})\n  @ApiResponse({ status: 403, description: 'Forbidden.' })\n  @ApiBody({type: CreateRoleDto})\n  @Delete(':id')\n  async delete(@Param() params) {\n    return await this.roleService.delete(params.slug);\n  }\n \n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RoleData.html":{"url":"interfaces/RoleData.html","title":"interface - RoleData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  RoleData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/role/role.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        active\n                                \n                                \n                                            Optional\n                                        createdat\n                                \n                                \n                                            Optional\n                                        createdby\n                                \n                                \n                                        description\n                                \n                                \n                                        name\n                                \n                                \n                                            Optional\n                                        updatedat\n                                \n                                \n                                            Optional\n                                        updatedby\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        active\n                                    \n                                \n                                \n                                    \n                                        active:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createdat\n                                    \n                                \n                                \n                                    \n                                        createdat:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createdby\n                                    \n                                \n                                \n                                    \n                                        createdby:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedat\n                                    \n                                \n                                \n                                    \n                                        updatedat:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedby\n                                    \n                                \n                                \n                                    \n                                        updatedby:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface RoleData {\n\n    name: string;\n    description: string;\n    active?: boolean;\n    createdat?: Date;\n    createdby?: number;\n    updatedat?: Date;\n    updatedby?: number;\n\n  }\n  \n  export interface RoleRO {\n    role: RoleData;\n  }\n\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RoleEntity.html":{"url":"classes/RoleEntity.html","title":"class - RoleEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RoleEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/role/role.entity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                active\n                            \n                            \n                                createdby\n                            \n                            \n                                createddate\n                            \n                            \n                                description\n                            \n                            \n                                groups\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                rolemenuapps\n                            \n                            \n                                site\n                            \n                            \n                                updatedby\n                            \n                            \n                                updateddate\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            active\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({default: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/role/role.entity.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdby\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/role/role.entity.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createddate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/role/role.entity.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/role/role.entity.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            groups\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         GroupEntity[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @OneToMany(undefined, undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/role/role.entity.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/role/role.entity.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column('nvarchar', {length: 50})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/role/role.entity.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rolemenuapps\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     RoleMenuAppEntity[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @OneToMany(undefined, undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/role/role.entity.ts:48\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            site\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SiteEntity\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne(undefined, undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/role/role.entity.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedby\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/role/role.entity.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateddate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/role/role.entity.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserEntity\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne(undefined, undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/role/role.entity.ts:36\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, PrimaryGeneratedColumn, Column, OneToOne, ManyToOne, OneToMany, JoinColumn, AfterUpdate, BeforeUpdate } from 'typeorm';\nimport { UserEntity } from '../user/user.entity';\nimport { SiteEntity } from '../site/site.entity';\nimport { GroupEntity } from '../group/group.entity';\nimport { RoleMenuAppEntity } from './rolemenuapp.entity';\n\n@Entity('role')\nexport class RoleEntity {\n\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column(\"nvarchar\", { length: 50 })\n  name: string;\n\n  @Column({nullable: true})\n  description: string;\n\n  @Column({default: false})\n  active: boolean;\n\n  @Column()\n  createddate: Date;\n\n  @Column()\n  createdby: number\n\n  @Column()\n  updateddate: Date;\n\n  @Column()\n  updatedby: number;\n\n  // a user can have multiple roles on different sites so per site!\n  @ManyToOne(type => UserEntity, user => user.roles)\n  user: UserEntity;\n\n  // a role belongs only to one site as the menu could be different!! a site can have multiple roles\n  @ManyToOne(type => SiteEntity, site => site.roles)\n  site: SiteEntity;\n\n  // groups are used for data access and define on the role like in Labware\n  @OneToMany(type => GroupEntity, group => group.role)\n  groups: GroupEntity[];\n\n  // a role has multiples app to be accessed\n  @OneToMany(type => RoleMenuAppEntity, rolemenuapp => rolemenuapp.role)\n  rolemenuapps: RoleMenuAppEntity[];\n\n\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RoleMenuAppEntity.html":{"url":"classes/RoleMenuAppEntity.html","title":"class - RoleMenuAppEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RoleMenuAppEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/role/rolemenuapp.entity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                menuapp\n                            \n                            \n                                MenuAppId\n                            \n                            \n                                role\n                            \n                            \n                                rolemenuappConnection\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/role/rolemenuapp.entity.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            menuapp\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MenuAppEntity\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @OneToOne(undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/role/rolemenuapp.entity.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            MenuAppId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/role/rolemenuapp.entity.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            role\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         RoleEntity\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne(undefined, undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/role/rolemenuapp.entity.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rolemenuappConnection\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         RoleMenuEntryEntity\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @OneToMany(undefined, undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/role/rolemenuapp.entity.ts:25\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, PrimaryGeneratedColumn, Column, OneToOne, ManyToOne, OneToMany, JoinColumn, AfterUpdate, BeforeUpdate } from 'typeorm';\nimport { RoleEntity } from './role.entity';\nimport { MenuAppEntity } from '../menu/menuapp.entity';\nimport { RoleMenuEntryEntity } from '../role/rolemenuentry.entity';\n\n@Entity('rolemenuapp')\nexport class RoleMenuAppEntity {\n\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  //@Column()\n  //RoleId: number;\n\n  @Column()\n  MenuAppId: number;\n\n  @ManyToOne(type => RoleEntity, role => role.rolemenuapps)\n  role: RoleEntity;\n\n  @OneToOne(type => MenuAppEntity)\n  menuapp: MenuAppEntity;\n  \n  @OneToMany(type => RoleMenuEntryEntity, rolemenuentry => rolemenuentry.MenuEntryId)\n  rolemenuappConnection: RoleMenuEntryEntity;\n\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RoleMenuEntryEntity.html":{"url":"classes/RoleMenuEntryEntity.html","title":"class - RoleMenuEntryEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RoleMenuEntryEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/role/rolemenuentry.entity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                menuentry\n                            \n                            \n                                MenuEntryId\n                            \n                            \n                                rolemenuapp\n                            \n                            \n                                RoleMenuAppId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            menuentry\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MenuEntryEntity\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne(undefined, undefined, {primary: true})@JoinColumn({name: 'MenuEntryId'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/role/rolemenuentry.entity.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            MenuEntryId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/role/rolemenuentry.entity.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rolemenuapp\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         RoleMenuAppEntity\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne(undefined, undefined, {primary: true})@JoinColumn({name: 'RoleMenuAppId'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/role/rolemenuentry.entity.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            RoleMenuAppId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/role/rolemenuentry.entity.ts:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, PrimaryColumn, Column, ManyToOne, JoinColumn } from 'typeorm';\nimport { MenuEntryEntity } from '../menu/menuentry.entity';\nimport { RoleMenuAppEntity } from '../role/rolemenuapp.entity';\n\n@Entity('rolemenuentry')\nexport class RoleMenuEntryEntity {\n\n  @PrimaryColumn()\n  RoleMenuAppId: number;\n\n  @PrimaryColumn()\n  MenuEntryId: number;\n\n  @ManyToOne(type => RoleMenuAppEntity, rolemenuapp => rolemenuapp.rolemenuappConnection, { primary: true })\n  @JoinColumn({ name: \"RoleMenuAppId\"})\n  rolemenuapp: RoleMenuAppEntity;\n\n  @ManyToOne(type => MenuEntryEntity, menuentry => menuentry.menuentryConnection, { primary: true })\n  @JoinColumn({ name: \"MenuEntryId\"})\n  menuentry: MenuEntryEntity;\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RoleModule.html":{"url":"modules/RoleModule.html","title":"module - RoleModule","body":"\n                   \n\n\n\n\n    Modules\n    RoleModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_RoleModule\n\n\n\ncluster_RoleModule_providers\n\n\n\n\nRoleService\n\nRoleService\n\n\n\nRoleModule\n\nRoleModule\n\nRoleModule -->\n\nRoleService->RoleModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/role/role.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            RoleService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            RoleController\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            configure\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    configure(consumer: MiddlewareConsumer)\n                \n            \n\n\n            \n                \n                    Defined in src/role/role.module.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    consumer\n                                    \n                                            MiddlewareConsumer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import {MiddlewareConsumer, Module, NestModule, RequestMethod} from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\n\nimport { RoleService } from './role.service';\nimport { RoleEntity } from './role.entity';\nimport { RoleController } from './role.controller';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([RoleEntity])],\n  providers: [RoleService],\n  controllers: [\n    RoleController\n  ],\n  exports: []\n})\nexport class RoleModule implements NestModule {\n  public configure(consumer: MiddlewareConsumer) {\n  }\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RoleRO.html":{"url":"interfaces/RoleRO.html","title":"interface - RoleRO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  RoleRO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/role/role.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        role\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        role\n                                    \n                                \n                                \n                                    \n                                        role:         RoleData\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         RoleData\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface RoleData {\n\n    name: string;\n    description: string;\n    active?: boolean;\n    createdat?: Date;\n    createdby?: number;\n    updatedat?: Date;\n    updatedby?: number;\n\n  }\n  \n  export interface RoleRO {\n    role: RoleData;\n  }\n\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RoleService.html":{"url":"injectables/RoleService.html","title":"injectable - RoleService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  RoleService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/role/role.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                buildRoleRO\n                            \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findById\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(roleRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/role/role.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        roleRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            buildRoleRO\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    buildRoleRO(role: RoleEntity)\n                \n            \n\n\n            \n                \n                    Defined in src/role/role.service.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    role\n                                    \n                                                RoleEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     { role: { id: any; name: any; description: any; }; }\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(dto: CreateRoleDto)\n                \n            \n\n\n            \n                \n                    Defined in src/role/role.service.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                CreateRoleDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/role/role.service.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n\n            \n                \n                    Defined in src/role/role.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findById\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findById(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/role/role.service.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(undefined: CreateRoleDto)\n                \n            \n\n\n            \n                \n                    Defined in src/role/role.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                CreateRoleDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: number, dto: CreateRoleDto)\n                \n            \n\n\n            \n                \n                    Defined in src/role/role.service.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dto\n                                    \n                                                CreateRoleDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository, getRepository, DeleteResult } from 'typeorm';\nimport { HttpException } from '@nestjs/common/exceptions/http.exception';\nimport { HttpStatus } from '@nestjs/common';\nimport { validate } from 'class-validator';\n\nimport { RoleEntity } from './role.entity';\nimport { RoleRO } from './role.interface';\nimport { CreateRoleDto } from './dto';\n\n@Injectable()\nexport class RoleService {\n  constructor(\n    @InjectRepository(RoleEntity)\n    private readonly roleRepository: Repository,\n  ) {}\n\n  async findAll(): Promise {\n    return await this.roleRepository.find();\n  }\n\n  async findOne({id}: CreateRoleDto): Promise {\n    const role = await this.roleRepository.findOne({id});\n    if (!role) {\n      return null;\n    }\n    return null;\n  }\n\n  async create(dto: CreateRoleDto): Promise {\n\n    // check uniqueness of role\n    const {name, description} = dto;\n\n    // create new role\n    let newRole = new RoleEntity();\n    newRole.name = name;\n    newRole.description = description;\n\n    const errors = await validate(newRole);\n    if (errors.length > 0) {\n      const _errors = {role: 'Userinput is not valid.'};\n      throw new HttpException({message: 'Input data validation failed', _errors}, HttpStatus.BAD_REQUEST);\n\n    } else {\n      const savedRole = await this.roleRepository.save(newRole);\n      return this.buildRoleRO(savedRole);\n    }\n  }\n\n  async update(id: number, dto: CreateRoleDto): Promise {\n    let toUpdate = await this.roleRepository.findOne(id);\n\n    let updated = Object.assign(toUpdate, dto);\n    return await this.roleRepository.save(updated);\n  }\n\n  async delete(id: number): Promise {\n    return await this.roleRepository.delete({ id: id});\n  }\n\n  async findById(id: number): Promise{\n    const role = await this.roleRepository.findOne(id);\n\n    if (!role) {\n      const errors = {Role: ' not found'};\n      throw new HttpException({errors}, 401);\n    }\n\n    return this.buildRoleRO(role);\n  }\n\n\n  private buildRoleRO(role: RoleEntity) {\n    const RoleRO = {\n      id: role.id,\n      name: role.name,\n      description: role.description\n     \n    };\n\n    return {role: RoleRO};\n  }\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/SiteController.html":{"url":"controllers/SiteController.html","title":"controller - SiteController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  SiteController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/site/site.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                sites\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findMList\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(siteData: CreateSiteDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Create single site'})@ApiResponse({status: 200, description: 'Created site successfully.'})@ApiResponse({status: 403, description: 'Forbidden.'})@ApiBody({type: CreateSiteDto})@Post(':id')\n                \n            \n\n            \n                \n                    Defined in src/site/site.controller.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    siteData\n                                    \n                                                CreateSiteDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(params)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Delete site'})@ApiResponse({status: 200, description: 'Deleted site successfully.'})@ApiResponse({status: 403, description: 'Forbidden.'})@ApiBody({type: CreateSiteDto})@Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/site/site.controller.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Get all sites'})@ApiResponse({status: 200, description: 'Returned all sites successfully.'})@ApiResponse({status: 403, description: 'Forbidden.'})@Get()\n                \n            \n\n            \n                \n                    Defined in src/site/site.controller.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findMList\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findMList(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Get site'})@ApiResponse({status: 200, description: 'Returned site successfully.'})@ApiResponse({status: 403, description: 'Forbidden.'})@Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/site/site.controller.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: number, siteData: CreateSiteDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Update site'})@ApiResponse({status: 200, description: 'Updated site successfully.'})@ApiResponse({status: 403, description: 'Forbidden.'})@ApiBody({type: CreateSiteDto})@Put(':id')\n                \n            \n\n            \n                \n                    Defined in src/site/site.controller.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    siteData\n                                    \n                                                CreateSiteDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        \nimport { Get, Post, Body, Put, Delete, Param, Controller, UsePipes } from '@nestjs/common';\nimport { Request } from 'express';\nimport { SiteService } from './site.service';\nimport { SiteRO } from './site.interface';\nimport { CreateSiteDto } from './dto';\nimport { SiteEntity } from './site.entity';\nimport { HttpException } from '@nestjs/common/exceptions/http.exception';\n\n//import { User } from './user.decorator';\nimport { ValidationPipe } from '../shared/pipes/validation.pipe';\n\nimport {\n  ApiBearerAuth,\n  ApiResponse,\n  ApiOperation, \n  ApiTags,\n  ApiBody,\n} from '@nestjs/swagger';\n\n@ApiBearerAuth()\n@ApiTags('sites')\n@Controller('sites')\nexport class SiteController {\n  constructor(private readonly siteService: SiteService) {}\n\n  @ApiOperation({ summary: 'Get all sites' })\n  @ApiResponse({ status: 200, description: 'Returned all sites successfully.'})\n  @ApiResponse({ status: 403, description: 'Forbidden.' })\n  @Get()\n  async findAll(): Promise {\n    return await this.siteService.findAll();\n  }\n\n  @ApiOperation({ summary: 'Get site' })\n  @ApiResponse({ status: 200, description: 'Returned site successfully.'})\n  @ApiResponse({ status: 403, description: 'Forbidden.' })\n  @Get(':id')\n  async findMList(@Param('id') id: number): Promise {\n    return await this.siteService.findById(id);\n  }\n\n  @ApiOperation({ summary: 'Create single site' })\n  @ApiResponse({ status: 200, description: 'Created site successfully.'})\n  @ApiResponse({ status: 403, description: 'Forbidden.' })\n  @ApiBody({type: CreateSiteDto})\n  //@UsePipes(new ValidationPipe())\n  @Post(':id')\n  async create(@Body('site') siteData: CreateSiteDto) {\n    return this.siteService.create(siteData);\n  }\n\n  @ApiOperation({ summary: 'Update site' })\n  @ApiResponse({ status: 200, description: 'Updated site successfully.'})\n  @ApiResponse({ status: 403, description: 'Forbidden.' })\n  @ApiBody({type: CreateSiteDto})\n  @Put(':id')\n  async update(@Param('id') id: number, @Body('site') siteData: CreateSiteDto) {\n    return await this.siteService.update(id, siteData);\n  }\n\n  @ApiOperation({ summary: 'Delete site' })\n  @ApiResponse({ status: 200, description: 'Deleted site successfully.'})\n  @ApiResponse({ status: 403, description: 'Forbidden.' })\n  @ApiBody({type: CreateSiteDto})\n  @Delete(':id')\n  async delete(@Param() params) {\n    return await this.siteService.delete(params.slug);\n  }\n\n \n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SiteData.html":{"url":"interfaces/SiteData.html","title":"interface - SiteData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SiteData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/site/site.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        active\n                                \n                                \n                                            Optional\n                                        corporation\n                                \n                                \n                                            Optional\n                                        costcenter\n                                \n                                \n                                            Optional\n                                        createdat\n                                \n                                \n                                            Optional\n                                        createdby\n                                \n                                \n                                        description\n                                \n                                \n                                        name\n                                \n                                \n                                            Optional\n                                        updatedat\n                                \n                                \n                                            Optional\n                                        updatedby\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        active\n                                    \n                                \n                                \n                                    \n                                        active:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        corporation\n                                    \n                                \n                                \n                                    \n                                        corporation:         CorporationData\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CorporationData\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        costcenter\n                                    \n                                \n                                \n                                    \n                                        costcenter:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createdat\n                                    \n                                \n                                \n                                    \n                                        createdat:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createdby\n                                    \n                                \n                                \n                                    \n                                        createdby:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedat\n                                    \n                                \n                                \n                                    \n                                        updatedat:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedby\n                                    \n                                \n                                \n                                    \n                                        updatedby:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { CorporationData } from '../corporation/corporation.interface';\n\nexport interface SiteData {\n\n    name: string;\n    costcenter?: number;\n    description: string;\n    active?: boolean;\n    createdat?: Date;\n    createdby?: number;\n    updatedat?: Date;\n    updatedby?: number;\n    corporation?: CorporationData;\n  }\n  \n  export interface SiteRO {\n    site: SiteData;\n  }\n\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SiteEntity.html":{"url":"classes/SiteEntity.html","title":"class - SiteEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SiteEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/site/site.entity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                active\n                            \n                            \n                                corporation\n                            \n                            \n                                costcenter\n                            \n                            \n                                createdby\n                            \n                            \n                                createddate\n                            \n                            \n                                description\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                roles\n                            \n                            \n                                slug\n                            \n                            \n                                updatedby\n                            \n                            \n                                updateddate\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            active\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({default: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/site/site.entity.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            corporation\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CorporationEntity\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne(undefined, undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/site/site.entity.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            costcenter\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/site/site.entity.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdby\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/site/site.entity.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createddate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/site/site.entity.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/site/site.entity.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/site/site.entity.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column('nvarchar', {length: 100})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/site/site.entity.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            roles\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         RoleEntity[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @OneToMany(undefined, undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/site/site.entity.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            slug\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/site/site.entity.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedby\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/site/site.entity.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateddate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/site/site.entity.ts:33\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, PrimaryGeneratedColumn, Column, OneToOne, ManyToOne, OneToMany, JoinColumn, AfterUpdate, BeforeUpdate } from 'typeorm';\nimport { CorporationEntity } from '../corporation/corporation.entity';\nimport { RoleEntity } from '../role/role.entity';\n\n@Entity('site')\nexport class SiteEntity {\n\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column()\n  slug: string;\n\n  @Column(\"nvarchar\", { length: 100 })\n  name: string;\n\n  @Column({nullable: true})\n  costcenter: number;\n\n  @Column({nullable: true})\n  description: string;\n\n  @Column({default: false})\n  active: boolean;\n\n  @Column()\n  createddate: Date;\n\n  @Column()\n  createdby: number\n\n  @Column()\n  updateddate: Date;\n\n  @Column()\n  updatedby: number;\n\n  @ManyToOne(type => CorporationEntity, corporation => corporation.sites)\n  corporation: CorporationEntity;\n\n  @OneToMany(type => RoleEntity, role => role.site)\n  roles: RoleEntity[];\n\n}\n\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SiteModule.html":{"url":"modules/SiteModule.html","title":"module - SiteModule","body":"\n                   \n\n\n\n\n    Modules\n    SiteModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SiteModule\n\n\n\ncluster_SiteModule_providers\n\n\n\n\nSiteService\n\nSiteService\n\n\n\nSiteModule\n\nSiteModule\n\nSiteModule -->\n\nSiteService->SiteModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/site/site.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            SiteService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            SiteController\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            configure\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    configure(consumer: MiddlewareConsumer)\n                \n            \n\n\n            \n                \n                    Defined in src/site/site.module.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    consumer\n                                    \n                                            MiddlewareConsumer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import {MiddlewareConsumer, Module, NestModule, RequestMethod} from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\n\nimport { SiteService } from './site.service';\nimport { SiteEntity } from './site.entity';\nimport { SiteController } from './site.controller';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([SiteEntity])],\n  providers: [SiteService],\n  controllers: [\n    SiteController\n  ],\n  exports: []\n})\nexport class SiteModule implements NestModule {\n  public configure(consumer: MiddlewareConsumer) {\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SiteRO.html":{"url":"interfaces/SiteRO.html","title":"interface - SiteRO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SiteRO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/site/site.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        site\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        site\n                                    \n                                \n                                \n                                    \n                                        site:         SiteData\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SiteData\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { CorporationData } from '../corporation/corporation.interface';\n\nexport interface SiteData {\n\n    name: string;\n    costcenter?: number;\n    description: string;\n    active?: boolean;\n    createdat?: Date;\n    createdby?: number;\n    updatedat?: Date;\n    updatedby?: number;\n    corporation?: CorporationData;\n  }\n  \n  export interface SiteRO {\n    site: SiteData;\n  }\n\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SiteService.html":{"url":"injectables/SiteService.html","title":"injectable - SiteService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SiteService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/site/site.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                buildSiteRO\n                            \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findById\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(siteRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/site/site.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        siteRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            buildSiteRO\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    buildSiteRO(site: SiteEntity)\n                \n            \n\n\n            \n                \n                    Defined in src/site/site.service.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    site\n                                    \n                                                SiteEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     { site: { id: any; name: any; costcenter: any; description: any; }; }\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(dto: CreateSiteDto)\n                \n            \n\n\n            \n                \n                    Defined in src/site/site.service.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                CreateSiteDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/site/site.service.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n\n            \n                \n                    Defined in src/site/site.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findById\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findById(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/site/site.service.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(undefined: CreateSiteDto)\n                \n            \n\n\n            \n                \n                    Defined in src/site/site.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                CreateSiteDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: number, dto: CreateSiteDto)\n                \n            \n\n\n            \n                \n                    Defined in src/site/site.service.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dto\n                                    \n                                                CreateSiteDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository, getRepository, DeleteResult } from 'typeorm';\nimport { HttpException } from '@nestjs/common/exceptions/http.exception';\nimport { HttpStatus } from '@nestjs/common';\nimport { validate } from 'class-validator';\n\nimport { SiteEntity } from './site.entity';\nimport { SiteRO } from './site.interface';\nimport { CreateSiteDto } from './dto';\n\n@Injectable()\nexport class SiteService {\n  constructor(\n    @InjectRepository(SiteEntity)\n    private readonly siteRepository: Repository,\n  ) {}\n\n  async findAll(): Promise {\n    return await this.siteRepository.find();\n  }\n\n  async findOne({id}: CreateSiteDto): Promise {\n    const site = await this.siteRepository.findOne({id});\n    if (!site) {\n      return null;\n    }\n    return null;\n  }\n\n  async create(dto: CreateSiteDto): Promise {\n\n    // check uniqueness of username/email\n    const {name, costcenter, description} = dto;\n\n    // create new site\n    let newSite = new SiteEntity();\n    newSite.name = name;\n    newSite.costcenter = costcenter;\n    newSite.description = description;\n\n    const errors = await validate(newSite);\n    if (errors.length > 0) {\n      const _errors = {site: 'Userinput is not valid.'};\n      throw new HttpException({message: 'Input data validation failed', _errors}, HttpStatus.BAD_REQUEST);\n\n    } else {\n      const savedSite = await this.siteRepository.save(newSite);\n      return this.buildSiteRO(savedSite);\n    }\n  }\n\n  async update(id: number, dto: CreateSiteDto): Promise {\n    let toUpdate = await this.siteRepository.findOne(id);\n\n    let updated = Object.assign(toUpdate, dto);\n    return await this.siteRepository.save(updated);\n  }\n\n  async delete(id: number): Promise {\n    return await this.siteRepository.delete({ id: id});\n  }\n\n  async findById(id: number): Promise{\n    const site = await this.siteRepository.findOne(id);\n\n    if (!site) {\n      const errors = {Site: ' not found'};\n      throw new HttpException({errors}, 401);\n    }\n\n    return this.buildSiteRO(site);\n  }\n\n\n  private buildSiteRO(site: SiteEntity) {\n    const SiteRO = {\n      id: site.id,\n      name: site.name,\n      costcenter: site.costcenter,\n      description: site.description\n     \n    };\n\n    return {site: SiteRO};\n  }\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/SqldirectController.html":{"url":"controllers/SqldirectController.html","title":"controller - SqldirectController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  SqldirectController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/sqldirect/sqldirect.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                sqldirect\n            \n\n\n\n\n\n\n    \n\n\n    \n        import { Controller } from '@nestjs/common';\n\n@Controller('sqldirect')\nexport class SqldirectController {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SqldirectModule.html":{"url":"modules/SqldirectModule.html","title":"module - SqldirectModule","body":"\n                   \n\n\n\n\n    Modules\n    SqldirectModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SqldirectModule\n\n\n\ncluster_SqldirectModule_providers\n\n\n\n\nSqldirectService\n\nSqldirectService\n\n\n\nSqldirectModule\n\nSqldirectModule\n\nSqldirectModule -->\n\nSqldirectService->SqldirectModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/services/sqldirect/sqldirect.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            SqldirectService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            SqldirectController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { SqldirectController } from './sqldirect.controller';\nimport { SqldirectService } from './sqldirect.service';\n\n@Module({\n  controllers: [SqldirectController],\n  providers: [SqldirectService]\n})\nexport class SqldirectModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SqldirectService.html":{"url":"injectables/SqldirectService.html","title":"injectable - SqldirectService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SqldirectService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/sqldirect/sqldirect.service.ts\n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class SqldirectService {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/TagController.html":{"url":"controllers/TagController.html","title":"controller - TagController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  TagController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tag/tag.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                tags\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Get all tags'})@ApiResponse({status: 200, description: 'Returned all tags successfully.'})@ApiResponse({status: 403, description: 'Forbidden.'})@Get()\n                \n            \n\n            \n                \n                    Defined in src/tag/tag.controller.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {Get, Controller } from '@nestjs/common';\n\nimport { TagEntity } from './tag.entity';\nimport { TagService } from './tag.service';\n\nimport {\n  ApiBearerAuth,\n  ApiResponse,\n  ApiOperation, \n  ApiTags,\n  ApiBody,\n} from '@nestjs/swagger';\n\n@ApiBearerAuth()\n@ApiTags('tags')\n@Controller('tags')\nexport class TagController {\n\n  constructor(private readonly tagService: TagService) {}\n\n  @ApiOperation({ summary: 'Get all tags' })\n  @ApiResponse({ status: 200, description: 'Returned all tags successfully.'})\n  @ApiResponse({ status: 403, description: 'Forbidden.' })\n  @Get()\n  async findAll(): Promise {\n    return await this.tagService.findAll();\n  }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TagEntity.html":{"url":"classes/TagEntity.html","title":"class - TagEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TagEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tag/tag.entity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createdby\n                            \n                            \n                                createddate\n                            \n                            \n                                id\n                            \n                            \n                                tag\n                            \n                            \n                                updatedby\n                            \n                            \n                                updateddate\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdby\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/tag/tag.entity.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createddate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/tag/tag.entity.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/tag/tag.entity.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tag\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column('nvarchar', {length: 50})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/tag/tag.entity.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedby\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/tag/tag.entity.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateddate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/tag/tag.entity.ts:19\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, PrimaryGeneratedColumn, Column } from 'typeorm';\n\n@Entity('tag')\nexport class TagEntity {\n\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column(\"nvarchar\", { length: 50 })\n  tag: string;\n\n  @Column()\n  createddate: Date;\n\n  @Column()\n  createdby: number\n\n  @Column()\n  updateddate: Date;\n\n  @Column()\n  updatedby: number;\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TagModule.html":{"url":"modules/TagModule.html","title":"module - TagModule","body":"\n                   \n\n\n\n\n    Modules\n    TagModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TagModule\n\n\n\ncluster_TagModule_imports\n\n\n\ncluster_TagModule_providers\n\n\n\n\nUserModule\n\nUserModule\n\n\n\nTagModule\n\nTagModule\n\nTagModule -->\n\nUserModule->TagModule\n\n\n\n\n\nTagService\n\nTagService\n\nTagModule -->\n\nTagService->TagModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/tag/tag.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            TagService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            TagController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            configure\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    configure(consumer: MiddlewareConsumer)\n                \n            \n\n\n            \n                \n                    Defined in src/tag/tag.module.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    consumer\n                                    \n                                            MiddlewareConsumer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import {MiddlewareConsumer, Module, NestModule, RequestMethod} from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { UserModule } from '../user/user.module';\nimport { TagService } from './tag.service';\nimport { TagEntity } from './tag.entity';\nimport { TagController } from './tag.controller';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([TagEntity]), UserModule],\n  providers: [TagService],\n  controllers: [\n    TagController\n  ],\n  exports: []\n})\nexport class TagModule implements NestModule {\n  public configure(consumer: MiddlewareConsumer) {\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TagService.html":{"url":"injectables/TagService.html","title":"injectable - TagService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TagService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tag/tag.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(tagRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/tag/tag.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        tagRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n\n            \n                \n                    Defined in src/tag/tag.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable} from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { TagEntity } from './tag.entity';\n\n@Injectable()\nexport class TagService {\n  constructor(\n    @InjectRepository(TagEntity)\n    private readonly tagRepository: Repository\n  ) {}\n\n  async findAll(): Promise {\n    return await this.tagRepository.find();\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ToIntegerPipe.html":{"url":"classes/ToIntegerPipe.html","title":"class - ToIntegerPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ToIntegerPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/pipes/to-integer.pipe.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            PipeTransform\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \ntransform(value: string, metadata: ArgumentMetadata)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/pipes/to-integer.pipe.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    metadata\n                                    \n                                            ArgumentMetadata\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {ArgumentMetadata, BadRequestException, PipeTransform} from '@nestjs/common';\n\n\nexport class ToIntegerPipe implements PipeTransform {\n\n    transform(value: string, metadata: ArgumentMetadata): number {\n\n        const val = parseInt(value);\n\n        if (isNaN(val)) {\n            throw new BadRequestException(\n                'conversion to number failed' + value);\n        }\n\n        return val;\n\n    }\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserDto.html":{"url":"classes/UpdateUserDto.html","title":"class - UpdateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dto/update-user.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                bio\n                            \n                            \n                                    Readonly\n                                email\n                            \n                            \n                                    Readonly\n                                image\n                            \n                            \n                                    Readonly\n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            bio\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({type: String, description: 'bio'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/dto/update-user.dto.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({type: String, description: 'email'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/dto/update-user.dto.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            image\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({type: String, description: 'image'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/dto/update-user.dto.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            username\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({type: String, description: 'username'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/dto/update-user.dto.ts:6\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {ApiProperty} from '@nestjs/swagger';\n\nexport class UpdateUserDto {\n\n  @ApiProperty({type: String, description: 'username'})\n  readonly username: string;\n  \n  @ApiProperty({type: String, description: 'email'})\n  readonly email: string;\n  \n  @ApiProperty({type: String, description: 'bio'})\n  readonly bio: string;\n  \n  @ApiProperty({type: String, description: 'image'})\n  readonly image: string;\n}\n\n\n\n\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UserController.html":{"url":"controllers/UserController.html","title":"controller - UserController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UserController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.controller.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                findMe\n                            \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(userData: CreateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Create user'})@ApiResponse({status: 200, description: 'Returned user successfully.'})@ApiResponse({status: 403, description: 'Forbidden.'})@ApiBody({type: CreateUserDto})@UsePipes(new ValidationPipe())@Post('users')\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userData\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(params)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Delete user'})@ApiResponse({status: 200, description: 'Deleted user successfully.'})@ApiResponse({status: 403, description: 'Forbidden.'})@ApiBody({type: CreateUserDto})@Delete('users/:slug')\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findMe\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findMe(email: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Get user'})@ApiResponse({status: 200, description: 'Return user.'})@ApiResponse({status: 403, description: 'Forbidden.'})@Get('user')\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            login\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    login(loginUserDto: LoginUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Login user'})@ApiResponse({status: 200, description: 'User logged in successfully.'})@ApiResponse({status: 403, description: 'Forbidden.'})@ApiBody({type: LoginUserDto})@UsePipes(new ValidationPipe())@Post('users/login')\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    loginUserDto\n                                    \n                                                LoginUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update(userId: number, userData: UpdateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Update user'})@ApiResponse({status: 200, description: 'Updated user successfully.'})@ApiResponse({status: 403, description: 'Forbidden.'})@ApiBody({type: UpdateUserDto})@Put('user')\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userData\n                                    \n                                                UpdateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Get, Post, Body, Put, Delete, Param, Controller, UsePipes } from '@nestjs/common';\nimport { Request } from 'express';\nimport { UserService } from './user.service';\nimport { UserRO } from './user.interface';\nimport { CreateUserDto, UpdateUserDto, LoginUserDto } from './dto';\nimport { HttpException } from '@nestjs/common/exceptions/http.exception';\nimport { User } from './user.decorator';\nimport { ValidationPipe } from '../shared/pipes/validation.pipe';\n\nimport {\n  ApiBearerAuth,\n  ApiResponse,\n  ApiOperation, \n  ApiTags,\n  ApiBody,\n} from '@nestjs/swagger';\n\n@ApiBearerAuth()\n@ApiTags('user')\n@Controller()\nexport class UserController {\n\n  constructor(private readonly userService: UserService) {}\n\n  @ApiOperation({ summary: 'Get user' })\n  @ApiResponse({ status: 200, description: 'Return user.'})\n  @ApiResponse({ status: 403, description: 'Forbidden.' })\n  @Get('user')\n  async findMe(@User('email') email: string): Promise {\n    return await this.userService.findByEmail(email);\n  }\n\n  @ApiOperation({ summary: 'Create user' })\n  @ApiResponse({ status: 200, description: 'Returned user successfully.'})\n  @ApiResponse({ status: 403, description: 'Forbidden.' })\n  @ApiBody({type: CreateUserDto})\n  @UsePipes(new ValidationPipe())\n  @Post('users')\n  async create(@Body('user') userData: CreateUserDto) {\n    return this.userService.create(userData);\n  }\n\n  @ApiOperation({ summary: 'Login user' })\n  @ApiResponse({ status: 200, description: 'User logged in successfully.'})\n  @ApiResponse({ status: 403, description: 'Forbidden.' })\n  @ApiBody({type: LoginUserDto})\n  @UsePipes(new ValidationPipe())\n  @Post('users/login')\n  async login(@Body('user') loginUserDto: LoginUserDto): Promise {\n    const _user = await this.userService.findOne(loginUserDto);\n\n    const errors = {User: ' not found'};\n    if (!_user) throw new HttpException({errors}, 401);\n\n    const token = await this.userService.generateJWT(_user);\n    const {email, username, bio, image} = _user;\n    const user = {email, token, username, bio, image};\n    return {user}\n  }\n\n  @ApiOperation({ summary: 'Update user' })\n  @ApiResponse({ status: 200, description: 'Updated user successfully.'})\n  @ApiResponse({ status: 403, description: 'Forbidden.' })\n  @ApiBody({type: UpdateUserDto})\n  @Put('user')\n  async update(@User('id') userId: number, @Body('user') userData: UpdateUserDto) {\n    return await this.userService.update(userId, userData);\n  }\n\n  @ApiOperation({ summary: 'Delete user' })\n  @ApiResponse({ status: 200, description: 'Deleted user successfully.'})\n  @ApiResponse({ status: 403, description: 'Forbidden.' })\n  @ApiBody({type: CreateUserDto})\n  @Delete('users/:slug')\n  async delete(@Param() params) {\n    return await this.userService.delete(params.slug);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserData.html":{"url":"interfaces/UserData.html","title":"interface - UserData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  UserData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        bio\n                                \n                                \n                                        email\n                                \n                                \n                                            Optional\n                                        image\n                                \n                                \n                                        token\n                                \n                                \n                                        username\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        bio\n                                    \n                                \n                                \n                                    \n                                        bio:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        image\n                                    \n                                \n                                \n                                    \n                                        image:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        token\n                                    \n                                \n                                \n                                    \n                                        token:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface UserData {\n  username: string;\n  email: string;\n  token: string;\n  bio: string;\n  image?: string;\n}\n\nexport interface UserRO {\n  user: UserData;\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserEntity.html":{"url":"classes/UserEntity.html","title":"class - UserEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.entity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                active\n                            \n                            \n                                articles\n                            \n                            \n                                bio\n                            \n                            \n                                createdby\n                            \n                            \n                                createddate\n                            \n                            \n                                email\n                            \n                            \n                                favorites\n                            \n                            \n                                id\n                            \n                            \n                                image\n                            \n                            \n                                password\n                            \n                            \n                                roles\n                            \n                            \n                                updatedby\n                            \n                            \n                                updateddate\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                hashPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            active\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({default: ''})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/user.entity.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            articles\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ArticleEntity[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @OneToMany(undefined, undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/user.entity.ts:58\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            bio\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({default: ''})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/user.entity.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdby\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/user.entity.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createddate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/user.entity.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()@IsEmail()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/user.entity.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            favorites\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ArticleEntity[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToMany(undefined)@JoinTable()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/user.entity.ts:55\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/user.entity.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            image\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({default: ''})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/user.entity.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/user.entity.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            roles\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         RoleEntity[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @OneToMany(undefined, undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/user.entity.ts:61\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedby\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/user.entity.ts:46\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateddate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/user.entity.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            username\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/user.entity.ts:18\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            hashPassword\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    hashPassword()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @BeforeInsert()\n                \n            \n\n            \n                \n                    Defined in src/user/user.entity.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {Entity, PrimaryGeneratedColumn, Column, BeforeInsert, JoinTable, ManyToMany, OneToMany} from 'typeorm';\nimport { IsEmail } from 'class-validator';\nimport * as argon2 from 'argon2';\nimport { ArticleEntity } from '../article/article.entity';\nimport { RoleEntity } from '../role/role.entity';\n\n@Entity('user')\n\n// import BaseEntity from typorm\n//export class UserEntity extends BaseEntity{\n\nexport class UserEntity {\n\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column()\n  username: string;\n\n  @Column()\n  @IsEmail()\n  email: string;\n\n  @Column({default: ''})\n  bio: string;\n\n  @Column({default: ''})\n  image: string;\n\n  @Column()\n  password: string;\n\n  @Column({default: ''})\n  active: boolean;\n  \n  @Column()\n  createddate: Date;\n\n  @Column()\n  createdby: number\n\n  @Column()\n  updateddate: Date;\n\n  @Column()\n  updatedby: number;\n\n  @BeforeInsert()\n  async hashPassword() {\n    this.password = await argon2.hash(this.password);\n  }\n\n  @ManyToMany(type => ArticleEntity)\n  @JoinTable()\n  favorites: ArticleEntity[];\n\n  @OneToMany(type => ArticleEntity, article => article.author)\n  articles: ArticleEntity[];\n\n  @OneToMany(type => RoleEntity, role => role.user)\n  roles: RoleEntity[];\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserModule.html":{"url":"modules/UserModule.html","title":"module - UserModule","body":"\n                   \n\n\n\n\n    Modules\n    UserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UserModule\n\n\n\ncluster_UserModule_exports\n\n\n\ncluster_UserModule_providers\n\n\n\n\nUserService \n\nUserService \n\n\n\nUserModule\n\nUserModule\n\nUserService  -->\n\nUserModule->UserService \n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/user/user.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UserController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UserService\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            configure\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    configure(consumer: MiddlewareConsumer)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.module.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    consumer\n                                    \n                                            MiddlewareConsumer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import {MiddlewareConsumer, Module, NestModule, RequestMethod} from '@nestjs/common';\nimport { UserController } from './user.controller';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { UserEntity } from './user.entity';\nimport { UserService } from './user.service';\nimport { AuthMiddleware } from './auth.middleware';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([UserEntity])],\n  providers: [UserService],\n  controllers: [\n    UserController\n  ],\n  exports: [UserService]\n})\nexport class UserModule implements NestModule {\n  public configure(consumer: MiddlewareConsumer) {\n    consumer\n      .apply(AuthMiddleware)\n      .forRoutes({path: 'user', method: RequestMethod.GET}, {path: 'user', method: RequestMethod.PUT});\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserRO.html":{"url":"interfaces/UserRO.html","title":"interface - UserRO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  UserRO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        user\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                    \n                                \n                                \n                                    \n                                        user:         UserData\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         UserData\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface UserData {\n  username: string;\n  email: string;\n  token: string;\n  bio: string;\n  image?: string;\n}\n\nexport interface UserRO {\n  user: UserData;\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                buildUserRO\n                            \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findByEmail\n                            \n                            \n                                    Async\n                                findById\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Public\n                                generateJWT\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: Repository, ConfigService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/user/user.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ConfigService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            buildUserRO\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    buildUserRO(user: UserEntity)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:120\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                UserEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     { user: { id: any; username: any; email: any; bio: any; token: any; image: any; }; }\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(dto: CreateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:86\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findByEmail\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findByEmail(email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:101\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findById\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findById(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:90\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(undefined: LoginUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                LoginUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            generateJWT\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    generateJWT(user)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:106\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: number, dto: UpdateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dto\n                                    \n                                                UpdateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository, getRepository, DeleteResult } from 'typeorm';\nimport { UserEntity } from './user.entity';\nimport {CreateUserDto, LoginUserDto, UpdateUserDto} from './dto';\nimport { UserRO } from './user.interface';\nimport { validate } from 'class-validator';\nimport { HttpException } from '@nestjs/common/exceptions/http.exception';\nimport { HttpStatus } from '@nestjs/common';\nimport * as argon2 from 'argon2';\n\nconst jwt = require('jsonwebtoken');\n//import { SECRET } from '../config';\nimport {ConfigService} from '@nestjs/config'\n\n@Injectable()\nexport class UserService {\n  constructor(\n    @InjectRepository(UserEntity)\n    private readonly userRepository: Repository,\n    private ConfigService: ConfigService,\n  ) {}\n\n  async findAll(): Promise {\n    return await this.userRepository.find();\n  }\n\n  async findOne({email, password}: LoginUserDto): Promise {\n    const user = await this.userRepository.findOne({email});\n    if (!user) {\n      return null;\n    }\n\n    if (await argon2.verify(user.password, password)) {\n      return user;\n    }\n\n    return null;\n  }\n\n  async create(dto: CreateUserDto): Promise {\n\n    // check uniqueness of username/email\n    const {username, email, password} = dto;\n    const qb = await getRepository(UserEntity)\n      .createQueryBuilder('user')\n      .where('user.username = :username', { username })\n      .orWhere('user.email = :email', { email });\n\n    const user = await qb.getOne();\n\n    if (user) {\n      const errors = {username: 'Username and email must be unique.'};\n      throw new HttpException({message: 'Input data validation failed', errors}, HttpStatus.BAD_REQUEST);\n\n    }\n\n    // create new user\n    let newUser = new UserEntity();\n    newUser.username = username;\n    newUser.email = email;\n    newUser.password = password;\n    newUser.articles = [];\n\n    const errors = await validate(newUser);\n    if (errors.length > 0) {\n      const _errors = {username: 'Userinput is not valid.'};\n      throw new HttpException({message: 'Input data validation failed', _errors}, HttpStatus.BAD_REQUEST);\n\n    } else {\n      const savedUser = await this.userRepository.save(newUser);\n      return this.buildUserRO(savedUser);\n    }\n\n  }\n\n  async update(id: number, dto: UpdateUserDto): Promise {\n    let toUpdate = await this.userRepository.findOne(id);\n    delete toUpdate.password;\n    delete toUpdate.favorites;\n\n    let updated = Object.assign(toUpdate, dto);\n    return await this.userRepository.save(updated);\n  }\n\n  async delete(email: string): Promise {\n    return await this.userRepository.delete({ email: email});\n  }\n\n  async findById(id: number): Promise{\n    const user = await this.userRepository.findOne(id);\n\n    if (!user) {\n      const errors = {User: ' not found'};\n      throw new HttpException({errors}, 401);\n    }\n\n    return this.buildUserRO(user);\n  }\n\n  async findByEmail(email: string): Promise{\n    const user = await this.userRepository.findOne({email: email});\n    return this.buildUserRO(user);\n  }\n\n  public generateJWT(user) {\n    let today = new Date();\n    let exp = new Date(today);\n    exp.setDate(today.getDate() + 60);\n    const secret = this.ConfigService.get('JWT_SECRET');\n\n    return jwt.sign({\n      id: user.id,\n      username: user.username,\n      email: user.email,\n      exp: exp.getTime() / 1000,\n    }, secret);\n  };\n\n  private buildUserRO(user: UserEntity) {\n    const userRO = {\n      id: user.id,\n      username: user.username,\n      email: user.email,\n      bio: user.bio,\n      token: this.generateJWT(user),\n      image: user.image\n    };\n\n    return {user: userRO};\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ValidationPipe.html":{"url":"injectables/ValidationPipe.html","title":"injectable - ValidationPipe","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ValidationPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/pipes/validation.pipe.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                buildError\n                            \n                            \n                                    Private\n                                toValidate\n                            \n                            \n                                    Async\n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            buildError\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    buildError(errors)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/pipes/validation.pipe.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    errors\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            toValidate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toValidate(metatype)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/pipes/validation.pipe.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    metatype\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    transform(value, metadata: ArgumentMetadata)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/pipes/validation.pipe.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    metadata\n                                    \n                                            ArgumentMetadata\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {PipeTransform, ArgumentMetadata, BadRequestException, HttpStatus, Injectable} from '@nestjs/common';\nimport { validate } from 'class-validator';\nimport { plainToClass } from 'class-transformer';\nimport { HttpException } from '@nestjs/common/exceptions/http.exception';\n\n@Injectable()\nexport class ValidationPipe implements PipeTransform {\n  async transform(value, metadata: ArgumentMetadata) {\n\n    if (!value) {\n      throw new BadRequestException('No data submitted');\n    }\n\n    const { metatype } = metadata;\n    if (!metatype || !this.toValidate(metatype)) {\n      return value;\n    }\n    const object = plainToClass(metatype, value);\n    const errors = await validate(object);\n    if (errors.length > 0) {\n      throw new HttpException({message: 'Input data validation failed', errors:  this.buildError(errors)}, HttpStatus.BAD_REQUEST);\n    }\n    return value;\n  }\n\n  private buildError(errors) {\n    const result = {};\n    errors.forEach(el => {\n      let prop = el.property;\n      Object.entries(el.constraints).forEach(constraint => {\n        result[prop + constraint[0]] = `${constraint[1]}`;\n      });\n    });\n    return result;\n  }\n\n  private toValidate(metatype): boolean {\n    const types = [String, Boolean, Number, Array, Object];\n    return !types.find((type) => metatype === type);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ViewController.html":{"url":"controllers/ViewController.html","title":"controller - ViewController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ViewController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/view/view.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                view\n            \n\n\n\n\n\n\n    \n\n\n    \n        import { Controller } from '@nestjs/common';\n\n@Controller('view')\nexport class ViewController {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ViewModule.html":{"url":"modules/ViewModule.html","title":"module - ViewModule","body":"\n                   \n\n\n\n\n    Modules\n    ViewModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ViewModule\n\n\n\ncluster_ViewModule_providers\n\n\n\n\nViewService\n\nViewService\n\n\n\nViewModule\n\nViewModule\n\nViewModule -->\n\nViewService->ViewModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/services/view/view.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ViewService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ViewService } from './view.service';\n\n@Module({\n  providers: [ViewService]\n})\nexport class ViewModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ViewService.html":{"url":"injectables/ViewService.html","title":"injectable - ViewService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ViewService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/view/view.service.ts\n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class ViewService {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/article/article.controller.ts\n            \n            controller\n            ArticleController\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/article/article.entity.ts\n            \n            class\n            ArticleEntity\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/article/article.interface.ts\n            \n            interface\n            ArticleData\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/article/article.interface.ts\n            \n            interface\n            ArticleRO\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/article/article.interface.ts\n            \n            interface\n            ArticlesRO\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/article/article.interface.ts\n            \n            interface\n            Comment\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/article/article.interface.ts\n            \n            interface\n            CommentsRO\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/article/article.service.ts\n            \n            injectable\n            ArticleService\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/article/article.service.ts\n            \n            variable\n            slug\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/article/comment.entity.ts\n            \n            class\n            Comment\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/article/dto/create-article.dto.ts\n            \n            class\n            CreateArticleDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/article/dto/create-comment.ts\n            \n            class\n            CreateCommentDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/config/config.env.ts\n            \n            variable\n            configenv\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/config/database.config.ts\n            \n            injectable\n            DatabaseConfig\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/corporation/corporation.controller.ts\n            \n            controller\n            CorporationController\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/corporation/corporation.entity.ts\n            \n            class\n            CorporationEntity\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/corporation/corporation.interface.ts\n            \n            interface\n            CorporationData\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/corporation/corporation.interface.ts\n            \n            interface\n            CorporationRO\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/corporation/corporation.service.ts\n            \n            injectable\n            CorporationService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/corporation/dto/create-corporation.dto.ts\n            \n            class\n            CreateCorporationDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/errorlog/dto/create-errorlog.dto.ts\n            \n            class\n            CreateErrorLogDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/errorlog/errorlog.controller.ts\n            \n            controller\n            ErrorlogController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/errorlog/errorlog.entity.ts\n            \n            class\n            ErrorLogEntity\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/errorlog/errorlog.interface.ts\n            \n            interface\n            ErrorLogData\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/errorlog/errorlog.interface.ts\n            \n            interface\n            ErrorLogRO\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/errorlog/errorlog.service.ts\n            \n            injectable\n            ErrorlogService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/group/dto/create-group.dto.ts\n            \n            class\n            CreateGroupDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/group/group.controller.ts\n            \n            controller\n            GroupController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/group/group.entity.ts\n            \n            class\n            GroupEntity\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/group/group.interface.ts\n            \n            interface\n            GroupData\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/group/group.interface.ts\n            \n            interface\n            GroupRO\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/group/group.service.ts\n            \n            injectable\n            GroupService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/list/dto/create-list.dto.ts\n            \n            class\n            CreateListDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/list/dto/create-listentry.dto.ts\n            \n            class\n            CreateListEntryDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/list/list.controller.ts\n            \n            controller\n            ListController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/list/list.entity.ts\n            \n            class\n            ListEntity\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/list/list.interface.ts\n            \n            interface\n            ListData\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/list/list.interface.ts\n            \n            interface\n            ListEntry\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/list/list.interface.ts\n            \n            interface\n            ListEntryRO\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/list/list.interface.ts\n            \n            interface\n            ListRO\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/list/list.service.ts\n            \n            injectable\n            ListService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/list/listentry.entity.ts\n            \n            class\n            ListEntryEntity\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/menu/dto/create-menu.dto.ts\n            \n            class\n            CreateMenuDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/menu/dto/create-menuentry.dto.ts\n            \n            class\n            CreateMenuEntryDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/menu/menu.controller.ts\n            \n            controller\n            MenuController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/menu/menu.interface.ts\n            \n            interface\n            MenuAppData\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/menu/menu.interface.ts\n            \n            interface\n            MenuAppEntry\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/menu/menu.interface.ts\n            \n            interface\n            MenuEntryRO\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/menu/menu.interface.ts\n            \n            interface\n            MenuRO\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/menu/menu.service.ts\n            \n            injectable\n            MenuService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/menu/menuapp.entity.ts\n            \n            class\n            MenuAppEntity\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/menu/menuentry.entity.ts\n            \n            class\n            MenuEntryEntity\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/middleware/logger.service.ts\n            \n            class\n            MyLogger\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/profile/follows.entity.ts\n            \n            class\n            FollowsEntity\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/profile/profile.controller.ts\n            \n            controller\n            ProfileController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/profile/profile.interface.ts\n            \n            interface\n            ProfileData\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/profile/profile.interface.ts\n            \n            interface\n            ProfileRO\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/profile/profile.service.ts\n            \n            injectable\n            ProfileService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/role/dto/create-role.dto.ts\n            \n            class\n            CreateRoleDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/role/dto/create-roleapp.dto.ts\n            \n            class\n            CreateRoleAppDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/role/role.controller.ts\n            \n            controller\n            RoleController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/role/role.entity.ts\n            \n            class\n            RoleEntity\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/role/role.interface.ts\n            \n            interface\n            RoleData\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/role/role.interface.ts\n            \n            interface\n            RoleRO\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/role/role.service.ts\n            \n            injectable\n            RoleService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/role/rolemenuapp.entity.ts\n            \n            class\n            RoleMenuAppEntity\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/role/rolemenuentry.entity.ts\n            \n            class\n            RoleMenuEntryEntity\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/services/comment/comment.controller.ts\n            \n            controller\n            CommentController\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/services/comment/comment.service.ts\n            \n            injectable\n            CommentService\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/services/sqldirect/sqldirect.controller.ts\n            \n            controller\n            SqldirectController\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/services/sqldirect/sqldirect.service.ts\n            \n            injectable\n            SqldirectService\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/services/view/view.controller.ts\n            \n            controller\n            ViewController\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/services/view/view.service.ts\n            \n            injectable\n            ViewService\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/shared/base.controller.ts\n            \n            class\n            BaseController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/shared/pipes/to-integer.pipe.ts\n            \n            class\n            ToIntegerPipe\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/shared/pipes/validation.pipe.ts\n            \n            injectable\n            ValidationPipe\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/site/dto/create-site.dto.ts\n            \n            class\n            CreateSiteDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/site/site.controller.ts\n            \n            controller\n            SiteController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/site/site.entity.ts\n            \n            class\n            SiteEntity\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/site/site.interface.ts\n            \n            interface\n            SiteData\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/site/site.interface.ts\n            \n            interface\n            SiteRO\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/site/site.service.ts\n            \n            injectable\n            SiteService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/tag/tag.controller.ts\n            \n            controller\n            TagController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/tag/tag.entity.ts\n            \n            class\n            TagEntity\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/tag/tag.service.ts\n            \n            injectable\n            TagService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/user/auth.middleware.ts\n            \n            injectable\n            AuthMiddleware\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/user/dto/create-user.dto.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/user/dto/login-user.dto.ts\n            \n            class\n            LoginUserDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/user/dto/update-user.dto.ts\n            \n            class\n            UpdateUserDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/user/user.controller.ts\n            \n            controller\n            UserController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/user/user.decorator.ts\n            \n            variable\n            User\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/user/user.entity.ts\n            \n            class\n            UserEntity\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                src/user/user.interface.ts\n            \n            interface\n            UserData\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/user/user.interface.ts\n            \n            interface\n            UserRO\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/user/user.service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/user/user.service.ts\n            \n            variable\n            jwt\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^7.1.1\n        \n            @nestjs/config : ^0.5.0\n        \n            @nestjs/core : ^7.1.1\n        \n            @nestjs/microservices : ^7.1.1\n        \n            @nestjs/platform-express : ^7.1.1\n        \n            @nestjs/swagger : ^4.5.8\n        \n            @nestjs/typeorm : ^7.1.0\n        \n            @nestjs/websockets : ^7.1.1\n        \n            @types/jsonwebtoken : ^8.5.0\n        \n            argon2 : ^0.26.2\n        \n            class-transformer : ^0.2.3\n        \n            class-validator : ^0.12.2\n        \n            crypto : ^1.0.1\n        \n            crypto-js : ^4.0.0\n        \n            dotenv : ^8.2.0\n        \n            jsonwebtoken : ^8.5.1\n        \n            mssql : ^6.2.0\n        \n            passport-jwt : ^4.0.0\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^6.5.5\n        \n            slug : ^3.2.0\n        \n            swagger-ui-express : ^4.1.4\n        \n            typeorm : ^0.2.25\n        \n            typescript : ^3.9.3\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            bootstrap\n                        \n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nRISNODE-ADMIN\n General Node REST API for admin \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ArticleModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CommentModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CorporationModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ErrorlogModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        GroupModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ListModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MenuModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProfileModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RoleModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SiteModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SqldirectModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TagModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ViewModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_ArticleModule\n\n\n\ncluster_ArticleModule_providers\n\n\n\ncluster_CorporationModule\n\n\n\ncluster_CorporationModule_providers\n\n\n\ncluster_ErrorlogModule\n\n\n\ncluster_ErrorlogModule_providers\n\n\n\ncluster_GroupModule\n\n\n\ncluster_GroupModule_providers\n\n\n\ncluster_ListModule\n\n\n\ncluster_ListModule_providers\n\n\n\ncluster_MenuModule\n\n\n\ncluster_MenuModule_providers\n\n\n\ncluster_ProfileModule\n\n\n\ncluster_ProfileModule_providers\n\n\n\ncluster_RoleModule\n\n\n\ncluster_RoleModule_providers\n\n\n\ncluster_SiteModule\n\n\n\ncluster_SiteModule_providers\n\n\n\ncluster_SqldirectModule\n\n\n\ncluster_SqldirectModule_providers\n\n\n\ncluster_TagModule\n\n\n\ncluster_TagModule_providers\n\n\n\ncluster_UserModule\n\n\n\ncluster_UserModule_exports\n\n\n\ncluster_UserModule_providers\n\n\n\ncluster_ViewModule\n\n\n\ncluster_ViewModule_providers\n\n\n\n\nArticleModule\n\nArticleModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nArticleModule->AppModule\n\n\n\n\n\nCorporationModule\n\nCorporationModule\n\nAppModule -->\n\nCorporationModule->AppModule\n\n\n\n\n\nErrorlogModule\n\nErrorlogModule\n\nAppModule -->\n\nErrorlogModule->AppModule\n\n\n\n\n\nGroupModule\n\nGroupModule\n\nAppModule -->\n\nGroupModule->AppModule\n\n\n\n\n\nListModule\n\nListModule\n\nAppModule -->\n\nListModule->AppModule\n\n\n\n\n\nMenuModule\n\nMenuModule\n\nAppModule -->\n\nMenuModule->AppModule\n\n\n\n\n\nProfileModule\n\nProfileModule\n\nAppModule -->\n\nProfileModule->AppModule\n\n\n\n\n\nRoleModule\n\nRoleModule\n\nAppModule -->\n\nRoleModule->AppModule\n\n\n\n\n\nSiteModule\n\nSiteModule\n\nAppModule -->\n\nSiteModule->AppModule\n\n\n\n\n\nTagModule\n\nTagModule\n\nAppModule -->\n\nTagModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nArticleModule -->\n\nUserModule->ArticleModule\n\n\n\nProfileModule -->\n\nUserModule->ProfileModule\n\n\n\nTagModule -->\n\nUserModule->TagModule\n\n\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nUserService \n\nUserService \n\nUserService  -->\n\nUserModule->UserService \n\n\n\n\n\nArticleService\n\nArticleService\n\nArticleModule -->\n\nArticleService->ArticleModule\n\n\n\n\n\nCorporationService\n\nCorporationService\n\nCorporationModule -->\n\nCorporationService->CorporationModule\n\n\n\n\n\nErrorlogService\n\nErrorlogService\n\nErrorlogModule -->\n\nErrorlogService->ErrorlogModule\n\n\n\n\n\nGroupService\n\nGroupService\n\nGroupModule -->\n\nGroupService->GroupModule\n\n\n\n\n\nListService\n\nListService\n\nListModule -->\n\nListService->ListModule\n\n\n\n\n\nMenuService\n\nMenuService\n\nMenuModule -->\n\nMenuService->MenuModule\n\n\n\n\n\nProfileService\n\nProfileService\n\nProfileModule -->\n\nProfileService->ProfileModule\n\n\n\n\n\nRoleService\n\nRoleService\n\nRoleModule -->\n\nRoleService->RoleModule\n\n\n\n\n\nSiteService\n\nSiteService\n\nSiteModule -->\n\nSiteService->SiteModule\n\n\n\n\n\nSqldirectService\n\nSqldirectService\n\n\n\nSqldirectModule\n\nSqldirectModule\n\nSqldirectModule -->\n\nSqldirectService->SqldirectModule\n\n\n\n\n\nTagService\n\nTagService\n\nTagModule -->\n\nTagService->TagModule\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\nViewService\n\nViewService\n\n\n\nViewModule\n\nViewModule\n\nViewModule -->\n\nViewService->ViewModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        15 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    15 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    17 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    34 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    27 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            configenv   (src/.../config.env.ts)\n                        \n                        \n                            jwt   (src/.../user.service.ts)\n                        \n                        \n                            slug   (src/.../article.service.ts)\n                        \n                        \n                            User   (src/.../user.decorator.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/config/config.env.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            configenv\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => ({\n    port: Number(process.env.HTTP_PORT) || 3000,\n    jwtSecret: 'supersecret',\n    database: {\n      type: 'mssql',\n      host: 'rihsrv001',\n      username: 'sa',\n      password: 'RihSrv001#',\n      database: 'risnode-admin-dev',\n      logging: false,\n      entities: [\"src/**/**.entity{.ts,.js}\"],\n      synchronize: true\n    },\n  })\n                        \n                    \n\n\n            \n        \n\n    src/user/user.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            jwt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require('jsonwebtoken')\n                        \n                    \n\n\n            \n        \n\n    src/article/article.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            slug\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require('slug')\n                        \n                    \n\n\n            \n        \n\n    src/user/user.decorator.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            User\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createParamDecorator((data: any, ctx: ExecutionContext) => {\n  const req = ctx.switchToHttp().getRequest();\n  // if route is protected, there is a user set in auth.middleware\n  if (!!req.user) {\n    return !!data ? req.user[data] : req.user;\n  }\n\n  // in case a route is not protected, we still want to get the optional auth user from jwt\n  const token = req.headers.authorization ? (req.headers.authorization as string).split(' ') : null;\n  if (token && token[1]) {\n    const secret = this.configService.get('JWT_SECRET');\n    const decoded: any = jwt.verify(token[1], secret);\n    return !!data ? decoded[data] : decoded.user;\n  }\n})\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
